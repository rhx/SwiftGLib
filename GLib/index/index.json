{"interfaceLanguages":{"swift":[{"children":[{"title":"Articles","type":"groupMarker"},{"path":"\/documentation\/glib\/building","title":"Building","type":"article"},{"path":"\/documentation\/glib\/documentation","title":"Documentation","type":"article"},{"path":"\/documentation\/glib\/gettingstarted","title":"Getting Started","type":"article"},{"children":[{"title":"Essentials","type":"groupMarker"},{"path":"\/documentation\/glib\/gettingstarted","title":"Getting Started","type":"article"},{"path":"\/documentation\/glib\/usage","title":"Usage","type":"article"},{"path":"\/documentation\/glib\/documentation","title":"Documentation","type":"article"},{"title":"Tutorial","type":"groupMarker"},{"path":"\/documentation\/glib\/tutorial","title":"Using GLib with Swift","type":"article"},{"title":"Troubleshooting","type":"groupMarker"},{"path":"\/documentation\/glib\/troubleshooting","title":"Troubleshooting","type":"article"},{"title":"Building and Testing SwiftGLib","type":"groupMarker"},{"path":"\/documentation\/glib\/building","title":"Building","type":"article"}],"path":"\/documentation\/glib\/package","title":"SwiftGLib","type":"symbol"},{"path":"\/documentation\/glib\/troubleshooting","title":"Troubleshooting","type":"article"},{"path":"\/documentation\/glib\/tutorial","title":"Using GLib with Swift","type":"article"},{"path":"\/documentation\/glib\/usage","title":"Usage","type":"article"},{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/allocator\/init(_:)-1jb99","title":"init(UnsafePointer<GAllocator>)","type":"init"},{"path":"\/documentation\/glib\/allocator\/init(_:)-3928y","title":"init(UnsafeMutablePointer<GAllocator>)","type":"init"},{"path":"\/documentation\/glib\/allocator\/init(_:)-3acpz","title":"init!(UnsafeMutablePointer<GAllocator>?)","type":"init"},{"path":"\/documentation\/glib\/allocator\/init(_:)-5lc0v","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/allocator\/init(_:)-7o0wg","title":"init!(UnsafePointer<GAllocator>?)","type":"init"},{"path":"\/documentation\/glib\/allocator\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/allocator\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/allocator\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/allocator\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/allocator\/init(raw:)-37nia","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/allocator\/init(raw:)-5rzvx","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/allocator\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GAllocator>)","type":"init"},{"path":"\/documentation\/glib\/allocator\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/allocator\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/allocator\/init(retainingraw:)-28923","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/allocator\/init(retainingraw:)-5d8xm","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/allocator\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/allocator\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/glib\/allocator\/listpushallocator()","title":"func listPushAllocator()","type":"method"},{"path":"\/documentation\/glib\/allocator\/nodepushallocator()","title":"func nodePushAllocator()","type":"method"},{"path":"\/documentation\/glib\/allocator\/slistpushallocator()","title":"func slistPushAllocator()","type":"method"}],"path":"\/documentation\/glib\/allocator\/allocatorprotocol-implementations","title":"AllocatorProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/allocator","title":"Allocator","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/arraytype\/init(_:)-4lqut","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/arraytype\/init(_:)-4rpzm","title":"init(UnsafePointer<GArray>)","type":"init"},{"path":"\/documentation\/glib\/arraytype\/init(_:)-50jt","title":"init(UnsafeMutablePointer<GArray>)","type":"init"},{"path":"\/documentation\/glib\/arraytype\/init(_:)-5du0x","title":"init!(UnsafeMutablePointer<GArray>?)","type":"init"},{"path":"\/documentation\/glib\/arraytype\/init(_:)-93uoe","title":"init!(UnsafePointer<GArray>?)","type":"init"},{"path":"\/documentation\/glib\/arraytype\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/arraytype\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/arraytype\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/arraytype\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/arraytype\/init(raw:)-45otq","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/arraytype\/init(raw:)-80j6z","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/arraytype\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GArray>)","type":"init"},{"path":"\/documentation\/glib\/arraytype\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/arraytype\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/arraytype\/init(retainingraw:)-2hyw5","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/arraytype\/init(retainingraw:)-8mppn","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/arraytype\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/arraytype\/new(take:len:clear:elementsize:)","title":"static func new(take: gpointer!, len: Int, clear: Bool, elementSize: Int) -> ArrayType!","type":"method"},{"path":"\/documentation\/glib\/arraytype\/newtakezeroterminated(take_zero_terminated:clear:elementsize:)","title":"static func newTakeZeroTerminated(take_zero_terminated: gpointer!, clear: Bool, elementSize: Int) -> ArrayType!","type":"method"},{"path":"\/documentation\/glib\/arraytype\/sizednew(sized:clear:elementsize:reservedsize:)","title":"static func sizedNew(sized: Bool, clear: Bool, elementSize: Int, reservedSize: Int) -> ArrayType!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/arraytype\/array_ptr","title":"var array_ptr: UnsafeMutablePointer<GArray>!","type":"property"},{"path":"\/documentation\/glib\/arraytype\/data","title":"var data: UnsafeMutablePointer<gchar>!","type":"property"},{"path":"\/documentation\/glib\/arraytype\/elementsize","title":"var elementSize: Int","type":"property"},{"path":"\/documentation\/glib\/arraytype\/len","title":"var len: guint","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/arraytype\/appendvals(data:len:)","title":"func appendVals(data: gconstpointer?, len: Int) -> ArrayRef!","type":"method"},{"path":"\/documentation\/glib\/arraytype\/binarysearch(target:comparefunc:outmatchindex:)","title":"func binarySearch(target: gconstpointer?, compareFunc: GCompareFunc?, outMatchIndex: UnsafeMutablePointer<guint>!) -> Bool","type":"method"},{"path":"\/documentation\/glib\/arraytype\/copy()","title":"func copy() -> ArrayRef!","type":"method"},{"path":"\/documentation\/glib\/arraytype\/free(freesegment:)","title":"func free(freeSegment: Bool) -> String!","type":"method"},{"path":"\/documentation\/glib\/arraytype\/getelementsize()","title":"func getElementSize() -> Int","type":"method"},{"path":"\/documentation\/glib\/arraytype\/insertvals(index:data:len:)","title":"func insertVals(index: Int, data: gconstpointer?, len: Int) -> ArrayRef!","type":"method"},{"path":"\/documentation\/glib\/arraytype\/prependvals(data:len:)","title":"func prependVals(data: gconstpointer?, len: Int) -> ArrayRef!","type":"method"},{"path":"\/documentation\/glib\/arraytype\/ref()","title":"func ref() -> ArrayRef!","type":"method"},{"path":"\/documentation\/glib\/arraytype\/remove(index:)","title":"func remove(index: Int) -> ArrayRef!","type":"method"},{"path":"\/documentation\/glib\/arraytype\/removeindexfast(index:)","title":"func removeIndexFast(index: Int) -> ArrayRef!","type":"method"},{"path":"\/documentation\/glib\/arraytype\/removerange(index:length:)","title":"func removeRange(index: Int, length: Int) -> ArrayRef!","type":"method"},{"path":"\/documentation\/glib\/arraytype\/set(clearfunc:)","title":"func set(clearFunc: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/glib\/arraytype\/setsize(length:)","title":"func setSize(length: Int) -> ArrayRef!","type":"method"},{"path":"\/documentation\/glib\/arraytype\/sort(comparefunc:)","title":"func sort(compareFunc: GCompareFunc?)","type":"method"},{"path":"\/documentation\/glib\/arraytype\/sortwithdata(comparefunc:userdata:)","title":"func sortWithData(compareFunc: GCompareDataFunc?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/arraytype\/steal(len:)","title":"func steal(len: UnsafeMutablePointer<gsize>!) -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/arraytype\/unref()","title":"func unref()","type":"method"}],"path":"\/documentation\/glib\/arraytype\/arrayprotocol-implementations","title":"ArrayProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/arraytype","title":"ArrayType","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/asyncqueue\/init(_:)-1mokq","title":"init!(UnsafeMutablePointer<GAsyncQueue>?)","type":"init"},{"path":"\/documentation\/glib\/asyncqueue\/init(_:)-30r9y","title":"init!(UnsafePointer<GAsyncQueue>?)","type":"init"},{"path":"\/documentation\/glib\/asyncqueue\/init(_:)-4d3za","title":"init(UnsafeMutablePointer<GAsyncQueue>)","type":"init"},{"path":"\/documentation\/glib\/asyncqueue\/init(_:)-8whef","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/asyncqueue\/init(_:)-im64","title":"init(UnsafePointer<GAsyncQueue>)","type":"init"},{"path":"\/documentation\/glib\/asyncqueue\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/asyncqueue\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/asyncqueue\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/asyncqueue\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/asyncqueue\/init(raw:)-4wj2r","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/asyncqueue\/init(raw:)-7j31e","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/asyncqueue\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GAsyncQueue>)","type":"init"},{"path":"\/documentation\/glib\/asyncqueue\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/asyncqueue\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/asyncqueue\/init(retainingraw:)-19xw6","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/asyncqueue\/init(retainingraw:)-54sdp","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/asyncqueue\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/asyncqueue\/new(full:)","title":"static func new(full: GDestroyNotify?) -> AsyncQueue!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/asyncqueue\/length()","title":"func length() -> Int","type":"method"},{"path":"\/documentation\/glib\/asyncqueue\/lengthunlocked()","title":"func lengthUnlocked() -> Int","type":"method"},{"path":"\/documentation\/glib\/asyncqueue\/lock()","title":"func lock()","type":"method"},{"path":"\/documentation\/glib\/asyncqueue\/pop()","title":"func pop() -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/asyncqueue\/popunlocked()","title":"func popUnlocked() -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/asyncqueue\/push(data:)","title":"func push(data: gpointer!)","type":"method"},{"path":"\/documentation\/glib\/asyncqueue\/pushfront(item:)","title":"func pushFront(item: gpointer!)","type":"method"},{"path":"\/documentation\/glib\/asyncqueue\/pushfrontunlocked(item:)","title":"func pushFrontUnlocked(item: gpointer!)","type":"method"},{"path":"\/documentation\/glib\/asyncqueue\/pushsorted(data:func:userdata:)","title":"func pushSorted(data: gpointer!, func: GCompareDataFunc?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/asyncqueue\/pushsortedunlocked(data:func:userdata:)","title":"func pushSortedUnlocked(data: gpointer?, func: GCompareDataFunc?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/asyncqueue\/pushunlocked(data:)","title":"func pushUnlocked(data: gpointer!)","type":"method"},{"path":"\/documentation\/glib\/asyncqueue\/ref()","title":"func ref() -> AsyncQueueRef!","type":"method"},{"path":"\/documentation\/glib\/asyncqueue\/refunlocked()","title":"func refUnlocked()","type":"method"},{"path":"\/documentation\/glib\/asyncqueue\/remove(item:)","title":"func remove(item: gpointer!) -> Bool","type":"method"},{"path":"\/documentation\/glib\/asyncqueue\/removeunlocked(item:)","title":"func removeUnlocked(item: gpointer?) -> Bool","type":"method"},{"path":"\/documentation\/glib\/asyncqueue\/sort(func:userdata:)","title":"func sort(func: GCompareDataFunc?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/asyncqueue\/sortunlocked(func:userdata:)","title":"func sortUnlocked(func: GCompareDataFunc?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/asyncqueue\/timedpop(endtime:)","title":"func timedPop<TimeValT>(endTime: TimeValT) -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/asyncqueue\/timedpopunlocked(endtime:)","title":"func timedPopUnlocked<TimeValT>(endTime: TimeValT) -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/asyncqueue\/timeoutpop(timeout:)","title":"func timeoutPop(timeout: guint64) -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/asyncqueue\/timeoutpopunlocked(timeout:)","title":"func timeoutPopUnlocked(timeout: guint64) -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/asyncqueue\/trypop()","title":"func tryPop() -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/asyncqueue\/trypopunlocked()","title":"func tryPopUnlocked() -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/asyncqueue\/unlock()","title":"func unlock()","type":"method"},{"path":"\/documentation\/glib\/asyncqueue\/unref()","title":"func unref()","type":"method"},{"path":"\/documentation\/glib\/asyncqueue\/unrefandunlock()","title":"func unrefAndUnlock()","type":"method"}],"path":"\/documentation\/glib\/asyncqueue\/asyncqueueprotocol-implementations","title":"AsyncQueueProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/asyncqueue","title":"AsyncQueue","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/bookmarkfile\/init()","title":"init()","type":"init"},{"path":"\/documentation\/glib\/bookmarkfile\/init(_:)-12es4","title":"init!(UnsafeMutablePointer<GBookmarkFile>?)","type":"init"},{"path":"\/documentation\/glib\/bookmarkfile\/init(_:)-39yvz","title":"init(UnsafeMutablePointer<GBookmarkFile>)","type":"init"},{"path":"\/documentation\/glib\/bookmarkfile\/init(_:)-5gx5p","title":"init(UnsafePointer<GBookmarkFile>)","type":"init"},{"path":"\/documentation\/glib\/bookmarkfile\/init(_:)-638ob","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/bookmarkfile\/init(_:)-65rhv","title":"init!(UnsafePointer<GBookmarkFile>?)","type":"init"},{"path":"\/documentation\/glib\/bookmarkfile\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/bookmarkfile\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/bookmarkfile\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/bookmarkfile\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/bookmarkfile\/init(raw:)-15cs1","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/bookmarkfile\/init(raw:)-4ack0","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/bookmarkfile\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GBookmarkFile>)","type":"init"},{"path":"\/documentation\/glib\/bookmarkfile\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/bookmarkfile\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/bookmarkfile\/init(retainingraw:)-3hi79","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/bookmarkfile\/init(retainingraw:)-8ifug","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/bookmarkfile\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/bookmarkfile\/bookmark_file_ptr","title":"var bookmark_file_ptr: UnsafeMutablePointer<GBookmarkFile>!","type":"property"},{"path":"\/documentation\/glib\/bookmarkfile\/size","title":"var size: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/bookmarkfile\/addapplication(uri:name:exec:)","title":"func addApplication(uri: UnsafePointer<gchar>!, name: UnsafePointer<gchar>?, exec: UnsafePointer<gchar>?)","type":"method"},{"path":"\/documentation\/glib\/bookmarkfile\/addgroup(uri:group:)","title":"func addGroup(uri: UnsafePointer<gchar>!, group: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/glib\/bookmarkfile\/copy()","title":"func copy() -> BookmarkFileRef!","type":"method"},{"path":"\/documentation\/glib\/bookmarkfile\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/glib\/bookmarkfile\/getadded(uri:)","title":"func getAdded(uri: UnsafePointer<gchar>!) throws -> time_t","type":"method"},{"path":"\/documentation\/glib\/bookmarkfile\/getaddeddatetime(uri:)","title":"func getAddedDateTime(uri: UnsafePointer<CChar>!) throws -> DateTimeRef!","type":"method"},{"path":"\/documentation\/glib\/bookmarkfile\/getappinfo(uri:name:exec:count:stamp:)","title":"func getAppInfo(uri: UnsafePointer<gchar>!, name: UnsafePointer<gchar>!, exec: UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!, count: UnsafeMutablePointer<guint>!, stamp: UnsafeMutablePointer<time_t>!) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/bookmarkfile\/getapplicationinfo(uri:name:exec:count:stamp:)","title":"func getApplicationInfo(uri: UnsafePointer<CChar>!, name: UnsafePointer<CChar>!, exec: UnsafeMutablePointer<UnsafeMutablePointer<CChar>?>!, count: UnsafeMutablePointer<guint>!, stamp: UnsafeMutablePointer<UnsafeMutablePointer<GDateTime>?>!) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/bookmarkfile\/getapplications(uri:length:)","title":"func getApplications(uri: UnsafePointer<gchar>!, length: UnsafeMutablePointer<gsize>!) throws -> UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!","type":"method"},{"path":"\/documentation\/glib\/bookmarkfile\/getdescription(uri:)","title":"func getDescription(uri: UnsafePointer<gchar>!) throws -> String!","type":"method"},{"path":"\/documentation\/glib\/bookmarkfile\/getgroups(uri:length:)","title":"func getGroups(uri: UnsafePointer<gchar>!, length: UnsafeMutablePointer<gsize>!) throws -> UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!","type":"method"},{"path":"\/documentation\/glib\/bookmarkfile\/geticon(uri:href:mimetype:)","title":"func getIcon(uri: UnsafePointer<gchar>!, href: UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!, mimeType: UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/bookmarkfile\/getisprivate(uri:)","title":"func getIsPrivate(uri: UnsafePointer<gchar>!) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/bookmarkfile\/getmimetype(uri:)","title":"func getMimeType(uri: UnsafePointer<gchar>!) throws -> String!","type":"method"},{"path":"\/documentation\/glib\/bookmarkfile\/getmodified(uri:)","title":"func getModified(uri: UnsafePointer<gchar>!) throws -> time_t","type":"method"},{"path":"\/documentation\/glib\/bookmarkfile\/getmodifieddatetime(uri:)","title":"func getModifiedDateTime(uri: UnsafePointer<CChar>!) throws -> DateTimeRef!","type":"method"},{"path":"\/documentation\/glib\/bookmarkfile\/getsize()","title":"func getSize() -> Int","type":"method"},{"path":"\/documentation\/glib\/bookmarkfile\/gettitle(uri:)","title":"func getTitle(uri: UnsafePointer<gchar>?) throws -> String!","type":"method"},{"path":"\/documentation\/glib\/bookmarkfile\/geturis(length:)","title":"func getURIs(length: UnsafeMutablePointer<gsize>!) -> UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!","type":"method"},{"path":"\/documentation\/glib\/bookmarkfile\/getvisited(uri:)","title":"func getVisited(uri: UnsafePointer<gchar>!) throws -> time_t","type":"method"},{"path":"\/documentation\/glib\/bookmarkfile\/getvisiteddatetime(uri:)","title":"func getVisitedDateTime(uri: UnsafePointer<CChar>!) throws -> DateTimeRef!","type":"method"},{"path":"\/documentation\/glib\/bookmarkfile\/hasapplication(uri:name:)","title":"func hasApplication(uri: UnsafePointer<gchar>!, name: UnsafePointer<gchar>!) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/bookmarkfile\/hasgroup(uri:group:)","title":"func hasGroup(uri: UnsafePointer<gchar>!, group: UnsafePointer<gchar>!) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/bookmarkfile\/hasitem(uri:)","title":"func hasItem(uri: UnsafePointer<gchar>!) -> Bool","type":"method"},{"path":"\/documentation\/glib\/bookmarkfile\/loadfrom(data:length:)","title":"func loadFrom(data: UnsafePointer<gchar>!, length: Int) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/bookmarkfile\/loadfromdatadirs(file:fullpath:)","title":"func loadFromDataDirs(file: UnsafePointer<gchar>!, fullPath: UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/bookmarkfile\/loadfromfile(filename:)","title":"func loadFromFile(filename: UnsafePointer<gchar>!) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/bookmarkfile\/moveitem(olduri:newuri:)","title":"func moveItem(oldURI: UnsafePointer<gchar>!, newURI: UnsafePointer<gchar>?) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/bookmarkfile\/removeapplication(uri:name:)","title":"func removeApplication(uri: UnsafePointer<gchar>!, name: UnsafePointer<gchar>!) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/bookmarkfile\/removegroup(uri:group:)","title":"func removeGroup(uri: UnsafePointer<gchar>!, group: UnsafePointer<gchar>!) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/bookmarkfile\/removeitem(uri:)","title":"func removeItem(uri: UnsafePointer<gchar>!) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/bookmarkfile\/setadded(uri:added:)","title":"func setAdded(uri: UnsafePointer<gchar>!, added: time_t)","type":"method"},{"path":"\/documentation\/glib\/bookmarkfile\/setaddeddatetime(uri:added:)","title":"func setAddedDateTime<DateTimeT>(uri: UnsafePointer<CChar>!, added: DateTimeT)","type":"method"},{"path":"\/documentation\/glib\/bookmarkfile\/setappinfo(uri:name:exec:count:stamp:)","title":"func setAppInfo(uri: UnsafePointer<gchar>!, name: UnsafePointer<gchar>!, exec: UnsafePointer<gchar>!, count: Int, stamp: time_t) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/bookmarkfile\/setapplicationinfo(uri:name:exec:count:stamp:)","title":"func setApplicationInfo(uri: UnsafePointer<CChar>!, name: UnsafePointer<CChar>!, exec: UnsafePointer<CChar>!, count: Int, stamp: DateTimeRef?) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/bookmarkfile\/setdescription(uri:description:)","title":"func setDescription(uri: UnsafePointer<gchar>?, description: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/glib\/bookmarkfile\/setgroups(uri:groups:length:)","title":"func setGroups(uri: UnsafePointer<gchar>!, groups: UnsafeMutablePointer<UnsafePointer<gchar>?>!, length: Int)","type":"method"},{"path":"\/documentation\/glib\/bookmarkfile\/seticon(uri:href:mimetype:)","title":"func setIcon(uri: UnsafePointer<gchar>!, href: UnsafePointer<gchar>?, mimeType: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/glib\/bookmarkfile\/setisprivate(uri:isprivate:)","title":"func setIsPrivate(uri: UnsafePointer<gchar>!, isPrivate: Bool)","type":"method"},{"path":"\/documentation\/glib\/bookmarkfile\/setmimetype(uri:mimetype:)","title":"func setMimeType(uri: UnsafePointer<gchar>!, mimeType: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/glib\/bookmarkfile\/setmodified(uri:modified:)","title":"func setModified(uri: UnsafePointer<gchar>!, modified: time_t)","type":"method"},{"path":"\/documentation\/glib\/bookmarkfile\/setmodifieddatetime(uri:modified:)","title":"func setModifiedDateTime<DateTimeT>(uri: UnsafePointer<CChar>!, modified: DateTimeT)","type":"method"},{"path":"\/documentation\/glib\/bookmarkfile\/settitle(uri:title:)","title":"func setTitle(uri: UnsafePointer<gchar>?, title: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/glib\/bookmarkfile\/setvisited(uri:visited:)","title":"func setVisited(uri: UnsafePointer<gchar>!, visited: time_t)","type":"method"},{"path":"\/documentation\/glib\/bookmarkfile\/setvisiteddatetime(uri:visited:)","title":"func setVisitedDateTime<DateTimeT>(uri: UnsafePointer<CChar>!, visited: DateTimeT)","type":"method"},{"path":"\/documentation\/glib\/bookmarkfile\/todata(length:)","title":"func toData(length: UnsafeMutablePointer<gsize>!) throws -> String!","type":"method"},{"path":"\/documentation\/glib\/bookmarkfile\/tofile(filename:)","title":"func toFile(filename: UnsafePointer<gchar>!) throws -> Bool","type":"method"}],"path":"\/documentation\/glib\/bookmarkfile\/bookmarkfileprotocol-implementations","title":"BookmarkFileProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/bookmarkfile","title":"BookmarkFile","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/bytearray\/init()","title":"init()","type":"init"},{"path":"\/documentation\/glib\/bytearray\/init(_:)-3vdw1","title":"init!(UnsafeMutablePointer<GByteArray>?)","type":"init"},{"path":"\/documentation\/glib\/bytearray\/init(_:)-4alln","title":"init(UnsafeMutablePointer<GByteArray>)","type":"init"},{"path":"\/documentation\/glib\/bytearray\/init(_:)-59ndz","title":"init(String)","type":"init"},{"path":"\/documentation\/glib\/bytearray\/init(_:)-78r9e","title":"init!(UnsafePointer<GByteArray>?)","type":"init"},{"path":"\/documentation\/glib\/bytearray\/init(_:)-9h0lp","title":"init(UnsafePointer<GByteArray>)","type":"init"},{"path":"\/documentation\/glib\/bytearray\/init(_:)-9n4tf","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/bytearray\/init(arrayliteral:)","title":"convenience init(arrayLiteral: UInt8...)","type":"init"},{"path":"\/documentation\/glib\/bytearray\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/bytearray\/init(capacity:)","title":"init(capacity: Int)","type":"init"},{"path":"\/documentation\/glib\/bytearray\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/bytearray\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/bytearray\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/bytearray\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/bytearray\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GByteArray>)","type":"init"},{"path":"\/documentation\/glib\/bytearray\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/bytearray\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/bytearray\/init(retainingraw:)-3mm56","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/bytearray\/init(retainingraw:)-3xt19","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/bytearray\/init(stringliteral:)","title":"convenience init(stringLiteral: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/bytearray\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"}],"path":"\/documentation\/glib\/bytearray\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/bytearray\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/glib\/bytearray\/expressiblebyunicodescalarliteral-implementations","title":"ExpressibleByUnicodeScalarLiteral Implementations","type":"symbol"}],"path":"\/documentation\/glib\/bytearray","title":"ByteArray","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/bytearraybase\/init(_:)-1ygj8","title":"init!(UnsafeMutablePointer<GByteArray>?)","type":"init"},{"path":"\/documentation\/glib\/bytearraybase\/init(_:)-2hper","title":"init(UnsafePointer<GByteArray>)","type":"init"},{"path":"\/documentation\/glib\/bytearraybase\/init(_:)-2t8zc","title":"init!(UnsafePointer<GByteArray>?)","type":"init"},{"path":"\/documentation\/glib\/bytearraybase\/init(_:)-4tch0","title":"init(UnsafeMutablePointer<GByteArray>)","type":"init"},{"path":"\/documentation\/glib\/bytearraybase\/init(_:)-760ql","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/bytearraybase\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/bytearraybase\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/bytearraybase\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/bytearraybase\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/bytearraybase\/init(raw:)-1aiee","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/bytearraybase\/init(raw:)-55cvf","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/bytearraybase\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GByteArray>)","type":"init"},{"path":"\/documentation\/glib\/bytearraybase\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/bytearraybase\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/bytearraybase\/init(retainingraw:)-28ey5","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/bytearraybase\/init(retainingraw:)-4dsta","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/bytearraybase\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/bytearraybase\/new(take:len:)","title":"static func new(take: UnsafeMutablePointer<guint8>!, len: Int) -> ByteArray!","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/sizednew(sized:)","title":"static func sizedNew(sized: Int) -> ByteArray!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/bytearraybase\/last","title":"var last: Self.Element?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/bytearraybase\/difference(from:)","title":"func difference<C>(from: C) -> CollectionDifference<Self.Element>","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/difference(from:by:)","title":"func difference<C>(from: C, by: (C.Element, Self.Element) -> Bool) -> CollectionDifference<Self.Element>","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/droplast(_:)","title":"func dropLast(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/firstrange(of:)-cac8","title":"func firstRange<C>(of: C) -> Range<Self.Index>?","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/formindex(before:)","title":"func formIndex(before: inout Self.Index)","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/last(where:)","title":"func last(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/lastindex(of:)","title":"func lastIndex(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/lastindex(where:)","title":"func lastIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/reversed()","title":"func reversed() -> ReversedCollection<Self>","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/suffix(_:)","title":"func suffix(Int) -> Self.SubSequence","type":"method"}],"path":"\/documentation\/glib\/bytearraybase\/bidirectionalcollection-implementations","title":"BidirectionalCollection Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/glib\/bytearraybase\/==(_:_:)","title":"static func == <BArray>(Self, BArray) -> Bool","type":"op"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/bytearraybase\/byte_array_ptr","title":"var byte_array_ptr: UnsafeMutablePointer<GByteArray>!","type":"property"},{"path":"\/documentation\/glib\/bytearraybase\/data","title":"var data: UnsafeMutablePointer<guint8>!","type":"property"},{"path":"\/documentation\/glib\/bytearraybase\/endindex","title":"var endIndex: Int","type":"property"},{"path":"\/documentation\/glib\/bytearraybase\/len","title":"var len: guint","type":"property"},{"path":"\/documentation\/glib\/bytearraybase\/startindex","title":"var startIndex: Int","type":"property"},{"path":"\/documentation\/glib\/bytearraybase\/stringvalue","title":"var stringValue: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/bytearraybase\/append(data:len:)","title":"func append(data: UnsafePointer<guint8>!, len: Int) -> ByteArrayRef!","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/bytearrayappend(data:len:)","title":"func byteArrayAppend(data: UnsafePointer<guint8>!, len: Int) -> ByteArrayRef!","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/bytearrayfree(freesegment:)","title":"func byteArrayFree(freeSegment: Bool) -> UnsafeMutablePointer<guint8>!","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/bytearrayfreetobytes()","title":"func byteArrayFreeToBytes() -> BytesRef!","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/bytearrayprepend(data:len:)","title":"func byteArrayPrepend(data: UnsafePointer<guint8>!, len: Int) -> ByteArrayRef!","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/bytearrayref()","title":"func byteArrayRef() -> ByteArrayRef!","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/bytearrayremove(index:)","title":"func byteArrayRemove(index: Int) -> ByteArrayRef!","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/bytearrayremoveindexfast(index:)","title":"func byteArrayRemoveIndexFast(index: Int) -> ByteArrayRef!","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/bytearrayremoverange(index:length:)","title":"func byteArrayRemoveRange(index: Int, length: Int) -> ByteArrayRef!","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/bytearraysetsize(length:)","title":"func byteArraySetSize(length: Int) -> ByteArrayRef!","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/bytearraysort(comparefunc:)","title":"func byteArraySort(compareFunc: GCompareFunc?)","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/bytearraysortwithdata(comparefunc:userdata:)","title":"func byteArraySortWithData(compareFunc: GCompareDataFunc?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/bytearraysteal(len:)","title":"func byteArraySteal(len: UnsafeMutablePointer<gsize>!) -> UnsafeMutablePointer<guint8>!","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/bytearrayunref()","title":"func byteArrayUnref()","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/free(freesegment:)","title":"func free(freeSegment: Bool) -> UnsafeMutablePointer<guint8>!","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/freetobytes()","title":"func freeToBytes() -> BytesRef!","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/index(after:)","title":"func index(after: Int) -> Int","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/index(before:)","title":"func index(before: Int) -> Int","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/prepend(data:len:)","title":"func prepend(data: UnsafePointer<guint8>!, len: Int) -> ByteArrayRef!","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/ref()","title":"func ref() -> ByteArrayRef!","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/remove(index:)","title":"func remove(index: Int) -> ByteArrayRef!","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/removeindexfast(index:)","title":"func removeIndexFast(index: Int) -> ByteArrayRef!","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/removerange(index:length:)","title":"func removeRange(index: Int, length: Int) -> ByteArrayRef!","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/setsize(length:)","title":"func setSize(length: Int) -> ByteArrayRef!","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/sort(comparefunc:)","title":"func sort(compareFunc: GCompareFunc?)","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/sortwithdata(comparefunc:userdata:)","title":"func sortWithData(compareFunc: GCompareDataFunc?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/steal(len:)","title":"func steal(len: UnsafeMutablePointer<gsize>!) -> UnsafeMutablePointer<guint8>!","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/unref()","title":"func unref()","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/glib\/bytearraybase\/subscript(_:)-84f5j","title":"subscript(Int) -> UInt8","type":"subscript"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/glib\/bytearraybase\/element","title":"ByteArrayBase.Element","type":"typealias"},{"path":"\/documentation\/glib\/bytearraybase\/index","title":"ByteArrayBase.Index","type":"typealias"}],"path":"\/documentation\/glib\/bytearraybase\/bytearrayprotocol-implementations","title":"ByteArrayProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/bytearraybase\/count","title":"var count: Int","type":"property"},{"path":"\/documentation\/glib\/bytearraybase\/first","title":"var first: Self.Element?","type":"property"},{"path":"\/documentation\/glib\/bytearraybase\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/glib\/bytearraybase\/underestimatedcount","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/bytearraybase\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/dropfirst(_:)","title":"func dropFirst(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/firstindex(of:)","title":"func firstIndex(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/firstindex(where:)","title":"func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/firstrange(of:)-7ncsp","title":"func firstRange<C>(of: C) -> Range<Self.Index>?","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/formindex(_:offsetby:)","title":"func formIndex(inout Self.Index, offsetBy: Int)","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/formindex(_:offsetby:limitedby:)","title":"func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/formindex(after:)","title":"func formIndex(after: inout Self.Index)","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/index(of:)","title":"func index(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/makeiterator()","title":"func makeIterator() -> IndexingIterator<Self>","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/map(_:)-1mtae","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/prefix(_:)","title":"func prefix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/prefix(through:)","title":"func prefix(through: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/prefix(upto:)","title":"func prefix(upTo: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/randomelement()","title":"func randomElement() -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/randomelement(using:)","title":"func randomElement<T>(using: inout T) -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/ranges(of:)","title":"func ranges<C>(of: C) -> [Range<Self.Index>]","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/split(separator:maxsplits:omittingemptysubsequences:)","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/suffix(from:)","title":"func suffix(from: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/trimmingprefix(_:)","title":"func trimmingPrefix<Prefix>(Prefix) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/trimmingprefix(while:)","title":"func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/glib\/bytearraybase\/subscript(_:)-5sfnd","title":"subscript<R>(R) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/glib\/bytearraybase\/subscript(_:)-8f8nk","title":"subscript(Range<Self.Index>) -> Slice<Self>","type":"subscript"},{"path":"\/documentation\/glib\/bytearraybase\/subscript(_:)-vis7","title":"subscript((UnboundedRange_) -> ()) -> Self.SubSequence","type":"subscript"}],"path":"\/documentation\/glib\/bytearraybase\/collection-implementations","title":"Collection Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/glib\/bytearraybase\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/glib\/bytearraybase\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/bytearraybase\/partition(by:)-6gjn2","title":"func partition(by: (Self.Element) throws -> Bool) rethrows -> Self.Index","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/partition(by:)-l3bj","title":"func partition(by: (Self.Element) throws -> Bool) rethrows -> Self.Index","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/reverse()","title":"func reverse()","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/shuffle()","title":"func shuffle()","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/shuffle(using:)","title":"func shuffle<T>(using: inout T)","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/sort()","title":"func sort()","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/sort(by:)","title":"func sort(by: (Self.Element, Self.Element) throws -> Bool) rethrows","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/sort(using:)-4e22d","title":"func sort<Comparator>(using: Comparator)","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/sort(using:)-5kk5x","title":"func sort<S, Comparator>(using: S)","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/swapat(_:_:)","title":"func swapAt(Self.Index, Self.Index)","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/withcontiguousmutablestorageifavailable(_:)","title":"func withContiguousMutableStorageIfAvailable<R>((inout UnsafeMutableBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/glib\/bytearraybase\/subscript(_:)-2fmm1","title":"subscript(Range<Self.Index>) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/glib\/bytearraybase\/subscript(_:)-35jrn","title":"subscript((UnboundedRange_) -> ()) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/glib\/bytearraybase\/subscript(_:)-4pkym","title":"subscript<R>(R) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/glib\/bytearraybase\/subscript(_:)-5neak","title":"subscript(Range<Self.Index>) -> Slice<Self>","type":"subscript"},{"path":"\/documentation\/glib\/bytearraybase\/subscript(_:)-6yh5","title":"subscript(Range<Self.Index>) -> Slice<Self>","type":"subscript"}],"path":"\/documentation\/glib\/bytearraybase\/mutablecollection-implementations","title":"MutableCollection Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/bytearraybase\/index(_:offsetby:limitedby:)","title":"func index(Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?","type":"method"}],"path":"\/documentation\/glib\/bytearraybase\/randomaccesscollection-implementations","title":"RandomAccessCollection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/bytearraybase\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"path":"\/documentation\/glib\/bytearraybase\/publisher","title":"var publisher: Publishers.Sequence<Self, Never>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/bytearraybase\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/compactmap(_:)","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/compare(_:_:)","title":"func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/contains(_:)","title":"func contains(Self.Element) -> Bool","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/filter(_:)-7bxfh","title":"func filter(Predicate<Self.Element>) throws -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/filter(_:)-8xql9","title":"func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/flatmap(_:)-5brb6","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/flatmap(_:)-5wsm2","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/formatted(_:)","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/lexicographicallyprecedes(_:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/map(_:)-8q9zr","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/max()","title":"func max() -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/min()","title":"func min() -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/sorted()","title":"func sorted() -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/sorted(using:)-6uarh","title":"func sorted<Comparator>(using: Comparator) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/sorted(using:)-70md2","title":"func sorted<S, Comparator>(using: S) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/bytearraybase\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"}],"path":"\/documentation\/glib\/bytearraybase\/sequence-implementations","title":"Sequence Implementations","type":"symbol"}],"path":"\/documentation\/glib\/bytearraybase","title":"ByteArrayBase","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/bytes\/init(_:)-5jvnm","title":"init!(UnsafeMutablePointer<GBytes>?)","type":"init"},{"path":"\/documentation\/glib\/bytes\/init(_:)-5mi20","title":"init!(UnsafePointer<GBytes>?)","type":"init"},{"path":"\/documentation\/glib\/bytes\/init(_:)-6ql4x","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/bytes\/init(_:)-8lq1f","title":"init(UnsafePointer<GBytes>)","type":"init"},{"path":"\/documentation\/glib\/bytes\/init(_:)-jask","title":"init(UnsafeMutablePointer<GBytes>)","type":"init"},{"path":"\/documentation\/glib\/bytes\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/bytes\/init(data:size:)","title":"init(data: gconstpointer!, size: Int)","type":"init"},{"path":"\/documentation\/glib\/bytes\/init(freefunc:size:freefunc:userdata:)","title":"init(freeFunc: gconstpointer!, size: Int, freeFunc: GDestroyNotify?, userData: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/bytes\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/bytes\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/bytes\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/bytes\/init(raw:)-7rf36","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/bytes\/init(raw:)-9qc3h","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/bytes\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GBytes>)","type":"init"},{"path":"\/documentation\/glib\/bytes\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/bytes\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/bytes\/init(retainingraw:)-57u70","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/bytes\/init(retainingraw:)-7ue4t","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/bytes\/init(static_:size:)","title":"init(static_: gconstpointer!, size: Int)","type":"init"},{"path":"\/documentation\/glib\/bytes\/init(take:size:)","title":"init(take: gpointer!, size: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/bytes\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/bytes\/new(take:size:)","title":"static func new(take: gpointer!, size: Int) -> Bytes!","type":"method"},{"path":"\/documentation\/glib\/bytes\/newstatic(static_:size:)","title":"static func newStatic(static_: gconstpointer!, size: Int) -> Bytes!","type":"method"},{"path":"\/documentation\/glib\/bytes\/newwith(freefunc:size:freefunc:userdata:)","title":"static func newWith(freeFunc: gconstpointer!, size: Int, freeFunc: GDestroyNotify?, userData: gpointer?) -> Bytes!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/bytes\/bytes_ptr","title":"var bytes_ptr: UnsafeMutablePointer<GBytes>!","type":"property"},{"path":"\/documentation\/glib\/bytes\/size","title":"var size: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/bytes\/compare(bytes2:)","title":"func compare<BytesT>(bytes2: BytesT) -> Int","type":"method"},{"path":"\/documentation\/glib\/bytes\/computechecksumforbytes(checksumtype:)","title":"func computeChecksumForBytes(checksumType: GChecksumType) -> String!","type":"method"},{"path":"\/documentation\/glib\/bytes\/computehmacforbytes(digesttype:data:)","title":"func computeHmacForBytes<BytesT>(digestType: GChecksumType, data: BytesT) -> String!","type":"method"},{"path":"\/documentation\/glib\/bytes\/equal(bytes2:)","title":"func equal<BytesT>(bytes2: BytesT) -> Bool","type":"method"},{"path":"\/documentation\/glib\/bytes\/getdata(size:)","title":"func getData(size: UnsafeMutablePointer<gsize>!) -> gconstpointer?","type":"method"},{"path":"\/documentation\/glib\/bytes\/getregion(elementsize:offset:nelements:)","title":"func getRegion(elementSize: Int, offset: Int, nElements: Int) -> gconstpointer?","type":"method"},{"path":"\/documentation\/glib\/bytes\/getsize()","title":"func getSize() -> Int","type":"method"},{"path":"\/documentation\/glib\/bytes\/hash()","title":"func hash() -> Int","type":"method"},{"path":"\/documentation\/glib\/bytes\/newfrombytes(offset:length:)","title":"func newFromBytes(offset: Int, length: Int) -> BytesRef!","type":"method"},{"path":"\/documentation\/glib\/bytes\/ref()","title":"func ref() -> BytesRef!","type":"method"},{"path":"\/documentation\/glib\/bytes\/unref()","title":"func unref()","type":"method"},{"path":"\/documentation\/glib\/bytes\/unreftoarray()","title":"func unrefToArray() -> ByteArrayRef!","type":"method"},{"path":"\/documentation\/glib\/bytes\/unreftodata(size:)","title":"func unrefToData(size: UnsafeMutablePointer<gsize>!) -> gpointer!","type":"method"}],"path":"\/documentation\/glib\/bytes\/bytesprotocol-implementations","title":"BytesProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/bytes","title":"Bytes","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/cache\/init(_:)-1s5z3","title":"init!(UnsafePointer<GCache>?)","type":"init"},{"path":"\/documentation\/glib\/cache\/init(_:)-383w3","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/cache\/init(_:)-7g584","title":"init!(UnsafeMutablePointer<GCache>?)","type":"init"},{"path":"\/documentation\/glib\/cache\/init(_:)-8bt66","title":"init(UnsafeMutablePointer<GCache>)","type":"init"},{"path":"\/documentation\/glib\/cache\/init(_:)-9pht","title":"init(UnsafePointer<GCache>)","type":"init"},{"path":"\/documentation\/glib\/cache\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/cache\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/cache\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/cache\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/cache\/init(raw:)-12c67","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/cache\/init(raw:)-47c5a","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/cache\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GCache>)","type":"init"},{"path":"\/documentation\/glib\/cache\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/cache\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/cache\/init(retainingraw:)-52io9","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/cache\/init(retainingraw:)-5dpwu","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/cache\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/cache\/destroy()","title":"func destroy()","type":"method"},{"path":"\/documentation\/glib\/cache\/insert(key:)","title":"func insert(key: gpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/cache\/keyforeach(func:userdata:)","title":"func keyForeach(func: GHFunc?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/cache\/remove(value:)","title":"func remove(value: gconstpointer?)","type":"method"},{"path":"\/documentation\/glib\/cache\/valueforeach(func:userdata:)","title":"func valueForeach(func: GHFunc?, userData: gpointer?)","type":"method"}],"path":"\/documentation\/glib\/cache\/cacheprotocol-implementations","title":"CacheProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/cache","title":"Cache","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/checksum\/init(_:)-291ed","title":"init(UnsafePointer<GChecksum>)","type":"init"},{"path":"\/documentation\/glib\/checksum\/init(_:)-7fko3","title":"init!(UnsafePointer<GChecksum>?)","type":"init"},{"path":"\/documentation\/glib\/checksum\/init(_:)-7gdqq","title":"init(UnsafeMutablePointer<GChecksum>)","type":"init"},{"path":"\/documentation\/glib\/checksum\/init(_:)-80wqq","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/checksum\/init(_:)-9zk6e","title":"init!(UnsafeMutablePointer<GChecksum>?)","type":"init"},{"path":"\/documentation\/glib\/checksum\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/checksum\/init(checksumtype:)","title":"init(checksumType: GChecksumType)","type":"init"},{"path":"\/documentation\/glib\/checksum\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/checksum\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/checksum\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/checksum\/init(raw:)-43o3p","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/checksum\/init(raw:)-wgfa","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/checksum\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GChecksum>)","type":"init"},{"path":"\/documentation\/glib\/checksum\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/checksum\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/checksum\/init(retainingraw:)-56ct5","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/checksum\/init(retainingraw:)-7qpd4","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/checksum\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/checksum\/checksum_ptr","title":"var checksum_ptr: UnsafeMutablePointer<GChecksum>!","type":"property"},{"path":"\/documentation\/glib\/checksum\/string","title":"var string: String!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/checksum\/copy()","title":"func copy() -> ChecksumRef!","type":"method"},{"path":"\/documentation\/glib\/checksum\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/glib\/checksum\/getdigest(buffer:digestlen:)","title":"func getDigest(buffer: UnsafeMutablePointer<guint8>!, digestLen: UnsafeMutablePointer<gsize>!)","type":"method"},{"path":"\/documentation\/glib\/checksum\/getstring()","title":"func getString() -> String!","type":"method"},{"path":"\/documentation\/glib\/checksum\/reset()","title":"func reset()","type":"method"},{"path":"\/documentation\/glib\/checksum\/update(data:length:)","title":"func update(data: UnsafePointer<guchar>!, length: gssize)","type":"method"}],"path":"\/documentation\/glib\/checksum\/checksumprotocol-implementations","title":"ChecksumProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/checksum","title":"Checksum","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/closureholder\/init(_:)","title":"init((S) -> T)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/closureholder\/call","title":"let call: (S) -> T","type":"property"}],"path":"\/documentation\/glib\/closureholder","title":"ClosureHolder","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/completion\/init(_:)-1pkin","title":"init(UnsafeMutablePointer<GCompletion>)","type":"init"},{"path":"\/documentation\/glib\/completion\/init(_:)-2kdwx","title":"init!(UnsafePointer<GCompletion>?)","type":"init"},{"path":"\/documentation\/glib\/completion\/init(_:)-4frbr","title":"init(UnsafePointer<GCompletion>)","type":"init"},{"path":"\/documentation\/glib\/completion\/init(_:)-9fo4g","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/completion\/init(_:)-gdjo","title":"init!(UnsafeMutablePointer<GCompletion>?)","type":"init"},{"path":"\/documentation\/glib\/completion\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/completion\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/completion\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/completion\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/completion\/init(raw:)-2v7b1","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/completion\/init(raw:)-8zy4b","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/completion\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GCompletion>)","type":"init"},{"path":"\/documentation\/glib\/completion\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/completion\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/completion\/init(retainingraw:)-80oja","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/completion\/init(retainingraw:)-8xrvv","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/completion\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/completion\/cache","title":"var cache: ListRef!","type":"property"},{"path":"\/documentation\/glib\/completion\/func","title":"var `func`: GCompletionFunc!","type":"property"},{"path":"\/documentation\/glib\/completion\/items","title":"var items: ListRef!","type":"property"},{"path":"\/documentation\/glib\/completion\/prefix","title":"var prefix: UnsafeMutablePointer<gchar>!","type":"property"},{"path":"\/documentation\/glib\/completion\/strncmpfunc","title":"var strncmpFunc: GCompletionStrncmpFunc!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/completion\/add(items:)","title":"func add<ListT>(items: ListT)","type":"method"},{"path":"\/documentation\/glib\/completion\/clearitems()","title":"func clearItems()","type":"method"},{"path":"\/documentation\/glib\/completion\/complete(prefix:newprefix:)","title":"func complete(prefix: UnsafePointer<gchar>!, newPrefix: UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!) -> ReferenceListRef<gpointer>!","type":"method"},{"path":"\/documentation\/glib\/completion\/completeutf8(prefix:newprefix:)","title":"func completeUTF8(prefix: UnsafePointer<gchar>!, newPrefix: UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/completion\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/glib\/completion\/remove(items:)","title":"func remove<ListT>(items: ListT)","type":"method"},{"path":"\/documentation\/glib\/completion\/setcompare(strncmpfunc:)","title":"func setCompare(strncmpFunc: GCompletionStrncmpFunc?)","type":"method"}],"path":"\/documentation\/glib\/completion\/completionprotocol-implementations","title":"CompletionProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/completion","title":"Completion","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/cond\/init(_:)-3cuz9","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/cond\/init(_:)-3wkhq","title":"init!(UnsafePointer<GCond>?)","type":"init"},{"path":"\/documentation\/glib\/cond\/init(_:)-46zzs","title":"init(UnsafeMutablePointer<GCond>)","type":"init"},{"path":"\/documentation\/glib\/cond\/init(_:)-8cx4a","title":"init(UnsafePointer<GCond>)","type":"init"},{"path":"\/documentation\/glib\/cond\/init(_:)-ewbk","title":"init!(UnsafeMutablePointer<GCond>?)","type":"init"},{"path":"\/documentation\/glib\/cond\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/cond\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/cond\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/cond\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/cond\/init(raw:)-6h5wo","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/cond\/init(raw:)-91iij","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/cond\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GCond>)","type":"init"},{"path":"\/documentation\/glib\/cond\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/cond\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/cond\/init(retainingraw:)-2zlm8","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/cond\/init(retainingraw:)-9u70y","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/cond\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/cond\/broadcast()","title":"func broadcast()","type":"method"},{"path":"\/documentation\/glib\/cond\/clear()","title":"func clear()","type":"method"},{"path":"\/documentation\/glib\/cond\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/glib\/cond\/init_()","title":"func init_()","type":"method"},{"path":"\/documentation\/glib\/cond\/signal()","title":"func signal()","type":"method"},{"path":"\/documentation\/glib\/cond\/timedwait(mutex:abstime:)","title":"func timedWait<MutexT, TimeValT>(mutex: MutexT, absTime: TimeValT) -> Bool","type":"method"},{"path":"\/documentation\/glib\/cond\/wait(mutex:)","title":"func wait<MutexT>(mutex: MutexT)","type":"method"},{"path":"\/documentation\/glib\/cond\/waituntil(mutex:endtime:)","title":"func waitUntil<MutexT>(mutex: MutexT, endTime: gint64) -> Bool","type":"method"}],"path":"\/documentation\/glib\/cond\/condprotocol-implementations","title":"CondProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/cond","title":"Cond","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/data\/init(_:)-5efk2","title":"init(UnsafeMutablePointer<GData>)","type":"init"},{"path":"\/documentation\/glib\/data\/init(_:)-71xyc","title":"init!(UnsafeMutablePointer<GData>?)","type":"init"},{"path":"\/documentation\/glib\/data\/init(_:)-7ec71","title":"init(UnsafePointer<GData>)","type":"init"},{"path":"\/documentation\/glib\/data\/init(_:)-7p6gg","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/data\/init(_:)-hw6q","title":"init!(UnsafePointer<GData>?)","type":"init"},{"path":"\/documentation\/glib\/data\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/data\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/data\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/data\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/data\/init(raw:)-2ivzl","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/data\/init(raw:)-2u36e","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/data\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GData>)","type":"init"},{"path":"\/documentation\/glib\/data\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/data\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/data\/init(retainingraw:)-2e5zw","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/data\/init(retainingraw:)-4d2w1","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/data\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"}],"path":"\/documentation\/glib\/data","title":"Data","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/date\/init()","title":"init()","type":"init"},{"path":"\/documentation\/glib\/date\/init(_:)-1xuni","title":"init(UnsafeMutablePointer<GDate>)","type":"init"},{"path":"\/documentation\/glib\/date\/init(_:)-46imp","title":"init!(UnsafePointer<GDate>?)","type":"init"},{"path":"\/documentation\/glib\/date\/init(_:)-4ld1t","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/date\/init(_:)-6bawz","title":"init!(UnsafeMutablePointer<GDate>?)","type":"init"},{"path":"\/documentation\/glib\/date\/init(_:)-827x2","title":"init(UnsafePointer<GDate>)","type":"init"},{"path":"\/documentation\/glib\/date\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/date\/init(dmy:month:year:)","title":"init(dmy: GDateDay, month: GDateMonth, year: GDateYear)","type":"init"},{"path":"\/documentation\/glib\/date\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/date\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/date\/init(julian:)","title":"init(julian: guint32)","type":"init"},{"path":"\/documentation\/glib\/date\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/date\/init(raw:)-5r9lx","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/date\/init(raw:)-8w9i2","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/date\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GDate>)","type":"init"},{"path":"\/documentation\/glib\/date\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/date\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/date\/init(retainingraw:)-39bfb","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/date\/init(retainingraw:)-745yi","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/date\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/date\/new(dmy:month:year:)","title":"static func new(dmy: GDateDay, month: GDateMonth, year: GDateYear) -> Date!","type":"method"},{"path":"\/documentation\/glib\/date\/new(julian:)","title":"static func new(julian: guint32) -> Date!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/date\/date_ptr","title":"var date_ptr: UnsafeMutablePointer<GDate>!","type":"property"},{"path":"\/documentation\/glib\/date\/day","title":"var day: GDateDay","type":"property"},{"path":"\/documentation\/glib\/date\/dayofyear","title":"var dayOfYear: Int","type":"property"},{"path":"\/documentation\/glib\/date\/dmy","title":"var dmy: guint","type":"property"},{"path":"\/documentation\/glib\/date\/isfirstofmonth","title":"var isFirstOfMonth: Bool","type":"property"},{"path":"\/documentation\/glib\/date\/islastofmonth","title":"var isLastOfMonth: Bool","type":"property"},{"path":"\/documentation\/glib\/date\/iso8601weekofyear","title":"var iso8601WeekOfYear: Int","type":"property"},{"path":"\/documentation\/glib\/date\/julian","title":"var julian: guint32","type":"property"},{"path":"\/documentation\/glib\/date\/juliandays","title":"var julianDays: guint","type":"property"},{"path":"\/documentation\/glib\/date\/mondayweekofyear","title":"var mondayWeekOfYear: Int","type":"property"},{"path":"\/documentation\/glib\/date\/month","title":"var month: GDateMonth","type":"property"},{"path":"\/documentation\/glib\/date\/sundayweekofyear","title":"var sundayWeekOfYear: Int","type":"property"},{"path":"\/documentation\/glib\/date\/weekday","title":"var weekday: GDateWeekday","type":"property"},{"path":"\/documentation\/glib\/date\/year","title":"var year: GDateYear","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/date\/adddays(ndays:)","title":"func addDays(nDays: Int)","type":"method"},{"path":"\/documentation\/glib\/date\/addmonths(nmonths:)","title":"func addMonths(nMonths: Int)","type":"method"},{"path":"\/documentation\/glib\/date\/addyears(nyears:)","title":"func addYears(nYears: Int)","type":"method"},{"path":"\/documentation\/glib\/date\/clamp(mindate:maxdate:)","title":"func clamp<DateT>(minDate: DateT, maxDate: DateT)","type":"method"},{"path":"\/documentation\/glib\/date\/clear(ndates:)","title":"func clear(nDates: Int)","type":"method"},{"path":"\/documentation\/glib\/date\/compare(rhs:)","title":"func compare<DateT>(rhs: DateT) -> Int","type":"method"},{"path":"\/documentation\/glib\/date\/copy()","title":"func copy() -> DateRef!","type":"method"},{"path":"\/documentation\/glib\/date\/datestrftime(s:slen:format:)","title":"func dateStrftime(s: UnsafeMutablePointer<gchar>!, slen: Int, format: UnsafePointer<gchar>!) -> Int","type":"method"},{"path":"\/documentation\/glib\/date\/daysbetween(date2:)","title":"func daysBetween<DateT>(date2: DateT) -> Int","type":"method"},{"path":"\/documentation\/glib\/date\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/glib\/date\/getday()","title":"func getDay() -> GDateDay","type":"method"},{"path":"\/documentation\/glib\/date\/getdayofyear()","title":"func getDayOfYear() -> Int","type":"method"},{"path":"\/documentation\/glib\/date\/getiso8601weekofyear()","title":"func getIso8601WeekOfYear() -> Int","type":"method"},{"path":"\/documentation\/glib\/date\/getjulian()","title":"func getJulian() -> guint32","type":"method"},{"path":"\/documentation\/glib\/date\/getmondayweekofyear()","title":"func getMondayWeekOfYear() -> Int","type":"method"},{"path":"\/documentation\/glib\/date\/getmonth()","title":"func getMonth() -> GDateMonth","type":"method"},{"path":"\/documentation\/glib\/date\/getsundayweekofyear()","title":"func getSundayWeekOfYear() -> Int","type":"method"},{"path":"\/documentation\/glib\/date\/getweekday()","title":"func getWeekday() -> GDateWeekday","type":"method"},{"path":"\/documentation\/glib\/date\/getyear()","title":"func getYear() -> GDateYear","type":"method"},{"path":"\/documentation\/glib\/date\/order(date2:)","title":"func order<DateT>(date2: DateT)","type":"method"},{"path":"\/documentation\/glib\/date\/set(day:)","title":"func set(day: GDateDay)","type":"method"},{"path":"\/documentation\/glib\/date\/set(month:)","title":"func set(month: GDateMonth)","type":"method"},{"path":"\/documentation\/glib\/date\/set(time:)","title":"func set(time: GTime)","type":"method"},{"path":"\/documentation\/glib\/date\/set(year:)","title":"func set(year: GDateYear)","type":"method"},{"path":"\/documentation\/glib\/date\/setdmy(day:month:y:)","title":"func setDmy(day: GDateDay, month: GDateMonth, y: GDateYear)","type":"method"},{"path":"\/documentation\/glib\/date\/setjulian(juliandate:)","title":"func setJulian(julianDate: guint32)","type":"method"},{"path":"\/documentation\/glib\/date\/setparse(str:)","title":"func setParse(str: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/glib\/date\/settimet(timet:)","title":"func setTimeT(timet: time_t)","type":"method"},{"path":"\/documentation\/glib\/date\/settimeval(timeval:)","title":"func setTimeVal<TimeValT>(timeval: TimeValT)","type":"method"},{"path":"\/documentation\/glib\/date\/strftime(s:slen:format:)","title":"func strftime(s: UnsafeMutablePointer<gchar>!, slen: Int, format: UnsafePointer<gchar>!) -> Int","type":"method"},{"path":"\/documentation\/glib\/date\/subtractdays(ndays:)","title":"func subtractDays(nDays: Int)","type":"method"},{"path":"\/documentation\/glib\/date\/subtractmonths(nmonths:)","title":"func subtractMonths(nMonths: Int)","type":"method"},{"path":"\/documentation\/glib\/date\/subtractyears(nyears:)","title":"func subtractYears(nYears: Int)","type":"method"},{"path":"\/documentation\/glib\/date\/tostruct(tm:)","title":"func toStruct(tm: UnsafeMutablePointer<tm>!)","type":"method"},{"path":"\/documentation\/glib\/date\/valid()","title":"func valid() -> Bool","type":"method"}],"path":"\/documentation\/glib\/date\/dateprotocol-implementations","title":"DateProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/date","title":"Date","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/datetime\/init(_:)-16isy","title":"init(UnsafeMutablePointer<GDateTime>)","type":"init"},{"path":"\/documentation\/glib\/datetime\/init(_:)-1gzdi","title":"init(UnsafePointer<GDateTime>)","type":"init"},{"path":"\/documentation\/glib\/datetime\/init(_:)-3qdek","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/datetime\/init(_:)-5j5ul","title":"init!(UnsafePointer<GDateTime>?)","type":"init"},{"path":"\/documentation\/glib\/datetime\/init(_:)-7f7z8","title":"init!(UnsafeMutablePointer<GDateTime>?)","type":"init"},{"path":"\/documentation\/glib\/datetime\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/datetime\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/datetime\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/datetime\/init(iso8601:defaulttz:)","title":"init<TimeZoneT>(iso8601: UnsafePointer<gchar>!, defaultTz: TimeZoneT?)","type":"init"},{"path":"\/documentation\/glib\/datetime\/init(local:month:day:hour:minute:seconds:)","title":"init(local: Int, month: Int, day: Int, hour: Int, minute: Int, seconds: Double)","type":"init"},{"path":"\/documentation\/glib\/datetime\/init(now:)","title":"init<TimeZoneT>(now: TimeZoneT)","type":"init"},{"path":"\/documentation\/glib\/datetime\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/datetime\/init(raw:)-5x83q","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/datetime\/init(raw:)-7txcj","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/datetime\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GDateTime>)","type":"init"},{"path":"\/documentation\/glib\/datetime\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/datetime\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/datetime\/init(retainingraw:)-4j8rl","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/datetime\/init(retainingraw:)-qlpg","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/datetime\/init(timevallocal:)","title":"init<TimeValT>(timevalLocal: TimeValT)","type":"init"},{"path":"\/documentation\/glib\/datetime\/init(timevalutc:)","title":"init<TimeValT>(timevalUTC: TimeValT)","type":"init"},{"path":"\/documentation\/glib\/datetime\/init(tz:year:month:day:hour:minute:seconds:)","title":"init<TimeZoneT>(tz: TimeZoneT, year: Int, month: Int, day: Int, hour: Int, minute: Int, seconds: Double)","type":"init"},{"path":"\/documentation\/glib\/datetime\/init(unixlocal:)","title":"init(unixLocal: gint64)","type":"init"},{"path":"\/documentation\/glib\/datetime\/init(unixlocalusec:)","title":"init(unixLocalUsec: gint64)","type":"init"},{"path":"\/documentation\/glib\/datetime\/init(unixutc:)","title":"init(unixUTC: gint64)","type":"init"},{"path":"\/documentation\/glib\/datetime\/init(unixutcusec:)","title":"init(unixUTCUsec: gint64)","type":"init"},{"path":"\/documentation\/glib\/datetime\/init(utc:month:day:hour:minute:seconds:)","title":"init(utc: Int, month: Int, day: Int, hour: Int, minute: Int, seconds: Double)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/datetime\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/datetime\/new(local:month:day:hour:minute:seconds:)","title":"static func new(local: Int, month: Int, day: Int, hour: Int, minute: Int, seconds: Double) -> DateTime!","type":"method"},{"path":"\/documentation\/glib\/datetime\/new(now:)","title":"static func new<TimeZoneT>(now: TimeZoneT) -> DateTime!","type":"method"},{"path":"\/documentation\/glib\/datetime\/new(utc:month:day:hour:minute:seconds:)","title":"static func new(utc: Int, month: Int, day: Int, hour: Int, minute: Int, seconds: Double) -> DateTime!","type":"method"},{"path":"\/documentation\/glib\/datetime\/newfrom(iso8601:defaulttz:)","title":"static func newFrom<TimeZoneT>(iso8601: UnsafePointer<gchar>!, defaultTz: TimeZoneT?) -> DateTime!","type":"method"},{"path":"\/documentation\/glib\/datetime\/newfrom(timevallocal:)","title":"static func newFrom<TimeValT>(timevalLocal: TimeValT) -> DateTime!","type":"method"},{"path":"\/documentation\/glib\/datetime\/newfrom(timevalutc:)","title":"static func newFrom<TimeValT>(timevalUTC: TimeValT) -> DateTime!","type":"method"},{"path":"\/documentation\/glib\/datetime\/newfrom(unixlocal:)","title":"static func newFrom(unixLocal: gint64) -> DateTime!","type":"method"},{"path":"\/documentation\/glib\/datetime\/newfrom(unixlocalusec:)","title":"static func newFrom(unixLocalUsec: gint64) -> DateTime!","type":"method"},{"path":"\/documentation\/glib\/datetime\/newfrom(unixutc:)","title":"static func newFrom(unixUTC: gint64) -> DateTime!","type":"method"},{"path":"\/documentation\/glib\/datetime\/newfrom(unixutcusec:)","title":"static func newFrom(unixUTCUsec: gint64) -> DateTime!","type":"method"},{"path":"\/documentation\/glib\/datetime\/newnowlocal()","title":"static func newNowLocal() -> DateTime!","type":"method"},{"path":"\/documentation\/glib\/datetime\/newnowutc()","title":"static func newNowUTC() -> DateTime!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/datetime\/date_time_ptr","title":"var date_time_ptr: UnsafeMutablePointer<GDateTime>!","type":"property"},{"path":"\/documentation\/glib\/datetime\/dayofmonth","title":"var dayOfMonth: Int","type":"property"},{"path":"\/documentation\/glib\/datetime\/dayofweek","title":"var dayOfWeek: Int","type":"property"},{"path":"\/documentation\/glib\/datetime\/dayofyear","title":"var dayOfYear: Int","type":"property"},{"path":"\/documentation\/glib\/datetime\/hour","title":"var hour: Int","type":"property"},{"path":"\/documentation\/glib\/datetime\/isdaylightsavings","title":"var isDaylightSavings: Bool","type":"property"},{"path":"\/documentation\/glib\/datetime\/microsecond","title":"var microsecond: Int","type":"property"},{"path":"\/documentation\/glib\/datetime\/minute","title":"var minute: Int","type":"property"},{"path":"\/documentation\/glib\/datetime\/month","title":"var month: Int","type":"property"},{"path":"\/documentation\/glib\/datetime\/second","title":"var second: Int","type":"property"},{"path":"\/documentation\/glib\/datetime\/seconds","title":"var seconds: Double","type":"property"},{"path":"\/documentation\/glib\/datetime\/timezone","title":"var timezone: TimeZoneRef!","type":"property"},{"path":"\/documentation\/glib\/datetime\/timezoneabbreviation","title":"var timezoneAbbreviation: String!","type":"property"},{"path":"\/documentation\/glib\/datetime\/utcoffset","title":"var utcOffset: GTimeSpan","type":"property"},{"path":"\/documentation\/glib\/datetime\/weeknumberingyear","title":"var weekNumberingYear: Int","type":"property"},{"path":"\/documentation\/glib\/datetime\/weekofyear","title":"var weekOfYear: Int","type":"property"},{"path":"\/documentation\/glib\/datetime\/year","title":"var year: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/datetime\/add(days:)","title":"func add(days: Int) -> DateTimeRef!","type":"method"},{"path":"\/documentation\/glib\/datetime\/add(hours:)","title":"func add(hours: Int) -> DateTimeRef!","type":"method"},{"path":"\/documentation\/glib\/datetime\/add(minutes:)","title":"func add(minutes: Int) -> DateTimeRef!","type":"method"},{"path":"\/documentation\/glib\/datetime\/add(months:)","title":"func add(months: Int) -> DateTimeRef!","type":"method"},{"path":"\/documentation\/glib\/datetime\/add(seconds:)","title":"func add(seconds: Double) -> DateTimeRef!","type":"method"},{"path":"\/documentation\/glib\/datetime\/add(timespan:)","title":"func add(timespan: GTimeSpan) -> DateTimeRef!","type":"method"},{"path":"\/documentation\/glib\/datetime\/add(weeks:)","title":"func add(weeks: Int) -> DateTimeRef!","type":"method"},{"path":"\/documentation\/glib\/datetime\/add(years:)","title":"func add(years: Int) -> DateTimeRef!","type":"method"},{"path":"\/documentation\/glib\/datetime\/addfull(years:months:days:hours:minutes:seconds:)","title":"func addFull(years: Int, months: Int, days: Int, hours: Int, minutes: Int, seconds: Double) -> DateTimeRef!","type":"method"},{"path":"\/documentation\/glib\/datetime\/compare(dt2:)","title":"func compare<DateTimeT>(dt2: DateTimeT) -> Int","type":"method"},{"path":"\/documentation\/glib\/datetime\/difference(begin:)","title":"func difference<DateTimeT>(begin: DateTimeT) -> GTimeSpan","type":"method"},{"path":"\/documentation\/glib\/datetime\/equal(dt2:)","title":"func equal<DateTimeT>(dt2: DateTimeT) -> Bool","type":"method"},{"path":"\/documentation\/glib\/datetime\/format(format:)","title":"func format(format: UnsafePointer<gchar>!) -> String!","type":"method"},{"path":"\/documentation\/glib\/datetime\/formatiso8601()","title":"func formatIso8601() -> String!","type":"method"},{"path":"\/documentation\/glib\/datetime\/getdayofmonth()","title":"func getDayOfMonth() -> Int","type":"method"},{"path":"\/documentation\/glib\/datetime\/getdayofweek()","title":"func getDayOfWeek() -> Int","type":"method"},{"path":"\/documentation\/glib\/datetime\/getdayofyear()","title":"func getDayOfYear() -> Int","type":"method"},{"path":"\/documentation\/glib\/datetime\/gethour()","title":"func getHour() -> Int","type":"method"},{"path":"\/documentation\/glib\/datetime\/getmicrosecond()","title":"func getMicrosecond() -> Int","type":"method"},{"path":"\/documentation\/glib\/datetime\/getminute()","title":"func getMinute() -> Int","type":"method"},{"path":"\/documentation\/glib\/datetime\/getmonth()","title":"func getMonth() -> Int","type":"method"},{"path":"\/documentation\/glib\/datetime\/getsecond()","title":"func getSecond() -> Int","type":"method"},{"path":"\/documentation\/glib\/datetime\/getseconds()","title":"func getSeconds() -> Double","type":"method"},{"path":"\/documentation\/glib\/datetime\/gettimezone()","title":"func getTimezone() -> TimeZoneRef!","type":"method"},{"path":"\/documentation\/glib\/datetime\/gettimezoneabbreviation()","title":"func getTimezoneAbbreviation() -> String!","type":"method"},{"path":"\/documentation\/glib\/datetime\/getutcoffset()","title":"func getUTCOffset() -> GTimeSpan","type":"method"},{"path":"\/documentation\/glib\/datetime\/getweeknumberingyear()","title":"func getWeekNumberingYear() -> Int","type":"method"},{"path":"\/documentation\/glib\/datetime\/getweekofyear()","title":"func getWeekOfYear() -> Int","type":"method"},{"path":"\/documentation\/glib\/datetime\/getyear()","title":"func getYear() -> Int","type":"method"},{"path":"\/documentation\/glib\/datetime\/getymd(year:month:day:)","title":"func getYmd(year: UnsafeMutablePointer<gint>!, month: UnsafeMutablePointer<gint>!, day: UnsafeMutablePointer<gint>!)","type":"method"},{"path":"\/documentation\/glib\/datetime\/hash()","title":"func hash() -> Int","type":"method"},{"path":"\/documentation\/glib\/datetime\/ref()","title":"func ref() -> DateTimeRef!","type":"method"},{"path":"\/documentation\/glib\/datetime\/tolocal()","title":"func toLocal() -> DateTimeRef!","type":"method"},{"path":"\/documentation\/glib\/datetime\/totimeval(tv:)","title":"func toTimeval<TimeValT>(tv: TimeValT) -> Bool","type":"method"},{"path":"\/documentation\/glib\/datetime\/totimezone(tz:)","title":"func toTimezone<TimeZoneT>(tz: TimeZoneT) -> DateTimeRef!","type":"method"},{"path":"\/documentation\/glib\/datetime\/toutc()","title":"func toUTC() -> DateTimeRef!","type":"method"},{"path":"\/documentation\/glib\/datetime\/tounix()","title":"func toUnix() -> gint64","type":"method"},{"path":"\/documentation\/glib\/datetime\/tounixusec()","title":"func toUnixUsec() -> gint64","type":"method"},{"path":"\/documentation\/glib\/datetime\/unref()","title":"func unref()","type":"method"}],"path":"\/documentation\/glib\/datetime\/datetimeprotocol-implementations","title":"DateTimeProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/datetime","title":"DateTime","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/debugkey\/init(_:)-1ylfx","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/debugkey\/init(_:)-51ia9","title":"init!(UnsafeMutablePointer<GDebugKey>?)","type":"init"},{"path":"\/documentation\/glib\/debugkey\/init(_:)-56w99","title":"init!(UnsafePointer<GDebugKey>?)","type":"init"},{"path":"\/documentation\/glib\/debugkey\/init(_:)-5e4g5","title":"init(UnsafeMutablePointer<GDebugKey>)","type":"init"},{"path":"\/documentation\/glib\/debugkey\/init(_:)-7c7kv","title":"init(UnsafePointer<GDebugKey>)","type":"init"},{"path":"\/documentation\/glib\/debugkey\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/debugkey\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/debugkey\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/debugkey\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/debugkey\/init(raw:)-45k23","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/debugkey\/init(raw:)-apce","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/debugkey\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GDebugKey>)","type":"init"},{"path":"\/documentation\/glib\/debugkey\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/debugkey\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/debugkey\/init(retainingraw:)-85inv","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/debugkey\/init(retainingraw:)-8gphu","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/debugkey\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/debugkey\/key","title":"var key: UnsafePointer<gchar>!","type":"property"},{"path":"\/documentation\/glib\/debugkey\/value","title":"var value: guint","type":"property"}],"path":"\/documentation\/glib\/debugkey\/debugkeyprotocol-implementations","title":"DebugKeyProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/debugkey","title":"DebugKey","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/dir\/init(_:)-153e2","title":"init!(UnsafeMutablePointer<GDir>?)","type":"init"},{"path":"\/documentation\/glib\/dir\/init(_:)-6uqu6","title":"init(UnsafeMutablePointer<GDir>)","type":"init"},{"path":"\/documentation\/glib\/dir\/init(_:)-8xmtq","title":"init(UnsafePointer<GDir>)","type":"init"},{"path":"\/documentation\/glib\/dir\/init(_:)-ovbk","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/dir\/init(_:)-w6sc","title":"init!(UnsafePointer<GDir>?)","type":"init"},{"path":"\/documentation\/glib\/dir\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/dir\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/dir\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/dir\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/dir\/init(path:flags:)","title":"init(path: UnsafePointer<gchar>!, flags: Int) throws","type":"init"},{"path":"\/documentation\/glib\/dir\/init(raw:)-3sjkj","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/dir\/init(raw:)-7ne3g","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/dir\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GDir>)","type":"init"},{"path":"\/documentation\/glib\/dir\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/dir\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/dir\/init(retainingraw:)-39v3b","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/dir\/init(retainingraw:)-9elwt","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/dir\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/dir\/open(path:flags:)","title":"static func open(path: UnsafePointer<gchar>!, flags: Int) throws -> Dir!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/dir\/dir_ptr","title":"var dir_ptr: UnsafeMutablePointer<GDir>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/dir\/close()","title":"func close()","type":"method"},{"path":"\/documentation\/glib\/dir\/readname()","title":"func readName() -> String!","type":"method"},{"path":"\/documentation\/glib\/dir\/ref()","title":"func ref() -> DirRef!","type":"method"},{"path":"\/documentation\/glib\/dir\/rewind()","title":"func rewind()","type":"method"},{"path":"\/documentation\/glib\/dir\/unref()","title":"func unref()","type":"method"}],"path":"\/documentation\/glib\/dir\/dirprotocol-implementations","title":"DirProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/dir","title":"Dir","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/doubleieee754\/init(_:)-26wuv","title":"init(UnsafeMutablePointer<GDoubleIEEE754>)","type":"init"},{"path":"\/documentation\/glib\/doubleieee754\/init(_:)-2feui","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/doubleieee754\/init(_:)-3lzpt","title":"init(UnsafePointer<GDoubleIEEE754>)","type":"init"},{"path":"\/documentation\/glib\/doubleieee754\/init(_:)-7gfj","title":"init!(UnsafeMutablePointer<GDoubleIEEE754>?)","type":"init"},{"path":"\/documentation\/glib\/doubleieee754\/init(_:)-8q1wb","title":"init!(UnsafePointer<GDoubleIEEE754>?)","type":"init"},{"path":"\/documentation\/glib\/doubleieee754\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/doubleieee754\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/doubleieee754\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/doubleieee754\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/doubleieee754\/init(raw:)-65jzq","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/doubleieee754\/init(raw:)-8pwh3","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/doubleieee754\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GDoubleIEEE754>)","type":"init"},{"path":"\/documentation\/glib\/doubleieee754\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/doubleieee754\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/doubleieee754\/init(retainingraw:)-3ifmk","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/doubleieee754\/init(retainingraw:)-7vq3r","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/doubleieee754\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/glib\/doubleieee754\/mpn-swift.typealias","title":"DoubleIEEE754.Mpn","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/doubleieee754\/mpn-swift.property","title":"var mpn: Self.Mpn","type":"property"},{"path":"\/documentation\/glib\/doubleieee754\/vdouble","title":"var vDouble: gdouble","type":"property"}],"path":"\/documentation\/glib\/doubleieee754\/doubleieee754protocol-implementations","title":"DoubleIEEE754Protocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/doubleieee754","title":"DoubleIEEE754","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/floatieee754\/init(_:)-2jrod","title":"init!(UnsafeMutablePointer<GFloatIEEE754>?)","type":"init"},{"path":"\/documentation\/glib\/floatieee754\/init(_:)-439lt","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/floatieee754\/init(_:)-4svn2","title":"init(UnsafeMutablePointer<GFloatIEEE754>)","type":"init"},{"path":"\/documentation\/glib\/floatieee754\/init(_:)-7s1m3","title":"init(UnsafePointer<GFloatIEEE754>)","type":"init"},{"path":"\/documentation\/glib\/floatieee754\/init(_:)-9tmu2","title":"init!(UnsafePointer<GFloatIEEE754>?)","type":"init"},{"path":"\/documentation\/glib\/floatieee754\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/floatieee754\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/floatieee754\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/floatieee754\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/floatieee754\/init(raw:)-3h45","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/floatieee754\/init(raw:)-7xokx","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/floatieee754\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GFloatIEEE754>)","type":"init"},{"path":"\/documentation\/glib\/floatieee754\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/floatieee754\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/floatieee754\/init(retainingraw:)-20n7t","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/floatieee754\/init(retainingraw:)-85e37","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/floatieee754\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/glib\/floatieee754\/mpn-swift.typealias","title":"FloatIEEE754.Mpn","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/floatieee754\/mpn-swift.property","title":"var mpn: Self.Mpn","type":"property"},{"path":"\/documentation\/glib\/floatieee754\/vfloat","title":"var vFloat: gfloat","type":"property"}],"path":"\/documentation\/glib\/floatieee754\/floatieee754protocol-implementations","title":"FloatIEEE754Protocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/floatieee754","title":"FloatIEEE754","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/gliberror\/init(_:)-4bd9j","title":"init(UnsafeMutablePointer<GError>)","type":"init"},{"path":"\/documentation\/glib\/gliberror\/init(_:)-6bsdl","title":"init!(UnsafeMutablePointer<GError>?)","type":"init"},{"path":"\/documentation\/glib\/gliberror\/init(_:)-968kz","title":"init(UnsafePointer<GError>)","type":"init"},{"path":"\/documentation\/glib\/gliberror\/init(_:)-9tk2k","title":"init!(UnsafePointer<GError>?)","type":"init"},{"path":"\/documentation\/glib\/gliberror\/init(_:)-9v9aa","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/gliberror\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/gliberror\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/gliberror\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/gliberror\/init(literal:code:message:)","title":"init(literal: GQuark, code: Int, message: UnsafePointer<gchar>!)","type":"init"},{"path":"\/documentation\/glib\/gliberror\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/gliberror\/init(raw:)-1000h","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/gliberror\/init(raw:)-8wxys","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/gliberror\/init(rawvalue:)","title":"convenience init(rawValue: Int32)","type":"init"},{"path":"\/documentation\/glib\/gliberror\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GError>)","type":"init"},{"path":"\/documentation\/glib\/gliberror\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/gliberror\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/gliberror\/init(retainingraw:)-3jnpf","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/gliberror\/init(retainingraw:)-7ei4m","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/gliberror\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"path":"\/documentation\/glib\/gliberror\/rawvalue","title":"var rawValue: Int32","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/gliberror\/new(literal:code:message:)","title":"static func new(literal: GQuark, code: Int, message: UnsafePointer<gchar>!) -> GLibError!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/gliberror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/glib\/gliberror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/gliberror\/code","title":"var code: gint","type":"property"},{"path":"\/documentation\/glib\/gliberror\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/glib\/gliberror\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/glib\/gliberror\/domain","title":"var domain: GQuark","type":"property"},{"path":"\/documentation\/glib\/gliberror\/error_ptr","title":"var error_ptr: UnsafeMutablePointer<GError>!","type":"property"},{"path":"\/documentation\/glib\/gliberror\/message","title":"var message: UnsafeMutablePointer<gchar>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/gliberror\/assertionmessageerror(domain:file:line:func:expr:errordomain:errorcode:)","title":"func assertionMessageError(domain: UnsafePointer<CChar>!, file: UnsafePointer<CChar>!, line: Int, func: UnsafePointer<CChar>!, expr: UnsafePointer<CChar>!, errorDomain: GQuark, errorCode: Int)","type":"method"},{"path":"\/documentation\/glib\/gliberror\/copy()","title":"func copy() -> ErrorRef!","type":"method"},{"path":"\/documentation\/glib\/gliberror\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/glib\/gliberror\/matches(domain:code:)","title":"func matches(domain: GQuark, code: Int) -> Bool","type":"method"},{"path":"\/documentation\/glib\/gliberror\/propagateerror(dest:)","title":"func propagateError(dest: UnsafeMutablePointer<UnsafeMutablePointer<GError>?>?)","type":"method"},{"path":"\/documentation\/glib\/gliberror\/variantparseerrorprintcontext(sourcestr:)","title":"func variantParseErrorPrintContext(sourceStr: UnsafePointer<gchar>!) -> String!","type":"method"}],"path":"\/documentation\/glib\/gliberror\/errorprotocol-implementations","title":"ErrorProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/gliberror","title":"GLibError","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/hashtable\/init(_:)-4txjp","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/hashtable\/init(_:)-6u43u","title":"init(UnsafeMutablePointer<GHashTable>)","type":"init"},{"path":"\/documentation\/glib\/hashtable\/init(_:)-80nog","title":"init(UnsafePointer<GHashTable>)","type":"init"},{"path":"\/documentation\/glib\/hashtable\/init(_:)-8cz63","title":"init!(UnsafeMutablePointer<GHashTable>?)","type":"init"},{"path":"\/documentation\/glib\/hashtable\/init(_:)-n7gx","title":"init!(UnsafePointer<GHashTable>?)","type":"init"},{"path":"\/documentation\/glib\/hashtable\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/hashtable\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/hashtable\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/hashtable\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/hashtable\/init(raw:)-3uv6s","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/hashtable\/init(raw:)-885nx","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/hashtable\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GHashTable>)","type":"init"},{"path":"\/documentation\/glib\/hashtable\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/hashtable\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/hashtable\/init(retainingraw:)-150ub","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/hashtable\/init(retainingraw:)-61h0n","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/hashtable\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/hashtable\/new(full:keyequalfunc:keydestroyfunc:valuedestroyfunc:)","title":"static func new(full: GHashFunc?, keyEqualFunc: GEqualFunc?, keyDestroyFunc: GDestroyNotify?, valueDestroyFunc: GDestroyNotify?) -> HashTable!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/hashtable\/hash_table_ptr","title":"var hash_table_ptr: UnsafeMutablePointer<GHashTable>!","type":"property"},{"path":"\/documentation\/glib\/hashtable\/keys","title":"var keys: ReferenceListRef<gpointer>!","type":"property"},{"path":"\/documentation\/glib\/hashtable\/keysasptrarray","title":"var keysAsPtrArray: ReferenceArrayRef<gpointer>!","type":"property"},{"path":"\/documentation\/glib\/hashtable\/values","title":"var values: ReferenceListRef<gpointer>!","type":"property"},{"path":"\/documentation\/glib\/hashtable\/valuesasptrarray","title":"var valuesAsPtrArray: ReferenceArrayRef<gpointer>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/hashtable\/add(key:)","title":"func add(key: gpointer?) -> Bool","type":"method"},{"path":"\/documentation\/glib\/hashtable\/contains(key:)","title":"func contains(key: gconstpointer?) -> Bool","type":"method"},{"path":"\/documentation\/glib\/hashtable\/destroy()","title":"func destroy()","type":"method"},{"path":"\/documentation\/glib\/hashtable\/find(predicate:userdata:)","title":"func find(predicate: GHRFunc?, userData: gpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/hashtable\/foreach(func:userdata:)","title":"func foreach(func: GHFunc?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/hashtable\/foreachremove(func:userdata:)","title":"func foreachRemove(func: GHRFunc?, userData: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/glib\/hashtable\/foreachsteal(func:userdata:)","title":"func foreachSteal(func: GHRFunc?, userData: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/glib\/hashtable\/getkeys()","title":"func getKeys() -> ReferenceListRef<gpointer>!","type":"method"},{"path":"\/documentation\/glib\/hashtable\/getkeysasarray(length:)","title":"func getKeysAsArray(length: UnsafeMutablePointer<guint>!) -> UnsafeMutablePointer<gpointer?>!","type":"method"},{"path":"\/documentation\/glib\/hashtable\/getkeysasptrarray()","title":"func getKeysAsPtrArray() -> ReferenceArrayRef<gpointer>!","type":"method"},{"path":"\/documentation\/glib\/hashtable\/getvalues()","title":"func getValues() -> ReferenceListRef<gpointer>!","type":"method"},{"path":"\/documentation\/glib\/hashtable\/getvaluesasptrarray()","title":"func getValuesAsPtrArray() -> ReferenceArrayRef<gpointer>!","type":"method"},{"path":"\/documentation\/glib\/hashtable\/hashtableadd(key:)","title":"func hashTableAdd(key: gpointer?) -> Bool","type":"method"},{"path":"\/documentation\/glib\/hashtable\/hashtablecontains(key:)","title":"func hashTableContains(key: gconstpointer?) -> Bool","type":"method"},{"path":"\/documentation\/glib\/hashtable\/hashtabledestroy()","title":"func hashTableDestroy()","type":"method"},{"path":"\/documentation\/glib\/hashtable\/hashtablefind(predicate:userdata:)","title":"func hashTableFind(predicate: GHRFunc?, userData: gpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/hashtable\/hashtableforeach(func:userdata:)","title":"func hashTableForeach(func: GHFunc?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/hashtable\/hashtableforeachremove(func:userdata:)","title":"func hashTableForeachRemove(func: GHRFunc?, userData: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/glib\/hashtable\/hashtableforeachsteal(func:userdata:)","title":"func hashTableForeachSteal(func: GHRFunc?, userData: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/glib\/hashtable\/hashtablegetkeysasptrarray()","title":"func hashTableGetKeysAsPtrArray() -> ReferenceArrayRef<gpointer>!","type":"method"},{"path":"\/documentation\/glib\/hashtable\/hashtablegetvaluesasptrarray()","title":"func hashTableGetValuesAsPtrArray() -> ReferenceArrayRef<gpointer>!","type":"method"},{"path":"\/documentation\/glib\/hashtable\/hashtableinsert(key:value:)","title":"func hashTableInsert(key: gpointer?, value: gpointer?) -> Bool","type":"method"},{"path":"\/documentation\/glib\/hashtable\/hashtablelookup(key:)","title":"func hashTableLookup(key: gconstpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/hashtable\/hashtablelookupextended(lookupkey:origkey:value:)","title":"func hashTableLookupExtended(lookupKey: gconstpointer?, origKey: UnsafeMutablePointer<gpointer?>?, value: UnsafeMutablePointer<gpointer?>?) -> Bool","type":"method"},{"path":"\/documentation\/glib\/hashtable\/hashtablenewsimilar()","title":"func hashTableNewSimilar() -> HashTableRef!","type":"method"},{"path":"\/documentation\/glib\/hashtable\/hashtableref()","title":"func hashTableRef() -> HashTableRef!","type":"method"},{"path":"\/documentation\/glib\/hashtable\/hashtableremove(key:)","title":"func hashTableRemove(key: gconstpointer?) -> Bool","type":"method"},{"path":"\/documentation\/glib\/hashtable\/hashtableremoveall()","title":"func hashTableRemoveAll()","type":"method"},{"path":"\/documentation\/glib\/hashtable\/hashtablereplace(key:value:)","title":"func hashTableReplace(key: gpointer?, value: gpointer?) -> Bool","type":"method"},{"path":"\/documentation\/glib\/hashtable\/hashtablesize()","title":"func hashTableSize() -> Int","type":"method"},{"path":"\/documentation\/glib\/hashtable\/hashtablesteal(key:)","title":"func hashTableSteal(key: gconstpointer?) -> Bool","type":"method"},{"path":"\/documentation\/glib\/hashtable\/hashtablestealall()","title":"func hashTableStealAll()","type":"method"},{"path":"\/documentation\/glib\/hashtable\/hashtablestealallkeys()","title":"func hashTableStealAllKeys() -> ReferenceArrayRef<gpointer>!","type":"method"},{"path":"\/documentation\/glib\/hashtable\/hashtablestealallvalues()","title":"func hashTableStealAllValues() -> ReferenceArrayRef<gpointer>!","type":"method"},{"path":"\/documentation\/glib\/hashtable\/hashtablestealextended(lookupkey:stolenkey:stolenvalue:)","title":"func hashTableStealExtended(lookupKey: gconstpointer?, stolenKey: UnsafeMutablePointer<gpointer?>?, stolenValue: UnsafeMutablePointer<gpointer?>?) -> Bool","type":"method"},{"path":"\/documentation\/glib\/hashtable\/hashtableunref()","title":"func hashTableUnref()","type":"method"},{"path":"\/documentation\/glib\/hashtable\/insert(key:value:)","title":"func insert(key: gpointer?, value: gpointer?) -> Bool","type":"method"},{"path":"\/documentation\/glib\/hashtable\/lookup(key:)","title":"func lookup(key: gconstpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/hashtable\/lookupextended(lookupkey:origkey:value:)","title":"func lookupExtended(lookupKey: gconstpointer?, origKey: UnsafeMutablePointer<gpointer?>?, value: UnsafeMutablePointer<gpointer?>?) -> Bool","type":"method"},{"path":"\/documentation\/glib\/hashtable\/newsimilar()","title":"func newSimilar() -> HashTableRef!","type":"method"},{"path":"\/documentation\/glib\/hashtable\/ref()","title":"func ref() -> HashTableRef!","type":"method"},{"path":"\/documentation\/glib\/hashtable\/remove(key:)","title":"func remove(key: gconstpointer?) -> Bool","type":"method"},{"path":"\/documentation\/glib\/hashtable\/removeall()","title":"func removeAll()","type":"method"},{"path":"\/documentation\/glib\/hashtable\/replace(key:value:)","title":"func replace(key: gpointer?, value: gpointer?) -> Bool","type":"method"},{"path":"\/documentation\/glib\/hashtable\/size()","title":"func size() -> Int","type":"method"},{"path":"\/documentation\/glib\/hashtable\/steal(key:)","title":"func steal(key: gconstpointer?) -> Bool","type":"method"},{"path":"\/documentation\/glib\/hashtable\/stealall()","title":"func stealAll()","type":"method"},{"path":"\/documentation\/glib\/hashtable\/stealallkeys()","title":"func stealAllKeys() -> ReferenceArrayRef<gpointer>!","type":"method"},{"path":"\/documentation\/glib\/hashtable\/stealallvalues()","title":"func stealAllValues() -> ReferenceArrayRef<gpointer>!","type":"method"},{"path":"\/documentation\/glib\/hashtable\/stealextended(lookupkey:stolenkey:stolenvalue:)","title":"func stealExtended(lookupKey: gconstpointer?, stolenKey: UnsafeMutablePointer<gpointer?>?, stolenValue: UnsafeMutablePointer<gpointer?>?) -> Bool","type":"method"},{"path":"\/documentation\/glib\/hashtable\/unref()","title":"func unref()","type":"method"}],"path":"\/documentation\/glib\/hashtable\/hashtableprotocol-implementations","title":"HashTableProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/hashtable","title":"HashTable","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/hashtableiter\/init(_:)-1ik1y","title":"init!(UnsafePointer<GHashTableIter>?)","type":"init"},{"path":"\/documentation\/glib\/hashtableiter\/init(_:)-3gd5j","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/hashtableiter\/init(_:)-5qb6f","title":"init!(UnsafeMutablePointer<GHashTableIter>?)","type":"init"},{"path":"\/documentation\/glib\/hashtableiter\/init(_:)-6dcm9","title":"init(UnsafePointer<GHashTableIter>)","type":"init"},{"path":"\/documentation\/glib\/hashtableiter\/init(_:)-q03p","title":"init(UnsafeMutablePointer<GHashTableIter>)","type":"init"},{"path":"\/documentation\/glib\/hashtableiter\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/hashtableiter\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/hashtableiter\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/hashtableiter\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/hashtableiter\/init(raw:)-4tvv5","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/hashtableiter\/init(raw:)-9utdg","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/hashtableiter\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GHashTableIter>)","type":"init"},{"path":"\/documentation\/glib\/hashtableiter\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/hashtableiter\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/hashtableiter\/init(retainingraw:)-4ti26","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/hashtableiter\/init(retainingraw:)-g7kx","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/hashtableiter\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/hashtableiter\/hashtable","title":"var hashTable: HashTableRef!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/hashtableiter\/gethashtable()","title":"func getHashTable() -> HashTableRef!","type":"method"},{"path":"\/documentation\/glib\/hashtableiter\/init_(hashtable:)","title":"func init_<HashTableT>(hashTable: HashTableT)","type":"method"},{"path":"\/documentation\/glib\/hashtableiter\/next(key:value:)","title":"func next(key: UnsafeMutablePointer<gpointer?>?, value: UnsafeMutablePointer<gpointer?>?) -> Bool","type":"method"},{"path":"\/documentation\/glib\/hashtableiter\/remove()","title":"func remove()","type":"method"},{"path":"\/documentation\/glib\/hashtableiter\/replace(value:)","title":"func replace(value: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/hashtableiter\/steal()","title":"func steal()","type":"method"}],"path":"\/documentation\/glib\/hashtableiter\/hashtableiterprotocol-implementations","title":"HashTableIterProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/hashtableiter","title":"HashTableIter","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/hmac\/init(_:)-1tdha","title":"init!(UnsafePointer<GHmac>?)","type":"init"},{"path":"\/documentation\/glib\/hmac\/init(_:)-4ibh","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/hmac\/init(_:)-5scog","title":"init!(UnsafeMutablePointer<GHmac>?)","type":"init"},{"path":"\/documentation\/glib\/hmac\/init(_:)-7h34m","title":"init(UnsafePointer<GHmac>)","type":"init"},{"path":"\/documentation\/glib\/hmac\/init(_:)-9pz0g","title":"init(UnsafeMutablePointer<GHmac>)","type":"init"},{"path":"\/documentation\/glib\/hmac\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/hmac\/init(digesttype:key:keylen:)","title":"init(digestType: GChecksumType, key: UnsafePointer<guchar>!, keyLen: Int)","type":"init"},{"path":"\/documentation\/glib\/hmac\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/hmac\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/hmac\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/hmac\/init(raw:)-60yk2","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/hmac\/init(raw:)-9vt19","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/hmac\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GHmac>)","type":"init"},{"path":"\/documentation\/glib\/hmac\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/hmac\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/hmac\/init(retainingraw:)-2v6g2","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/hmac\/init(retainingraw:)-6q0x3","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/hmac\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/hmac\/hmac_ptr","title":"var hmac_ptr: UnsafeMutablePointer<GHmac>!","type":"property"},{"path":"\/documentation\/glib\/hmac\/string","title":"var string: String!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/hmac\/copy()","title":"func copy() -> HmacRef!","type":"method"},{"path":"\/documentation\/glib\/hmac\/getdigest(buffer:digestlen:)","title":"func getDigest(buffer: UnsafeMutablePointer<guint8>!, digestLen: UnsafeMutablePointer<gsize>!)","type":"method"},{"path":"\/documentation\/glib\/hmac\/getstring()","title":"func getString() -> String!","type":"method"},{"path":"\/documentation\/glib\/hmac\/ref()","title":"func ref() -> HmacRef!","type":"method"},{"path":"\/documentation\/glib\/hmac\/unref()","title":"func unref()","type":"method"},{"path":"\/documentation\/glib\/hmac\/update(data:length:)","title":"func update(data: UnsafePointer<guchar>!, length: gssize)","type":"method"}],"path":"\/documentation\/glib\/hmac\/hmacprotocol-implementations","title":"HmacProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/hmac","title":"Hmac","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/hook\/init(_:)-3bage","title":"init!(UnsafeMutablePointer<GHook>?)","type":"init"},{"path":"\/documentation\/glib\/hook\/init(_:)-3mwv2","title":"init(UnsafePointer<GHook>)","type":"init"},{"path":"\/documentation\/glib\/hook\/init(_:)-4lbvh","title":"init(UnsafeMutablePointer<GHook>)","type":"init"},{"path":"\/documentation\/glib\/hook\/init(_:)-7qqvg","title":"init!(UnsafePointer<GHook>?)","type":"init"},{"path":"\/documentation\/glib\/hook\/init(_:)-xoxv","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/hook\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/hook\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/hook\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/hook\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/hook\/init(raw:)-2oent","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/hook\/init(raw:)-6j9bw","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/hook\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GHook>)","type":"init"},{"path":"\/documentation\/glib\/hook\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/hook\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/hook\/init(retainingraw:)-4ocsl","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/hook\/init(retainingraw:)-5lg7a","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/hook\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/hook\/alloc(hooklist:)","title":"static func alloc<HookListT>(hookList: HookListT) -> Hook!","type":"method"},{"path":"\/documentation\/glib\/hook\/find(hooklist:needvalids:func:data:)","title":"static func find<HookListT>(hookList: HookListT, needValids: Bool, func: GHookFindFunc?, data: gpointer?) -> Hook!","type":"method"},{"path":"\/documentation\/glib\/hook\/finddata(hooklist:needvalids:data:)","title":"static func findData<HookListT>(hookList: HookListT, needValids: Bool, data: gpointer?) -> Hook!","type":"method"},{"path":"\/documentation\/glib\/hook\/findfunc(hooklist:needvalids:func:)","title":"static func findFunc<HookListT>(hookList: HookListT, needValids: Bool, func: gpointer?) -> Hook!","type":"method"},{"path":"\/documentation\/glib\/hook\/findfuncdata(hooklist:needvalids:func:data:)","title":"static func findFuncData<HookListT>(hookList: HookListT, needValids: Bool, func: gpointer!, data: gpointer?) -> Hook!","type":"method"},{"path":"\/documentation\/glib\/hook\/firstvalid(hooklist:maybeincall:)","title":"static func firstValid<HookListT>(hookList: HookListT, mayBeInCall: Bool) -> Hook!","type":"method"},{"path":"\/documentation\/glib\/hook\/get(hooklist:hookid:)","title":"static func get<HookListT>(hookList: HookListT, hookID: Int) -> Hook!","type":"method"},{"path":"\/documentation\/glib\/hook\/nextvalid(hooklist:hook:maybeincall:)","title":"static func nextValid<HookListT, HookT>(hookList: HookListT, hook: HookT, mayBeInCall: Bool) -> Hook!","type":"method"},{"path":"\/documentation\/glib\/hook\/ref(hooklist:hook:)","title":"static func ref<HookListT, HookT>(hookList: HookListT, hook: HookT) -> Hook!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/hook\/data","title":"var data: gpointer?","type":"property"},{"path":"\/documentation\/glib\/hook\/destroy","title":"var destroy: GDestroyNotify!","type":"property"},{"path":"\/documentation\/glib\/hook\/flags","title":"var flags: guint","type":"property"},{"path":"\/documentation\/glib\/hook\/func","title":"var `func`: gpointer?","type":"property"},{"path":"\/documentation\/glib\/hook\/hookid","title":"var hookID: gulong","type":"property"},{"path":"\/documentation\/glib\/hook\/next","title":"var next: HookRef!","type":"property"},{"path":"\/documentation\/glib\/hook\/prev","title":"var prev: HookRef!","type":"property"},{"path":"\/documentation\/glib\/hook\/refcount","title":"var refCount: guint","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/hook\/compareids(sibling:)","title":"func compareIDs<HookT>(sibling: HookT) -> Int","type":"method"},{"path":"\/documentation\/glib\/hook\/destroylink(hooklist:)","title":"func destroyLink<HookListT>(hookList: HookListT)","type":"method"},{"path":"\/documentation\/glib\/hook\/free(hooklist:)","title":"func free<HookListT>(hookList: HookListT)","type":"method"},{"path":"\/documentation\/glib\/hook\/hookdestroylink(hooklist:)","title":"func hookDestroyLink<HookListT>(hookList: HookListT)","type":"method"},{"path":"\/documentation\/glib\/hook\/hookfree(hooklist:)","title":"func hookFree<HookListT>(hookList: HookListT)","type":"method"},{"path":"\/documentation\/glib\/hook\/hookinsertbefore(hooklist:hook:)","title":"func hookInsertBefore<HookListT, HookT>(hookList: HookListT, hook: HookT)","type":"method"},{"path":"\/documentation\/glib\/hook\/hookinsertsorted(hooklist:func:)","title":"func hookInsertSorted<HookListT>(hookList: HookListT, func: GHookCompareFunc?)","type":"method"},{"path":"\/documentation\/glib\/hook\/hookprepend(hooklist:)","title":"func hookPrepend<HookListT>(hookList: HookListT)","type":"method"},{"path":"\/documentation\/glib\/hook\/hookunref(hooklist:)","title":"func hookUnref<HookListT>(hookList: HookListT)","type":"method"},{"path":"\/documentation\/glib\/hook\/insertbefore(hooklist:hook:)","title":"func insertBefore<HookListT, HookT>(hookList: HookListT, hook: HookT)","type":"method"},{"path":"\/documentation\/glib\/hook\/insertsorted(hooklist:func:)","title":"func insertSorted<HookListT>(hookList: HookListT, func: GHookCompareFunc?)","type":"method"},{"path":"\/documentation\/glib\/hook\/nextvalid(hooklist:maybeincall:)","title":"func nextValid<HookListT>(hookList: HookListT, mayBeInCall: Bool) -> HookRef!","type":"method"},{"path":"\/documentation\/glib\/hook\/prepend(hooklist:)","title":"func prepend<HookListT>(hookList: HookListT)","type":"method"},{"path":"\/documentation\/glib\/hook\/ref(hooklist:)","title":"func ref<HookListT>(hookList: HookListT) -> HookRef!","type":"method"},{"path":"\/documentation\/glib\/hook\/unref(hooklist:)","title":"func unref<HookListT>(hookList: HookListT)","type":"method"}],"path":"\/documentation\/glib\/hook\/hookprotocol-implementations","title":"HookProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/hook","title":"Hook","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/hooklist\/init(_:)-2n0iu","title":"init(UnsafeMutablePointer<GHookList>)","type":"init"},{"path":"\/documentation\/glib\/hooklist\/init(_:)-425z8","title":"init(UnsafePointer<GHookList>)","type":"init"},{"path":"\/documentation\/glib\/hooklist\/init(_:)-5ywy2","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/hooklist\/init(_:)-7unea","title":"init!(UnsafePointer<GHookList>?)","type":"init"},{"path":"\/documentation\/glib\/hooklist\/init(_:)-qbc6","title":"init!(UnsafeMutablePointer<GHookList>?)","type":"init"},{"path":"\/documentation\/glib\/hooklist\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/hooklist\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/hooklist\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/hooklist\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/hooklist\/init(raw:)-4i94f","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/hooklist\/init(raw:)-nek4","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/hooklist\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GHookList>)","type":"init"},{"path":"\/documentation\/glib\/hooklist\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/hooklist\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/hooklist\/init(retainingraw:)-1a31w","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/hooklist\/init(retainingraw:)-yvtr","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/hooklist\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/hooklist\/dummy","title":"var dummy: (gpointer?, gpointer?)","type":"property"},{"path":"\/documentation\/glib\/hooklist\/dummy3","title":"var dummy3: gpointer?","type":"property"},{"path":"\/documentation\/glib\/hooklist\/finalizehook","title":"var finalizeHook: GHookFinalizeFunc!","type":"property"},{"path":"\/documentation\/glib\/hooklist\/hooksize","title":"var hookSize: guint","type":"property"},{"path":"\/documentation\/glib\/hooklist\/hooks","title":"var hooks: HookRef!","type":"property"},{"path":"\/documentation\/glib\/hooklist\/issetup","title":"var isSetup: guint","type":"property"},{"path":"\/documentation\/glib\/hooklist\/seqid","title":"var seqID: gulong","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/hooklist\/clear()","title":"func clear()","type":"method"},{"path":"\/documentation\/glib\/hooklist\/hookdestroy(hookid:)","title":"func hookDestroy(hookID: Int) -> Bool","type":"method"},{"path":"\/documentation\/glib\/hooklist\/hookdestroylink(hook:)","title":"func hookDestroyLink<HookT>(hook: HookT)","type":"method"},{"path":"\/documentation\/glib\/hooklist\/hookfree(hook:)","title":"func hookFree<HookT>(hook: HookT)","type":"method"},{"path":"\/documentation\/glib\/hooklist\/hookinsertbefore(sibling:hook:)","title":"func hookInsertBefore<HookT>(sibling: HookT?, hook: HookT)","type":"method"},{"path":"\/documentation\/glib\/hooklist\/hookinsertsorted(hook:func:)","title":"func hookInsertSorted<HookT>(hook: HookT, func: GHookCompareFunc?)","type":"method"},{"path":"\/documentation\/glib\/hooklist\/hookprepend(hook:)","title":"func hookPrepend<HookT>(hook: HookT)","type":"method"},{"path":"\/documentation\/glib\/hooklist\/hookunref(hook:)","title":"func hookUnref<HookT>(hook: HookT)","type":"method"},{"path":"\/documentation\/glib\/hooklist\/init_(hooksize:)","title":"func init_(hookSize: Int)","type":"method"},{"path":"\/documentation\/glib\/hooklist\/invoke(mayrecurse:)","title":"func invoke(mayRecurse: Bool)","type":"method"},{"path":"\/documentation\/glib\/hooklist\/invokecheck(mayrecurse:)","title":"func invokeCheck(mayRecurse: Bool)","type":"method"},{"path":"\/documentation\/glib\/hooklist\/marshal(mayrecurse:marshaller:marshaldata:)","title":"func marshal(mayRecurse: Bool, marshaller: GHookMarshaller?, marshalData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/hooklist\/marshalcheck(mayrecurse:marshaller:marshaldata:)","title":"func marshalCheck(mayRecurse: Bool, marshaller: GHookCheckMarshaller?, marshalData: gpointer?)","type":"method"}],"path":"\/documentation\/glib\/hooklist\/hooklistprotocol-implementations","title":"HookListProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/hooklist","title":"HookList","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/iconv\/init(_:)-36lo2","title":"init!(UnsafePointer<GIConv>?)","type":"init"},{"path":"\/documentation\/glib\/iconv\/init(_:)-42ra9","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/iconv\/init(_:)-486kr","title":"init(UnsafePointer<GIConv>)","type":"init"},{"path":"\/documentation\/glib\/iconv\/init(_:)-50npq","title":"init!(UnsafeMutablePointer<GIConv>?)","type":"init"},{"path":"\/documentation\/glib\/iconv\/init(_:)-az8h","title":"init(UnsafeMutablePointer<GIConv>)","type":"init"},{"path":"\/documentation\/glib\/iconv\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/iconv\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/iconv\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/iconv\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/iconv\/init(raw:)-7ohuk","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/iconv\/init(raw:)-98zw","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/iconv\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GIConv>)","type":"init"},{"path":"\/documentation\/glib\/iconv\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/iconv\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/iconv\/init(retainingraw:)-3u06z","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/iconv\/init(retainingraw:)-6gka4","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/iconv\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/iconv\/close()","title":"func close() -> Int","type":"method"}],"path":"\/documentation\/glib\/iconv\/iconvprotocol-implementations","title":"IConvProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/iconv","title":"IConv","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/iochannel\/init(_:)-2xwdx","title":"init(UnsafePointer<GIOChannel>)","type":"init"},{"path":"\/documentation\/glib\/iochannel\/init(_:)-41v5k","title":"init(UnsafeMutablePointer<GIOChannel>)","type":"init"},{"path":"\/documentation\/glib\/iochannel\/init(_:)-422v0","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/iochannel\/init(_:)-5g0ti","title":"init!(UnsafePointer<GIOChannel>?)","type":"init"},{"path":"\/documentation\/glib\/iochannel\/init(_:)-8m582","title":"init!(UnsafeMutablePointer<GIOChannel>?)","type":"init"},{"path":"\/documentation\/glib\/iochannel\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/iochannel\/init(file:mode:)","title":"init(file: UnsafePointer<gchar>!, mode: UnsafePointer<gchar>!) throws","type":"init"},{"path":"\/documentation\/glib\/iochannel\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/iochannel\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/iochannel\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/iochannel\/init(raw:)-7ezl5","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/iochannel\/init(raw:)-9zbzs","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/iochannel\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GIOChannel>)","type":"init"},{"path":"\/documentation\/glib\/iochannel\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/iochannel\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/iochannel\/init(retainingraw:)-1t1k","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/iochannel\/init(retainingraw:)-6wenq","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/iochannel\/init(unix:)","title":"init(unix: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/iochannel\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/iochannel\/new(file:mode:)","title":"static func new(file: UnsafePointer<gchar>!, mode: UnsafePointer<gchar>!) throws -> IOChannel!","type":"method"},{"path":"\/documentation\/glib\/iochannel\/unixnew(unix:)","title":"static func unixNew(unix: Int) -> IOChannel!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/iochannel\/buffercondition","title":"var bufferCondition: IOCondition","type":"property"},{"path":"\/documentation\/glib\/iochannel\/buffersize","title":"var bufferSize: Int","type":"property"},{"path":"\/documentation\/glib\/iochannel\/buffered","title":"var buffered: Bool","type":"property"},{"path":"\/documentation\/glib\/iochannel\/closeonunref","title":"var closeOnUnref: Bool","type":"property"},{"path":"\/documentation\/glib\/iochannel\/encoding","title":"var encoding: String!","type":"property"},{"path":"\/documentation\/glib\/iochannel\/flags","title":"var flags: IOFlags","type":"property"},{"path":"\/documentation\/glib\/iochannel\/io_channel_ptr","title":"var io_channel_ptr: UnsafeMutablePointer<GIOChannel>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/iochannel\/close()","title":"func close()","type":"method"},{"path":"\/documentation\/glib\/iochannel\/flush()","title":"func flush() throws -> GIOStatus","type":"method"},{"path":"\/documentation\/glib\/iochannel\/getbuffercondition()","title":"func getBufferCondition() -> IOCondition","type":"method"},{"path":"\/documentation\/glib\/iochannel\/getbuffersize()","title":"func getBufferSize() -> Int","type":"method"},{"path":"\/documentation\/glib\/iochannel\/getbuffered()","title":"func getBuffered() -> Bool","type":"method"},{"path":"\/documentation\/glib\/iochannel\/getcloseonunref()","title":"func getCloseOnUnref() -> Bool","type":"method"},{"path":"\/documentation\/glib\/iochannel\/getencoding()","title":"func getEncoding() -> String!","type":"method"},{"path":"\/documentation\/glib\/iochannel\/getflags()","title":"func getFlags() -> IOFlags","type":"method"},{"path":"\/documentation\/glib\/iochannel\/getlineterm(length:)","title":"func getLineTerm(length: UnsafeMutablePointer<gint>!) -> String!","type":"method"},{"path":"\/documentation\/glib\/iochannel\/init_()","title":"func init_()","type":"method"},{"path":"\/documentation\/glib\/iochannel\/ioaddwatch(condition:func:userdata:)","title":"func ioAddWatch(condition: IOCondition, func: GIOFunc?, userData: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/glib\/iochannel\/ioaddwatchfull(priority:condition:func:userdata:notify:)","title":"func ioAddWatchFull(priority: Int, condition: IOCondition, func: GIOFunc?, userData: gpointer?, notify: GDestroyNotify?) -> Int","type":"method"},{"path":"\/documentation\/glib\/iochannel\/iocreatewatch(condition:)","title":"func ioCreateWatch(condition: IOCondition) -> SourceRef!","type":"method"},{"path":"\/documentation\/glib\/iochannel\/read(buf:count:bytesread:)","title":"func read(buf: UnsafeMutablePointer<gchar>!, count: Int, bytesRead: UnsafeMutablePointer<gsize>!) -> GIOError","type":"method"},{"path":"\/documentation\/glib\/iochannel\/readchars(buf:count:bytesread:)","title":"func readChars(buf: UnsafeMutablePointer<gchar>!, count: Int, bytesRead: UnsafeMutablePointer<gsize>!) throws -> GIOStatus","type":"method"},{"path":"\/documentation\/glib\/iochannel\/readline(strreturn:length:terminatorpos:)","title":"func readLine(strReturn: UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!, length: UnsafeMutablePointer<gsize>!, terminatorPos: UnsafeMutablePointer<gsize>!) throws -> GIOStatus","type":"method"},{"path":"\/documentation\/glib\/iochannel\/readlinestring(buffer:terminatorpos:)","title":"func readLineString<StringTypeT>(buffer: StringTypeT, terminatorPos: UnsafeMutablePointer<gsize>?) throws -> GIOStatus","type":"method"},{"path":"\/documentation\/glib\/iochannel\/readtoend(strreturn:length:)","title":"func readToEnd(strReturn: UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!, length: UnsafeMutablePointer<gsize>!) throws -> GIOStatus","type":"method"},{"path":"\/documentation\/glib\/iochannel\/readunichar(thechar:)","title":"func readUnichar(thechar: UnsafeMutablePointer<gunichar>!) throws -> GIOStatus","type":"method"},{"path":"\/documentation\/glib\/iochannel\/ref()","title":"func ref() -> IOChannelRef!","type":"method"},{"path":"\/documentation\/glib\/iochannel\/seek(offset:type:)","title":"func seek(offset: gint64, type: GSeekType) -> GIOError","type":"method"},{"path":"\/documentation\/glib\/iochannel\/seekposition(offset:type:)","title":"func seekPosition(offset: gint64, type: GSeekType) throws -> GIOStatus","type":"method"},{"path":"\/documentation\/glib\/iochannel\/set(buffered:)","title":"func set(buffered: Bool)","type":"method"},{"path":"\/documentation\/glib\/iochannel\/set(encoding:)","title":"func set(encoding: UnsafePointer<gchar>?) throws -> GIOStatus","type":"method"},{"path":"\/documentation\/glib\/iochannel\/set(flags:)","title":"func set(flags: IOFlags) throws -> GIOStatus","type":"method"},{"path":"\/documentation\/glib\/iochannel\/set(lineterm:length:)","title":"func set(lineTerm: UnsafePointer<gchar>?, length: Int)","type":"method"},{"path":"\/documentation\/glib\/iochannel\/setbuffer(size:)","title":"func setBuffer(size: Int)","type":"method"},{"path":"\/documentation\/glib\/iochannel\/setcloseonunref(doclose:)","title":"func setCloseOnUnref(doClose: Bool)","type":"method"},{"path":"\/documentation\/glib\/iochannel\/shutdown(flush:)","title":"func shutdown(flush: Bool) throws -> GIOStatus","type":"method"},{"path":"\/documentation\/glib\/iochannel\/unixgetfd()","title":"func unixGetFd() -> Int","type":"method"},{"path":"\/documentation\/glib\/iochannel\/unref()","title":"func unref()","type":"method"},{"path":"\/documentation\/glib\/iochannel\/write(buf:count:byteswritten:)","title":"func write(buf: UnsafePointer<gchar>!, count: Int, bytesWritten: UnsafeMutablePointer<gsize>!) -> GIOError","type":"method"},{"path":"\/documentation\/glib\/iochannel\/writechars(buf:count:byteswritten:)","title":"func writeChars(buf: UnsafePointer<gchar>!, count: gssize, bytesWritten: UnsafeMutablePointer<gsize>!) throws -> GIOStatus","type":"method"},{"path":"\/documentation\/glib\/iochannel\/writeunichar(thechar:)","title":"func writeUnichar(thechar: gunichar) throws -> GIOStatus","type":"method"}],"path":"\/documentation\/glib\/iochannel\/iochannelprotocol-implementations","title":"IOChannelProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/iochannel","title":"IOChannel","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/iofuncs\/init(_:)-2njib","title":"init(UnsafePointer<GIOFuncs>)","type":"init"},{"path":"\/documentation\/glib\/iofuncs\/init(_:)-410f","title":"init!(UnsafePointer<GIOFuncs>?)","type":"init"},{"path":"\/documentation\/glib\/iofuncs\/init(_:)-59bbl","title":"init(UnsafeMutablePointer<GIOFuncs>)","type":"init"},{"path":"\/documentation\/glib\/iofuncs\/init(_:)-5z7x7","title":"init!(UnsafeMutablePointer<GIOFuncs>?)","type":"init"},{"path":"\/documentation\/glib\/iofuncs\/init(_:)-lrlv","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/iofuncs\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/iofuncs\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/iofuncs\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/iofuncs\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/iofuncs\/init(raw:)-7y4iy","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/iofuncs\/init(raw:)-8v7zj","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/iofuncs\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GIOFuncs>)","type":"init"},{"path":"\/documentation\/glib\/iofuncs\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/iofuncs\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/iofuncs\/init(retainingraw:)-2xwv","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/iofuncs\/init(retainingraw:)-6xjgx","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/iofuncs\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"}],"path":"\/documentation\/glib\/iofuncs","title":"IOFuncs","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/keyfile\/init()","title":"init()","type":"init"},{"path":"\/documentation\/glib\/keyfile\/init(_:)-1hpxa","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/keyfile\/init(_:)-2cylo","title":"init(UnsafePointer<GKeyFile>)","type":"init"},{"path":"\/documentation\/glib\/keyfile\/init(_:)-55cb","title":"init!(UnsafeMutablePointer<GKeyFile>?)","type":"init"},{"path":"\/documentation\/glib\/keyfile\/init(_:)-6cxh2","title":"init(UnsafeMutablePointer<GKeyFile>)","type":"init"},{"path":"\/documentation\/glib\/keyfile\/init(_:)-7e0t2","title":"init!(UnsafePointer<GKeyFile>?)","type":"init"},{"path":"\/documentation\/glib\/keyfile\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/keyfile\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/keyfile\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/keyfile\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/keyfile\/init(raw:)-1fvqt","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/keyfile\/init(raw:)-9irr5","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/keyfile\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GKeyFile>)","type":"init"},{"path":"\/documentation\/glib\/keyfile\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/keyfile\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/keyfile\/init(retainingraw:)-3tfsd","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/keyfile\/init(retainingraw:)-9y6hj","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/keyfile\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/keyfile\/key_file_ptr","title":"var key_file_ptr: UnsafeMutablePointer<GKeyFile>!","type":"property"},{"path":"\/documentation\/glib\/keyfile\/startgroup","title":"var startGroup: String!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/keyfile\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/glib\/keyfile\/getboolean(groupname:key:)","title":"func getBoolean(groupName: UnsafePointer<gchar>!, key: UnsafePointer<gchar>!) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/keyfile\/getbooleanlist(groupname:key:length:)","title":"func getBooleanList(groupName: UnsafePointer<gchar>!, key: UnsafePointer<gchar>!, length: UnsafeMutablePointer<gsize>!) throws -> UnsafeMutablePointer<gboolean>!","type":"method"},{"path":"\/documentation\/glib\/keyfile\/getcomment(groupname:key:)","title":"func getComment(groupName: UnsafePointer<gchar>?, key: UnsafePointer<gchar>?) throws -> String!","type":"method"},{"path":"\/documentation\/glib\/keyfile\/getdouble(groupname:key:)","title":"func getDouble(groupName: UnsafePointer<gchar>!, key: UnsafePointer<gchar>!) throws -> Double","type":"method"},{"path":"\/documentation\/glib\/keyfile\/getdoublelist(groupname:key:length:)","title":"func getDoubleList(groupName: UnsafePointer<gchar>!, key: UnsafePointer<gchar>!, length: UnsafeMutablePointer<gsize>!) throws -> UnsafeMutablePointer<gdouble>!","type":"method"},{"path":"\/documentation\/glib\/keyfile\/getgroups(length:)","title":"func getGroups(length: UnsafeMutablePointer<gsize>!) -> UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!","type":"method"},{"path":"\/documentation\/glib\/keyfile\/getint64(groupname:key:)","title":"func getInt64(groupName: UnsafePointer<gchar>!, key: UnsafePointer<gchar>!) throws -> gint64","type":"method"},{"path":"\/documentation\/glib\/keyfile\/getinteger(groupname:key:)","title":"func getInteger(groupName: UnsafePointer<gchar>!, key: UnsafePointer<gchar>!) throws -> Int","type":"method"},{"path":"\/documentation\/glib\/keyfile\/getintegerlist(groupname:key:length:)","title":"func getIntegerList(groupName: UnsafePointer<gchar>!, key: UnsafePointer<gchar>!, length: UnsafeMutablePointer<gsize>!) throws -> UnsafeMutablePointer<gint>!","type":"method"},{"path":"\/documentation\/glib\/keyfile\/getkeys(groupname:length:)","title":"func getKeys(groupName: UnsafePointer<gchar>!, length: UnsafeMutablePointer<gsize>!) throws -> UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!","type":"method"},{"path":"\/documentation\/glib\/keyfile\/getlocaleforkey(groupname:key:locale:)","title":"func getLocaleForKey(groupName: UnsafePointer<gchar>!, key: UnsafePointer<gchar>!, locale: UnsafePointer<gchar>?) -> String!","type":"method"},{"path":"\/documentation\/glib\/keyfile\/getlocalestring(groupname:key:locale:)","title":"func getLocaleString(groupName: UnsafePointer<gchar>!, key: UnsafePointer<gchar>!, locale: UnsafePointer<gchar>?) throws -> String!","type":"method"},{"path":"\/documentation\/glib\/keyfile\/getlocalestringlist(groupname:key:locale:length:)","title":"func getLocaleStringList(groupName: UnsafePointer<gchar>!, key: UnsafePointer<gchar>!, locale: UnsafePointer<gchar>?, length: UnsafeMutablePointer<gsize>!) throws -> UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!","type":"method"},{"path":"\/documentation\/glib\/keyfile\/getstartgroup()","title":"func getStartGroup() -> String!","type":"method"},{"path":"\/documentation\/glib\/keyfile\/getstring(groupname:key:)","title":"func getString(groupName: UnsafePointer<gchar>!, key: UnsafePointer<gchar>!) throws -> String!","type":"method"},{"path":"\/documentation\/glib\/keyfile\/getstringlist(groupname:key:length:)","title":"func getStringList(groupName: UnsafePointer<gchar>!, key: UnsafePointer<gchar>!, length: UnsafeMutablePointer<gsize>!) throws -> UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!","type":"method"},{"path":"\/documentation\/glib\/keyfile\/getuint64(groupname:key:)","title":"func getUint64(groupName: UnsafePointer<gchar>!, key: UnsafePointer<gchar>!) throws -> guint64","type":"method"},{"path":"\/documentation\/glib\/keyfile\/getvalue(groupname:key:)","title":"func getValue(groupName: UnsafePointer<gchar>!, key: UnsafePointer<gchar>!) throws -> String!","type":"method"},{"path":"\/documentation\/glib\/keyfile\/hasgroup(groupname:)","title":"func hasGroup(groupName: UnsafePointer<gchar>!) -> Bool","type":"method"},{"path":"\/documentation\/glib\/keyfile\/haskey(groupname:key:)","title":"func hasKey(groupName: UnsafePointer<gchar>!, key: UnsafePointer<gchar>!) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/keyfile\/loadfrom(bytes:flags:)","title":"func loadFrom<BytesT>(bytes: BytesT, flags: KeyFileFlags) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/keyfile\/loadfrom(data:length:flags:)","title":"func loadFrom(data: UnsafePointer<gchar>!, length: Int, flags: KeyFileFlags) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/keyfile\/loadfrom(file:flags:)","title":"func loadFrom(file: UnsafePointer<gchar>!, flags: KeyFileFlags) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/keyfile\/loadfromdatadirs(file:fullpath:flags:)","title":"func loadFromDataDirs(file: UnsafePointer<gchar>!, fullPath: UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!, flags: KeyFileFlags) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/keyfile\/loadfromdirs(file:searchdirs:fullpath:flags:)","title":"func loadFromDirs(file: UnsafePointer<gchar>!, searchDirs: UnsafeMutablePointer<UnsafePointer<gchar>?>!, fullPath: UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!, flags: KeyFileFlags) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/keyfile\/ref()","title":"func ref() -> KeyFileRef!","type":"method"},{"path":"\/documentation\/glib\/keyfile\/removecomment(groupname:key:)","title":"func removeComment(groupName: UnsafePointer<gchar>?, key: UnsafePointer<gchar>?) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/keyfile\/removegroup(groupname:)","title":"func removeGroup(groupName: UnsafePointer<gchar>!) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/keyfile\/removekey(groupname:key:)","title":"func removeKey(groupName: UnsafePointer<gchar>!, key: UnsafePointer<gchar>!) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/keyfile\/savetofile(filename:)","title":"func saveToFile(filename: UnsafePointer<gchar>!) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/keyfile\/setboolean(groupname:key:value:)","title":"func setBoolean(groupName: UnsafePointer<gchar>!, key: UnsafePointer<gchar>!, value: Bool)","type":"method"},{"path":"\/documentation\/glib\/keyfile\/setbooleanlist(groupname:key:list:length:)","title":"func setBooleanList(groupName: UnsafePointer<gchar>!, key: UnsafePointer<gchar>!, list: UnsafeMutablePointer<gboolean>!, length: Int)","type":"method"},{"path":"\/documentation\/glib\/keyfile\/setcomment(groupname:key:comment:)","title":"func setComment(groupName: UnsafePointer<gchar>?, key: UnsafePointer<gchar>?, comment: UnsafePointer<gchar>!) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/keyfile\/setdouble(groupname:key:value:)","title":"func setDouble(groupName: UnsafePointer<gchar>!, key: UnsafePointer<gchar>!, value: Double)","type":"method"},{"path":"\/documentation\/glib\/keyfile\/setdoublelist(groupname:key:list:length:)","title":"func setDoubleList(groupName: UnsafePointer<gchar>!, key: UnsafePointer<gchar>!, list: UnsafeMutablePointer<gdouble>!, length: Int)","type":"method"},{"path":"\/documentation\/glib\/keyfile\/setint64(groupname:key:value:)","title":"func setInt64(groupName: UnsafePointer<gchar>!, key: UnsafePointer<gchar>!, value: gint64)","type":"method"},{"path":"\/documentation\/glib\/keyfile\/setinteger(groupname:key:value:)","title":"func setInteger(groupName: UnsafePointer<gchar>!, key: UnsafePointer<gchar>!, value: Int)","type":"method"},{"path":"\/documentation\/glib\/keyfile\/setintegerlist(groupname:key:list:length:)","title":"func setIntegerList(groupName: UnsafePointer<gchar>!, key: UnsafePointer<gchar>!, list: UnsafeMutablePointer<gint>!, length: Int)","type":"method"},{"path":"\/documentation\/glib\/keyfile\/setlist(separator:)","title":"func setList(separator: gchar)","type":"method"},{"path":"\/documentation\/glib\/keyfile\/setlocalestring(groupname:key:locale:string:)","title":"func setLocaleString(groupName: UnsafePointer<gchar>!, key: UnsafePointer<gchar>!, locale: UnsafePointer<gchar>!, string: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/glib\/keyfile\/setlocalestringlist(groupname:key:locale:list:length:)","title":"func setLocaleStringList(groupName: UnsafePointer<gchar>!, key: UnsafePointer<gchar>!, locale: UnsafePointer<gchar>!, list: UnsafePointer<UnsafePointer<gchar>?>!, length: Int)","type":"method"},{"path":"\/documentation\/glib\/keyfile\/setstring(groupname:key:string:)","title":"func setString(groupName: UnsafePointer<gchar>!, key: UnsafePointer<gchar>!, string: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/glib\/keyfile\/setstringlist(groupname:key:list:length:)","title":"func setStringList(groupName: UnsafePointer<gchar>!, key: UnsafePointer<gchar>!, list: UnsafePointer<UnsafePointer<gchar>?>!, length: Int)","type":"method"},{"path":"\/documentation\/glib\/keyfile\/setuint64(groupname:key:value:)","title":"func setUint64(groupName: UnsafePointer<gchar>!, key: UnsafePointer<gchar>!, value: guint64)","type":"method"},{"path":"\/documentation\/glib\/keyfile\/setvalue(groupname:key:value:)","title":"func setValue(groupName: UnsafePointer<gchar>!, key: UnsafePointer<gchar>!, value: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/glib\/keyfile\/todata(length:)","title":"func toData(length: UnsafeMutablePointer<gsize>!) throws -> String!","type":"method"},{"path":"\/documentation\/glib\/keyfile\/unref()","title":"func unref()","type":"method"}],"path":"\/documentation\/glib\/keyfile\/keyfileprotocol-implementations","title":"KeyFileProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/keyfile","title":"KeyFile","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/list\/init(_:)-50ah4","title":"init!(UnsafeMutablePointer<GList>?)","type":"init"},{"path":"\/documentation\/glib\/list\/init(_:)-57nsm","title":"init!(UnsafePointer<GList>?)","type":"init"},{"path":"\/documentation\/glib\/list\/init(_:)-82f8p","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/list\/init(_:)-9v3vw","title":"init(UnsafeMutablePointer<GList>)","type":"init"},{"path":"\/documentation\/glib\/list\/init(_:)-9z8gs","title":"init(UnsafePointer<GList>)","type":"init"},{"path":"\/documentation\/glib\/list\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/list\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/list\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/list\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/list\/init(raw:)-6i37j","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/list\/init(raw:)-9n330","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/list\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GList>)","type":"init"},{"path":"\/documentation\/glib\/list\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/list\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/list\/init(retainingraw:)-3kc6z","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/list\/init(retainingraw:)-7f6ny","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/list\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/list\/alloc()","title":"static func alloc() -> List!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/list\/data","title":"var data: gpointer?","type":"property"},{"path":"\/documentation\/glib\/list\/next","title":"var next: ListRef!","type":"property"},{"path":"\/documentation\/glib\/list\/prev","title":"var prev: ListRef!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/list\/append(data:)","title":"func append(data: gpointer?) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/list\/concat(list2:)","title":"func concat<ListT>(list2: ListT) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/list\/copy()","title":"func copy() -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/list\/copydeep(func:userdata:)","title":"func copyDeep(func: GCopyFunc?, userData: gpointer?) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/list\/delete(link:)","title":"func delete<ListT>(link: ListT) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/list\/find(data:)","title":"func find(data: gconstpointer?) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/list\/findcustom(data:func:)","title":"func findCustom(data: gconstpointer?, func: GCompareFunc?) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/list\/first()","title":"func first() -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/list\/foreach(func:userdata:)","title":"func foreach(func: GFunc?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/list\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/glib\/list\/free1()","title":"func free1()","type":"method"},{"path":"\/documentation\/glib\/list\/freefull(freefunc:)","title":"func freeFull(freeFunc: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/glib\/list\/index(data:)","title":"func index(data: gconstpointer?) -> Int","type":"method"},{"path":"\/documentation\/glib\/list\/insert(data:position:)","title":"func insert(data: gpointer?, position: Int) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/list\/insertbefore(sibling:data:)","title":"func insertBefore<ListT>(sibling: ListT, data: gpointer?) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/list\/insertbeforelink(sibling:link:)","title":"func insertBeforeLink<ListT>(sibling: ListT?, link: ListT) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/list\/insertsorted(data:func:)","title":"func insertSorted(data: gpointer?, func: GCompareFunc?) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/list\/insertsortedwith(data:func:userdata:)","title":"func insertSortedWith(data: gpointer?, func: GCompareDataFunc?, userData: gpointer?) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/list\/last()","title":"func last() -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/list\/length()","title":"func length() -> Int","type":"method"},{"path":"\/documentation\/glib\/list\/nth(n:)","title":"func nth(n: Int) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/list\/nthdata(n:)","title":"func nthData(n: Int) -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/list\/nthprev(n:)","title":"func nthPrev(n: Int) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/list\/position(llink:)","title":"func position<ListT>(llink: ListT) -> Int","type":"method"},{"path":"\/documentation\/glib\/list\/prepend(data:)","title":"func prepend(data: gpointer?) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/list\/remove(data:)","title":"func remove(data: gconstpointer?) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/list\/removeall(data:)","title":"func removeAll(data: gconstpointer?) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/list\/removelink(llink:)","title":"func removeLink<ListT>(llink: ListT) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/list\/reverse()","title":"func reverse() -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/list\/sort(comparefunc:)","title":"func sort(compareFunc: GCompareFunc?) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/list\/sortwithdata(comparefunc:userdata:)","title":"func sortWithData(compareFunc: GCompareDataFunc?, userData: gpointer?) -> ListRef!","type":"method"}],"path":"\/documentation\/glib\/list\/listprotocol-implementations","title":"ListProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/list","title":"List","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/logfield\/init(_:)-1v5h4","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/logfield\/init(_:)-42bha","title":"init!(UnsafeMutablePointer<GLogField>?)","type":"init"},{"path":"\/documentation\/glib\/logfield\/init(_:)-4z0ra","title":"init(UnsafeMutablePointer<GLogField>)","type":"init"},{"path":"\/documentation\/glib\/logfield\/init(_:)-743cz","title":"init(UnsafePointer<GLogField>)","type":"init"},{"path":"\/documentation\/glib\/logfield\/init(_:)-84pov","title":"init!(UnsafePointer<GLogField>?)","type":"init"},{"path":"\/documentation\/glib\/logfield\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/logfield\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/logfield\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/logfield\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/logfield\/init(raw:)-52gy3","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/logfield\/init(raw:)-7p13u","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/logfield\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GLogField>)","type":"init"},{"path":"\/documentation\/glib\/logfield\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/logfield\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/logfield\/init(retainingraw:)-700cm","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/logfield\/init(retainingraw:)-v9i4","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/logfield\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/logfield\/key","title":"var key: UnsafePointer<gchar>!","type":"property"},{"path":"\/documentation\/glib\/logfield\/length","title":"var length: gssize","type":"property"},{"path":"\/documentation\/glib\/logfield\/value","title":"var value: gconstpointer?","type":"property"}],"path":"\/documentation\/glib\/logfield\/logfieldprotocol-implementations","title":"LogFieldProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/logfield","title":"LogField","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/maincontext\/init()","title":"init()","type":"init"},{"path":"\/documentation\/glib\/maincontext\/init(_:)-3p8y5","title":"init(UnsafePointer<GMainContext>)","type":"init"},{"path":"\/documentation\/glib\/maincontext\/init(_:)-3uuxm","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/maincontext\/init(_:)-8c2o3","title":"init(UnsafeMutablePointer<GMainContext>)","type":"init"},{"path":"\/documentation\/glib\/maincontext\/init(_:)-94efs","title":"init!(UnsafeMutablePointer<GMainContext>?)","type":"init"},{"path":"\/documentation\/glib\/maincontext\/init(_:)-l92c","title":"init!(UnsafePointer<GMainContext>?)","type":"init"},{"path":"\/documentation\/glib\/maincontext\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/maincontext\/init(flags:)","title":"init(flags: MainContextFlags)","type":"init"},{"path":"\/documentation\/glib\/maincontext\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/maincontext\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/maincontext\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/maincontext\/init(raw:)-2d9rd","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/maincontext\/init(raw:)-4ztnc","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/maincontext\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GMainContext>)","type":"init"},{"path":"\/documentation\/glib\/maincontext\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/maincontext\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/maincontext\/init(retainingraw:)-94kcw","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/maincontext\/init(retainingraw:)-9frgb","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/maincontext\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/maincontext\/default","title":"static var `default`: MainContext","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/maincontext\/defaultcontext()","title":"static func defaultContext() -> MainContext","type":"method"},{"path":"\/documentation\/glib\/maincontext\/default_()","title":"static func default_() -> MainContext!","type":"method"},{"path":"\/documentation\/glib\/maincontext\/getthreaddefault()","title":"static func getThreadDefault() -> MainContext!","type":"method"},{"path":"\/documentation\/glib\/maincontext\/newwith(flags:)","title":"static func newWith(flags: MainContextFlags) -> MainContext!","type":"method"},{"path":"\/documentation\/glib\/maincontext\/refthreaddefault()","title":"static func refThreadDefault() -> MainContext!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/maincontext\/isowner","title":"var isOwner: Bool","type":"property"},{"path":"\/documentation\/glib\/maincontext\/main_context_ptr","title":"var main_context_ptr: UnsafeMutablePointer<GMainContext>!","type":"property"},{"path":"\/documentation\/glib\/maincontext\/pollfunc","title":"var pollFunc: GPollFunc!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/maincontext\/acquire()","title":"func acquire() -> Bool","type":"method"},{"path":"\/documentation\/glib\/maincontext\/addpoll(fd:priority:)","title":"func addPoll<PollFDT>(fd: PollFDT, priority: Int)","type":"method"},{"path":"\/documentation\/glib\/maincontext\/check(maxpriority:fds:nfds:)","title":"func check(maxPriority: Int, fds: UnsafeMutablePointer<GPollFD>!, nFds: Int) -> Bool","type":"method"},{"path":"\/documentation\/glib\/maincontext\/dispatch()","title":"func dispatch()","type":"method"},{"path":"\/documentation\/glib\/maincontext\/findsourceby(userdata:)","title":"func findSourceBy(userData: gpointer?) -> SourceRef!","type":"method"},{"path":"\/documentation\/glib\/maincontext\/findsourcebyfuncsuserdata(funcs:userdata:)","title":"func findSourceByFuncsUserData<SourceFuncsT>(funcs: SourceFuncsT, userData: gpointer?) -> SourceRef!","type":"method"},{"path":"\/documentation\/glib\/maincontext\/findsourcebyid(sourceid:)","title":"func findSourceByID(sourceID: Int) -> SourceRef!","type":"method"},{"path":"\/documentation\/glib\/maincontext\/getpollfunc()","title":"func getPollFunc() -> GPollFunc!","type":"method"},{"path":"\/documentation\/glib\/maincontext\/invoke(function:data:)","title":"func invoke(function: GSourceFunc?, data: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/maincontext\/invokefull(priority:function:data:notify:)","title":"func invokeFull(priority: Int, function: GSourceFunc?, data: gpointer?, notify: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/glib\/maincontext\/iteration(mayblock:)","title":"func iteration(mayBlock: Bool) -> Bool","type":"method"},{"path":"\/documentation\/glib\/maincontext\/pending()","title":"func pending() -> Bool","type":"method"},{"path":"\/documentation\/glib\/maincontext\/popthreaddefault()","title":"func popThreadDefault()","type":"method"},{"path":"\/documentation\/glib\/maincontext\/prepare(priority:)","title":"func prepare(priority: UnsafeMutablePointer<gint>!) -> Bool","type":"method"},{"path":"\/documentation\/glib\/maincontext\/pushthreaddefault()","title":"func pushThreadDefault()","type":"method"},{"path":"\/documentation\/glib\/maincontext\/query(maxpriority:timeout:fds:nfds:)","title":"func query(maxPriority: Int, timeout: UnsafeMutablePointer<gint>!, fds: UnsafeMutablePointer<GPollFD>!, nFds: Int) -> Int","type":"method"},{"path":"\/documentation\/glib\/maincontext\/ref()","title":"func ref() -> MainContextRef!","type":"method"},{"path":"\/documentation\/glib\/maincontext\/release()","title":"func release()","type":"method"},{"path":"\/documentation\/glib\/maincontext\/removepoll(fd:)","title":"func removePoll<PollFDT>(fd: PollFDT)","type":"method"},{"path":"\/documentation\/glib\/maincontext\/setpollfunc(func:)","title":"func setPollFunc(func: GPollFunc?)","type":"method"},{"path":"\/documentation\/glib\/maincontext\/unref()","title":"func unref()","type":"method"},{"path":"\/documentation\/glib\/maincontext\/wait(cond:mutex:)","title":"func wait<CondT, MutexT>(cond: CondT, mutex: MutexT) -> Bool","type":"method"},{"path":"\/documentation\/glib\/maincontext\/wakeup()","title":"func wakeup()","type":"method"}],"path":"\/documentation\/glib\/maincontext\/maincontextprotocol-implementations","title":"MainContextProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/maincontext","title":"MainContext","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/mainloop\/init()","title":"convenience init()","type":"init"},{"path":"\/documentation\/glib\/mainloop\/init(_:)-4z8bz","title":"init(UnsafePointer<GMainLoop>)","type":"init"},{"path":"\/documentation\/glib\/mainloop\/init(_:)-5ewn1","title":"init!(UnsafeMutablePointer<GMainLoop>?)","type":"init"},{"path":"\/documentation\/glib\/mainloop\/init(_:)-6jfsq","title":"init!(UnsafePointer<GMainLoop>?)","type":"init"},{"path":"\/documentation\/glib\/mainloop\/init(_:)-75h1y","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/mainloop\/init(_:)-awu0","title":"init(UnsafeMutablePointer<GMainLoop>)","type":"init"},{"path":"\/documentation\/glib\/mainloop\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/mainloop\/init(context:isrunning:)","title":"init<MainContextT>(context: MainContextT?, isRunning: Bool)","type":"init"},{"path":"\/documentation\/glib\/mainloop\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/mainloop\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/mainloop\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/mainloop\/init(raw:)-2hadz","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/mainloop\/init(raw:)-8m15p","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/mainloop\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GMainLoop>)","type":"init"},{"path":"\/documentation\/glib\/mainloop\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/mainloop\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/mainloop\/init(retainingraw:)-34vnt","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/mainloop\/init(retainingraw:)-41z2i","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/mainloop\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/mainloop\/context","title":"var context: MainContextRef!","type":"property"},{"path":"\/documentation\/glib\/mainloop\/isrunning","title":"var isRunning: Bool","type":"property"},{"path":"\/documentation\/glib\/mainloop\/main_loop_ptr","title":"var main_loop_ptr: UnsafeMutablePointer<GMainLoop>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/mainloop\/getcontext()","title":"func getContext() -> MainContextRef!","type":"method"},{"path":"\/documentation\/glib\/mainloop\/quit()","title":"func quit()","type":"method"},{"path":"\/documentation\/glib\/mainloop\/ref()","title":"func ref() -> MainLoopRef!","type":"method"},{"path":"\/documentation\/glib\/mainloop\/run()","title":"func run()","type":"method"},{"path":"\/documentation\/glib\/mainloop\/unref()","title":"func unref()","type":"method"}],"path":"\/documentation\/glib\/mainloop\/mainloopprotocol-implementations","title":"MainLoopProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/mainloop","title":"MainLoop","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/mappedfile\/init(_:)-338np","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/mappedfile\/init(_:)-5sgye","title":"init(UnsafePointer<GMappedFile>)","type":"init"},{"path":"\/documentation\/glib\/mappedfile\/init(_:)-5tvxi","title":"init(UnsafeMutablePointer<GMappedFile>)","type":"init"},{"path":"\/documentation\/glib\/mappedfile\/init(_:)-61o4t","title":"init!(UnsafeMutablePointer<GMappedFile>?)","type":"init"},{"path":"\/documentation\/glib\/mappedfile\/init(_:)-8k9aw","title":"init!(UnsafePointer<GMappedFile>?)","type":"init"},{"path":"\/documentation\/glib\/mappedfile\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/mappedfile\/init(fd:writable:)","title":"init(fd: Int, writable: Bool) throws","type":"init"},{"path":"\/documentation\/glib\/mappedfile\/init(filename:writable:)","title":"init(filename: UnsafePointer<gchar>!, writable: Bool) throws","type":"init"},{"path":"\/documentation\/glib\/mappedfile\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/mappedfile\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/mappedfile\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/mappedfile\/init(raw:)-3gnyt","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/mappedfile\/init(raw:)-5jbn5","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/mappedfile\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GMappedFile>)","type":"init"},{"path":"\/documentation\/glib\/mappedfile\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/mappedfile\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/mappedfile\/init(retainingraw:)-1qq41","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/mappedfile\/init(retainingraw:)-7vgxr","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/mappedfile\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/mappedfile\/newfrom(fd:writable:)","title":"static func newFrom(fd: Int, writable: Bool) throws -> MappedFile!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/mappedfile\/bytes","title":"var bytes: BytesRef!","type":"property"},{"path":"\/documentation\/glib\/mappedfile\/contents","title":"var contents: String!","type":"property"},{"path":"\/documentation\/glib\/mappedfile\/length","title":"var length: Int","type":"property"},{"path":"\/documentation\/glib\/mappedfile\/mapped_file_ptr","title":"var mapped_file_ptr: UnsafeMutablePointer<GMappedFile>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/mappedfile\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/glib\/mappedfile\/getbytes()","title":"func getBytes() -> BytesRef!","type":"method"},{"path":"\/documentation\/glib\/mappedfile\/getcontents()","title":"func getContents() -> String!","type":"method"},{"path":"\/documentation\/glib\/mappedfile\/getlength()","title":"func getLength() -> Int","type":"method"},{"path":"\/documentation\/glib\/mappedfile\/ref()","title":"func ref() -> MappedFileRef!","type":"method"},{"path":"\/documentation\/glib\/mappedfile\/unref()","title":"func unref()","type":"method"}],"path":"\/documentation\/glib\/mappedfile\/mappedfileprotocol-implementations","title":"MappedFileProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/mappedfile","title":"MappedFile","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/markupparsecontext\/init(_:)-42692","title":"init!(UnsafeMutablePointer<GMarkupParseContext>?)","type":"init"},{"path":"\/documentation\/glib\/markupparsecontext\/init(_:)-5nvdz","title":"init(UnsafeMutablePointer<GMarkupParseContext>)","type":"init"},{"path":"\/documentation\/glib\/markupparsecontext\/init(_:)-6vrnd","title":"init(UnsafePointer<GMarkupParseContext>)","type":"init"},{"path":"\/documentation\/glib\/markupparsecontext\/init(_:)-8vwbu","title":"init!(UnsafePointer<GMarkupParseContext>?)","type":"init"},{"path":"\/documentation\/glib\/markupparsecontext\/init(_:)-9tih7","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/markupparsecontext\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/markupparsecontext\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/markupparsecontext\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/markupparsecontext\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/markupparsecontext\/init(parser:flags:userdata:userdatadnotify:)","title":"init<MarkupParserT>(parser: MarkupParserT, flags: MarkupParseFlags, userData: gpointer?, userDataDnotify: GDestroyNotify?)","type":"init"},{"path":"\/documentation\/glib\/markupparsecontext\/init(raw:)-5gek7","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/markupparsecontext\/init(raw:)-82yjc","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/markupparsecontext\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GMarkupParseContext>)","type":"init"},{"path":"\/documentation\/glib\/markupparsecontext\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/markupparsecontext\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/markupparsecontext\/init(retainingraw:)-4ogmo","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/markupparsecontext\/init(retainingraw:)-tm67","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/markupparsecontext\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/markupparsecontext\/element","title":"var element: String!","type":"property"},{"path":"\/documentation\/glib\/markupparsecontext\/elementstack","title":"var elementStack: SListRef!","type":"property"},{"path":"\/documentation\/glib\/markupparsecontext\/markup_parse_context_ptr","title":"var markup_parse_context_ptr: UnsafeMutablePointer<GMarkupParseContext>!","type":"property"},{"path":"\/documentation\/glib\/markupparsecontext\/userdata","title":"var userData: gpointer?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/markupparsecontext\/endparse()","title":"func endParse() throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/markupparsecontext\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/glib\/markupparsecontext\/getelement()","title":"func getElement() -> String!","type":"method"},{"path":"\/documentation\/glib\/markupparsecontext\/getelementstack()","title":"func getElementStack() -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/markupparsecontext\/getposition(linenumber:charnumber:)","title":"func getPosition(lineNumber: UnsafeMutablePointer<gint>!, charNumber: UnsafeMutablePointer<gint>!)","type":"method"},{"path":"\/documentation\/glib\/markupparsecontext\/getuserdata()","title":"func getUserData() -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/markupparsecontext\/parse(text:textlen:)","title":"func parse(text: UnsafePointer<gchar>!, textLen: gssize) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/markupparsecontext\/pop()","title":"func pop() -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/markupparsecontext\/push(parser:userdata:)","title":"func push<MarkupParserT>(parser: MarkupParserT, userData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/markupparsecontext\/ref()","title":"func ref() -> MarkupParseContextRef!","type":"method"},{"path":"\/documentation\/glib\/markupparsecontext\/unref()","title":"func unref()","type":"method"}],"path":"\/documentation\/glib\/markupparsecontext\/markupparsecontextprotocol-implementations","title":"MarkupParseContextProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/markupparsecontext","title":"MarkupParseContext","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/markupparser\/init(_:)-1hgu7","title":"init(UnsafeMutablePointer<GMarkupParser>)","type":"init"},{"path":"\/documentation\/glib\/markupparser\/init(_:)-2xer1","title":"init!(UnsafePointer<GMarkupParser>?)","type":"init"},{"path":"\/documentation\/glib\/markupparser\/init(_:)-5e2v3","title":"init!(UnsafeMutablePointer<GMarkupParser>?)","type":"init"},{"path":"\/documentation\/glib\/markupparser\/init(_:)-64fyn","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/markupparser\/init(_:)-8drpd","title":"init(UnsafePointer<GMarkupParser>)","type":"init"},{"path":"\/documentation\/glib\/markupparser\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/markupparser\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/markupparser\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/markupparser\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/markupparser\/init(raw:)-17zz","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/markupparser\/init(raw:)-23vmj","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/markupparser\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GMarkupParser>)","type":"init"},{"path":"\/documentation\/glib\/markupparser\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/markupparser\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/markupparser\/init(retainingraw:)-432te","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/markupparser\/init(retainingraw:)-88b3","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/markupparser\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"}],"path":"\/documentation\/glib\/markupparser","title":"MarkupParser","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/matchinfo\/init(_:)-4qq1c","title":"init(UnsafePointer<GMatchInfo>)","type":"init"},{"path":"\/documentation\/glib\/matchinfo\/init(_:)-95stk","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/matchinfo\/init(_:)-9qh6w","title":"init(UnsafeMutablePointer<GMatchInfo>)","type":"init"},{"path":"\/documentation\/glib\/matchinfo\/init(_:)-9qk7t","title":"init!(UnsafeMutablePointer<GMatchInfo>?)","type":"init"},{"path":"\/documentation\/glib\/matchinfo\/init(_:)-woza","title":"init!(UnsafePointer<GMatchInfo>?)","type":"init"},{"path":"\/documentation\/glib\/matchinfo\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/matchinfo\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/matchinfo\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/matchinfo\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/matchinfo\/init(raw:)-4o606","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/matchinfo\/init(raw:)-4zd7j","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/matchinfo\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GMatchInfo>)","type":"init"},{"path":"\/documentation\/glib\/matchinfo\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/matchinfo\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/matchinfo\/init(retainingraw:)-8bf0d","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/matchinfo\/init(retainingraw:)-98icg","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/matchinfo\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/matchinfo\/ispartialmatch","title":"var isPartialMatch: Bool","type":"property"},{"path":"\/documentation\/glib\/matchinfo\/matchcount","title":"var matchCount: Int","type":"property"},{"path":"\/documentation\/glib\/matchinfo\/match_info_ptr","title":"var match_info_ptr: UnsafeMutablePointer<GMatchInfo>!","type":"property"},{"path":"\/documentation\/glib\/matchinfo\/regex","title":"var regex: RegexRef!","type":"property"},{"path":"\/documentation\/glib\/matchinfo\/string","title":"var string: String!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/matchinfo\/expandreferences(stringtoexpand:)","title":"func expandReferences(stringToExpand: UnsafePointer<gchar>!) throws -> String!","type":"method"},{"path":"\/documentation\/glib\/matchinfo\/fetch(matchnum:)","title":"func fetch(matchNum: Int) -> String!","type":"method"},{"path":"\/documentation\/glib\/matchinfo\/fetchall()","title":"func fetchAll() -> UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!","type":"method"},{"path":"\/documentation\/glib\/matchinfo\/fetchnamed(name:)","title":"func fetchNamed(name: UnsafePointer<gchar>!) -> String!","type":"method"},{"path":"\/documentation\/glib\/matchinfo\/fetchnamedpos(name:startpos:endpos:)","title":"func fetchNamedPos(name: UnsafePointer<gchar>!, startPos: UnsafeMutablePointer<gint>!, endPos: UnsafeMutablePointer<gint>!) -> Bool","type":"method"},{"path":"\/documentation\/glib\/matchinfo\/fetchpos(matchnum:startpos:endpos:)","title":"func fetchPos(matchNum: Int, startPos: UnsafeMutablePointer<gint>!, endPos: UnsafeMutablePointer<gint>!) -> Bool","type":"method"},{"path":"\/documentation\/glib\/matchinfo\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/glib\/matchinfo\/getmatchcount()","title":"func getMatchCount() -> Int","type":"method"},{"path":"\/documentation\/glib\/matchinfo\/getregex()","title":"func getRegex() -> RegexRef!","type":"method"},{"path":"\/documentation\/glib\/matchinfo\/getstring()","title":"func getString() -> String!","type":"method"},{"path":"\/documentation\/glib\/matchinfo\/matches()","title":"func matches() -> Bool","type":"method"},{"path":"\/documentation\/glib\/matchinfo\/next()","title":"func next() throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/matchinfo\/ref()","title":"func ref() -> MatchInfoRef!","type":"method"},{"path":"\/documentation\/glib\/matchinfo\/unref()","title":"func unref()","type":"method"}],"path":"\/documentation\/glib\/matchinfo\/matchinfoprotocol-implementations","title":"MatchInfoProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/matchinfo","title":"MatchInfo","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/memchunk\/init(_:)-2cubv","title":"init!(UnsafePointer<GMemChunk>?)","type":"init"},{"path":"\/documentation\/glib\/memchunk\/init(_:)-3e5sc","title":"init(UnsafePointer<GMemChunk>)","type":"init"},{"path":"\/documentation\/glib\/memchunk\/init(_:)-3n3ym","title":"init(UnsafeMutablePointer<GMemChunk>)","type":"init"},{"path":"\/documentation\/glib\/memchunk\/init(_:)-4e7bh","title":"init!(UnsafeMutablePointer<GMemChunk>?)","type":"init"},{"path":"\/documentation\/glib\/memchunk\/init(_:)-8qglf","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/memchunk\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/memchunk\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/memchunk\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/memchunk\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/memchunk\/init(raw:)-4zazz","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/memchunk\/init(raw:)-6w0b6","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/memchunk\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GMemChunk>)","type":"init"},{"path":"\/documentation\/glib\/memchunk\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/memchunk\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/memchunk\/init(retainingraw:)-4o0vy","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/memchunk\/init(retainingraw:)-8ivjp","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/memchunk\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/memchunk\/alloc()","title":"func alloc() -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/memchunk\/alloc0()","title":"func alloc0() -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/memchunk\/clean()","title":"func clean()","type":"method"},{"path":"\/documentation\/glib\/memchunk\/destroy()","title":"func destroy()","type":"method"},{"path":"\/documentation\/glib\/memchunk\/free(mem:)","title":"func free(mem: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/memchunk\/print()","title":"func print()","type":"method"},{"path":"\/documentation\/glib\/memchunk\/reset()","title":"func reset()","type":"method"}],"path":"\/documentation\/glib\/memchunk\/memchunkprotocol-implementations","title":"MemChunkProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/memchunk","title":"MemChunk","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/memvtable\/init(_:)-1pzvh","title":"init!(UnsafePointer<GMemVTable>?)","type":"init"},{"path":"\/documentation\/glib\/memvtable\/init(_:)-1vg8y","title":"init!(UnsafeMutablePointer<GMemVTable>?)","type":"init"},{"path":"\/documentation\/glib\/memvtable\/init(_:)-3qdzj","title":"init(UnsafeMutablePointer<GMemVTable>)","type":"init"},{"path":"\/documentation\/glib\/memvtable\/init(_:)-3v17c","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/memvtable\/init(_:)-lo0z","title":"init(UnsafePointer<GMemVTable>)","type":"init"},{"path":"\/documentation\/glib\/memvtable\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/memvtable\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/memvtable\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/memvtable\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/memvtable\/init(raw:)-5yoya","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/memvtable\/init(raw:)-9rbv3","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/memvtable\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GMemVTable>)","type":"init"},{"path":"\/documentation\/glib\/memvtable\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/memvtable\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/memvtable\/init(retainingraw:)-6wn6q","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/memvtable\/init(retainingraw:)-9j7ar","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/memvtable\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/memvtable\/memsetvtable()","title":"func memSetVtable()","type":"method"}],"path":"\/documentation\/glib\/memvtable\/memvtableprotocol-implementations","title":"MemVTableProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/memvtable","title":"MemVTable","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/mutex\/init()","title":"convenience init()","type":"init"},{"path":"\/documentation\/glib\/mutex\/init(_:)-1wqdf","title":"init(UnsafeMutablePointer<GMutex>)","type":"init"},{"path":"\/documentation\/glib\/mutex\/init(_:)-2hh8","title":"init!(UnsafePointer<GMutex>?)","type":"init"},{"path":"\/documentation\/glib\/mutex\/init(_:)-3p7tj","title":"init(UnsafePointer<GMutex>)","type":"init"},{"path":"\/documentation\/glib\/mutex\/init(_:)-6gy2q","title":"init!(UnsafeMutablePointer<GMutex>?)","type":"init"},{"path":"\/documentation\/glib\/mutex\/init(_:)-8w31q","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/mutex\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/mutex\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/mutex\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/mutex\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/mutex\/init(raw:)-35787","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/mutex\/init(raw:)-5rr9i","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/mutex\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GMutex>)","type":"init"},{"path":"\/documentation\/glib\/mutex\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/mutex\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/mutex\/init(retainingraw:)-2ec87","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/mutex\/init(retainingraw:)-50wb8","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/mutex\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/mutex\/clear()","title":"func clear()","type":"method"},{"path":"\/documentation\/glib\/mutex\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/glib\/mutex\/init_()","title":"func init_()","type":"method"},{"path":"\/documentation\/glib\/mutex\/lock()","title":"func lock()","type":"method"},{"path":"\/documentation\/glib\/mutex\/trylock()","title":"func trylock() -> Bool","type":"method"},{"path":"\/documentation\/glib\/mutex\/unlock()","title":"func unlock()","type":"method"}],"path":"\/documentation\/glib\/mutex\/mutexprotocol-implementations","title":"MutexProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/mutex","title":"Mutex","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/node\/init(_:)-5rr9j","title":"init(UnsafeMutablePointer<GNode>)","type":"init"},{"path":"\/documentation\/glib\/node\/init(_:)-6c7wc","title":"init(UnsafePointer<GNode>)","type":"init"},{"path":"\/documentation\/glib\/node\/init(_:)-7bn1b","title":"init!(UnsafePointer<GNode>?)","type":"init"},{"path":"\/documentation\/glib\/node\/init(_:)-7sfpx","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/node\/init(_:)-8iman","title":"init!(UnsafeMutablePointer<GNode>?)","type":"init"},{"path":"\/documentation\/glib\/node\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/node\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/node\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/node\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/node\/init(raw:)-4v4ix","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/node\/init(raw:)-8047i","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/node\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GNode>)","type":"init"},{"path":"\/documentation\/glib\/node\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/node\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/node\/init(retainingraw:)-4o17e","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/node\/init(retainingraw:)-8ivq5","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/node\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/node\/children","title":"var children: NodeRef!","type":"property"},{"path":"\/documentation\/glib\/node\/data","title":"var data: gpointer?","type":"property"},{"path":"\/documentation\/glib\/node\/next","title":"var next: NodeRef!","type":"property"},{"path":"\/documentation\/glib\/node\/parent","title":"var parent: NodeRef!","type":"property"},{"path":"\/documentation\/glib\/node\/prev","title":"var prev: NodeRef!","type":"property"},{"path":"\/documentation\/glib\/node\/root","title":"var root: NodeRef!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/node\/childindex(data:)","title":"func childIndex(data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/glib\/node\/childposition(child:)","title":"func childPosition<NodeT>(child: NodeT) -> Int","type":"method"},{"path":"\/documentation\/glib\/node\/childrenforeach(flags:func:data:)","title":"func childrenForeach(flags: TraverseFlags, func: GNodeForeachFunc?, data: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/node\/copy()","title":"func copy() -> NodeRef!","type":"method"},{"path":"\/documentation\/glib\/node\/copydeep(copyfunc:data:)","title":"func copyDeep(copyFunc: GCopyFunc?, data: gpointer?) -> NodeRef!","type":"method"},{"path":"\/documentation\/glib\/node\/depth()","title":"func depth() -> Int","type":"method"},{"path":"\/documentation\/glib\/node\/destroy()","title":"func destroy()","type":"method"},{"path":"\/documentation\/glib\/node\/find(order:flags:data:)","title":"func find(order: GTraverseType, flags: TraverseFlags, data: gpointer?) -> NodeRef!","type":"method"},{"path":"\/documentation\/glib\/node\/findchild(flags:data:)","title":"func findChild(flags: TraverseFlags, data: gpointer?) -> NodeRef!","type":"method"},{"path":"\/documentation\/glib\/node\/firstsibling()","title":"func firstSibling() -> NodeRef!","type":"method"},{"path":"\/documentation\/glib\/node\/getroot()","title":"func getRoot() -> NodeRef!","type":"method"},{"path":"\/documentation\/glib\/node\/insert(position:node:)","title":"func insert<NodeT>(position: Int, node: NodeT) -> NodeRef!","type":"method"},{"path":"\/documentation\/glib\/node\/insertafter(sibling:node:)","title":"func insertAfter<NodeT>(sibling: NodeT, node: NodeT) -> NodeRef!","type":"method"},{"path":"\/documentation\/glib\/node\/insertbefore(sibling:node:)","title":"func insertBefore<NodeT>(sibling: NodeT, node: NodeT) -> NodeRef!","type":"method"},{"path":"\/documentation\/glib\/node\/isancestor(descendant:)","title":"func isAncestor<NodeT>(descendant: NodeT) -> Bool","type":"method"},{"path":"\/documentation\/glib\/node\/lastchild()","title":"func lastChild() -> NodeRef!","type":"method"},{"path":"\/documentation\/glib\/node\/lastsibling()","title":"func lastSibling() -> NodeRef!","type":"method"},{"path":"\/documentation\/glib\/node\/maxheight()","title":"func maxHeight() -> Int","type":"method"},{"path":"\/documentation\/glib\/node\/nchildren()","title":"func nChildren() -> Int","type":"method"},{"path":"\/documentation\/glib\/node\/nnodes(flags:)","title":"func nNodes(flags: TraverseFlags) -> Int","type":"method"},{"path":"\/documentation\/glib\/node\/nthchild(n:)","title":"func nthChild(n: Int) -> NodeRef!","type":"method"},{"path":"\/documentation\/glib\/node\/prepend(node:)","title":"func prepend<NodeT>(node: NodeT) -> NodeRef!","type":"method"},{"path":"\/documentation\/glib\/node\/reversechildren()","title":"func reverseChildren()","type":"method"},{"path":"\/documentation\/glib\/node\/traverse(order:flags:maxdepth:func:data:)","title":"func traverse(order: GTraverseType, flags: TraverseFlags, maxDepth: Int, func: GNodeTraverseFunc?, data: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/node\/unlink()","title":"func unlink()","type":"method"}],"path":"\/documentation\/glib\/node\/nodeprotocol-implementations","title":"NodeProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/node","title":"Node","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/once\/init(_:)-12c6x","title":"init(UnsafeMutablePointer<GOnce>)","type":"init"},{"path":"\/documentation\/glib\/once\/init(_:)-2pwu8","title":"init(UnsafePointer<GOnce>)","type":"init"},{"path":"\/documentation\/glib\/once\/init(_:)-3ovkh","title":"init!(UnsafePointer<GOnce>?)","type":"init"},{"path":"\/documentation\/glib\/once\/init(_:)-6esly","title":"init!(UnsafeMutablePointer<GOnce>?)","type":"init"},{"path":"\/documentation\/glib\/once\/init(_:)-7rvfl","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/once\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/once\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/once\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/once\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/once\/init(raw:)-4st5r","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/once\/init(raw:)-8nnve","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/once\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GOnce>)","type":"init"},{"path":"\/documentation\/glib\/once\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/once\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/once\/init(retainingraw:)-36onc","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/once\/init(retainingraw:)-9bflu","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/once\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/once\/retval","title":"var retval: gpointer?","type":"property"},{"path":"\/documentation\/glib\/once\/status","title":"var status: GOnceStatus","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/once\/impl(func:arg:)","title":"func impl(func: GThreadFunc?, arg: gpointer?) -> gpointer?","type":"method"}],"path":"\/documentation\/glib\/once\/onceprotocol-implementations","title":"OnceProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/once","title":"Once","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/optioncontext\/init(_:)-222uv","title":"init(UnsafeMutablePointer<GOptionContext>)","type":"init"},{"path":"\/documentation\/glib\/optioncontext\/init(_:)-587x2","title":"init(UnsafePointer<GOptionContext>)","type":"init"},{"path":"\/documentation\/glib\/optioncontext\/init(_:)-6s61d","title":"init!(UnsafeMutablePointer<GOptionContext>?)","type":"init"},{"path":"\/documentation\/glib\/optioncontext\/init(_:)-6zpo7","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/optioncontext\/init(_:)-7ykr5","title":"init!(UnsafePointer<GOptionContext>?)","type":"init"},{"path":"\/documentation\/glib\/optioncontext\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/optioncontext\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/optioncontext\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/optioncontext\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/optioncontext\/init(raw:)-2s56d","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/optioncontext\/init(raw:)-5l5u","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/optioncontext\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GOptionContext>)","type":"init"},{"path":"\/documentation\/glib\/optioncontext\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/optioncontext\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/optioncontext\/init(retainingraw:)-1fe19","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/optioncontext\/init(retainingraw:)-iaq2","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/optioncontext\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/optioncontext\/description","title":"var description: String!","type":"property"},{"path":"\/documentation\/glib\/optioncontext\/helpenabled","title":"var helpEnabled: Bool","type":"property"},{"path":"\/documentation\/glib\/optioncontext\/ignoreunknownoptions","title":"var ignoreUnknownOptions: Bool","type":"property"},{"path":"\/documentation\/glib\/optioncontext\/maingroup","title":"var mainGroup: OptionGroupRef!","type":"property"},{"path":"\/documentation\/glib\/optioncontext\/strictposix","title":"var strictPosix: Bool","type":"property"},{"path":"\/documentation\/glib\/optioncontext\/summary","title":"var summary: String!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/optioncontext\/add(group:)","title":"func add<OptionGroupT>(group: OptionGroupT)","type":"method"},{"path":"\/documentation\/glib\/optioncontext\/addmain(entries:translationdomain:)","title":"func addMain(entries: UnsafePointer<GOptionEntry>!, translationDomain: UnsafePointer<gchar>?)","type":"method"},{"path":"\/documentation\/glib\/optioncontext\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/glib\/optioncontext\/getdescription()","title":"func getDescription() -> String!","type":"method"},{"path":"\/documentation\/glib\/optioncontext\/gethelp(mainhelp:group:)","title":"func getHelp(mainHelp: Bool, group: OptionGroupRef?) -> String!","type":"method"},{"path":"\/documentation\/glib\/optioncontext\/gethelpenabled()","title":"func getHelpEnabled() -> Bool","type":"method"},{"path":"\/documentation\/glib\/optioncontext\/getignoreunknownoptions()","title":"func getIgnoreUnknownOptions() -> Bool","type":"method"},{"path":"\/documentation\/glib\/optioncontext\/getmaingroup()","title":"func getMainGroup() -> OptionGroupRef!","type":"method"},{"path":"\/documentation\/glib\/optioncontext\/getstrictposix()","title":"func getStrictPosix() -> Bool","type":"method"},{"path":"\/documentation\/glib\/optioncontext\/getsummary()","title":"func getSummary() -> String!","type":"method"},{"path":"\/documentation\/glib\/optioncontext\/parse(argc:argv:)","title":"func parse(argc: UnsafeMutablePointer<gint>!, argv: UnsafeMutablePointer<UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>?>!) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/optioncontext\/parsestrv(arguments:)","title":"func parseStrv(arguments: UnsafeMutablePointer<UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>?>!) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/optioncontext\/set(description:)","title":"func set(description: UnsafePointer<gchar>?)","type":"method"},{"path":"\/documentation\/glib\/optioncontext\/set(helpenabled:)","title":"func set(helpEnabled: Bool)","type":"method"},{"path":"\/documentation\/glib\/optioncontext\/set(strictposix:)","title":"func set(strictPosix: Bool)","type":"method"},{"path":"\/documentation\/glib\/optioncontext\/set(summary:)","title":"func set(summary: UnsafePointer<gchar>?)","type":"method"},{"path":"\/documentation\/glib\/optioncontext\/setignoreunknownoptions(ignoreunknown:)","title":"func setIgnoreUnknownOptions(ignoreUnknown: Bool)","type":"method"},{"path":"\/documentation\/glib\/optioncontext\/setmain(group:)","title":"func setMain<OptionGroupT>(group: OptionGroupT)","type":"method"},{"path":"\/documentation\/glib\/optioncontext\/settranslatefunc(func:data:destroynotify:)","title":"func setTranslateFunc(func: GTranslateFunc?, data: gpointer?, destroyNotify: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/glib\/optioncontext\/settranslation(domain:)","title":"func setTranslation(domain: UnsafePointer<gchar>!)","type":"method"}],"path":"\/documentation\/glib\/optioncontext\/optioncontextprotocol-implementations","title":"OptionContextProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/optioncontext","title":"OptionContext","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/optionentry\/init(_:)-3wp2e","title":"init(UnsafeMutablePointer<GOptionEntry>)","type":"init"},{"path":"\/documentation\/glib\/optionentry\/init(_:)-4zrlg","title":"init(UnsafePointer<GOptionEntry>)","type":"init"},{"path":"\/documentation\/glib\/optionentry\/init(_:)-6am8v","title":"init!(UnsafePointer<GOptionEntry>?)","type":"init"},{"path":"\/documentation\/glib\/optionentry\/init(_:)-7wqei","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/optionentry\/init(_:)-9bi3h","title":"init!(UnsafeMutablePointer<GOptionEntry>?)","type":"init"},{"path":"\/documentation\/glib\/optionentry\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/optionentry\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/optionentry\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/optionentry\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/optionentry\/init(raw:)-1fx8e","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/optionentry\/init(raw:)-5t7gn","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/optionentry\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GOptionEntry>)","type":"init"},{"path":"\/documentation\/glib\/optionentry\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/optionentry\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/optionentry\/init(retainingraw:)-44om5","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/optionentry\/init(retainingraw:)-914ox","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/optionentry\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/optionentry\/arg","title":"var arg: GOptionArg","type":"property"},{"path":"\/documentation\/glib\/optionentry\/argdata","title":"var argData: gpointer?","type":"property"},{"path":"\/documentation\/glib\/optionentry\/argdescription","title":"var argDescription: UnsafePointer<gchar>!","type":"property"},{"path":"\/documentation\/glib\/optionentry\/description","title":"var description: UnsafePointer<gchar>!","type":"property"},{"path":"\/documentation\/glib\/optionentry\/flags","title":"var flags: gint","type":"property"},{"path":"\/documentation\/glib\/optionentry\/longname","title":"var longName: UnsafePointer<gchar>!","type":"property"},{"path":"\/documentation\/glib\/optionentry\/shortname","title":"var shortName: gchar","type":"property"}],"path":"\/documentation\/glib\/optionentry\/optionentryprotocol-implementations","title":"OptionEntryProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/optionentry","title":"OptionEntry","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/optiongroup\/init(_:)-3pfxu","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/optiongroup\/init(_:)-5h4wl","title":"init(UnsafeMutablePointer<GOptionGroup>)","type":"init"},{"path":"\/documentation\/glib\/optiongroup\/init(_:)-7vsf6","title":"init!(UnsafeMutablePointer<GOptionGroup>?)","type":"init"},{"path":"\/documentation\/glib\/optiongroup\/init(_:)-8vku1","title":"init!(UnsafePointer<GOptionGroup>?)","type":"init"},{"path":"\/documentation\/glib\/optiongroup\/init(_:)-dxuv","title":"init(UnsafePointer<GOptionGroup>)","type":"init"},{"path":"\/documentation\/glib\/optiongroup\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/optiongroup\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/optiongroup\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/optiongroup\/init(name:description:helpdescription:userdata:destroy:)","title":"init(name: UnsafePointer<gchar>!, description: UnsafePointer<gchar>!, helpDescription: UnsafePointer<gchar>!, userData: gpointer?, destroy: GDestroyNotify?)","type":"init"},{"path":"\/documentation\/glib\/optiongroup\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/optiongroup\/init(raw:)-6rdp3","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/optiongroup\/init(raw:)-8o316","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/optiongroup\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GOptionGroup>)","type":"init"},{"path":"\/documentation\/glib\/optiongroup\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/optiongroup\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/optiongroup\/init(retainingraw:)-1sgrs","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/optiongroup\/init(retainingraw:)-7x7ki","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/optiongroup\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/optiongroup\/option_group_ptr","title":"var option_group_ptr: UnsafeMutablePointer<GOptionGroup>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/optiongroup\/add(entries:)","title":"func add(entries: UnsafePointer<GOptionEntry>!)","type":"method"},{"path":"\/documentation\/glib\/optiongroup\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/glib\/optiongroup\/ref()","title":"func ref() -> OptionGroupRef!","type":"method"},{"path":"\/documentation\/glib\/optiongroup\/seterrorhook(errorfunc:)","title":"func setErrorHook(errorFunc: GOptionErrorFunc?)","type":"method"},{"path":"\/documentation\/glib\/optiongroup\/setparsehooks(preparsefunc:postparsefunc:)","title":"func setParseHooks(preParseFunc: GOptionParseFunc?, postParseFunc: GOptionParseFunc?)","type":"method"},{"path":"\/documentation\/glib\/optiongroup\/settranslatefunc(func:data:destroynotify:)","title":"func setTranslateFunc(func: GTranslateFunc?, data: gpointer?, destroyNotify: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/glib\/optiongroup\/settranslation(domain:)","title":"func setTranslation(domain: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/glib\/optiongroup\/unref()","title":"func unref()","type":"method"}],"path":"\/documentation\/glib\/optiongroup\/optiongroupprotocol-implementations","title":"OptionGroupProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/optiongroup","title":"OptionGroup","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/pathbuf\/init(_:)-2vi6b","title":"init!(UnsafeMutablePointer<GPathBuf>?)","type":"init"},{"path":"\/documentation\/glib\/pathbuf\/init(_:)-4wiyq","title":"init(UnsafeMutablePointer<GPathBuf>)","type":"init"},{"path":"\/documentation\/glib\/pathbuf\/init(_:)-5h5ke","title":"init(UnsafePointer<GPathBuf>)","type":"init"},{"path":"\/documentation\/glib\/pathbuf\/init(_:)-8v9zu","title":"init!(UnsafePointer<GPathBuf>?)","type":"init"},{"path":"\/documentation\/glib\/pathbuf\/init(_:)-k4sv","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/pathbuf\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/pathbuf\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/pathbuf\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/pathbuf\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/pathbuf\/init(raw:)-4ckxf","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/pathbuf\/init(raw:)-jxoo","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/pathbuf\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GPathBuf>)","type":"init"},{"path":"\/documentation\/glib\/pathbuf\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/pathbuf\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/pathbuf\/init(retainingraw:)-7sql3","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/pathbuf\/init(retainingraw:)-83xto","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/pathbuf\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/pathbuf\/newfrom(path:)","title":"static func newFrom(path: UnsafePointer<CChar>?) -> PathBuf!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/pathbuf\/clear()","title":"func clear()","type":"method"},{"path":"\/documentation\/glib\/pathbuf\/cleartopath()","title":"func clearToPath() -> String!","type":"method"},{"path":"\/documentation\/glib\/pathbuf\/copy()","title":"func copy() -> PathBufRef!","type":"method"},{"path":"\/documentation\/glib\/pathbuf\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/glib\/pathbuf\/freetopath()","title":"func freeToPath() -> String!","type":"method"},{"path":"\/documentation\/glib\/pathbuf\/initfrom(path:)","title":"func initFrom(path: UnsafePointer<CChar>?) -> PathBufRef!","type":"method"},{"path":"\/documentation\/glib\/pathbuf\/init_()","title":"func init_() -> PathBufRef!","type":"method"},{"path":"\/documentation\/glib\/pathbuf\/pop()","title":"func pop() -> Bool","type":"method"},{"path":"\/documentation\/glib\/pathbuf\/push(path:)","title":"func push(path: UnsafePointer<CChar>!) -> PathBufRef!","type":"method"},{"path":"\/documentation\/glib\/pathbuf\/setextension(extension:)","title":"func setExtension(extension: UnsafePointer<CChar>?) -> Bool","type":"method"},{"path":"\/documentation\/glib\/pathbuf\/setfilename(filename:)","title":"func setFilename(fileName: UnsafePointer<CChar>!) -> Bool","type":"method"},{"path":"\/documentation\/glib\/pathbuf\/topath()","title":"func toPath() -> String!","type":"method"}],"path":"\/documentation\/glib\/pathbuf\/pathbufprotocol-implementations","title":"PathBufProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/pathbuf","title":"PathBuf","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/patternspec\/init(_:)-2cj6r","title":"init(UnsafePointer<GPatternSpec>)","type":"init"},{"path":"\/documentation\/glib\/patternspec\/init(_:)-59rhu","title":"init!(UnsafePointer<GPatternSpec>?)","type":"init"},{"path":"\/documentation\/glib\/patternspec\/init(_:)-6x3yp","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/patternspec\/init(_:)-7fspo","title":"init(UnsafeMutablePointer<GPatternSpec>)","type":"init"},{"path":"\/documentation\/glib\/patternspec\/init(_:)-8kl63","title":"init!(UnsafeMutablePointer<GPatternSpec>?)","type":"init"},{"path":"\/documentation\/glib\/patternspec\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/patternspec\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/patternspec\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/patternspec\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/patternspec\/init(pattern:)","title":"init(pattern: UnsafePointer<gchar>!)","type":"init"},{"path":"\/documentation\/glib\/patternspec\/init(raw:)-4k3vk","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/patternspec\/init(raw:)-74g7l","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/patternspec\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GPatternSpec>)","type":"init"},{"path":"\/documentation\/glib\/patternspec\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/patternspec\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/patternspec\/init(retainingraw:)-3amlm","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/patternspec\/init(retainingraw:)-8wxia","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/patternspec\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/patternspec\/pattern_spec_ptr","title":"var pattern_spec_ptr: UnsafeMutablePointer<GPatternSpec>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/patternspec\/copy()","title":"func copy() -> PatternSpecRef!","type":"method"},{"path":"\/documentation\/glib\/patternspec\/equal(pspec2:)","title":"func equal<PatternSpecT>(pspec2: PatternSpecT) -> Bool","type":"method"},{"path":"\/documentation\/glib\/patternspec\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/glib\/patternspec\/match(string:)","title":"func match(string: UnsafePointer<gchar>!) -> Bool","type":"method"},{"path":"\/documentation\/glib\/patternspec\/match(stringlength:string:stringreversed:)","title":"func match(stringLength: Int, string: UnsafePointer<gchar>!, stringReversed: UnsafePointer<gchar>?) -> Bool","type":"method"},{"path":"\/documentation\/glib\/patternspec\/patternmatch(string:)","title":"func patternMatch(string: UnsafePointer<gchar>!) -> Bool","type":"method"},{"path":"\/documentation\/glib\/patternspec\/patternmatch(stringlength:string:stringreversed:)","title":"func patternMatch(stringLength: Int, string: UnsafePointer<gchar>!, stringReversed: UnsafePointer<gchar>?) -> Bool","type":"method"}],"path":"\/documentation\/glib\/patternspec\/patternspecprotocol-implementations","title":"PatternSpecProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/patternspec","title":"PatternSpec","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/pollfd\/init(_:)-2rzk5","title":"init!(UnsafePointer<GPollFD>?)","type":"init"},{"path":"\/documentation\/glib\/pollfd\/init(_:)-2xjwq","title":"init!(UnsafeMutablePointer<GPollFD>?)","type":"init"},{"path":"\/documentation\/glib\/pollfd\/init(_:)-6e9w5","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/pollfd\/init(_:)-71txp","title":"init(UnsafePointer<GPollFD>)","type":"init"},{"path":"\/documentation\/glib\/pollfd\/init(_:)-9xpnj","title":"init(UnsafeMutablePointer<GPollFD>)","type":"init"},{"path":"\/documentation\/glib\/pollfd\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/pollfd\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/pollfd\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/pollfd\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/pollfd\/init(raw:)-8jzho","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/pollfd\/init(raw:)-8v6ev","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/pollfd\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GPollFD>)","type":"init"},{"path":"\/documentation\/glib\/pollfd\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/pollfd\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/pollfd\/init(retainingraw:)-13d62","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/pollfd\/init(retainingraw:)-9699i","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/pollfd\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/pollfd\/events","title":"var events: gushort","type":"property"},{"path":"\/documentation\/glib\/pollfd\/fd","title":"var fd: gint","type":"property"},{"path":"\/documentation\/glib\/pollfd\/pollfd_ptr","title":"var pollfd_ptr: UnsafeMutablePointer<GPollFD>!","type":"property"},{"path":"\/documentation\/glib\/pollfd\/revents","title":"var revents: gushort","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/pollfd\/poll(nfds:timeout:)","title":"func poll(nfds: Int, timeout: Int) -> Int","type":"method"}],"path":"\/documentation\/glib\/pollfd\/pollfdprotocol-implementations","title":"PollFDProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/pollfd","title":"PollFD","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/private\/init(_:)-43xct","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/private\/init(_:)-59vu8","title":"init(UnsafePointer<GPrivate>)","type":"init"},{"path":"\/documentation\/glib\/private\/init(_:)-5h7m","title":"init(UnsafeMutablePointer<GPrivate>)","type":"init"},{"path":"\/documentation\/glib\/private\/init(_:)-7ag3n","title":"init!(UnsafePointer<GPrivate>?)","type":"init"},{"path":"\/documentation\/glib\/private\/init(_:)-8nnk5","title":"init!(UnsafeMutablePointer<GPrivate>?)","type":"init"},{"path":"\/documentation\/glib\/private\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/private\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/private\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/private\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/private\/init(raw:)-541qk","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/private\/init(raw:)-8yw5l","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/private\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GPrivate>)","type":"init"},{"path":"\/documentation\/glib\/private\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/private\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/private\/init(retainingraw:)-1k20d","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/private\/init(retainingraw:)-5ewko","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/private\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/private\/get()","title":"func get() -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/private\/replace(value:)","title":"func replace(value: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/private\/set(value:)","title":"func set(value: gpointer?)","type":"method"}],"path":"\/documentation\/glib\/private\/privateprotocol-implementations","title":"PrivateProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/private","title":"Private","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/ptrarray\/init(_:)-1tpev","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/ptrarray\/init(_:)-2zhye","title":"init(UnsafeMutablePointer<GPtrArray>)","type":"init"},{"path":"\/documentation\/glib\/ptrarray\/init(_:)-4yb9e","title":"init!(UnsafePointer<GPtrArray>?)","type":"init"},{"path":"\/documentation\/glib\/ptrarray\/init(_:)-7c8tj","title":"init!(UnsafeMutablePointer<GPtrArray>?)","type":"init"},{"path":"\/documentation\/glib\/ptrarray\/init(_:)-9gavy","title":"init(UnsafePointer<GPtrArray>)","type":"init"},{"path":"\/documentation\/glib\/ptrarray\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/ptrarray\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/ptrarray\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/ptrarray\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/ptrarray\/init(raw:)-1ad1g","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/ptrarray\/init(raw:)-4fd0r","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/ptrarray\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GPtrArray>)","type":"init"},{"path":"\/documentation\/glib\/ptrarray\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/ptrarray\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/ptrarray\/init(retainingraw:)-4etl5","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/ptrarray\/init(retainingraw:)-6z660","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/ptrarray\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/ptrarray\/new(full:elementfreefunc:)","title":"static func new(full: Int, elementFreeFunc: GDestroyNotify?) -> PtrArray!","type":"method"},{"path":"\/documentation\/glib\/ptrarray\/new(take:len:elementfreefunc:)","title":"static func new(take: UnsafeMutablePointer<gpointer?>!, len: Int, elementFreeFunc: GDestroyNotify?) -> PtrArray!","type":"method"},{"path":"\/documentation\/glib\/ptrarray\/newfrom(array:len:copyfunc:copyfuncuserdata:elementfreefunc:)","title":"static func newFrom(array: UnsafeMutablePointer<gpointer?>!, len: Int, copyFunc: GCopyFunc?, copyFuncUserData: gpointer?, elementFreeFunc: GDestroyNotify?) -> PtrArray!","type":"method"},{"path":"\/documentation\/glib\/ptrarray\/newfrom(nullterminatedarray:copyfunc:copyfuncuserdata:elementfreefunc:)","title":"static func newFrom(nullTerminatedArray: UnsafeMutablePointer<gpointer?>!, copyFunc: GCopyFunc?, copyFuncUserData: gpointer?, elementFreeFunc: GDestroyNotify?) -> PtrArray!","type":"method"},{"path":"\/documentation\/glib\/ptrarray\/newnullterminated(null_terminated:elementfreefunc:nullterminated:)","title":"static func newNullTerminated(null_terminated: Int, elementFreeFunc: GDestroyNotify?, nullTerminated: Bool) -> PtrArray!","type":"method"},{"path":"\/documentation\/glib\/ptrarray\/newtakenullterminated(take_null_terminated:elementfreefunc:)","title":"static func newTakeNullTerminated(take_null_terminated: UnsafeMutablePointer<gpointer?>!, elementFreeFunc: GDestroyNotify?) -> PtrArray!","type":"method"},{"path":"\/documentation\/glib\/ptrarray\/newwith(freefunc:)","title":"static func newWith(freeFunc: GDestroyNotify?) -> PtrArray!","type":"method"},{"path":"\/documentation\/glib\/ptrarray\/sizednew(sized:)","title":"static func sizedNew(sized: Int) -> PtrArray!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/ptrarray\/isnullterminated","title":"var isNullTerminated: Bool","type":"property"},{"path":"\/documentation\/glib\/ptrarray\/len","title":"var len: guint","type":"property"},{"path":"\/documentation\/glib\/ptrarray\/pdata","title":"var pdata: UnsafeMutablePointer<gpointer?>!","type":"property"},{"path":"\/documentation\/glib\/ptrarray\/ptr_array_ptr","title":"var ptr_array_ptr: UnsafeMutablePointer<GPtrArray>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/ptrarray\/add(data:)","title":"func add(data: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/ptrarray\/copy(func:userdata:)","title":"func copy(func: GCopyFunc?, userData: gpointer?) -> PtrArrayRef!","type":"method"},{"path":"\/documentation\/glib\/ptrarray\/extend(array:func:userdata:)","title":"func extend<PtrArrayT>(array: PtrArrayT, func: GCopyFunc?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/ptrarray\/extendandsteal(array:)","title":"func extendAndSteal<PtrArrayT>(array: PtrArrayT)","type":"method"},{"path":"\/documentation\/glib\/ptrarray\/find(needle:index:)","title":"func find(needle: gconstpointer?, index: UnsafeMutablePointer<guint>!) -> Bool","type":"method"},{"path":"\/documentation\/glib\/ptrarray\/findwithequalfunc(needle:equalfunc:index:)","title":"func findWithEqualFunc(needle: gconstpointer?, equalFunc: GEqualFunc?, index: UnsafeMutablePointer<guint>!) -> Bool","type":"method"},{"path":"\/documentation\/glib\/ptrarray\/foreach(func:userdata:)","title":"func foreach(func: GFunc?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/ptrarray\/free(freeseg:)","title":"func free(freeSeg: Bool) -> UnsafeMutablePointer<gpointer?>?","type":"method"},{"path":"\/documentation\/glib\/ptrarray\/insert(index:data:)","title":"func insert(index: Int, data: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/ptrarray\/ptrarrayfind(needle:index:)","title":"func ptrArrayFind(needle: gconstpointer?, index: UnsafeMutablePointer<guint>!) -> Bool","type":"method"},{"path":"\/documentation\/glib\/ptrarray\/ptrarrayfindwithequalfunc(needle:equalfunc:index:)","title":"func ptrArrayFindWithEqualFunc(needle: gconstpointer?, equalFunc: GEqualFunc?, index: UnsafeMutablePointer<guint>!) -> Bool","type":"method"},{"path":"\/documentation\/glib\/ptrarray\/ref()","title":"func ref() -> PtrArrayRef!","type":"method"},{"path":"\/documentation\/glib\/ptrarray\/remove(data:)","title":"func remove(data: gpointer?) -> Bool","type":"method"},{"path":"\/documentation\/glib\/ptrarray\/remove(index:)","title":"func remove(index: Int) -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/ptrarray\/removefast(data:)","title":"func removeFast(data: gpointer?) -> Bool","type":"method"},{"path":"\/documentation\/glib\/ptrarray\/removeindexfast(index:)","title":"func removeIndexFast(index: Int) -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/ptrarray\/removerange(index:length:)","title":"func removeRange(index: Int, length: Int) -> PtrArrayRef!","type":"method"},{"path":"\/documentation\/glib\/ptrarray\/setfreefunc(elementfreefunc:)","title":"func setFreeFunc(elementFreeFunc: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/glib\/ptrarray\/setsize(length:)","title":"func setSize(length: Int)","type":"method"},{"path":"\/documentation\/glib\/ptrarray\/sort(comparefunc:)","title":"func sort(compareFunc: GCompareFunc?)","type":"method"},{"path":"\/documentation\/glib\/ptrarray\/sortvalues(comparefunc:)","title":"func sortValues(compareFunc: GCompareFunc?)","type":"method"},{"path":"\/documentation\/glib\/ptrarray\/sortvalueswithdata(comparefunc:userdata:)","title":"func sortValuesWithData(compareFunc: GCompareDataFunc?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/ptrarray\/sortwithdata(comparefunc:userdata:)","title":"func sortWithData(compareFunc: GCompareDataFunc?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/ptrarray\/steal(index:)","title":"func steal(index: Int) -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/ptrarray\/steal(len:)","title":"func steal(len: UnsafeMutablePointer<gsize>!) -> UnsafeMutablePointer<gpointer?>?","type":"method"},{"path":"\/documentation\/glib\/ptrarray\/stealindexfast(index:)","title":"func stealIndexFast(index: Int) -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/ptrarray\/unref()","title":"func unref()","type":"method"}],"path":"\/documentation\/glib\/ptrarray\/ptrarrayprotocol-implementations","title":"PtrArrayProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/ptrarray","title":"PtrArray","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/queue\/init(_:)-51py5","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/queue\/init(_:)-66bnd","title":"init!(UnsafePointer<GQueue>?)","type":"init"},{"path":"\/documentation\/glib\/queue\/init(_:)-6m09o","title":"init(UnsafeMutablePointer<GQueue>)","type":"init"},{"path":"\/documentation\/glib\/queue\/init(_:)-96kix","title":"init!(UnsafeMutablePointer<GQueue>?)","type":"init"},{"path":"\/documentation\/glib\/queue\/init(_:)-9g5je","title":"init(UnsafePointer<GQueue>)","type":"init"},{"path":"\/documentation\/glib\/queue\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/queue\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/queue\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/queue\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/queue\/init(raw:)-4896m","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/queue\/init(raw:)-flz5","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/queue\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GQueue>)","type":"init"},{"path":"\/documentation\/glib\/queue\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/queue\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/queue\/init(retainingraw:)-6p8it","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/queue\/init(retainingraw:)-9bslm","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/queue\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/queue\/head","title":"var head: ListRef!","type":"property"},{"path":"\/documentation\/glib\/queue\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/glib\/queue\/length","title":"var length: Int","type":"property"},{"path":"\/documentation\/glib\/queue\/tail","title":"var tail: ListRef!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/queue\/clear()","title":"func clear()","type":"method"},{"path":"\/documentation\/glib\/queue\/clearfull(freefunc:)","title":"func clearFull(freeFunc: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/glib\/queue\/copy()","title":"func copy() -> QueueRef!","type":"method"},{"path":"\/documentation\/glib\/queue\/delete(link:)","title":"func delete<ListT>(link: ListT)","type":"method"},{"path":"\/documentation\/glib\/queue\/find(data:)","title":"func find(data: gconstpointer?) -> ReferenceListRef<gpointer>!","type":"method"},{"path":"\/documentation\/glib\/queue\/findcustom(data:func:)","title":"func findCustom(data: gconstpointer?, func: GCompareFunc?) -> ReferenceListRef<gpointer>!","type":"method"},{"path":"\/documentation\/glib\/queue\/foreach(func:userdata:)","title":"func foreach(func: GFunc?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/queue\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/glib\/queue\/freefull(freefunc:)","title":"func freeFull(freeFunc: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/glib\/queue\/getlength()","title":"func getLength() -> Int","type":"method"},{"path":"\/documentation\/glib\/queue\/index(data:)","title":"func index(data: gconstpointer?) -> Int","type":"method"},{"path":"\/documentation\/glib\/queue\/init_()","title":"func init_()","type":"method"},{"path":"\/documentation\/glib\/queue\/insertafter(sibling:data:)","title":"func insertAfter(sibling: ListRef?, data: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/queue\/insertafterlink(sibling:link:)","title":"func insertAfterLink<ListT>(sibling: ListT?, link: ListT)","type":"method"},{"path":"\/documentation\/glib\/queue\/insertbefore(sibling:data:)","title":"func insertBefore(sibling: ListRef?, data: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/queue\/insertbeforelink(sibling:link:)","title":"func insertBeforeLink<ListT>(sibling: ListT?, link: ListT)","type":"method"},{"path":"\/documentation\/glib\/queue\/insertsorted(data:func:userdata:)","title":"func insertSorted(data: gpointer?, func: GCompareDataFunc?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/queue\/linkindex(link:)","title":"func linkIndex<ListT>(link: ListT) -> Int","type":"method"},{"path":"\/documentation\/glib\/queue\/peekhead()","title":"func peekHead() -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/queue\/peekheadlink()","title":"func peekHeadLink() -> ReferenceListRef<gpointer>!","type":"method"},{"path":"\/documentation\/glib\/queue\/peeknth(n:)","title":"func peekNth(n: Int) -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/queue\/peeknthlink(n:)","title":"func peekNthLink(n: Int) -> ReferenceListRef<gpointer>!","type":"method"},{"path":"\/documentation\/glib\/queue\/peektail()","title":"func peekTail() -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/queue\/peektaillink()","title":"func peekTailLink() -> ReferenceListRef<gpointer>!","type":"method"},{"path":"\/documentation\/glib\/queue\/pophead()","title":"func popHead() -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/queue\/popheadlink()","title":"func popHeadLink() -> ReferenceListRef<gpointer>!","type":"method"},{"path":"\/documentation\/glib\/queue\/popnth(n:)","title":"func popNth(n: Int) -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/queue\/popnthlink(n:)","title":"func popNthLink(n: Int) -> ReferenceListRef<gpointer>!","type":"method"},{"path":"\/documentation\/glib\/queue\/poptail()","title":"func popTail() -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/queue\/poptaillink()","title":"func popTailLink() -> ReferenceListRef<gpointer>!","type":"method"},{"path":"\/documentation\/glib\/queue\/pushhead(data:)","title":"func pushHead(data: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/queue\/pushhead(link:)","title":"func pushHead<ListT>(link: ListT)","type":"method"},{"path":"\/documentation\/glib\/queue\/pushnth(data:n:)","title":"func pushNth(data: gpointer?, n: Int)","type":"method"},{"path":"\/documentation\/glib\/queue\/pushnthlink(n:link:)","title":"func pushNthLink<ListT>(n: Int, link: ListT)","type":"method"},{"path":"\/documentation\/glib\/queue\/pushtail(data:)","title":"func pushTail(data: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/queue\/pushtail(link:)","title":"func pushTail<ListT>(link: ListT)","type":"method"},{"path":"\/documentation\/glib\/queue\/remove(data:)","title":"func remove(data: gconstpointer?) -> Bool","type":"method"},{"path":"\/documentation\/glib\/queue\/removeall(data:)","title":"func removeAll(data: gconstpointer?) -> Int","type":"method"},{"path":"\/documentation\/glib\/queue\/reverse()","title":"func reverse()","type":"method"},{"path":"\/documentation\/glib\/queue\/sort(comparefunc:userdata:)","title":"func sort(compareFunc: GCompareDataFunc?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/queue\/unlink(link:)","title":"func unlink<ListT>(link: ListT)","type":"method"}],"path":"\/documentation\/glib\/queue\/queueprotocol-implementations","title":"QueueProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/queue","title":"Queue","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/rwlock\/init(_:)-187l8","title":"init!(UnsafePointer<GRWLock>?)","type":"init"},{"path":"\/documentation\/glib\/rwlock\/init(_:)-21sx0","title":"init(UnsafePointer<GRWLock>)","type":"init"},{"path":"\/documentation\/glib\/rwlock\/init(_:)-643cj","title":"init(UnsafeMutablePointer<GRWLock>)","type":"init"},{"path":"\/documentation\/glib\/rwlock\/init(_:)-69bry","title":"init!(UnsafeMutablePointer<GRWLock>?)","type":"init"},{"path":"\/documentation\/glib\/rwlock\/init(_:)-9jfa5","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/rwlock\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/rwlock\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/rwlock\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/rwlock\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/rwlock\/init(raw:)-7cuhr","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/rwlock\/init(raw:)-9zeby","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/rwlock\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GRWLock>)","type":"init"},{"path":"\/documentation\/glib\/rwlock\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/rwlock\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/rwlock\/init(retainingraw:)-46ai7","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/rwlock\/init(retainingraw:)-4hhp2","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/rwlock\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/rwlock\/clear()","title":"func clear()","type":"method"},{"path":"\/documentation\/glib\/rwlock\/init_()","title":"func init_()","type":"method"},{"path":"\/documentation\/glib\/rwlock\/readerlock()","title":"func readerLock()","type":"method"},{"path":"\/documentation\/glib\/rwlock\/readertrylock()","title":"func readerTrylock() -> Bool","type":"method"},{"path":"\/documentation\/glib\/rwlock\/readerunlock()","title":"func readerUnlock()","type":"method"},{"path":"\/documentation\/glib\/rwlock\/writerlock()","title":"func writerLock()","type":"method"},{"path":"\/documentation\/glib\/rwlock\/writertrylock()","title":"func writerTrylock() -> Bool","type":"method"},{"path":"\/documentation\/glib\/rwlock\/writerunlock()","title":"func writerUnlock()","type":"method"}],"path":"\/documentation\/glib\/rwlock\/rwlockprotocol-implementations","title":"RWLockProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/rwlock","title":"RWLock","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/rand\/init()","title":"init()","type":"init"},{"path":"\/documentation\/glib\/rand\/init(_:)-287uz","title":"init!(UnsafePointer<GRand>?)","type":"init"},{"path":"\/documentation\/glib\/rand\/init(_:)-5supm","title":"init(UnsafePointer<GRand>)","type":"init"},{"path":"\/documentation\/glib\/rand\/init(_:)-5vx96","title":"init(UnsafeMutablePointer<GRand>)","type":"init"},{"path":"\/documentation\/glib\/rand\/init(_:)-84qmw","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/rand\/init(_:)-8w915","title":"init!(UnsafeMutablePointer<GRand>?)","type":"init"},{"path":"\/documentation\/glib\/rand\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/rand\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/rand\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/rand\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/rand\/init(raw:)-5aif2","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/rand\/init(raw:)-7x2en","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/rand\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GRand>)","type":"init"},{"path":"\/documentation\/glib\/rand\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/rand\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/rand\/init(retainingraw:)-3t2d4","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/rand\/init(retainingraw:)-o2fv","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/rand\/init(seed:)","title":"init(seed: guint32)","type":"init"},{"path":"\/documentation\/glib\/rand\/init(seedarray:seedlength:)","title":"init(seedArray: UnsafePointer<guint32>!, seedLength: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/rand\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/rand\/newwith(seed:)","title":"static func newWith(seed: guint32) -> Rand!","type":"method"},{"path":"\/documentation\/glib\/rand\/newwith(seedarray:seedlength:)","title":"static func newWith(seedArray: UnsafePointer<guint32>!, seedLength: Int) -> Rand!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/rand\/rand_ptr","title":"var rand_ptr: UnsafeMutablePointer<GRand>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/rand\/cdouble()","title":"func CDouble() -> Double","type":"method"},{"path":"\/documentation\/glib\/rand\/cint()","title":"func CInt() -> guint32","type":"method"},{"path":"\/documentation\/glib\/rand\/copy()","title":"func copy() -> RandRef!","type":"method"},{"path":"\/documentation\/glib\/rand\/doublerange(begin:end:)","title":"func doubleRange(begin: Double, end: Double) -> Double","type":"method"},{"path":"\/documentation\/glib\/rand\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/glib\/rand\/intrange(begin:end:)","title":"func intRange(begin: gint32, end: gint32) -> gint32","type":"method"},{"path":"\/documentation\/glib\/rand\/set(seed:)","title":"func set(seed: guint32)","type":"method"},{"path":"\/documentation\/glib\/rand\/setseedarray(seed:seedlength:)","title":"func setSeedArray(seed: UnsafePointer<guint32>!, seedLength: Int)","type":"method"}],"path":"\/documentation\/glib\/rand\/randprotocol-implementations","title":"RandProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/rand","title":"Rand","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/recmutex\/init(_:)-2b8v3","title":"init(UnsafeMutablePointer<GRecMutex>)","type":"init"},{"path":"\/documentation\/glib\/recmutex\/init(_:)-4flss","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/recmutex\/init(_:)-61i8v","title":"init!(UnsafePointer<GRecMutex>?)","type":"init"},{"path":"\/documentation\/glib\/recmutex\/init(_:)-8reg0","title":"init!(UnsafeMutablePointer<GRecMutex>?)","type":"init"},{"path":"\/documentation\/glib\/recmutex\/init(_:)-zcy5","title":"init(UnsafePointer<GRecMutex>)","type":"init"},{"path":"\/documentation\/glib\/recmutex\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/recmutex\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/recmutex\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/recmutex\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/recmutex\/init(raw:)-6h8m2","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/recmutex\/init(raw:)-8dxuv","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/recmutex\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GRecMutex>)","type":"init"},{"path":"\/documentation\/glib\/recmutex\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/recmutex\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/recmutex\/init(retainingraw:)-5tuav","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/recmutex\/init(retainingraw:)-9mh6k","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/recmutex\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/recmutex\/clear()","title":"func clear()","type":"method"},{"path":"\/documentation\/glib\/recmutex\/init_()","title":"func init_()","type":"method"},{"path":"\/documentation\/glib\/recmutex\/lock()","title":"func lock()","type":"method"},{"path":"\/documentation\/glib\/recmutex\/trylock()","title":"func trylock() -> Bool","type":"method"},{"path":"\/documentation\/glib\/recmutex\/unlock()","title":"func unlock()","type":"method"}],"path":"\/documentation\/glib\/recmutex\/recmutexprotocol-implementations","title":"RecMutexProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/recmutex","title":"RecMutex","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/refarray\/init(arrayliteral:)","title":"init(arrayLiteral: Element...)","type":"init"},{"path":"\/documentation\/glib\/refarray\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/refarray\/freeelements","title":"var freeElements: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/refarray\/last","title":"var last: Self.Element?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/refarray\/difference(from:)","title":"func difference<C>(from: C) -> CollectionDifference<Self.Element>","type":"method"},{"path":"\/documentation\/glib\/refarray\/difference(from:by:)","title":"func difference<C>(from: C, by: (C.Element, Self.Element) -> Bool) -> CollectionDifference<Self.Element>","type":"method"},{"path":"\/documentation\/glib\/refarray\/droplast(_:)","title":"func dropLast(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/refarray\/firstrange(of:)-9f9h","title":"func firstRange<C>(of: C) -> Range<Self.Index>?","type":"method"},{"path":"\/documentation\/glib\/refarray\/formindex(before:)","title":"func formIndex(before: inout Self.Index)","type":"method"},{"path":"\/documentation\/glib\/refarray\/joined(separator:)-72xii","title":"func joined(separator: String) -> String","type":"method"},{"path":"\/documentation\/glib\/refarray\/last(where:)","title":"func last(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/refarray\/lastindex(of:)","title":"func lastIndex(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/glib\/refarray\/lastindex(where:)","title":"func lastIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/glib\/refarray\/reversed()","title":"func reversed() -> ReversedCollection<Self>","type":"method"},{"path":"\/documentation\/glib\/refarray\/suffix(_:)","title":"func suffix(Int) -> Self.SubSequence","type":"method"}],"path":"\/documentation\/glib\/refarray\/bidirectionalcollection-implementations","title":"BidirectionalCollection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/refarray\/first","title":"var first: Self.Element?","type":"property"},{"path":"\/documentation\/glib\/refarray\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/glib\/refarray\/underestimatedcount","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/refarray\/contains(_:)-6i8bv","title":"func contains<C>(C) -> Bool","type":"method"},{"path":"\/documentation\/glib\/refarray\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/refarray\/dropfirst(_:)","title":"func dropFirst(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/refarray\/firstindex(of:)","title":"func firstIndex(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/glib\/refarray\/firstindex(where:)","title":"func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/glib\/refarray\/firstrange(of:)-1qumv","title":"func firstRange<C>(of: C) -> Range<Self.Index>?","type":"method"},{"path":"\/documentation\/glib\/refarray\/formindex(_:offsetby:)","title":"func formIndex(inout Self.Index, offsetBy: Int)","type":"method"},{"path":"\/documentation\/glib\/refarray\/formindex(_:offsetby:limitedby:)","title":"func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool","type":"method"},{"path":"\/documentation\/glib\/refarray\/formindex(after:)","title":"func formIndex(after: inout Self.Index)","type":"method"},{"path":"\/documentation\/glib\/refarray\/index(of:)","title":"func index(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/glib\/refarray\/makeiterator()","title":"func makeIterator() -> IndexingIterator<Self>","type":"method"},{"path":"\/documentation\/glib\/refarray\/map(_:)-3ry8t","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/glib\/refarray\/prefix(_:)","title":"func prefix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/refarray\/prefix(through:)","title":"func prefix(through: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/refarray\/prefix(upto:)","title":"func prefix(upTo: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/refarray\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/refarray\/randomelement()","title":"func randomElement() -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/refarray\/randomelement(using:)","title":"func randomElement<T>(using: inout T) -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/refarray\/ranges(of:)","title":"func ranges<C>(of: C) -> [Range<Self.Index>]","type":"method"},{"path":"\/documentation\/glib\/refarray\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/glib\/refarray\/split(separator:maxsplits:omittingemptysubsequences:)-3znb0","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/glib\/refarray\/split(separator:maxsplits:omittingemptysubsequences:)-43kug","title":"func split<C>(separator: C, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/glib\/refarray\/suffix(from:)","title":"func suffix(from: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/refarray\/trimmingprefix(_:)","title":"func trimmingPrefix<Prefix>(Prefix) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/refarray\/trimmingprefix(while:)","title":"func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"}],"path":"\/documentation\/glib\/refarray\/collection-implementations","title":"Collection Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/refarray\/partition(by:)-5g0tj","title":"func partition(by: (Self.Element) throws -> Bool) rethrows -> Self.Index","type":"method"},{"path":"\/documentation\/glib\/refarray\/partition(by:)-66rbr","title":"func partition(by: (Self.Element) throws -> Bool) rethrows -> Self.Index","type":"method"},{"path":"\/documentation\/glib\/refarray\/reverse()","title":"func reverse()","type":"method"},{"path":"\/documentation\/glib\/refarray\/shuffle()","title":"func shuffle()","type":"method"},{"path":"\/documentation\/glib\/refarray\/shuffle(using:)","title":"func shuffle<T>(using: inout T)","type":"method"},{"path":"\/documentation\/glib\/refarray\/sort()","title":"func sort()","type":"method"},{"path":"\/documentation\/glib\/refarray\/sort(by:)","title":"func sort(by: (Self.Element, Self.Element) throws -> Bool) rethrows","type":"method"},{"path":"\/documentation\/glib\/refarray\/sort(using:)-6opf8","title":"func sort<Comparator>(using: Comparator)","type":"method"},{"path":"\/documentation\/glib\/refarray\/sort(using:)-7yhd3","title":"func sort<S, Comparator>(using: S)","type":"method"},{"path":"\/documentation\/glib\/refarray\/swapat(_:_:)","title":"func swapAt(Self.Index, Self.Index)","type":"method"},{"path":"\/documentation\/glib\/refarray\/withcontiguousmutablestorageifavailable(_:)","title":"func withContiguousMutableStorageIfAvailable<R>((inout UnsafeMutableBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"}],"path":"\/documentation\/glib\/refarray\/mutablecollection-implementations","title":"MutableCollection Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/refarray\/index(_:offsetby:limitedby:)","title":"func index(Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?","type":"method"}],"path":"\/documentation\/glib\/refarray\/randomaccesscollection-implementations","title":"RandomAccessCollection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/refarray\/count","title":"var count: Int","type":"property"},{"path":"\/documentation\/glib\/refarray\/endindex","title":"var endIndex: Int","type":"property"},{"path":"\/documentation\/glib\/refarray\/startindex","title":"var startIndex: Int","type":"property"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/glib\/refarray\/subscript(_:)","title":"subscript(Int) -> Self.Element","type":"subscript"}],"path":"\/documentation\/glib\/refarray\/refarrayprotocol-implementations","title":"RefArrayProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/refarray\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"path":"\/documentation\/glib\/refarray\/publisher","title":"var publisher: Publishers.Sequence<Self, Never>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/refarray\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/refarray\/compactmap(_:)","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/glib\/refarray\/compare(_:_:)","title":"func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult","type":"method"},{"path":"\/documentation\/glib\/refarray\/contains(_:)-zn3k","title":"func contains(Self.Element) -> Bool","type":"method"},{"path":"\/documentation\/glib\/refarray\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/refarray\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/glib\/refarray\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/refarray\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/refarray\/filter(_:)-3k6ir","title":"func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/refarray\/filter(_:)-7i7ds","title":"func filter(Predicate<Self.Element>) throws -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/refarray\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/refarray\/flatmap(_:)-27mwh","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/glib\/refarray\/flatmap(_:)-9avkl","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/glib\/refarray\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/glib\/refarray\/formatted()","title":"func formatted() -> String","type":"method"},{"path":"\/documentation\/glib\/refarray\/formatted(_:)","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/glib\/refarray\/joined()","title":"func joined() -> FlattenSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/refarray\/joined(separator:)-48lip","title":"func joined<Separator>(separator: Separator) -> JoinedSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/refarray\/joined(separator:)-7c4on","title":"func joined(separator: String) -> String","type":"method"},{"path":"\/documentation\/glib\/refarray\/lexicographicallyprecedes(_:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/glib\/refarray\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/refarray\/map(_:)-7rw22","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/glib\/refarray\/max()","title":"func max() -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/refarray\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/refarray\/min()","title":"func min() -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/refarray\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/refarray\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/glib\/refarray\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/glib\/refarray\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/refarray\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/refarray\/sorted()","title":"func sorted() -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/refarray\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/refarray\/sorted(using:)-5cjme","title":"func sorted<S, Comparator>(using: S) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/refarray\/sorted(using:)-81q52","title":"func sorted<Comparator>(using: Comparator) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/refarray\/split(separator:maxsplits:omittingemptysubsequences:)-24x5","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/glib\/refarray\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/glib\/refarray\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/refarray\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"}],"path":"\/documentation\/glib\/refarray\/sequence-implementations","title":"Sequence Implementations","type":"symbol"}],"path":"\/documentation\/glib\/refarray","title":"RefArray","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/reflist\/init(arrayliteral:)","title":"init(arrayLiteral: Element...)","type":"init"},{"path":"\/documentation\/glib\/reflist\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/reflist\/freeelements","title":"var freeElements: Bool","type":"property"},{"path":"\/documentation\/glib\/reflist\/freenodes","title":"var freeNodes: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/reflist\/element","title":"var element: Self.Element!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/reflist\/makeiterator()","title":"func makeIterator() -> RefListIterator<Self.Element>","type":"method"}],"path":"\/documentation\/glib\/reflist\/reflistprotocol-implementations","title":"RefListProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/reflist\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"path":"\/documentation\/glib\/reflist\/publisher","title":"var publisher: Publishers.Sequence<Self, Never>","type":"property"},{"path":"\/documentation\/glib\/reflist\/underestimatedcount","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/reflist\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/reflist\/compactmap(_:)","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/glib\/reflist\/compare(_:_:)","title":"func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult","type":"method"},{"path":"\/documentation\/glib\/reflist\/contains(_:)","title":"func contains(Self.Element) -> Bool","type":"method"},{"path":"\/documentation\/glib\/reflist\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/reflist\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> DropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/reflist\/dropfirst(_:)","title":"func dropFirst(Int) -> DropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/reflist\/droplast(_:)","title":"func dropLast(Int) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/reflist\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/glib\/reflist\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/reflist\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/reflist\/filter(_:)-3slug","title":"func filter(Predicate<Self.Element>) throws -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/reflist\/filter(_:)-9a851","title":"func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/reflist\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/reflist\/flatmap(_:)-5dypw","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/glib\/reflist\/flatmap(_:)-6tegz","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/glib\/reflist\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/glib\/reflist\/formatted()","title":"func formatted() -> String","type":"method"},{"path":"\/documentation\/glib\/reflist\/formatted(_:)","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/glib\/reflist\/joined()","title":"func joined() -> FlattenSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/reflist\/joined(separator:)-3l4yu","title":"func joined<Separator>(separator: Separator) -> JoinedSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/reflist\/joined(separator:)-60afl","title":"func joined(separator: String) -> String","type":"method"},{"path":"\/documentation\/glib\/reflist\/lexicographicallyprecedes(_:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/glib\/reflist\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/reflist\/map(_:)","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/glib\/reflist\/max()","title":"func max() -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/reflist\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/reflist\/min()","title":"func min() -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/reflist\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/reflist\/prefix(_:)","title":"func prefix(Int) -> PrefixSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/reflist\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/reflist\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/glib\/reflist\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/glib\/reflist\/reversed()","title":"func reversed() -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/reflist\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/reflist\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/reflist\/sorted()","title":"func sorted() -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/reflist\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/reflist\/sorted(using:)-3k29d","title":"func sorted<Comparator>(using: Comparator) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/reflist\/sorted(using:)-7hkzs","title":"func sorted<S, Comparator>(using: S) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/reflist\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/glib\/reflist\/split(separator:maxsplits:omittingemptysubsequences:)","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/glib\/reflist\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/glib\/reflist\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/reflist\/suffix(_:)","title":"func suffix(Int) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/reflist\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"}],"path":"\/documentation\/glib\/reflist\/sequence-implementations","title":"Sequence Implementations","type":"symbol"}],"path":"\/documentation\/glib\/reflist","title":"RefList","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/refslist\/init(arrayliteral:)","title":"init(arrayLiteral: Element...)","type":"init"},{"path":"\/documentation\/glib\/refslist\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/refslist\/freeelements","title":"var freeElements: Bool","type":"property"},{"path":"\/documentation\/glib\/refslist\/freenodes","title":"var freeNodes: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/refslist\/element","title":"var element: Self.Element!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/refslist\/makeiterator()","title":"func makeIterator() -> RefSListIterator<Self.Element>","type":"method"}],"path":"\/documentation\/glib\/refslist\/refslistprotocol-implementations","title":"RefSListProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/refslist\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"path":"\/documentation\/glib\/refslist\/publisher","title":"var publisher: Publishers.Sequence<Self, Never>","type":"property"},{"path":"\/documentation\/glib\/refslist\/underestimatedcount","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/refslist\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/refslist\/compactmap(_:)","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/glib\/refslist\/compare(_:_:)","title":"func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult","type":"method"},{"path":"\/documentation\/glib\/refslist\/contains(_:)","title":"func contains(Self.Element) -> Bool","type":"method"},{"path":"\/documentation\/glib\/refslist\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/refslist\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> DropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/refslist\/dropfirst(_:)","title":"func dropFirst(Int) -> DropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/refslist\/droplast(_:)","title":"func dropLast(Int) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/refslist\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/glib\/refslist\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/refslist\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/refslist\/filter(_:)-1snob","title":"func filter(Predicate<Self.Element>) throws -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/refslist\/filter(_:)-45te","title":"func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/refslist\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/refslist\/flatmap(_:)-2641d","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/glib\/refslist\/flatmap(_:)-7svr9","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/glib\/refslist\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/glib\/refslist\/formatted()","title":"func formatted() -> String","type":"method"},{"path":"\/documentation\/glib\/refslist\/formatted(_:)","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/glib\/refslist\/joined()","title":"func joined() -> FlattenSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/refslist\/joined(separator:)-5o566","title":"func joined(separator: String) -> String","type":"method"},{"path":"\/documentation\/glib\/refslist\/joined(separator:)-9rn10","title":"func joined<Separator>(separator: Separator) -> JoinedSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/refslist\/lexicographicallyprecedes(_:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/glib\/refslist\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/refslist\/map(_:)","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/glib\/refslist\/max()","title":"func max() -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/refslist\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/refslist\/min()","title":"func min() -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/refslist\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/refslist\/prefix(_:)","title":"func prefix(Int) -> PrefixSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/refslist\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/refslist\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/glib\/refslist\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/glib\/refslist\/reversed()","title":"func reversed() -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/refslist\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/refslist\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/refslist\/sorted()","title":"func sorted() -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/refslist\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/refslist\/sorted(using:)-26qdf","title":"func sorted<Comparator>(using: Comparator) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/refslist\/sorted(using:)-2hxwv","title":"func sorted<S, Comparator>(using: S) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/refslist\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/glib\/refslist\/split(separator:maxsplits:omittingemptysubsequences:)","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/glib\/refslist\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/glib\/refslist\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/refslist\/suffix(_:)","title":"func suffix(Int) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/refslist\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"}],"path":"\/documentation\/glib\/refslist\/sequence-implementations","title":"Sequence Implementations","type":"symbol"}],"path":"\/documentation\/glib\/refslist","title":"RefSList","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/refsequence\/init(arrayliteral:)","title":"init(arrayLiteral: Element...)","type":"init"},{"path":"\/documentation\/glib\/refsequence\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/refsequence\/makeiterator()","title":"func makeIterator() -> RefSequenceIterator<Element>","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/refsequence\/last","title":"var last: Self.Element?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/refsequence\/difference(from:)","title":"func difference<C>(from: C) -> CollectionDifference<Self.Element>","type":"method"},{"path":"\/documentation\/glib\/refsequence\/difference(from:by:)","title":"func difference<C>(from: C, by: (C.Element, Self.Element) -> Bool) -> CollectionDifference<Self.Element>","type":"method"},{"path":"\/documentation\/glib\/refsequence\/distance(from:to:)","title":"func distance(from: Self.Index, to: Self.Index) -> Int","type":"method"},{"path":"\/documentation\/glib\/refsequence\/droplast(_:)","title":"func dropLast(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/refsequence\/firstrange(of:)-wflt","title":"func firstRange<C>(of: C) -> Range<Self.Index>?","type":"method"},{"path":"\/documentation\/glib\/refsequence\/formindex(before:)","title":"func formIndex(before: inout Self.Index)","type":"method"},{"path":"\/documentation\/glib\/refsequence\/index(_:offsetby:limitedby:)","title":"func index(Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?","type":"method"},{"path":"\/documentation\/glib\/refsequence\/joined(separator:)-2mjn6","title":"func joined(separator: String) -> String","type":"method"},{"path":"\/documentation\/glib\/refsequence\/last(where:)","title":"func last(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/refsequence\/lastindex(of:)","title":"func lastIndex(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/glib\/refsequence\/lastindex(where:)","title":"func lastIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/glib\/refsequence\/reversed()","title":"func reversed() -> ReversedCollection<Self>","type":"method"},{"path":"\/documentation\/glib\/refsequence\/suffix(_:)","title":"func suffix(Int) -> Self.SubSequence","type":"method"}],"path":"\/documentation\/glib\/refsequence\/bidirectionalcollection-implementations","title":"BidirectionalCollection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/refsequence\/first","title":"var first: Self.Element?","type":"property"},{"path":"\/documentation\/glib\/refsequence\/indices","title":"var indices: DefaultIndices<Self>","type":"property"},{"path":"\/documentation\/glib\/refsequence\/underestimatedcount","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/refsequence\/contains(_:)-2y02x","title":"func contains<C>(C) -> Bool","type":"method"},{"path":"\/documentation\/glib\/refsequence\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/refsequence\/dropfirst(_:)","title":"func dropFirst(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/refsequence\/firstindex(of:)","title":"func firstIndex(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/glib\/refsequence\/firstindex(where:)","title":"func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/glib\/refsequence\/firstrange(of:)-846nk","title":"func firstRange<C>(of: C) -> Range<Self.Index>?","type":"method"},{"path":"\/documentation\/glib\/refsequence\/formindex(_:offsetby:)","title":"func formIndex(inout Self.Index, offsetBy: Int)","type":"method"},{"path":"\/documentation\/glib\/refsequence\/formindex(_:offsetby:limitedby:)","title":"func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool","type":"method"},{"path":"\/documentation\/glib\/refsequence\/formindex(after:)","title":"func formIndex(after: inout Self.Index)","type":"method"},{"path":"\/documentation\/glib\/refsequence\/index(of:)","title":"func index(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/glib\/refsequence\/map(_:)-bqrb","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/glib\/refsequence\/prefix(_:)","title":"func prefix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/refsequence\/prefix(through:)","title":"func prefix(through: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/refsequence\/prefix(upto:)","title":"func prefix(upTo: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/refsequence\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/refsequence\/randomelement()","title":"func randomElement() -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/refsequence\/randomelement(using:)","title":"func randomElement<T>(using: inout T) -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/refsequence\/ranges(of:)","title":"func ranges<C>(of: C) -> [Range<Self.Index>]","type":"method"},{"path":"\/documentation\/glib\/refsequence\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/glib\/refsequence\/split(separator:maxsplits:omittingemptysubsequences:)-33fa","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/glib\/refsequence\/split(separator:maxsplits:omittingemptysubsequences:)-4uddh","title":"func split<C>(separator: C, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/glib\/refsequence\/suffix(from:)","title":"func suffix(from: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/refsequence\/trimmingprefix(_:)","title":"func trimmingPrefix<Prefix>(Prefix) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/refsequence\/trimmingprefix(while:)","title":"func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"}],"path":"\/documentation\/glib\/refsequence\/collection-implementations","title":"Collection Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/refsequence\/partition(by:)-3ayh4","title":"func partition(by: (Self.Element) throws -> Bool) rethrows -> Self.Index","type":"method"},{"path":"\/documentation\/glib\/refsequence\/partition(by:)-4hk01","title":"func partition(by: (Self.Element) throws -> Bool) rethrows -> Self.Index","type":"method"},{"path":"\/documentation\/glib\/refsequence\/reverse()","title":"func reverse()","type":"method"},{"path":"\/documentation\/glib\/refsequence\/swapat(_:_:)","title":"func swapAt(Self.Index, Self.Index)","type":"method"},{"path":"\/documentation\/glib\/refsequence\/withcontiguousmutablestorageifavailable(_:)","title":"func withContiguousMutableStorageIfAvailable<R>((inout UnsafeMutableBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"}],"path":"\/documentation\/glib\/refsequence\/mutablecollection-implementations","title":"MutableCollection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/refsequence\/count","title":"var count: Int","type":"property"},{"path":"\/documentation\/glib\/refsequence\/endindex","title":"var endIndex: SequenceIterRef","type":"property"},{"path":"\/documentation\/glib\/refsequence\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/glib\/refsequence\/startindex","title":"var startIndex: SequenceIterRef","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/refsequence\/index(_:offsetby:)","title":"func index(SequenceIterRef, offsetBy: Int) -> SequenceIterRef","type":"method"},{"path":"\/documentation\/glib\/refsequence\/index(after:)","title":"func index(after: SequenceIterRef) -> SequenceIterRef","type":"method"},{"path":"\/documentation\/glib\/refsequence\/index(before:)","title":"func index(before: SequenceIterRef) -> SequenceIterRef","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/glib\/refsequence\/subscript(_:)","title":"subscript(SequenceIterRef) -> Self.Element","type":"subscript"}],"path":"\/documentation\/glib\/refsequence\/refsequenceprotocol-implementations","title":"RefSequenceProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/refsequence\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"path":"\/documentation\/glib\/refsequence\/publisher","title":"var publisher: Publishers.Sequence<Self, Never>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/refsequence\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/refsequence\/compactmap(_:)","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/glib\/refsequence\/compare(_:_:)","title":"func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult","type":"method"},{"path":"\/documentation\/glib\/refsequence\/contains(_:)-4mgba","title":"func contains(Self.Element) -> Bool","type":"method"},{"path":"\/documentation\/glib\/refsequence\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/refsequence\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/glib\/refsequence\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/refsequence\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/refsequence\/filter(_:)-24rah","title":"func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/refsequence\/filter(_:)-8yqjg","title":"func filter(Predicate<Self.Element>) throws -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/refsequence\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/refsequence\/flatmap(_:)-6bdnk","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/glib\/refsequence\/flatmap(_:)-6byzb","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/glib\/refsequence\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/glib\/refsequence\/formatted()","title":"func formatted() -> String","type":"method"},{"path":"\/documentation\/glib\/refsequence\/formatted(_:)","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/glib\/refsequence\/joined()","title":"func joined() -> FlattenSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/refsequence\/joined(separator:)-70p9m","title":"func joined<Separator>(separator: Separator) -> JoinedSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/refsequence\/joined(separator:)-82x61","title":"func joined(separator: String) -> String","type":"method"},{"path":"\/documentation\/glib\/refsequence\/lexicographicallyprecedes(_:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/glib\/refsequence\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/refsequence\/map(_:)-6wkou","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/glib\/refsequence\/max()","title":"func max() -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/refsequence\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/refsequence\/min()","title":"func min() -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/refsequence\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/refsequence\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/glib\/refsequence\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/glib\/refsequence\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/refsequence\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/refsequence\/sorted()","title":"func sorted() -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/refsequence\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/refsequence\/sorted(using:)-310qi","title":"func sorted<S, Comparator>(using: S) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/refsequence\/sorted(using:)-60wh1","title":"func sorted<Comparator>(using: Comparator) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/refsequence\/split(separator:maxsplits:omittingemptysubsequences:)-88mbe","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/glib\/refsequence\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/glib\/refsequence\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/refsequence\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"}],"path":"\/documentation\/glib\/refsequence\/sequence-implementations","title":"Sequence Implementations","type":"symbol"}],"path":"\/documentation\/glib\/refsequence","title":"RefSequence","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/referencearray\/init(arrayliteral:)","title":"init(arrayLiteral: Element...)","type":"init"},{"path":"\/documentation\/glib\/referencearray\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/referencearray\/freeelements","title":"var freeElements: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/referencearray\/last","title":"var last: Self.Element?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/referencearray\/difference(from:)","title":"func difference<C>(from: C) -> CollectionDifference<Self.Element>","type":"method"},{"path":"\/documentation\/glib\/referencearray\/difference(from:by:)","title":"func difference<C>(from: C, by: (C.Element, Self.Element) -> Bool) -> CollectionDifference<Self.Element>","type":"method"},{"path":"\/documentation\/glib\/referencearray\/droplast(_:)","title":"func dropLast(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/referencearray\/firstrange(of:)-560o3","title":"func firstRange<C>(of: C) -> Range<Self.Index>?","type":"method"},{"path":"\/documentation\/glib\/referencearray\/formindex(before:)","title":"func formIndex(before: inout Self.Index)","type":"method"},{"path":"\/documentation\/glib\/referencearray\/joined(separator:)-7l1yw","title":"func joined(separator: String) -> String","type":"method"},{"path":"\/documentation\/glib\/referencearray\/last(where:)","title":"func last(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/referencearray\/lastindex(of:)","title":"func lastIndex(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/glib\/referencearray\/lastindex(where:)","title":"func lastIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/glib\/referencearray\/reversed()","title":"func reversed() -> ReversedCollection<Self>","type":"method"},{"path":"\/documentation\/glib\/referencearray\/suffix(_:)","title":"func suffix(Int) -> Self.SubSequence","type":"method"}],"path":"\/documentation\/glib\/referencearray\/bidirectionalcollection-implementations","title":"BidirectionalCollection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/referencearray\/first","title":"var first: Self.Element?","type":"property"},{"path":"\/documentation\/glib\/referencearray\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/glib\/referencearray\/underestimatedcount","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/referencearray\/contains(_:)-1nz83","title":"func contains<C>(C) -> Bool","type":"method"},{"path":"\/documentation\/glib\/referencearray\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/referencearray\/dropfirst(_:)","title":"func dropFirst(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/referencearray\/firstindex(of:)","title":"func firstIndex(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/glib\/referencearray\/firstindex(where:)","title":"func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/glib\/referencearray\/firstrange(of:)-8ctw8","title":"func firstRange<C>(of: C) -> Range<Self.Index>?","type":"method"},{"path":"\/documentation\/glib\/referencearray\/formindex(_:offsetby:)","title":"func formIndex(inout Self.Index, offsetBy: Int)","type":"method"},{"path":"\/documentation\/glib\/referencearray\/formindex(_:offsetby:limitedby:)","title":"func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool","type":"method"},{"path":"\/documentation\/glib\/referencearray\/formindex(after:)","title":"func formIndex(after: inout Self.Index)","type":"method"},{"path":"\/documentation\/glib\/referencearray\/index(of:)","title":"func index(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/glib\/referencearray\/makeiterator()","title":"func makeIterator() -> IndexingIterator<Self>","type":"method"},{"path":"\/documentation\/glib\/referencearray\/map(_:)-1fxk","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/glib\/referencearray\/prefix(_:)","title":"func prefix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/referencearray\/prefix(through:)","title":"func prefix(through: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/referencearray\/prefix(upto:)","title":"func prefix(upTo: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/referencearray\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/referencearray\/randomelement()","title":"func randomElement() -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/referencearray\/randomelement(using:)","title":"func randomElement<T>(using: inout T) -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/referencearray\/ranges(of:)","title":"func ranges<C>(of: C) -> [Range<Self.Index>]","type":"method"},{"path":"\/documentation\/glib\/referencearray\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/glib\/referencearray\/split(separator:maxsplits:omittingemptysubsequences:)-61ffw","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/glib\/referencearray\/split(separator:maxsplits:omittingemptysubsequences:)-7nbx7","title":"func split<C>(separator: C, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/glib\/referencearray\/suffix(from:)","title":"func suffix(from: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/referencearray\/trimmingprefix(_:)","title":"func trimmingPrefix<Prefix>(Prefix) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/referencearray\/trimmingprefix(while:)","title":"func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"}],"path":"\/documentation\/glib\/referencearray\/collection-implementations","title":"Collection Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/referencearray\/partition(by:)-28i5x","title":"func partition(by: (Self.Element) throws -> Bool) rethrows -> Self.Index","type":"method"},{"path":"\/documentation\/glib\/referencearray\/partition(by:)-4vfyc","title":"func partition(by: (Self.Element) throws -> Bool) rethrows -> Self.Index","type":"method"},{"path":"\/documentation\/glib\/referencearray\/reverse()","title":"func reverse()","type":"method"},{"path":"\/documentation\/glib\/referencearray\/shuffle()","title":"func shuffle()","type":"method"},{"path":"\/documentation\/glib\/referencearray\/shuffle(using:)","title":"func shuffle<T>(using: inout T)","type":"method"},{"path":"\/documentation\/glib\/referencearray\/sort()","title":"func sort()","type":"method"},{"path":"\/documentation\/glib\/referencearray\/sort(by:)","title":"func sort(by: (Self.Element, Self.Element) throws -> Bool) rethrows","type":"method"},{"path":"\/documentation\/glib\/referencearray\/sort(using:)-1rfgm","title":"func sort<Comparator>(using: Comparator)","type":"method"},{"path":"\/documentation\/glib\/referencearray\/sort(using:)-7z2jk","title":"func sort<S, Comparator>(using: S)","type":"method"},{"path":"\/documentation\/glib\/referencearray\/swapat(_:_:)","title":"func swapAt(Self.Index, Self.Index)","type":"method"},{"path":"\/documentation\/glib\/referencearray\/withcontiguousmutablestorageifavailable(_:)","title":"func withContiguousMutableStorageIfAvailable<R>((inout UnsafeMutableBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"}],"path":"\/documentation\/glib\/referencearray\/mutablecollection-implementations","title":"MutableCollection Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/referencearray\/index(_:offsetby:limitedby:)","title":"func index(Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?","type":"method"}],"path":"\/documentation\/glib\/referencearray\/randomaccesscollection-implementations","title":"RandomAccessCollection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/referencearray\/count","title":"var count: Int","type":"property"},{"path":"\/documentation\/glib\/referencearray\/endindex","title":"var endIndex: Int","type":"property"},{"path":"\/documentation\/glib\/referencearray\/startindex","title":"var startIndex: Int","type":"property"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/glib\/referencearray\/subscript(_:)","title":"subscript(Int) -> Self.Element","type":"subscript"}],"path":"\/documentation\/glib\/referencearray\/referencearrayprotocol-implementations","title":"ReferenceArrayProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/referencearray\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"path":"\/documentation\/glib\/referencearray\/publisher","title":"var publisher: Publishers.Sequence<Self, Never>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/referencearray\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/referencearray\/compactmap(_:)","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/glib\/referencearray\/compare(_:_:)","title":"func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult","type":"method"},{"path":"\/documentation\/glib\/referencearray\/contains(_:)-590za","title":"func contains(Self.Element) -> Bool","type":"method"},{"path":"\/documentation\/glib\/referencearray\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/referencearray\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/glib\/referencearray\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/referencearray\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/referencearray\/filter(_:)-1phbi","title":"func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/referencearray\/filter(_:)-3wuen","title":"func filter(Predicate<Self.Element>) throws -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/referencearray\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/referencearray\/flatmap(_:)-4zcvl","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/glib\/referencearray\/flatmap(_:)-8goiy","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/glib\/referencearray\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/glib\/referencearray\/formatted()","title":"func formatted() -> String","type":"method"},{"path":"\/documentation\/glib\/referencearray\/formatted(_:)","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/glib\/referencearray\/joined()","title":"func joined() -> FlattenSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/referencearray\/joined(separator:)-6vvnd","title":"func joined<Separator>(separator: Separator) -> JoinedSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/referencearray\/joined(separator:)-86k2r","title":"func joined(separator: String) -> String","type":"method"},{"path":"\/documentation\/glib\/referencearray\/lexicographicallyprecedes(_:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/glib\/referencearray\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/referencearray\/map(_:)-3wyhv","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/glib\/referencearray\/max()","title":"func max() -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/referencearray\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/referencearray\/min()","title":"func min() -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/referencearray\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/referencearray\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/glib\/referencearray\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/glib\/referencearray\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/referencearray\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/referencearray\/sorted()","title":"func sorted() -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/referencearray\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/referencearray\/sorted(using:)-2iqo6","title":"func sorted<S, Comparator>(using: S) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/referencearray\/sorted(using:)-9bil9","title":"func sorted<Comparator>(using: Comparator) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/referencearray\/split(separator:maxsplits:omittingemptysubsequences:)-fu5n","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/glib\/referencearray\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/glib\/referencearray\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/referencearray\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"}],"path":"\/documentation\/glib\/referencearray\/sequence-implementations","title":"Sequence Implementations","type":"symbol"}],"path":"\/documentation\/glib\/referencearray","title":"ReferenceArray","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/referencelist\/init(arrayliteral:)","title":"init(arrayLiteral: Element...)","type":"init"},{"path":"\/documentation\/glib\/referencelist\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/referencelist\/freeelements","title":"var freeElements: Bool","type":"property"},{"path":"\/documentation\/glib\/referencelist\/freenodes","title":"var freeNodes: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/referencelist\/element","title":"var element: Self.Element!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/referencelist\/makeiterator()","title":"func makeIterator() -> ReferenceListIterator<Self.Element>","type":"method"}],"path":"\/documentation\/glib\/referencelist\/referencelistprotocol-implementations","title":"ReferenceListProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/referencelist\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"path":"\/documentation\/glib\/referencelist\/publisher","title":"var publisher: Publishers.Sequence<Self, Never>","type":"property"},{"path":"\/documentation\/glib\/referencelist\/underestimatedcount","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/referencelist\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/referencelist\/compactmap(_:)","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/glib\/referencelist\/compare(_:_:)","title":"func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult","type":"method"},{"path":"\/documentation\/glib\/referencelist\/contains(_:)","title":"func contains(Self.Element) -> Bool","type":"method"},{"path":"\/documentation\/glib\/referencelist\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/referencelist\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> DropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/referencelist\/dropfirst(_:)","title":"func dropFirst(Int) -> DropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/referencelist\/droplast(_:)","title":"func dropLast(Int) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/referencelist\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/glib\/referencelist\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/referencelist\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/referencelist\/filter(_:)-29yg6","title":"func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/referencelist\/filter(_:)-7llhv","title":"func filter(Predicate<Self.Element>) throws -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/referencelist\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/referencelist\/flatmap(_:)-2l6fj","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/glib\/referencelist\/flatmap(_:)-79g2m","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/glib\/referencelist\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/glib\/referencelist\/formatted()","title":"func formatted() -> String","type":"method"},{"path":"\/documentation\/glib\/referencelist\/formatted(_:)","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/glib\/referencelist\/joined()","title":"func joined() -> FlattenSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/referencelist\/joined(separator:)-6o9do","title":"func joined(separator: String) -> String","type":"method"},{"path":"\/documentation\/glib\/referencelist\/joined(separator:)-9ihbf","title":"func joined<Separator>(separator: Separator) -> JoinedSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/referencelist\/lexicographicallyprecedes(_:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/glib\/referencelist\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/referencelist\/map(_:)","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/glib\/referencelist\/max()","title":"func max() -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/referencelist\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/referencelist\/min()","title":"func min() -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/referencelist\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/referencelist\/prefix(_:)","title":"func prefix(Int) -> PrefixSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/referencelist\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/referencelist\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/glib\/referencelist\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/glib\/referencelist\/reversed()","title":"func reversed() -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/referencelist\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/referencelist\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/referencelist\/sorted()","title":"func sorted() -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/referencelist\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/referencelist\/sorted(using:)-76ai5","title":"func sorted<S, Comparator>(using: S) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/referencelist\/sorted(using:)-7xrqn","title":"func sorted<Comparator>(using: Comparator) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/referencelist\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/glib\/referencelist\/split(separator:maxsplits:omittingemptysubsequences:)","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/glib\/referencelist\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/glib\/referencelist\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/referencelist\/suffix(_:)","title":"func suffix(Int) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/referencelist\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"}],"path":"\/documentation\/glib\/referencelist\/sequence-implementations","title":"Sequence Implementations","type":"symbol"}],"path":"\/documentation\/glib\/referencelist","title":"ReferenceList","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/referenceslist\/init(arrayliteral:)","title":"init(arrayLiteral: Element...)","type":"init"},{"path":"\/documentation\/glib\/referenceslist\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/referenceslist\/freeelements","title":"var freeElements: Bool","type":"property"},{"path":"\/documentation\/glib\/referenceslist\/freenodes","title":"var freeNodes: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/referenceslist\/element","title":"var element: Self.Element!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/referenceslist\/makeiterator()","title":"func makeIterator() -> ReferenceSListIterator<Self.Element>","type":"method"}],"path":"\/documentation\/glib\/referenceslist\/referenceslistprotocol-implementations","title":"ReferenceSListProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/referenceslist\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"path":"\/documentation\/glib\/referenceslist\/publisher","title":"var publisher: Publishers.Sequence<Self, Never>","type":"property"},{"path":"\/documentation\/glib\/referenceslist\/underestimatedcount","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/referenceslist\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/referenceslist\/compactmap(_:)","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/glib\/referenceslist\/compare(_:_:)","title":"func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult","type":"method"},{"path":"\/documentation\/glib\/referenceslist\/contains(_:)","title":"func contains(Self.Element) -> Bool","type":"method"},{"path":"\/documentation\/glib\/referenceslist\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/referenceslist\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> DropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/referenceslist\/dropfirst(_:)","title":"func dropFirst(Int) -> DropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/referenceslist\/droplast(_:)","title":"func dropLast(Int) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/referenceslist\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/glib\/referenceslist\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/referenceslist\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/referenceslist\/filter(_:)-6umsh","title":"func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/referenceslist\/filter(_:)-7d2vv","title":"func filter(Predicate<Self.Element>) throws -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/referenceslist\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/referenceslist\/flatmap(_:)-1jc2o","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/glib\/referenceslist\/flatmap(_:)-9kbd","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/glib\/referenceslist\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/glib\/referenceslist\/formatted()","title":"func formatted() -> String","type":"method"},{"path":"\/documentation\/glib\/referenceslist\/formatted(_:)","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/glib\/referenceslist\/joined()","title":"func joined() -> FlattenSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/referenceslist\/joined(separator:)-18b2j","title":"func joined<Separator>(separator: Separator) -> JoinedSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/referenceslist\/joined(separator:)-90v8c","title":"func joined(separator: String) -> String","type":"method"},{"path":"\/documentation\/glib\/referenceslist\/lexicographicallyprecedes(_:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/glib\/referenceslist\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/referenceslist\/map(_:)","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/glib\/referenceslist\/max()","title":"func max() -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/referenceslist\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/referenceslist\/min()","title":"func min() -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/referenceslist\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/referenceslist\/prefix(_:)","title":"func prefix(Int) -> PrefixSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/referenceslist\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/referenceslist\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/glib\/referenceslist\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/glib\/referenceslist\/reversed()","title":"func reversed() -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/referenceslist\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/referenceslist\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/referenceslist\/sorted()","title":"func sorted() -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/referenceslist\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/referenceslist\/sorted(using:)-5bls0","title":"func sorted<Comparator>(using: Comparator) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/referenceslist\/sorted(using:)-6z1nj","title":"func sorted<S, Comparator>(using: S) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/referenceslist\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/glib\/referenceslist\/split(separator:maxsplits:omittingemptysubsequences:)","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/glib\/referenceslist\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/glib\/referenceslist\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/referenceslist\/suffix(_:)","title":"func suffix(Int) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/referenceslist\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"}],"path":"\/documentation\/glib\/referenceslist\/sequence-implementations","title":"Sequence Implementations","type":"symbol"}],"path":"\/documentation\/glib\/referenceslist","title":"ReferenceSList","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/referencesequence\/init(arrayliteral:)","title":"init(arrayLiteral: Element...)","type":"init"},{"path":"\/documentation\/glib\/referencesequence\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/referencesequence\/makeiterator()","title":"func makeIterator() -> ReferenceSequenceIterator<Element>","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/referencesequence\/last","title":"var last: Self.Element?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/referencesequence\/difference(from:)","title":"func difference<C>(from: C) -> CollectionDifference<Self.Element>","type":"method"},{"path":"\/documentation\/glib\/referencesequence\/difference(from:by:)","title":"func difference<C>(from: C, by: (C.Element, Self.Element) -> Bool) -> CollectionDifference<Self.Element>","type":"method"},{"path":"\/documentation\/glib\/referencesequence\/distance(from:to:)","title":"func distance(from: Self.Index, to: Self.Index) -> Int","type":"method"},{"path":"\/documentation\/glib\/referencesequence\/droplast(_:)","title":"func dropLast(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/referencesequence\/firstrange(of:)-65hzu","title":"func firstRange<C>(of: C) -> Range<Self.Index>?","type":"method"},{"path":"\/documentation\/glib\/referencesequence\/formindex(before:)","title":"func formIndex(before: inout Self.Index)","type":"method"},{"path":"\/documentation\/glib\/referencesequence\/index(_:offsetby:limitedby:)","title":"func index(Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?","type":"method"},{"path":"\/documentation\/glib\/referencesequence\/joined(separator:)-1ow09","title":"func joined(separator: String) -> String","type":"method"},{"path":"\/documentation\/glib\/referencesequence\/last(where:)","title":"func last(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/referencesequence\/lastindex(of:)","title":"func lastIndex(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/glib\/referencesequence\/lastindex(where:)","title":"func lastIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/glib\/referencesequence\/reversed()","title":"func reversed() -> ReversedCollection<Self>","type":"method"},{"path":"\/documentation\/glib\/referencesequence\/suffix(_:)","title":"func suffix(Int) -> Self.SubSequence","type":"method"}],"path":"\/documentation\/glib\/referencesequence\/bidirectionalcollection-implementations","title":"BidirectionalCollection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/referencesequence\/first","title":"var first: Self.Element?","type":"property"},{"path":"\/documentation\/glib\/referencesequence\/indices","title":"var indices: DefaultIndices<Self>","type":"property"},{"path":"\/documentation\/glib\/referencesequence\/underestimatedcount","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/referencesequence\/contains(_:)-7in77","title":"func contains<C>(C) -> Bool","type":"method"},{"path":"\/documentation\/glib\/referencesequence\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/referencesequence\/dropfirst(_:)","title":"func dropFirst(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/referencesequence\/firstindex(of:)","title":"func firstIndex(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/glib\/referencesequence\/firstindex(where:)","title":"func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/glib\/referencesequence\/firstrange(of:)-9ktq3","title":"func firstRange<C>(of: C) -> Range<Self.Index>?","type":"method"},{"path":"\/documentation\/glib\/referencesequence\/formindex(_:offsetby:)","title":"func formIndex(inout Self.Index, offsetBy: Int)","type":"method"},{"path":"\/documentation\/glib\/referencesequence\/formindex(_:offsetby:limitedby:)","title":"func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool","type":"method"},{"path":"\/documentation\/glib\/referencesequence\/formindex(after:)","title":"func formIndex(after: inout Self.Index)","type":"method"},{"path":"\/documentation\/glib\/referencesequence\/index(of:)","title":"func index(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/glib\/referencesequence\/map(_:)-8jwjj","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/glib\/referencesequence\/prefix(_:)","title":"func prefix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/referencesequence\/prefix(through:)","title":"func prefix(through: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/referencesequence\/prefix(upto:)","title":"func prefix(upTo: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/referencesequence\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/referencesequence\/randomelement()","title":"func randomElement() -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/referencesequence\/randomelement(using:)","title":"func randomElement<T>(using: inout T) -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/referencesequence\/ranges(of:)","title":"func ranges<C>(of: C) -> [Range<Self.Index>]","type":"method"},{"path":"\/documentation\/glib\/referencesequence\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/glib\/referencesequence\/split(separator:maxsplits:omittingemptysubsequences:)-8am8k","title":"func split<C>(separator: C, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/glib\/referencesequence\/split(separator:maxsplits:omittingemptysubsequences:)-95c68","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/glib\/referencesequence\/suffix(from:)","title":"func suffix(from: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/referencesequence\/trimmingprefix(_:)","title":"func trimmingPrefix<Prefix>(Prefix) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/referencesequence\/trimmingprefix(while:)","title":"func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"}],"path":"\/documentation\/glib\/referencesequence\/collection-implementations","title":"Collection Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/referencesequence\/partition(by:)-2s8uv","title":"func partition(by: (Self.Element) throws -> Bool) rethrows -> Self.Index","type":"method"},{"path":"\/documentation\/glib\/referencesequence\/partition(by:)-6pq4p","title":"func partition(by: (Self.Element) throws -> Bool) rethrows -> Self.Index","type":"method"},{"path":"\/documentation\/glib\/referencesequence\/reverse()","title":"func reverse()","type":"method"},{"path":"\/documentation\/glib\/referencesequence\/swapat(_:_:)","title":"func swapAt(Self.Index, Self.Index)","type":"method"},{"path":"\/documentation\/glib\/referencesequence\/withcontiguousmutablestorageifavailable(_:)","title":"func withContiguousMutableStorageIfAvailable<R>((inout UnsafeMutableBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"}],"path":"\/documentation\/glib\/referencesequence\/mutablecollection-implementations","title":"MutableCollection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/referencesequence\/count","title":"var count: Int","type":"property"},{"path":"\/documentation\/glib\/referencesequence\/endindex","title":"var endIndex: SequenceIterRef","type":"property"},{"path":"\/documentation\/glib\/referencesequence\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/glib\/referencesequence\/startindex","title":"var startIndex: SequenceIterRef","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/referencesequence\/index(_:offsetby:)","title":"func index(SequenceIterRef, offsetBy: Int) -> SequenceIterRef","type":"method"},{"path":"\/documentation\/glib\/referencesequence\/index(after:)","title":"func index(after: SequenceIterRef) -> SequenceIterRef","type":"method"},{"path":"\/documentation\/glib\/referencesequence\/index(before:)","title":"func index(before: SequenceIterRef) -> SequenceIterRef","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/glib\/referencesequence\/subscript(_:)","title":"subscript(SequenceIterRef) -> Self.Element","type":"subscript"}],"path":"\/documentation\/glib\/referencesequence\/referencesequenceprotocol-implementations","title":"ReferenceSequenceProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/referencesequence\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"path":"\/documentation\/glib\/referencesequence\/publisher","title":"var publisher: Publishers.Sequence<Self, Never>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/referencesequence\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/referencesequence\/compactmap(_:)","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/glib\/referencesequence\/compare(_:_:)","title":"func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult","type":"method"},{"path":"\/documentation\/glib\/referencesequence\/contains(_:)-y2vy","title":"func contains(Self.Element) -> Bool","type":"method"},{"path":"\/documentation\/glib\/referencesequence\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/referencesequence\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/glib\/referencesequence\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/referencesequence\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/referencesequence\/filter(_:)-1q099","title":"func filter(Predicate<Self.Element>) throws -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/referencesequence\/filter(_:)-35oif","title":"func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/referencesequence\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/referencesequence\/flatmap(_:)-6htle","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/glib\/referencesequence\/flatmap(_:)-77qdk","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/glib\/referencesequence\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/glib\/referencesequence\/formatted()","title":"func formatted() -> String","type":"method"},{"path":"\/documentation\/glib\/referencesequence\/formatted(_:)","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/glib\/referencesequence\/joined()","title":"func joined() -> FlattenSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/referencesequence\/joined(separator:)-3q3c7","title":"func joined(separator: String) -> String","type":"method"},{"path":"\/documentation\/glib\/referencesequence\/joined(separator:)-7618y","title":"func joined<Separator>(separator: Separator) -> JoinedSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/referencesequence\/lexicographicallyprecedes(_:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/glib\/referencesequence\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/referencesequence\/map(_:)-8alx","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/glib\/referencesequence\/max()","title":"func max() -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/referencesequence\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/referencesequence\/min()","title":"func min() -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/referencesequence\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/referencesequence\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/glib\/referencesequence\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/glib\/referencesequence\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/referencesequence\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/referencesequence\/sorted()","title":"func sorted() -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/referencesequence\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/referencesequence\/sorted(using:)-6jg06","title":"func sorted<S, Comparator>(using: S) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/referencesequence\/sorted(using:)-7zb7c","title":"func sorted<Comparator>(using: Comparator) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/referencesequence\/split(separator:maxsplits:omittingemptysubsequences:)-y4x0","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/glib\/referencesequence\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/glib\/referencesequence\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/referencesequence\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"}],"path":"\/documentation\/glib\/referencesequence\/sequence-implementations","title":"Sequence Implementations","type":"symbol"}],"path":"\/documentation\/glib\/referencesequence","title":"ReferenceSequence","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/regex\/init(_:)-14i11","title":"init!(UnsafePointer<GRegex>?)","type":"init"},{"path":"\/documentation\/glib\/regex\/init(_:)-38s23","title":"init(UnsafeMutablePointer<GRegex>)","type":"init"},{"path":"\/documentation\/glib\/regex\/init(_:)-5mtur","title":"init!(UnsafeMutablePointer<GRegex>?)","type":"init"},{"path":"\/documentation\/glib\/regex\/init(_:)-7dwt1","title":"init(UnsafePointer<GRegex>)","type":"init"},{"path":"\/documentation\/glib\/regex\/init(_:)-8o1r7","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/regex\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/regex\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/regex\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/regex\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/regex\/init(pattern:compileoptions:matchoptions:)","title":"init(pattern: UnsafePointer<gchar>!, compileOptions: RegexCompileFlags, matchOptions: RegexMatchFlags) throws","type":"init"},{"path":"\/documentation\/glib\/regex\/init(raw:)-1y1qf","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/regex\/init(raw:)-4klw6","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/regex\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GRegex>)","type":"init"},{"path":"\/documentation\/glib\/regex\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/regex\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/regex\/init(retainingraw:)-1u2ye","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/regex\/init(retainingraw:)-7yto8","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/regex\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/regex\/capturecount","title":"var captureCount: Int","type":"property"},{"path":"\/documentation\/glib\/regex\/compileflags","title":"var compileFlags: RegexCompileFlags","type":"property"},{"path":"\/documentation\/glib\/regex\/hascrorlf","title":"var hasCrOrLf: Bool","type":"property"},{"path":"\/documentation\/glib\/regex\/matchflags","title":"var matchFlags: RegexMatchFlags","type":"property"},{"path":"\/documentation\/glib\/regex\/maxbackref","title":"var maxBackref: Int","type":"property"},{"path":"\/documentation\/glib\/regex\/maxlookbehind","title":"var maxLookbehind: Int","type":"property"},{"path":"\/documentation\/glib\/regex\/pattern","title":"var pattern: String!","type":"property"},{"path":"\/documentation\/glib\/regex\/regex_ptr","title":"var regex_ptr: UnsafeMutablePointer<GRegex>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/regex\/getcapturecount()","title":"func getCaptureCount() -> Int","type":"method"},{"path":"\/documentation\/glib\/regex\/getcompileflags()","title":"func getCompileFlags() -> RegexCompileFlags","type":"method"},{"path":"\/documentation\/glib\/regex\/gethascrorlf()","title":"func getHasCrOrLf() -> Bool","type":"method"},{"path":"\/documentation\/glib\/regex\/getmatchflags()","title":"func getMatchFlags() -> RegexMatchFlags","type":"method"},{"path":"\/documentation\/glib\/regex\/getmaxbackref()","title":"func getMaxBackref() -> Int","type":"method"},{"path":"\/documentation\/glib\/regex\/getmaxlookbehind()","title":"func getMaxLookbehind() -> Int","type":"method"},{"path":"\/documentation\/glib\/regex\/getpattern()","title":"func getPattern() -> String!","type":"method"},{"path":"\/documentation\/glib\/regex\/getstringnumber(name:)","title":"func getStringNumber(name: UnsafePointer<gchar>!) -> Int","type":"method"},{"path":"\/documentation\/glib\/regex\/match(string:matchoptions:matchinfo:)","title":"func match(string: UnsafePointer<gchar>!, matchOptions: RegexMatchFlags, matchInfo: UnsafeMutablePointer<UnsafeMutablePointer<GMatchInfo>?>!) -> Bool","type":"method"},{"path":"\/documentation\/glib\/regex\/matchall(string:matchoptions:matchinfo:)","title":"func matchAll(string: UnsafePointer<gchar>!, matchOptions: RegexMatchFlags, matchInfo: UnsafeMutablePointer<UnsafeMutablePointer<GMatchInfo>?>!) -> Bool","type":"method"},{"path":"\/documentation\/glib\/regex\/matchallfull(string:stringlen:startposition:matchoptions:matchinfo:)","title":"func matchAllFull(string: UnsafePointer<gchar>!, stringLen: gssize, startPosition: Int, matchOptions: RegexMatchFlags, matchInfo: UnsafeMutablePointer<UnsafeMutablePointer<GMatchInfo>?>!) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/regex\/matchfull(string:stringlen:startposition:matchoptions:matchinfo:)","title":"func matchFull(string: UnsafePointer<gchar>!, stringLen: gssize, startPosition: Int, matchOptions: RegexMatchFlags, matchInfo: UnsafeMutablePointer<UnsafeMutablePointer<GMatchInfo>?>!) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/regex\/ref()","title":"func ref() -> RegexRef!","type":"method"},{"path":"\/documentation\/glib\/regex\/replace(string:stringlen:startposition:replacement:matchoptions:)","title":"func replace(string: UnsafePointer<gchar>!, stringLen: gssize, startPosition: Int, replacement: UnsafePointer<gchar>!, matchOptions: RegexMatchFlags) throws -> String!","type":"method"},{"path":"\/documentation\/glib\/regex\/replaceeval(string:stringlen:startposition:matchoptions:eval:userdata:)","title":"func replaceEval(string: UnsafePointer<gchar>!, stringLen: gssize, startPosition: Int, matchOptions: RegexMatchFlags, eval: GRegexEvalCallback?, userData: gpointer?) throws -> String!","type":"method"},{"path":"\/documentation\/glib\/regex\/replaceliteral(string:stringlen:startposition:replacement:matchoptions:)","title":"func replaceLiteral(string: UnsafePointer<gchar>!, stringLen: gssize, startPosition: Int, replacement: UnsafePointer<gchar>!, matchOptions: RegexMatchFlags) throws -> String!","type":"method"},{"path":"\/documentation\/glib\/regex\/split(string:matchoptions:)","title":"func split(string: UnsafePointer<gchar>!, matchOptions: RegexMatchFlags) -> UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!","type":"method"},{"path":"\/documentation\/glib\/regex\/splitfull(string:stringlen:startposition:matchoptions:maxtokens:)","title":"func splitFull(string: UnsafePointer<gchar>!, stringLen: gssize, startPosition: Int, matchOptions: RegexMatchFlags, maxTokens: Int) throws -> UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!","type":"method"},{"path":"\/documentation\/glib\/regex\/unref()","title":"func unref()","type":"method"}],"path":"\/documentation\/glib\/regex\/regexprotocol-implementations","title":"RegexProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/regex","title":"Regex","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/relation\/init(_:)-1i7vg","title":"init!(UnsafeMutablePointer<GRelation>?)","type":"init"},{"path":"\/documentation\/glib\/relation\/init(_:)-3iie4","title":"init(UnsafeMutablePointer<GRelation>)","type":"init"},{"path":"\/documentation\/glib\/relation\/init(_:)-4sl7b","title":"init(UnsafePointer<GRelation>)","type":"init"},{"path":"\/documentation\/glib\/relation\/init(_:)-9eeqv","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/relation\/init(_:)-9r8qj","title":"init!(UnsafePointer<GRelation>?)","type":"init"},{"path":"\/documentation\/glib\/relation\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/relation\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/relation\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/relation\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/relation\/init(raw:)-3oj7u","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/relation\/init(raw:)-8kze6","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/relation\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GRelation>)","type":"init"},{"path":"\/documentation\/glib\/relation\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/relation\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/relation\/init(retainingraw:)-5hh5f","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/relation\/init(retainingraw:)-9a49i","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/relation\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/relation\/count(key:field:)","title":"func count(key: gconstpointer?, field: Int) -> Int","type":"method"},{"path":"\/documentation\/glib\/relation\/delete(key:field:)","title":"func delete(key: gconstpointer?, field: Int) -> Int","type":"method"},{"path":"\/documentation\/glib\/relation\/destroy()","title":"func destroy()","type":"method"},{"path":"\/documentation\/glib\/relation\/index(field:hashfunc:keyequalfunc:)","title":"func index(field: Int, hashFunc: GHashFunc?, keyEqualFunc: GEqualFunc?)","type":"method"},{"path":"\/documentation\/glib\/relation\/print()","title":"func print()","type":"method"},{"path":"\/documentation\/glib\/relation\/select(key:field:)","title":"func select(key: gconstpointer?, field: Int) -> TuplesRef!","type":"method"}],"path":"\/documentation\/glib\/relation\/relationprotocol-implementations","title":"RelationProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/relation","title":"Relation","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/slist\/init(_:)-2q2wm","title":"init!(UnsafeMutablePointer<GSList>?)","type":"init"},{"path":"\/documentation\/glib\/slist\/init(_:)-2to8a","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/slist\/init(_:)-3c1oz","title":"init(UnsafePointer<GSList>)","type":"init"},{"path":"\/documentation\/glib\/slist\/init(_:)-777ix","title":"init!(UnsafePointer<GSList>?)","type":"init"},{"path":"\/documentation\/glib\/slist\/init(_:)-8rtv6","title":"init(UnsafeMutablePointer<GSList>)","type":"init"},{"path":"\/documentation\/glib\/slist\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/slist\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/slist\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/slist\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/slist\/init(raw:)-129in","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/slist\/init(raw:)-5ypo3","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/slist\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GSList>)","type":"init"},{"path":"\/documentation\/glib\/slist\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/slist\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/slist\/init(retainingraw:)-3m37v","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/slist\/init(retainingraw:)-9t1kx","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/slist\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/slist\/alloc()","title":"static func alloc() -> SList!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/slist\/data","title":"var data: gpointer?","type":"property"},{"path":"\/documentation\/glib\/slist\/next","title":"var next: SListRef!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/slist\/append(data:)","title":"func append(data: gpointer?) -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/slist\/concat(list2:)","title":"func concat<SListT>(list2: SListT) -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/slist\/copy()","title":"func copy() -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/slist\/copydeep(func:userdata:)","title":"func copyDeep(func: GCopyFunc?, userData: gpointer?) -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/slist\/delete(link:)","title":"func delete<SListT>(link: SListT) -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/slist\/find(data:)","title":"func find(data: gconstpointer?) -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/slist\/findcustom(data:func:)","title":"func findCustom(data: gconstpointer?, func: GCompareFunc?) -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/slist\/foreach(func:userdata:)","title":"func foreach(func: GFunc?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/slist\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/glib\/slist\/free1()","title":"func free1()","type":"method"},{"path":"\/documentation\/glib\/slist\/freefull(freefunc:)","title":"func freeFull(freeFunc: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/glib\/slist\/index(data:)","title":"func index(data: gconstpointer?) -> Int","type":"method"},{"path":"\/documentation\/glib\/slist\/insert(data:position:)","title":"func insert(data: gpointer?, position: Int) -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/slist\/insertbefore(sibling:data:)","title":"func insertBefore<SListT>(sibling: SListT, data: gpointer?) -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/slist\/insertsorted(data:func:)","title":"func insertSorted(data: gpointer?, func: GCompareFunc?) -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/slist\/insertsortedwith(data:func:userdata:)","title":"func insertSortedWith(data: gpointer?, func: GCompareDataFunc?, userData: gpointer?) -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/slist\/last()","title":"func last() -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/slist\/length()","title":"func length() -> Int","type":"method"},{"path":"\/documentation\/glib\/slist\/nth(n:)","title":"func nth(n: Int) -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/slist\/nthdata(n:)","title":"func nthData(n: Int) -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/slist\/position(llink:)","title":"func position<SListT>(llink: SListT) -> Int","type":"method"},{"path":"\/documentation\/glib\/slist\/prepend(data:)","title":"func prepend(data: gpointer?) -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/slist\/remove(data:)","title":"func remove(data: gconstpointer?) -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/slist\/remove(link:)","title":"func remove<SListT>(link: SListT) -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/slist\/removeall(data:)","title":"func removeAll(data: gconstpointer?) -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/slist\/reverse()","title":"func reverse() -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/slist\/sort(comparefunc:)","title":"func sort(compareFunc: GCompareFunc?) -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/slist\/sortwithdata(comparefunc:userdata:)","title":"func sortWithData(compareFunc: GCompareDataFunc?, userData: gpointer?) -> SListRef!","type":"method"}],"path":"\/documentation\/glib\/slist\/slistprotocol-implementations","title":"SListProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/slist","title":"SList","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/scanner\/init(_:)-204k0","title":"init!(UnsafePointer<GScanner>?)","type":"init"},{"path":"\/documentation\/glib\/scanner\/init(_:)-4677","title":"init!(UnsafeMutablePointer<GScanner>?)","type":"init"},{"path":"\/documentation\/glib\/scanner\/init(_:)-5cuky","title":"init(UnsafePointer<GScanner>)","type":"init"},{"path":"\/documentation\/glib\/scanner\/init(_:)-5k2c1","title":"init(UnsafeMutablePointer<GScanner>)","type":"init"},{"path":"\/documentation\/glib\/scanner\/init(_:)-69q0e","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/scanner\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/scanner\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/scanner\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/scanner\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/scanner\/init(raw:)-4y15a","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/scanner\/init(raw:)-kqtd","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/scanner\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GScanner>)","type":"init"},{"path":"\/documentation\/glib\/scanner\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/scanner\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/scanner\/init(retainingraw:)-498mz","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/scanner\/init(retainingraw:)-95orj","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/scanner\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/scanner\/config","title":"var config: ScannerConfigRef!","type":"property"},{"path":"\/documentation\/glib\/scanner\/inputname","title":"var inputName: UnsafePointer<gchar>!","type":"property"},{"path":"\/documentation\/glib\/scanner\/line","title":"var line: guint","type":"property"},{"path":"\/documentation\/glib\/scanner\/maxparseerrors","title":"var maxParseErrors: guint","type":"property"},{"path":"\/documentation\/glib\/scanner\/msghandler","title":"var msgHandler: GScannerMsgFunc!","type":"property"},{"path":"\/documentation\/glib\/scanner\/nextline","title":"var nextLine: guint","type":"property"},{"path":"\/documentation\/glib\/scanner\/nextposition","title":"var nextPosition: guint","type":"property"},{"path":"\/documentation\/glib\/scanner\/nexttoken","title":"var nextToken: GTokenType","type":"property"},{"path":"\/documentation\/glib\/scanner\/nextvalue","title":"var nextValue: GTokenValue","type":"property"},{"path":"\/documentation\/glib\/scanner\/parseerrors","title":"var parseErrors: guint","type":"property"},{"path":"\/documentation\/glib\/scanner\/position","title":"var position: guint","type":"property"},{"path":"\/documentation\/glib\/scanner\/qdata","title":"var qdata: DataRef!","type":"property"},{"path":"\/documentation\/glib\/scanner\/token","title":"var token: GTokenType","type":"property"},{"path":"\/documentation\/glib\/scanner\/userdata","title":"var userData: gpointer?","type":"property"},{"path":"\/documentation\/glib\/scanner\/value","title":"var value: GTokenValue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/scanner\/curline()","title":"func curLine() -> Int","type":"method"},{"path":"\/documentation\/glib\/scanner\/curposition()","title":"func curPosition() -> Int","type":"method"},{"path":"\/documentation\/glib\/scanner\/curtoken()","title":"func curToken() -> GTokenType","type":"method"},{"path":"\/documentation\/glib\/scanner\/curvalue()","title":"func curValue() -> GTokenValue","type":"method"},{"path":"\/documentation\/glib\/scanner\/destroy()","title":"func destroy()","type":"method"},{"path":"\/documentation\/glib\/scanner\/eof()","title":"func eof() -> Bool","type":"method"},{"path":"\/documentation\/glib\/scanner\/getnexttoken()","title":"func getNextToken() -> GTokenType","type":"method"},{"path":"\/documentation\/glib\/scanner\/input(text:textlen:)","title":"func input(text: UnsafePointer<gchar>!, textLen: Int)","type":"method"},{"path":"\/documentation\/glib\/scanner\/inputfile(inputfd:)","title":"func inputFile(inputFd: Int)","type":"method"},{"path":"\/documentation\/glib\/scanner\/lookup(symbol:)","title":"func lookup(symbol: UnsafePointer<gchar>!) -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/scanner\/peeknexttoken()","title":"func peekNextToken() -> GTokenType","type":"method"},{"path":"\/documentation\/glib\/scanner\/scopeaddsymbol(scopeid:symbol:value:)","title":"func scopeAddSymbol(scopeID: Int, symbol: UnsafePointer<gchar>!, value: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/scanner\/scopeforeachsymbol(scopeid:func:userdata:)","title":"func scopeForeachSymbol(scopeID: Int, func: GHFunc?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/scanner\/scopelookupsymbol(scopeid:symbol:)","title":"func scopeLookupSymbol(scopeID: Int, symbol: UnsafePointer<gchar>!) -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/scanner\/scoperemovesymbol(scopeid:symbol:)","title":"func scopeRemoveSymbol(scopeID: Int, symbol: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/glib\/scanner\/setscope(scopeid:)","title":"func setScope(scopeID: Int) -> Int","type":"method"},{"path":"\/documentation\/glib\/scanner\/syncfileoffset()","title":"func syncFileOffset()","type":"method"},{"path":"\/documentation\/glib\/scanner\/unexptoken(expectedtoken:identifierspec:symbolspec:symbolname:message:iserror:)","title":"func unexpToken(expectedToken: GTokenType, identifierSpec: UnsafePointer<gchar>!, symbolSpec: UnsafePointer<gchar>!, symbolName: UnsafePointer<gchar>!, message: UnsafePointer<gchar>!, isError: Int)","type":"method"}],"path":"\/documentation\/glib\/scanner\/scannerprotocol-implementations","title":"ScannerProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/scanner","title":"Scanner","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/scannerconfig\/init(_:)-1hepc","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/scannerconfig\/init(_:)-2n9qp","title":"init(UnsafePointer<GScannerConfig>)","type":"init"},{"path":"\/documentation\/glib\/scannerconfig\/init(_:)-8elhf","title":"init!(UnsafePointer<GScannerConfig>?)","type":"init"},{"path":"\/documentation\/glib\/scannerconfig\/init(_:)-8r4u7","title":"init!(UnsafeMutablePointer<GScannerConfig>?)","type":"init"},{"path":"\/documentation\/glib\/scannerconfig\/init(_:)-9oszd","title":"init(UnsafeMutablePointer<GScannerConfig>)","type":"init"},{"path":"\/documentation\/glib\/scannerconfig\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/scannerconfig\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/scannerconfig\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/scannerconfig\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/scannerconfig\/init(raw:)-2edv2","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/scannerconfig\/init(raw:)-6roc9","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/scannerconfig\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GScannerConfig>)","type":"init"},{"path":"\/documentation\/glib\/scannerconfig\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/scannerconfig\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/scannerconfig\/init(retainingraw:)-4dzy0","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/scannerconfig\/init(retainingraw:)-88uhv","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/scannerconfig\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/scannerconfig\/casesensitive","title":"var caseSensitive: guint","type":"property"},{"path":"\/documentation\/glib\/scannerconfig\/char2token","title":"var char2Token: guint","type":"property"},{"path":"\/documentation\/glib\/scannerconfig\/cpaircommentsingle","title":"var cpairCommentSingle: UnsafeMutablePointer<gchar>!","type":"property"},{"path":"\/documentation\/glib\/scannerconfig\/csetidentifierfirst","title":"var csetIDentifierFirst: UnsafeMutablePointer<gchar>!","type":"property"},{"path":"\/documentation\/glib\/scannerconfig\/csetidentifiernth","title":"var csetIDentifierNth: UnsafeMutablePointer<gchar>!","type":"property"},{"path":"\/documentation\/glib\/scannerconfig\/csetskipcharacters","title":"var csetSkipCharacters: UnsafeMutablePointer<gchar>!","type":"property"},{"path":"\/documentation\/glib\/scannerconfig\/identifier2string","title":"var identifier2String: guint","type":"property"},{"path":"\/documentation\/glib\/scannerconfig\/int2float","title":"var int2Float: guint","type":"property"},{"path":"\/documentation\/glib\/scannerconfig\/numbers2int","title":"var numbers2Int: guint","type":"property"},{"path":"\/documentation\/glib\/scannerconfig\/scanbinary","title":"var scanBinary: guint","type":"property"},{"path":"\/documentation\/glib\/scannerconfig\/scancommentmulti","title":"var scanCommentMulti: guint","type":"property"},{"path":"\/documentation\/glib\/scannerconfig\/scanfloat","title":"var scanFloat: guint","type":"property"},{"path":"\/documentation\/glib\/scannerconfig\/scanhex","title":"var scanHex: guint","type":"property"},{"path":"\/documentation\/glib\/scannerconfig\/scanhexdollar","title":"var scanHexDollar: guint","type":"property"},{"path":"\/documentation\/glib\/scannerconfig\/scanidentifier","title":"var scanIDentifier: guint","type":"property"},{"path":"\/documentation\/glib\/scannerconfig\/scanidentifier1char","title":"var scanIDentifier1char: guint","type":"property"},{"path":"\/documentation\/glib\/scannerconfig\/scanidentifiernull","title":"var scanIDentifierNULL: guint","type":"property"},{"path":"\/documentation\/glib\/scannerconfig\/scanoctal","title":"var scanOctal: guint","type":"property"},{"path":"\/documentation\/glib\/scannerconfig\/scanstringdq","title":"var scanStringDq: guint","type":"property"},{"path":"\/documentation\/glib\/scannerconfig\/scanstringsq","title":"var scanStringSq: guint","type":"property"},{"path":"\/documentation\/glib\/scannerconfig\/scansymbols","title":"var scanSymbols: guint","type":"property"},{"path":"\/documentation\/glib\/scannerconfig\/scope0fallback","title":"var scope0Fallback: guint","type":"property"},{"path":"\/documentation\/glib\/scannerconfig\/skipcommentmulti","title":"var skipCommentMulti: guint","type":"property"},{"path":"\/documentation\/glib\/scannerconfig\/skipcommentsingle","title":"var skipCommentSingle: guint","type":"property"},{"path":"\/documentation\/glib\/scannerconfig\/storeint64","title":"var storeInt64: guint","type":"property"},{"path":"\/documentation\/glib\/scannerconfig\/symbol2token","title":"var symbol2Token: guint","type":"property"}],"path":"\/documentation\/glib\/scannerconfig\/scannerconfigprotocol-implementations","title":"ScannerConfigProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/scannerconfig","title":"ScannerConfig","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/sequence\/init(_:)-3u81s","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/sequence\/init(_:)-3v4or","title":"init!(UnsafeMutablePointer<GSequence>?)","type":"init"},{"path":"\/documentation\/glib\/sequence\/init(_:)-5zi4u","title":"init(UnsafeMutablePointer<GSequence>)","type":"init"},{"path":"\/documentation\/glib\/sequence\/init(_:)-l1t7","title":"init(UnsafePointer<GSequence>)","type":"init"},{"path":"\/documentation\/glib\/sequence\/init(_:)-rks2","title":"init!(UnsafePointer<GSequence>?)","type":"init"},{"path":"\/documentation\/glib\/sequence\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/sequence\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/sequence\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/sequence\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/sequence\/init(raw:)-3ckcm","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/sequence\/init(raw:)-77f31","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/sequence\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GSequence>)","type":"init"},{"path":"\/documentation\/glib\/sequence\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/sequence\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/sequence\/init(retainingraw:)-4lym4","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/sequence\/init(retainingraw:)-r41j","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/sequence\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/sequence\/beginiter","title":"var beginIter: SequenceIterRef!","type":"property"},{"path":"\/documentation\/glib\/sequence\/enditer","title":"var endIter: SequenceIterRef!","type":"property"},{"path":"\/documentation\/glib\/sequence\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/glib\/sequence\/length","title":"var length: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/sequence\/append(data:)","title":"func append(data: gpointer?) -> SequenceIterRef!","type":"method"},{"path":"\/documentation\/glib\/sequence\/foreach(func:userdata:)","title":"func foreach(func: GFunc?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/sequence\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/glib\/sequence\/getbeginiter()","title":"func getBeginIter() -> SequenceIterRef!","type":"method"},{"path":"\/documentation\/glib\/sequence\/getenditer()","title":"func getEndIter() -> SequenceIterRef!","type":"method"},{"path":"\/documentation\/glib\/sequence\/getiterat(pos:)","title":"func getIterAt(pos: Int) -> SequenceIterRef!","type":"method"},{"path":"\/documentation\/glib\/sequence\/getlength()","title":"func getLength() -> Int","type":"method"},{"path":"\/documentation\/glib\/sequence\/insertsorted(data:cmpfunc:cmpdata:)","title":"func insertSorted(data: gpointer?, cmpFunc: GCompareDataFunc?, cmpData: gpointer?) -> SequenceIterRef!","type":"method"},{"path":"\/documentation\/glib\/sequence\/insertsortediter(data:itercmp:cmpdata:)","title":"func insertSortedIter(data: gpointer?, iterCmp: GSequenceIterCompareFunc?, cmpData: gpointer?) -> SequenceIterRef!","type":"method"},{"path":"\/documentation\/glib\/sequence\/lookup(data:cmpfunc:cmpdata:)","title":"func lookup(data: gpointer?, cmpFunc: GCompareDataFunc?, cmpData: gpointer?) -> SequenceIterRef!","type":"method"},{"path":"\/documentation\/glib\/sequence\/lookupiter(data:itercmp:cmpdata:)","title":"func lookupIter(data: gpointer?, iterCmp: GSequenceIterCompareFunc?, cmpData: gpointer?) -> SequenceIterRef!","type":"method"},{"path":"\/documentation\/glib\/sequence\/prepend(data:)","title":"func prepend(data: gpointer?) -> SequenceIterRef!","type":"method"},{"path":"\/documentation\/glib\/sequence\/search(data:cmpfunc:cmpdata:)","title":"func search(data: gpointer?, cmpFunc: GCompareDataFunc?, cmpData: gpointer?) -> SequenceIterRef!","type":"method"},{"path":"\/documentation\/glib\/sequence\/searchiter(data:itercmp:cmpdata:)","title":"func searchIter(data: gpointer?, iterCmp: GSequenceIterCompareFunc?, cmpData: gpointer?) -> SequenceIterRef!","type":"method"},{"path":"\/documentation\/glib\/sequence\/sort(cmpfunc:cmpdata:)","title":"func sort(cmpFunc: GCompareDataFunc?, cmpData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/sequence\/sortiter(cmpfunc:cmpdata:)","title":"func sortIter(cmpFunc: GSequenceIterCompareFunc?, cmpData: gpointer?)","type":"method"}],"path":"\/documentation\/glib\/sequence\/sequenceprotocol-implementations","title":"SequenceProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/sequence","title":"Sequence","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/sequenceiter\/init(_:)-5rakx","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/sequenceiter\/init(_:)-85e7l","title":"init!(UnsafeMutablePointer<GSequenceIter>?)","type":"init"},{"path":"\/documentation\/glib\/sequenceiter\/init(_:)-89oft","title":"init!(UnsafePointer<GSequenceIter>?)","type":"init"},{"path":"\/documentation\/glib\/sequenceiter\/init(_:)-8mgon","title":"init(UnsafeMutablePointer<GSequenceIter>)","type":"init"},{"path":"\/documentation\/glib\/sequenceiter\/init(_:)-9auci","title":"init(UnsafePointer<GSequenceIter>)","type":"init"},{"path":"\/documentation\/glib\/sequenceiter\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/sequenceiter\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/sequenceiter\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/sequenceiter\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/sequenceiter\/init(raw:)-1gsk0","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/sequenceiter\/init(raw:)-1ps6x","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/sequenceiter\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GSequenceIter>)","type":"init"},{"path":"\/documentation\/glib\/sequenceiter\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/sequenceiter\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/sequenceiter\/init(retainingraw:)-17viz","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/sequenceiter\/init(retainingraw:)-4cvlm","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/sequenceiter\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/sequenceiter\/isbegin","title":"var isBegin: Bool","type":"property"},{"path":"\/documentation\/glib\/sequenceiter\/isend","title":"var isEnd: Bool","type":"property"},{"path":"\/documentation\/glib\/sequenceiter\/position","title":"var position: Int","type":"property"},{"path":"\/documentation\/glib\/sequenceiter\/sequence","title":"var sequence: SequenceRef!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/sequenceiter\/compare(b:)","title":"func compare<SequenceIterT>(b: SequenceIterT) -> Int","type":"method"},{"path":"\/documentation\/glib\/sequenceiter\/getposition()","title":"func getPosition() -> Int","type":"method"},{"path":"\/documentation\/glib\/sequenceiter\/getsequence()","title":"func getSequence() -> SequenceRef!","type":"method"},{"path":"\/documentation\/glib\/sequenceiter\/move(delta:)","title":"func move(delta: Int) -> SequenceIterRef!","type":"method"},{"path":"\/documentation\/glib\/sequenceiter\/next()","title":"func next() -> SequenceIterRef!","type":"method"},{"path":"\/documentation\/glib\/sequenceiter\/prev()","title":"func prev() -> SequenceIterRef!","type":"method"},{"path":"\/documentation\/glib\/sequenceiter\/sequenceforeachrange(end:func:userdata:)","title":"func sequenceForeachRange<SequenceIterT>(end: SequenceIterT, func: GFunc?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/sequenceiter\/sequenceget()","title":"func sequenceGet() -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/sequenceiter\/sequenceinsertbefore(data:)","title":"func sequenceInsertBefore(data: gpointer?) -> SequenceIterRef!","type":"method"},{"path":"\/documentation\/glib\/sequenceiter\/sequencemove(dest:)","title":"func sequenceMove<SequenceIterT>(dest: SequenceIterT)","type":"method"},{"path":"\/documentation\/glib\/sequenceiter\/sequencemoverange(begin:end:)","title":"func sequenceMoveRange<SequenceIterT>(begin: SequenceIterT, end: SequenceIterT)","type":"method"},{"path":"\/documentation\/glib\/sequenceiter\/sequencerangegetmidpoint(end:)","title":"func sequenceRangeGetMidpoint<SequenceIterT>(end: SequenceIterT) -> SequenceIterRef!","type":"method"},{"path":"\/documentation\/glib\/sequenceiter\/sequenceremove()","title":"func sequenceRemove()","type":"method"},{"path":"\/documentation\/glib\/sequenceiter\/sequenceremoverange(end:)","title":"func sequenceRemoveRange<SequenceIterT>(end: SequenceIterT)","type":"method"},{"path":"\/documentation\/glib\/sequenceiter\/sequenceset(data:)","title":"func sequenceSet(data: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/sequenceiter\/sequencesortchanged(cmpfunc:cmpdata:)","title":"func sequenceSortChanged(cmpFunc: GCompareDataFunc?, cmpData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/sequenceiter\/sequencesortchangediter(itercmp:cmpdata:)","title":"func sequenceSortChangedIter(iterCmp: GSequenceIterCompareFunc?, cmpData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/sequenceiter\/sequenceswap(b:)","title":"func sequenceSwap<SequenceIterT>(b: SequenceIterT)","type":"method"}],"path":"\/documentation\/glib\/sequenceiter\/sequenceiterprotocol-implementations","title":"SequenceIterProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/sequenceiter","title":"SequenceIter","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/source\/init(_:)-47rli","title":"init(UnsafePointer<GSource>)","type":"init"},{"path":"\/documentation\/glib\/source\/init(_:)-4edc6","title":"init!(UnsafeMutablePointer<GSource>?)","type":"init"},{"path":"\/documentation\/glib\/source\/init(_:)-6ks9q","title":"init!(UnsafePointer<GSource>?)","type":"init"},{"path":"\/documentation\/glib\/source\/init(_:)-6led5","title":"init(UnsafeMutablePointer<GSource>)","type":"init"},{"path":"\/documentation\/glib\/source\/init(_:)-8n1l0","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/source\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/source\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/source\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/source\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/source\/init(raw:)-1vdtg","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/source\/init(raw:)-52l3n","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/source\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GSource>)","type":"init"},{"path":"\/documentation\/glib\/source\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/source\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/source\/init(retainingraw:)-15rlg","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/source\/init(retainingraw:)-3q3wn","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/source\/init(sourcefuncs:structsize:)","title":"init<SourceFuncsT>(sourceFuncs: SourceFuncsT, structSize: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/source\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/source\/canrecurse","title":"var canRecurse: Bool","type":"property"},{"path":"\/documentation\/glib\/source\/context","title":"var context: MainContextRef!","type":"property"},{"path":"\/documentation\/glib\/source\/id","title":"var id: Int","type":"property"},{"path":"\/documentation\/glib\/source\/isdestroyed","title":"var isDestroyed: Bool","type":"property"},{"path":"\/documentation\/glib\/source\/name","title":"var name: String!","type":"property"},{"path":"\/documentation\/glib\/source\/priority","title":"var priority: Int","type":"property"},{"path":"\/documentation\/glib\/source\/readytime","title":"var readyTime: gint64","type":"property"},{"path":"\/documentation\/glib\/source\/source_ptr","title":"var source_ptr: UnsafeMutablePointer<GSource>!","type":"property"},{"path":"\/documentation\/glib\/source\/time","title":"var time: gint64","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/source\/add(childsource:)","title":"func add<SourceT>(childSource: SourceT)","type":"method"},{"path":"\/documentation\/glib\/source\/addpoll(fd:)","title":"func addPoll<PollFDT>(fd: PollFDT)","type":"method"},{"path":"\/documentation\/glib\/source\/addunix(fd:events:)","title":"func addUnix(fd: Int, events: IOCondition) -> gpointer!","type":"method"},{"path":"\/documentation\/glib\/source\/attach(context:)","title":"func attach(context: MainContextRef?) -> Int","type":"method"},{"path":"\/documentation\/glib\/source\/destroy()","title":"func destroy()","type":"method"},{"path":"\/documentation\/glib\/source\/getcanrecurse()","title":"func getCanRecurse() -> Bool","type":"method"},{"path":"\/documentation\/glib\/source\/getcontext()","title":"func getContext() -> MainContextRef!","type":"method"},{"path":"\/documentation\/glib\/source\/getcurrenttime(timeval:)","title":"func getCurrentTime<TimeValT>(timeval: TimeValT)","type":"method"},{"path":"\/documentation\/glib\/source\/getid()","title":"func getID() -> Int","type":"method"},{"path":"\/documentation\/glib\/source\/getname()","title":"func getName() -> String!","type":"method"},{"path":"\/documentation\/glib\/source\/getpriority()","title":"func getPriority() -> Int","type":"method"},{"path":"\/documentation\/glib\/source\/getreadytime()","title":"func getReadyTime() -> gint64","type":"method"},{"path":"\/documentation\/glib\/source\/gettime()","title":"func getTime() -> gint64","type":"method"},{"path":"\/documentation\/glib\/source\/modifyunixfd(tag:newevents:)","title":"func modifyUnixFd(tag: gpointer!, newEvents: IOCondition)","type":"method"},{"path":"\/documentation\/glib\/source\/queryunixfd(tag:)","title":"func queryUnixFd(tag: gpointer!) -> IOCondition","type":"method"},{"path":"\/documentation\/glib\/source\/ref()","title":"func ref() -> SourceRef!","type":"method"},{"path":"\/documentation\/glib\/source\/remove(childsource:)","title":"func remove<SourceT>(childSource: SourceT)","type":"method"},{"path":"\/documentation\/glib\/source\/removepoll(fd:)","title":"func removePoll<PollFDT>(fd: PollFDT)","type":"method"},{"path":"\/documentation\/glib\/source\/removeunixfd(tag:)","title":"func removeUnixFd(tag: gpointer!)","type":"method"},{"path":"\/documentation\/glib\/source\/set(canrecurse:)","title":"func set(canRecurse: Bool)","type":"method"},{"path":"\/documentation\/glib\/source\/set(funcs:)","title":"func set<SourceFuncsT>(funcs: SourceFuncsT)","type":"method"},{"path":"\/documentation\/glib\/source\/set(name:)","title":"func set(name: UnsafePointer<CChar>!)","type":"method"},{"path":"\/documentation\/glib\/source\/set(priority:)","title":"func set(priority: Int)","type":"method"},{"path":"\/documentation\/glib\/source\/set(readytime:)","title":"func set(readyTime: gint64)","type":"method"},{"path":"\/documentation\/glib\/source\/setcallback(func:data:notify:)","title":"func setCallback(func: GSourceFunc?, data: gpointer?, notify: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/glib\/source\/setcallbackindirect(callbackdata:callbackfuncs:)","title":"func setCallbackIndirect<SourceCallbackFuncsT>(callbackData: gpointer?, callbackFuncs: SourceCallbackFuncsT)","type":"method"},{"path":"\/documentation\/glib\/source\/setdisposefunction(dispose:)","title":"func setDisposeFunction(dispose: GSourceDisposeFunc?)","type":"method"},{"path":"\/documentation\/glib\/source\/setstatic(name:)","title":"func setStatic(name: UnsafePointer<CChar>!)","type":"method"},{"path":"\/documentation\/glib\/source\/unref()","title":"func unref()","type":"method"}],"path":"\/documentation\/glib\/source\/sourceprotocol-implementations","title":"SourceProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/source","title":"Source","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/sourcecallbackfuncs\/init(_:)-26pr4","title":"init!(UnsafeMutablePointer<GSourceCallbackFuncs>?)","type":"init"},{"path":"\/documentation\/glib\/sourcecallbackfuncs\/init(_:)-5cn13","title":"init(UnsafeMutablePointer<GSourceCallbackFuncs>)","type":"init"},{"path":"\/documentation\/glib\/sourcecallbackfuncs\/init(_:)-5cy75","title":"init!(UnsafePointer<GSourceCallbackFuncs>?)","type":"init"},{"path":"\/documentation\/glib\/sourcecallbackfuncs\/init(_:)-64nk6","title":"init(UnsafePointer<GSourceCallbackFuncs>)","type":"init"},{"path":"\/documentation\/glib\/sourcecallbackfuncs\/init(_:)-85yys","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/sourcecallbackfuncs\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/sourcecallbackfuncs\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/sourcecallbackfuncs\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/sourcecallbackfuncs\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/sourcecallbackfuncs\/init(raw:)-3o4t8","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/sourcecallbackfuncs\/init(raw:)-6t4u3","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/sourcecallbackfuncs\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GSourceCallbackFuncs>)","type":"init"},{"path":"\/documentation\/glib\/sourcecallbackfuncs\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/sourcecallbackfuncs\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/sourcecallbackfuncs\/init(retainingraw:)-4jvwf","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/sourcecallbackfuncs\/init(retainingraw:)-76g32","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/sourcecallbackfuncs\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"}],"path":"\/documentation\/glib\/sourcecallbackfuncs","title":"SourceCallbackFuncs","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/sourcefuncs\/init(_:)-17j5x","title":"init!(UnsafeMutablePointer<GSourceFuncs>?)","type":"init"},{"path":"\/documentation\/glib\/sourcefuncs\/init(_:)-5njpw","title":"init(UnsafePointer<GSourceFuncs>)","type":"init"},{"path":"\/documentation\/glib\/sourcefuncs\/init(_:)-5qwlr","title":"init(UnsafeMutablePointer<GSourceFuncs>)","type":"init"},{"path":"\/documentation\/glib\/sourcefuncs\/init(_:)-7tzdq","title":"init!(UnsafePointer<GSourceFuncs>?)","type":"init"},{"path":"\/documentation\/glib\/sourcefuncs\/init(_:)-q1vp","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/sourcefuncs\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/sourcefuncs\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/sourcefuncs\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/sourcefuncs\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/sourcefuncs\/init(raw:)-320me","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/sourcefuncs\/init(raw:)-ho2f","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/sourcefuncs\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GSourceFuncs>)","type":"init"},{"path":"\/documentation\/glib\/sourcefuncs\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/sourcefuncs\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/sourcefuncs\/init(retainingraw:)-3r0wf","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/sourcefuncs\/init(retainingraw:)-m0x8","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/sourcefuncs\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/sourcefuncs\/check","title":"var check: GSourceFuncsCheckFunc!","type":"property"},{"path":"\/documentation\/glib\/sourcefuncs\/dispatch","title":"var dispatch: GSourceFuncsDispatchFunc!","type":"property"},{"path":"\/documentation\/glib\/sourcefuncs\/finalize","title":"var finalize: GSourceFuncsFinalizeFunc!","type":"property"},{"path":"\/documentation\/glib\/sourcefuncs\/prepare","title":"var prepare: GSourceFuncsPrepareFunc!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/sourcefuncs\/sourceremovebyfuncs(userdata:)","title":"func sourceRemoveByFuncs(userData: gpointer?) -> Bool","type":"method"}],"path":"\/documentation\/glib\/sourcefuncs\/sourcefuncsprotocol-implementations","title":"SourceFuncsProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/sourcefuncs","title":"SourceFuncs","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/sourceprivate\/init(_:)-4kva","title":"init!(UnsafeMutablePointer<GSourcePrivate>?)","type":"init"},{"path":"\/documentation\/glib\/sourceprivate\/init(_:)-4wn1y","title":"init(UnsafeMutablePointer<GSourcePrivate>)","type":"init"},{"path":"\/documentation\/glib\/sourceprivate\/init(_:)-554tt","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/sourceprivate\/init(_:)-93i09","title":"init!(UnsafePointer<GSourcePrivate>?)","type":"init"},{"path":"\/documentation\/glib\/sourceprivate\/init(_:)-9qj5v","title":"init(UnsafePointer<GSourcePrivate>)","type":"init"},{"path":"\/documentation\/glib\/sourceprivate\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/sourceprivate\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/sourceprivate\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/sourceprivate\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/sourceprivate\/init(raw:)-1sl9x","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/sourceprivate\/init(raw:)-97u91","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/sourceprivate\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GSourcePrivate>)","type":"init"},{"path":"\/documentation\/glib\/sourceprivate\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/sourceprivate\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/sourceprivate\/init(retainingraw:)-6gjx8","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/sourceprivate\/init(retainingraw:)-9ljs3","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/sourceprivate\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"}],"path":"\/documentation\/glib\/sourceprivate","title":"SourcePrivate","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/statbuf\/init(_:)-11y9j","title":"init!(UnsafeMutablePointer<GStatBuf>?)","type":"init"},{"path":"\/documentation\/glib\/statbuf\/init(_:)-48y7u","title":"init(UnsafeMutablePointer<GStatBuf>)","type":"init"},{"path":"\/documentation\/glib\/statbuf\/init(_:)-613vw","title":"init(UnsafePointer<GStatBuf>)","type":"init"},{"path":"\/documentation\/glib\/statbuf\/init(_:)-7gpt3","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/statbuf\/init(_:)-9p181","title":"init!(UnsafePointer<GStatBuf>?)","type":"init"},{"path":"\/documentation\/glib\/statbuf\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/statbuf\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/statbuf\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/statbuf\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/statbuf\/init(raw:)-29u06","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/statbuf\/init(raw:)-2l17j","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/statbuf\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GStatBuf>)","type":"init"},{"path":"\/documentation\/glib\/statbuf\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/statbuf\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/statbuf\/init(retainingraw:)-2cnxt","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/statbuf\/init(retainingraw:)-39rhw","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/statbuf\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/statbuf\/lstat(filename:)","title":"func lstat(filename: UnsafePointer<gchar>!) -> Int","type":"method"},{"path":"\/documentation\/glib\/statbuf\/stat(filename:)","title":"func stat(filename: UnsafePointer<gchar>!) -> Int","type":"method"}],"path":"\/documentation\/glib\/statbuf\/statbufprotocol-implementations","title":"StatBufProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/statbuf","title":"StatBuf","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/staticmutex\/init(_:)-30gyb","title":"init(UnsafePointer<GStaticMutex>)","type":"init"},{"path":"\/documentation\/glib\/staticmutex\/init(_:)-5ndjt","title":"init!(UnsafeMutablePointer<GStaticMutex>?)","type":"init"},{"path":"\/documentation\/glib\/staticmutex\/init(_:)-6lhvr","title":"init(UnsafeMutablePointer<GStaticMutex>)","type":"init"},{"path":"\/documentation\/glib\/staticmutex\/init(_:)-7apmz","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/staticmutex\/init(_:)-8rbuv","title":"init!(UnsafePointer<GStaticMutex>?)","type":"init"},{"path":"\/documentation\/glib\/staticmutex\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/staticmutex\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/staticmutex\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/staticmutex\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/staticmutex\/init(raw:)-1nyk4","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/staticmutex\/init(raw:)-5it8v","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/staticmutex\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GStaticMutex>)","type":"init"},{"path":"\/documentation\/glib\/staticmutex\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/staticmutex\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/staticmutex\/init(retainingraw:)-290rd","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/staticmutex\/init(retainingraw:)-8drmn","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/staticmutex\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/staticmutex\/mutex","title":"var mutex: MutexRef!","type":"property"},{"path":"\/documentation\/glib\/staticmutex\/muteximpl","title":"var mutexImpl: MutexRef!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/staticmutex\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/glib\/staticmutex\/getmuteximpl()","title":"func getMutexImpl() -> MutexRef!","type":"method"},{"path":"\/documentation\/glib\/staticmutex\/init_()","title":"func init_()","type":"method"}],"path":"\/documentation\/glib\/staticmutex\/staticmutexprotocol-implementations","title":"StaticMutexProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/staticmutex","title":"StaticMutex","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/staticprivate\/init(_:)-12kt","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/staticprivate\/init(_:)-4ro2q","title":"init(UnsafeMutablePointer<GStaticPrivate>)","type":"init"},{"path":"\/documentation\/glib\/staticprivate\/init(_:)-4svqa","title":"init!(UnsafeMutablePointer<GStaticPrivate>?)","type":"init"},{"path":"\/documentation\/glib\/staticprivate\/init(_:)-7b5yv","title":"init!(UnsafePointer<GStaticPrivate>?)","type":"init"},{"path":"\/documentation\/glib\/staticprivate\/init(_:)-7upb9","title":"init(UnsafePointer<GStaticPrivate>)","type":"init"},{"path":"\/documentation\/glib\/staticprivate\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/staticprivate\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/staticprivate\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/staticprivate\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/staticprivate\/init(raw:)-8866f","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/staticprivate\/init(raw:)-8jd6m","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/staticprivate\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GStaticPrivate>)","type":"init"},{"path":"\/documentation\/glib\/staticprivate\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/staticprivate\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/staticprivate\/init(retainingraw:)-51ib8","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/staticprivate\/init(retainingraw:)-7lumb","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/staticprivate\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/staticprivate\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/glib\/staticprivate\/get()","title":"func get() -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/staticprivate\/init_()","title":"func init_()","type":"method"},{"path":"\/documentation\/glib\/staticprivate\/set(data:notify:)","title":"func set(data: gpointer?, notify: GDestroyNotify?)","type":"method"}],"path":"\/documentation\/glib\/staticprivate\/staticprivateprotocol-implementations","title":"StaticPrivateProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/staticprivate","title":"StaticPrivate","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/staticrwlock\/init(_:)-33hto","title":"init!(UnsafeMutablePointer<GStaticRWLock>?)","type":"init"},{"path":"\/documentation\/glib\/staticrwlock\/init(_:)-3kcsg","title":"init(UnsafeMutablePointer<GStaticRWLock>)","type":"init"},{"path":"\/documentation\/glib\/staticrwlock\/init(_:)-3zz8s","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/staticrwlock\/init(_:)-5u2m3","title":"init(UnsafePointer<GStaticRWLock>)","type":"init"},{"path":"\/documentation\/glib\/staticrwlock\/init(_:)-8mhsi","title":"init!(UnsafePointer<GStaticRWLock>?)","type":"init"},{"path":"\/documentation\/glib\/staticrwlock\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/staticrwlock\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/staticrwlock\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/staticrwlock\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/staticrwlock\/init(raw:)-3slj2","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/staticrwlock\/init(raw:)-7ng5h","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/staticrwlock\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GStaticRWLock>)","type":"init"},{"path":"\/documentation\/glib\/staticrwlock\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/staticrwlock\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/staticrwlock\/init(retainingraw:)-2wn2i","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/staticrwlock\/init(retainingraw:)-5j6wp","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/staticrwlock\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/staticrwlock\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/glib\/staticrwlock\/init_()","title":"func init_()","type":"method"},{"path":"\/documentation\/glib\/staticrwlock\/readerlock()","title":"func readerLock()","type":"method"},{"path":"\/documentation\/glib\/staticrwlock\/readertrylock()","title":"func readerTrylock() -> Bool","type":"method"},{"path":"\/documentation\/glib\/staticrwlock\/readerunlock()","title":"func readerUnlock()","type":"method"},{"path":"\/documentation\/glib\/staticrwlock\/writerlock()","title":"func writerLock()","type":"method"},{"path":"\/documentation\/glib\/staticrwlock\/writertrylock()","title":"func writerTrylock() -> Bool","type":"method"},{"path":"\/documentation\/glib\/staticrwlock\/writerunlock()","title":"func writerUnlock()","type":"method"}],"path":"\/documentation\/glib\/staticrwlock\/staticrwlockprotocol-implementations","title":"StaticRWLockProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/staticrwlock","title":"StaticRWLock","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/staticrecmutex\/init(_:)-1iu63","title":"init!(UnsafeMutablePointer<GStaticRecMutex>?)","type":"init"},{"path":"\/documentation\/glib\/staticrecmutex\/init(_:)-4x7sy","title":"init(UnsafeMutablePointer<GStaticRecMutex>)","type":"init"},{"path":"\/documentation\/glib\/staticrecmutex\/init(_:)-5k9vo","title":"init(UnsafePointer<GStaticRecMutex>)","type":"init"},{"path":"\/documentation\/glib\/staticrecmutex\/init(_:)-6kdxl","title":"init!(UnsafePointer<GStaticRecMutex>?)","type":"init"},{"path":"\/documentation\/glib\/staticrecmutex\/init(_:)-96iz8","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/staticrecmutex\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/staticrecmutex\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/staticrecmutex\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/staticrecmutex\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/staticrecmutex\/init(raw:)-37li3","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/staticrecmutex\/init(raw:)-8696v","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/staticrecmutex\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GStaticRecMutex>)","type":"init"},{"path":"\/documentation\/glib\/staticrecmutex\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/staticrecmutex\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/staticrecmutex\/init(retainingraw:)-1fbfl","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/staticrecmutex\/init(retainingraw:)-5slwu","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/staticrecmutex\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/staticrecmutex\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/glib\/staticrecmutex\/init_()","title":"func init_()","type":"method"},{"path":"\/documentation\/glib\/staticrecmutex\/lock()","title":"func lock()","type":"method"},{"path":"\/documentation\/glib\/staticrecmutex\/lockfull(depth:)","title":"func lockFull(depth: Int)","type":"method"},{"path":"\/documentation\/glib\/staticrecmutex\/trylock()","title":"func trylock() -> Bool","type":"method"},{"path":"\/documentation\/glib\/staticrecmutex\/unlock()","title":"func unlock()","type":"method"},{"path":"\/documentation\/glib\/staticrecmutex\/unlockfull()","title":"func unlockFull() -> Int","type":"method"}],"path":"\/documentation\/glib\/staticrecmutex\/staticrecmutexprotocol-implementations","title":"StaticRecMutexProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/staticrecmutex","title":"StaticRecMutex","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/stringchunk\/init(_:)-10hox","title":"init(UnsafePointer<GStringChunk>)","type":"init"},{"path":"\/documentation\/glib\/stringchunk\/init(_:)-22k60","title":"init!(UnsafePointer<GStringChunk>?)","type":"init"},{"path":"\/documentation\/glib\/stringchunk\/init(_:)-2tqkt","title":"init!(UnsafeMutablePointer<GStringChunk>?)","type":"init"},{"path":"\/documentation\/glib\/stringchunk\/init(_:)-7qzn9","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/stringchunk\/init(_:)-86bkx","title":"init(UnsafeMutablePointer<GStringChunk>)","type":"init"},{"path":"\/documentation\/glib\/stringchunk\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/stringchunk\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/stringchunk\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/stringchunk\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/stringchunk\/init(raw:)-7yaej","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/stringchunk\/init(raw:)-l95n","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/stringchunk\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GStringChunk>)","type":"init"},{"path":"\/documentation\/glib\/stringchunk\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/stringchunk\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/stringchunk\/init(retainingraw:)-6l","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/stringchunk\/init(retainingraw:)-9oe8n","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/stringchunk\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/stringchunk\/clear()","title":"func clear()","type":"method"},{"path":"\/documentation\/glib\/stringchunk\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/glib\/stringchunk\/insert(string:)","title":"func insert(string: UnsafePointer<gchar>!) -> String!","type":"method"},{"path":"\/documentation\/glib\/stringchunk\/insertconst(string:)","title":"func insertConst(string: UnsafePointer<gchar>!) -> String!","type":"method"},{"path":"\/documentation\/glib\/stringchunk\/insertlen(string:len:)","title":"func insertLen(string: UnsafePointer<gchar>!, len: gssize) -> String!","type":"method"}],"path":"\/documentation\/glib\/stringchunk\/stringchunkprotocol-implementations","title":"StringChunkProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/stringchunk","title":"StringChunk","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/stringclass\/init(_:)-7fgtc","title":"init(String)","type":"init"},{"path":"\/documentation\/glib\/stringclass\/init(_:)-80n9x","title":"init(UnsafeMutablePointer<GString>)","type":"init"},{"path":"\/documentation\/glib\/stringclass\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/stringclass","title":"StringClass","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/stringtype\/init(_:)-1qgcr","title":"init(UnsafeMutablePointer<GString>)","type":"init"},{"path":"\/documentation\/glib\/stringtype\/init(_:)-20bp9","title":"init!(UnsafePointer<GString>?)","type":"init"},{"path":"\/documentation\/glib\/stringtype\/init(_:)-8aanb","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/stringtype\/init(_:)-93u2k","title":"init(UnsafePointer<GString>)","type":"init"},{"path":"\/documentation\/glib\/stringtype\/init(_:)-oxgd","title":"init!(UnsafeMutablePointer<GString>?)","type":"init"},{"path":"\/documentation\/glib\/stringtype\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/stringtype\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/stringtype\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/stringtype\/init(init:)","title":"init(init: UnsafePointer<gchar>?)","type":"init"},{"path":"\/documentation\/glib\/stringtype\/init(len:len:)","title":"init(len: UnsafePointer<gchar>!, len: gssize)","type":"init"},{"path":"\/documentation\/glib\/stringtype\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/stringtype\/init(raw:)-4nkl4","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/stringtype\/init(raw:)-9qplj","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/stringtype\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GString>)","type":"init"},{"path":"\/documentation\/glib\/stringtype\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/stringtype\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/stringtype\/init(retainingraw:)-2qc2u","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/stringtype\/init(retainingraw:)-6iz8p","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/stringtype\/init(sized:)","title":"init(sized: Int)","type":"init"},{"path":"\/documentation\/glib\/stringtype\/init(take:)","title":"init(take: UnsafeMutablePointer<gchar>?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/stringtype\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/stringtype\/new(len:len:)","title":"static func new(len: UnsafePointer<gchar>!, len: gssize) -> StringType!","type":"method"},{"path":"\/documentation\/glib\/stringtype\/new(take:)","title":"static func new(take: UnsafeMutablePointer<gchar>?) -> StringType!","type":"method"},{"path":"\/documentation\/glib\/stringtype\/sizednew(sized:)","title":"static func sizedNew(sized: Int) -> StringType!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/stringtype\/allocatedlen","title":"var allocatedLen: gsize","type":"property"},{"path":"\/documentation\/glib\/stringtype\/gstring_ptr","title":"var gstring_ptr: UnsafeMutablePointer<GString>!","type":"property"},{"path":"\/documentation\/glib\/stringtype\/len","title":"var len: gsize","type":"property"},{"path":"\/documentation\/glib\/stringtype\/str","title":"var str: UnsafeMutablePointer<gchar>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/stringtype\/append(c:)","title":"func append(c: gchar) -> StringRef!","type":"method"},{"path":"\/documentation\/glib\/stringtype\/append(val:)","title":"func append(val: UnsafePointer<gchar>!) -> StringRef!","type":"method"},{"path":"\/documentation\/glib\/stringtype\/appendlen(val:len:)","title":"func appendLen(val: UnsafePointer<gchar>!, len: gssize) -> StringRef!","type":"method"},{"path":"\/documentation\/glib\/stringtype\/appenduriescaped(unescaped:reservedcharsallowed:allowutf8:)","title":"func appendURIEscaped(unescaped: UnsafePointer<gchar>!, reservedCharsAllowed: UnsafePointer<gchar>!, allowUTF8: Bool) -> StringRef!","type":"method"},{"path":"\/documentation\/glib\/stringtype\/appendunichar(wc:)","title":"func appendUnichar(wc: gunichar) -> StringRef!","type":"method"},{"path":"\/documentation\/glib\/stringtype\/appendvprintf(format:args:)","title":"func appendVprintf(format: UnsafePointer<gchar>!, args: CVaListPointer)","type":"method"},{"path":"\/documentation\/glib\/stringtype\/asciidown()","title":"func asciiDown() -> StringRef!","type":"method"},{"path":"\/documentation\/glib\/stringtype\/asciiup()","title":"func asciiUp() -> StringRef!","type":"method"},{"path":"\/documentation\/glib\/stringtype\/assign(rval:)","title":"func assign(rval: UnsafePointer<gchar>!) -> StringRef!","type":"method"},{"path":"\/documentation\/glib\/stringtype\/down()","title":"func down() -> StringRef!","type":"method"},{"path":"\/documentation\/glib\/stringtype\/equal(v2:)","title":"func equal<StringTypeT>(v2: StringTypeT) -> Bool","type":"method"},{"path":"\/documentation\/glib\/stringtype\/erase(pos:len:)","title":"func erase(pos: gssize, len: gssize) -> StringRef!","type":"method"},{"path":"\/documentation\/glib\/stringtype\/free(freesegment:)","title":"func free(freeSegment: Bool) -> String!","type":"method"},{"path":"\/documentation\/glib\/stringtype\/freeandsteal()","title":"func freeAndSteal() -> String!","type":"method"},{"path":"\/documentation\/glib\/stringtype\/freetobytes()","title":"func freeToBytes() -> BytesRef!","type":"method"},{"path":"\/documentation\/glib\/stringtype\/hash()","title":"func hash() -> Int","type":"method"},{"path":"\/documentation\/glib\/stringtype\/insert(pos:val:)","title":"func insert(pos: gssize, val: UnsafePointer<gchar>!) -> StringRef!","type":"method"},{"path":"\/documentation\/glib\/stringtype\/insertc(pos:c:)","title":"func insertC(pos: gssize, c: gchar) -> StringRef!","type":"method"},{"path":"\/documentation\/glib\/stringtype\/insertlen(pos:val:len:)","title":"func insertLen(pos: gssize, val: UnsafePointer<gchar>!, len: gssize) -> StringRef!","type":"method"},{"path":"\/documentation\/glib\/stringtype\/insertunichar(pos:wc:)","title":"func insertUnichar(pos: gssize, wc: gunichar) -> StringRef!","type":"method"},{"path":"\/documentation\/glib\/stringtype\/overwrite(pos:val:)","title":"func overwrite(pos: Int, val: UnsafePointer<gchar>!) -> StringRef!","type":"method"},{"path":"\/documentation\/glib\/stringtype\/overwritelen(pos:val:len:)","title":"func overwriteLen(pos: Int, val: UnsafePointer<gchar>!, len: gssize) -> StringRef!","type":"method"},{"path":"\/documentation\/glib\/stringtype\/prepend(c:)","title":"func prepend(c: gchar) -> StringRef!","type":"method"},{"path":"\/documentation\/glib\/stringtype\/prepend(val:)","title":"func prepend(val: UnsafePointer<gchar>!) -> StringRef!","type":"method"},{"path":"\/documentation\/glib\/stringtype\/prependlen(val:len:)","title":"func prependLen(val: UnsafePointer<gchar>!, len: gssize) -> StringRef!","type":"method"},{"path":"\/documentation\/glib\/stringtype\/prependunichar(wc:)","title":"func prependUnichar(wc: gunichar) -> StringRef!","type":"method"},{"path":"\/documentation\/glib\/stringtype\/replace(find:replace:limit:)","title":"func replace(find: UnsafePointer<gchar>!, replace: UnsafePointer<gchar>!, limit: Int) -> Int","type":"method"},{"path":"\/documentation\/glib\/stringtype\/setsize(len:)","title":"func setSize(len: Int) -> StringRef!","type":"method"},{"path":"\/documentation\/glib\/stringtype\/truncate(len:)","title":"func truncate(len: Int) -> StringRef!","type":"method"},{"path":"\/documentation\/glib\/stringtype\/up()","title":"func up() -> StringRef!","type":"method"},{"path":"\/documentation\/glib\/stringtype\/vprintf(format:args:)","title":"func vprintf(format: UnsafePointer<gchar>!, args: CVaListPointer)","type":"method"}],"path":"\/documentation\/glib\/stringtype\/stringprotocol-implementations","title":"StringProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/stringtype","title":"StringType","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/strvbuilder\/init()","title":"init()","type":"init"},{"path":"\/documentation\/glib\/strvbuilder\/init(_:)-4g5uy","title":"init!(UnsafePointer<GStrvBuilder>?)","type":"init"},{"path":"\/documentation\/glib\/strvbuilder\/init(_:)-5ww7l","title":"init(UnsafePointer<GStrvBuilder>)","type":"init"},{"path":"\/documentation\/glib\/strvbuilder\/init(_:)-7wk15","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/strvbuilder\/init(_:)-85w2r","title":"init!(UnsafeMutablePointer<GStrvBuilder>?)","type":"init"},{"path":"\/documentation\/glib\/strvbuilder\/init(_:)-8lql7","title":"init(UnsafeMutablePointer<GStrvBuilder>)","type":"init"},{"path":"\/documentation\/glib\/strvbuilder\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/strvbuilder\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/strvbuilder\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/strvbuilder\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/strvbuilder\/init(raw:)-1t1h3","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/strvbuilder\/init(raw:)-962uf","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/strvbuilder\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GStrvBuilder>)","type":"init"},{"path":"\/documentation\/glib\/strvbuilder\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/strvbuilder\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/strvbuilder\/init(retainingraw:)-1lq7c","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/strvbuilder\/init(retainingraw:)-2itd7","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/strvbuilder\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/strvbuilder\/strv_builder_ptr","title":"var strv_builder_ptr: UnsafeMutablePointer<GStrvBuilder>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/strvbuilder\/add(value:)","title":"func add(value: UnsafePointer<CChar>!)","type":"method"},{"path":"\/documentation\/glib\/strvbuilder\/addv(value:)","title":"func addv(value: UnsafeMutablePointer<UnsafePointer<CChar>?>!)","type":"method"},{"path":"\/documentation\/glib\/strvbuilder\/end()","title":"func end() -> GStrv!","type":"method"},{"path":"\/documentation\/glib\/strvbuilder\/ref()","title":"func ref() -> StrvBuilderRef!","type":"method"},{"path":"\/documentation\/glib\/strvbuilder\/take(value:)","title":"func take(value: UnsafeMutablePointer<CChar>!)","type":"method"},{"path":"\/documentation\/glib\/strvbuilder\/unref()","title":"func unref()","type":"method"},{"path":"\/documentation\/glib\/strvbuilder\/unreftostrv()","title":"func unrefToStrv() -> GStrv!","type":"method"}],"path":"\/documentation\/glib\/strvbuilder\/strvbuilderprotocol-implementations","title":"StrvBuilderProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/strvbuilder","title":"StrvBuilder","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/testcase\/init(_:)-45b6f","title":"init(UnsafePointer<GTestCase>)","type":"init"},{"path":"\/documentation\/glib\/testcase\/init(_:)-669nm","title":"init!(UnsafePointer<GTestCase>?)","type":"init"},{"path":"\/documentation\/glib\/testcase\/init(_:)-89z43","title":"init(UnsafeMutablePointer<GTestCase>)","type":"init"},{"path":"\/documentation\/glib\/testcase\/init(_:)-8ykz2","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/testcase\/init(_:)-9dtmu","title":"init!(UnsafeMutablePointer<GTestCase>?)","type":"init"},{"path":"\/documentation\/glib\/testcase\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/testcase\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/testcase\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/testcase\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/testcase\/init(raw:)-3wndo","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/testcase\/init(raw:)-6gzwv","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/testcase\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GTestCase>)","type":"init"},{"path":"\/documentation\/glib\/testcase\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/testcase\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/testcase\/init(retainingraw:)-6logv","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/testcase\/init(retainingraw:)-8klno","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/testcase\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/testcase\/free()","title":"func free()","type":"method"}],"path":"\/documentation\/glib\/testcase\/testcaseprotocol-implementations","title":"TestCaseProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/testcase","title":"TestCase","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/testconfig\/init(_:)-3jy1y","title":"init(UnsafeMutablePointer<GTestConfig>)","type":"init"},{"path":"\/documentation\/glib\/testconfig\/init(_:)-43tfd","title":"init!(UnsafeMutablePointer<GTestConfig>?)","type":"init"},{"path":"\/documentation\/glib\/testconfig\/init(_:)-4oaop","title":"init!(UnsafePointer<GTestConfig>?)","type":"init"},{"path":"\/documentation\/glib\/testconfig\/init(_:)-85kkl","title":"init(UnsafePointer<GTestConfig>)","type":"init"},{"path":"\/documentation\/glib\/testconfig\/init(_:)-8l2tt","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/testconfig\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/testconfig\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/testconfig\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/testconfig\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/testconfig\/init(raw:)-324kh","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/testconfig\/init(raw:)-9wpz7","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/testconfig\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GTestConfig>)","type":"init"},{"path":"\/documentation\/glib\/testconfig\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/testconfig\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/testconfig\/init(retainingraw:)-3msl3","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/testconfig\/init(retainingraw:)-3xzrw","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/testconfig\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/testconfig\/testinitialized","title":"var testInitialized: gboolean","type":"property"},{"path":"\/documentation\/glib\/testconfig\/testperf","title":"var testPerf: gboolean","type":"property"},{"path":"\/documentation\/glib\/testconfig\/testquick","title":"var testQuick: gboolean","type":"property"},{"path":"\/documentation\/glib\/testconfig\/testquiet","title":"var testQuiet: gboolean","type":"property"},{"path":"\/documentation\/glib\/testconfig\/testundefined","title":"var testUndefined: gboolean","type":"property"},{"path":"\/documentation\/glib\/testconfig\/testverbose","title":"var testVerbose: gboolean","type":"property"}],"path":"\/documentation\/glib\/testconfig\/testconfigprotocol-implementations","title":"TestConfigProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/testconfig","title":"TestConfig","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/testlogbuffer\/init(_:)-5x9f9","title":"init!(UnsafeMutablePointer<GTestLogBuffer>?)","type":"init"},{"path":"\/documentation\/glib\/testlogbuffer\/init(_:)-81q47","title":"init!(UnsafePointer<GTestLogBuffer>?)","type":"init"},{"path":"\/documentation\/glib\/testlogbuffer\/init(_:)-8wrwj","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/testlogbuffer\/init(_:)-9plw5","title":"init(UnsafeMutablePointer<GTestLogBuffer>)","type":"init"},{"path":"\/documentation\/glib\/testlogbuffer\/init(_:)-nwt8","title":"init(UnsafePointer<GTestLogBuffer>)","type":"init"},{"path":"\/documentation\/glib\/testlogbuffer\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/testlogbuffer\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/testlogbuffer\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/testlogbuffer\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/testlogbuffer\/init(raw:)-8uh96","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/testlogbuffer\/init(raw:)-xj9j","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/testlogbuffer\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GTestLogBuffer>)","type":"init"},{"path":"\/documentation\/glib\/testlogbuffer\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/testlogbuffer\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/testlogbuffer\/init(retainingraw:)-1ng46","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/testlogbuffer\/init(retainingraw:)-5iaq1","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/testlogbuffer\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/testlogbuffer\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/glib\/testlogbuffer\/pop()","title":"func pop() -> TestLogMsgRef!","type":"method"},{"path":"\/documentation\/glib\/testlogbuffer\/push(nbytes:bytes:)","title":"func push(nBytes: Int, bytes: UnsafePointer<guint8>!)","type":"method"}],"path":"\/documentation\/glib\/testlogbuffer\/testlogbufferprotocol-implementations","title":"TestLogBufferProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/testlogbuffer","title":"TestLogBuffer","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/testlogmsg\/init(_:)-33zw4","title":"init(UnsafePointer<GTestLogMsg>)","type":"init"},{"path":"\/documentation\/glib\/testlogmsg\/init(_:)-5mp90","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/testlogmsg\/init(_:)-64jzp","title":"init!(UnsafeMutablePointer<GTestLogMsg>?)","type":"init"},{"path":"\/documentation\/glib\/testlogmsg\/init(_:)-833sf","title":"init(UnsafeMutablePointer<GTestLogMsg>)","type":"init"},{"path":"\/documentation\/glib\/testlogmsg\/init(_:)-9ljag","title":"init!(UnsafePointer<GTestLogMsg>?)","type":"init"},{"path":"\/documentation\/glib\/testlogmsg\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/testlogmsg\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/testlogmsg\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/testlogmsg\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/testlogmsg\/init(raw:)-7lb2q","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/testlogmsg\/init(raw:)-89uq","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/testlogmsg\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GTestLogMsg>)","type":"init"},{"path":"\/documentation\/glib\/testlogmsg\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/testlogmsg\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/testlogmsg\/init(retainingraw:)-70jou","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/testlogmsg\/init(retainingraw:)-vsro","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/testlogmsg\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/testlogmsg\/logtype","title":"var logType: GTestLogType","type":"property"},{"path":"\/documentation\/glib\/testlogmsg\/nnums","title":"var nNums: guint","type":"property"},{"path":"\/documentation\/glib\/testlogmsg\/nstrings","title":"var nStrings: guint","type":"property"},{"path":"\/documentation\/glib\/testlogmsg\/nums","title":"var nums: UnsafeMutablePointer<CLongDouble>!","type":"property"},{"path":"\/documentation\/glib\/testlogmsg\/strings","title":"var strings: UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/testlogmsg\/free()","title":"func free()","type":"method"}],"path":"\/documentation\/glib\/testlogmsg\/testlogmsgprotocol-implementations","title":"TestLogMsgProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/testlogmsg","title":"TestLogMsg","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/testsuite\/init(_:)-34bgt","title":"init!(UnsafePointer<GTestSuite>?)","type":"init"},{"path":"\/documentation\/glib\/testsuite\/init(_:)-3u2hl","title":"init(UnsafePointer<GTestSuite>)","type":"init"},{"path":"\/documentation\/glib\/testsuite\/init(_:)-5gmjk","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/testsuite\/init(_:)-95m0h","title":"init!(UnsafeMutablePointer<GTestSuite>?)","type":"init"},{"path":"\/documentation\/glib\/testsuite\/init(_:)-e3sj","title":"init(UnsafeMutablePointer<GTestSuite>)","type":"init"},{"path":"\/documentation\/glib\/testsuite\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/testsuite\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/testsuite\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/testsuite\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/testsuite\/init(raw:)-4vgrp","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/testsuite\/init(raw:)-70umu","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/testsuite\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GTestSuite>)","type":"init"},{"path":"\/documentation\/glib\/testsuite\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/testsuite\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/testsuite\/init(retainingraw:)-2k3zd","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/testsuite\/init(retainingraw:)-6cr52","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/testsuite\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/testsuite\/add(testcase:)","title":"func add<TestCaseT>(testCase: TestCaseT)","type":"method"},{"path":"\/documentation\/glib\/testsuite\/addsuite(nestedsuite:)","title":"func addSuite<TestSuiteT>(nestedsuite: TestSuiteT)","type":"method"},{"path":"\/documentation\/glib\/testsuite\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/glib\/testsuite\/testrunsuite()","title":"func testRunSuite() -> Int","type":"method"}],"path":"\/documentation\/glib\/testsuite\/testsuiteprotocol-implementations","title":"TestSuiteProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/testsuite","title":"TestSuite","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/thread\/init(_:)-3kt9b","title":"init!(UnsafeMutablePointer<GThread>?)","type":"init"},{"path":"\/documentation\/glib\/thread\/init(_:)-4ynhk","title":"init(UnsafePointer<GThread>)","type":"init"},{"path":"\/documentation\/glib\/thread\/init(_:)-5iu3z","title":"init(UnsafeMutablePointer<GThread>)","type":"init"},{"path":"\/documentation\/glib\/thread\/init(_:)-7wy7e","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/thread\/init(_:)-yy2c","title":"init!(UnsafePointer<GThread>?)","type":"init"},{"path":"\/documentation\/glib\/thread\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/thread\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/thread\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/thread\/init(name:func:data:)","title":"init(name: UnsafePointer<gchar>?, func: GThreadFunc?, data: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/thread\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/thread\/init(raw:)-37uog","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/thread\/init(raw:)-8azy3","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/thread\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GThread>)","type":"init"},{"path":"\/documentation\/glib\/thread\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/thread\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/thread\/init(retainingraw:)-3i0rm","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/thread\/init(retainingraw:)-4f481","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/thread\/init(try_:func:data:)","title":"init(try_: UnsafePointer<gchar>?, func: GThreadFunc?, data: gpointer?) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/thread\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/thread\/create(func:data:joinable:)","title":"static func create(func: GThreadFunc?, data: gpointer?, joinable: Bool) throws -> Thread!","type":"method"},{"path":"\/documentation\/glib\/thread\/createfull(func:data:stacksize:joinable:bound:priority:)","title":"static func createFull(func: GThreadFunc?, data: gpointer?, stackSize: Int, joinable: Bool, bound: Bool, priority: GThreadPriority) throws -> Thread!","type":"method"},{"path":"\/documentation\/glib\/thread\/self_()","title":"static func self_() -> Thread!","type":"method"},{"path":"\/documentation\/glib\/thread\/trynew(try_:func:data:)","title":"static func tryNew(try_: UnsafePointer<gchar>?, func: GThreadFunc?, data: gpointer?) throws -> Thread!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/thread\/thread_ptr","title":"var thread_ptr: UnsafeMutablePointer<GThread>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/thread\/join()","title":"func join() -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/thread\/ref()","title":"func ref() -> ThreadRef!","type":"method"},{"path":"\/documentation\/glib\/thread\/set(priority:)","title":"func set(priority: GThreadPriority)","type":"method"},{"path":"\/documentation\/glib\/thread\/unref()","title":"func unref()","type":"method"}],"path":"\/documentation\/glib\/thread\/threadprotocol-implementations","title":"ThreadProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/thread","title":"Thread","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/threadfunctions\/init(_:)-3pcra","title":"init!(UnsafeMutablePointer<GThreadFunctions>?)","type":"init"},{"path":"\/documentation\/glib\/threadfunctions\/init(_:)-5j18d","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/threadfunctions\/init(_:)-5qlet","title":"init(UnsafeMutablePointer<GThreadFunctions>)","type":"init"},{"path":"\/documentation\/glib\/threadfunctions\/init(_:)-90jxc","title":"init(UnsafePointer<GThreadFunctions>)","type":"init"},{"path":"\/documentation\/glib\/threadfunctions\/init(_:)-l2nn","title":"init!(UnsafePointer<GThreadFunctions>?)","type":"init"},{"path":"\/documentation\/glib\/threadfunctions\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/threadfunctions\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/threadfunctions\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/threadfunctions\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/threadfunctions\/init(raw:)-6cmfz","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/threadfunctions\/init(raw:)-7vkh","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/threadfunctions\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GThreadFunctions>)","type":"init"},{"path":"\/documentation\/glib\/threadfunctions\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/threadfunctions\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/threadfunctions\/init(retainingraw:)-7ftn0","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/threadfunctions\/init(retainingraw:)-7r0o5","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/threadfunctions\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"}],"path":"\/documentation\/glib\/threadfunctions","title":"ThreadFunctions","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/threadpool\/init(_:)-1r3ft","title":"init(UnsafePointer<GThreadPool>)","type":"init"},{"path":"\/documentation\/glib\/threadpool\/init(_:)-3sb8k","title":"init!(UnsafeMutablePointer<GThreadPool>?)","type":"init"},{"path":"\/documentation\/glib\/threadpool\/init(_:)-5qqyk","title":"init(UnsafeMutablePointer<GThreadPool>)","type":"init"},{"path":"\/documentation\/glib\/threadpool\/init(_:)-949on","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/threadpool\/init(_:)-xcct","title":"init!(UnsafePointer<GThreadPool>?)","type":"init"},{"path":"\/documentation\/glib\/threadpool\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/threadpool\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/threadpool\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/threadpool\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/threadpool\/init(raw:)-14ipo","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/threadpool\/init(raw:)-49ior","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/threadpool\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GThreadPool>)","type":"init"},{"path":"\/documentation\/glib\/threadpool\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/threadpool\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/threadpool\/init(retainingraw:)-2gqbl","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/threadpool\/init(retainingraw:)-53ai8","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/threadpool\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/threadpool\/new(full:userdata:itemfreefunc:maxthreads:exclusive:)","title":"static func new(full: GFunc?, userData: gpointer?, itemFreeFunc: GDestroyNotify?, maxThreads: Int, exclusive: Bool) throws -> ThreadPool!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/threadpool\/exclusive","title":"var exclusive: gboolean","type":"property"},{"path":"\/documentation\/glib\/threadpool\/func","title":"var `func`: GFunc!","type":"property"},{"path":"\/documentation\/glib\/threadpool\/maxthreads","title":"var maxThreads: Int","type":"property"},{"path":"\/documentation\/glib\/threadpool\/numthreads","title":"var numThreads: Int","type":"property"},{"path":"\/documentation\/glib\/threadpool\/userdata","title":"var userData: gpointer?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/threadpool\/free(immediate:wait:)","title":"func free(immediate: Bool, wait: Bool)","type":"method"},{"path":"\/documentation\/glib\/threadpool\/getmaxthreads()","title":"func getMaxThreads() -> Int","type":"method"},{"path":"\/documentation\/glib\/threadpool\/getnumthreads()","title":"func getNumThreads() -> Int","type":"method"},{"path":"\/documentation\/glib\/threadpool\/movetofront(data:)","title":"func moveToFront(data: gpointer?) -> Bool","type":"method"},{"path":"\/documentation\/glib\/threadpool\/push(data:)","title":"func push(data: gpointer?) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/threadpool\/set(maxthreads:)","title":"func set(maxThreads: Int) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/threadpool\/setsortfunction(func:userdata:)","title":"func setSortFunction(func: GCompareDataFunc?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/threadpool\/unprocessed()","title":"func unprocessed() -> Int","type":"method"}],"path":"\/documentation\/glib\/threadpool\/threadpoolprotocol-implementations","title":"ThreadPoolProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/threadpool","title":"ThreadPool","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/throwingclosureholder\/init(_:)","title":"init((S) throws -> T)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/throwingclosureholder\/call","title":"let call: (S) throws -> T","type":"property"}],"path":"\/documentation\/glib\/throwingclosureholder","title":"ThrowingClosureHolder","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/timeval\/init(_:)-11r4b","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/timeval\/init(_:)-65c26","title":"init(UnsafePointer<GTimeVal>)","type":"init"},{"path":"\/documentation\/glib\/timeval\/init(_:)-6dmle","title":"init!(UnsafePointer<GTimeVal>?)","type":"init"},{"path":"\/documentation\/glib\/timeval\/init(_:)-87ngm","title":"init(UnsafeMutablePointer<GTimeVal>)","type":"init"},{"path":"\/documentation\/glib\/timeval\/init(_:)-953pc","title":"init!(UnsafeMutablePointer<GTimeVal>?)","type":"init"},{"path":"\/documentation\/glib\/timeval\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/timeval\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/timeval\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/timeval\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/timeval\/init(raw:)-16zl2","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/timeval\/init(raw:)-8m8hi","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/timeval\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GTimeVal>)","type":"init"},{"path":"\/documentation\/glib\/timeval\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/timeval\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/timeval\/init(retainingraw:)-50uu2","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/timeval\/init(retainingraw:)-9e5b9","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/timeval\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/timeval\/tvsec","title":"var tvSec: glong","type":"property"},{"path":"\/documentation\/glib\/timeval\/tvusec","title":"var tvUsec: glong","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/timeval\/add(microseconds:)","title":"func add(microseconds: Int)","type":"method"},{"path":"\/documentation\/glib\/timeval\/fromiso8601(isodate:)","title":"func fromIso8601(isoDate: UnsafePointer<gchar>!) -> Bool","type":"method"},{"path":"\/documentation\/glib\/timeval\/getcurrenttime()","title":"func getCurrentTime()","type":"method"},{"path":"\/documentation\/glib\/timeval\/timevalfromiso8601(isodate:)","title":"func timeValFromIso8601(isoDate: UnsafePointer<gchar>!) -> Bool","type":"method"},{"path":"\/documentation\/glib\/timeval\/toiso8601()","title":"func toIso8601() -> String!","type":"method"}],"path":"\/documentation\/glib\/timeval\/timevalprotocol-implementations","title":"TimeValProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/timeval","title":"TimeVal","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/timezone\/init(_:)-3m8y2","title":"init!(UnsafeMutablePointer<GTimeZone>?)","type":"init"},{"path":"\/documentation\/glib\/timezone\/init(_:)-6hi6j","title":"init!(UnsafePointer<GTimeZone>?)","type":"init"},{"path":"\/documentation\/glib\/timezone\/init(_:)-8wflv","title":"init(UnsafeMutablePointer<GTimeZone>)","type":"init"},{"path":"\/documentation\/glib\/timezone\/init(_:)-9sndc","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/timezone\/init(_:)-fwfq","title":"init(UnsafePointer<GTimeZone>)","type":"init"},{"path":"\/documentation\/glib\/timezone\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/timezone\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/timezone\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/timezone\/init(identiferorutc:)","title":"init(identiferOrUtc: UnsafePointer<gchar>?)","type":"init"},{"path":"\/documentation\/glib\/timezone\/init(identifier:)","title":"init(identifier: UnsafePointer<gchar>?)","type":"init"},{"path":"\/documentation\/glib\/timezone\/init(offset:)","title":"init(offset: gint32)","type":"init"},{"path":"\/documentation\/glib\/timezone\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/timezone\/init(raw:)-3dq4s","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/timezone\/init(raw:)-78knb","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/timezone\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GTimeZone>)","type":"init"},{"path":"\/documentation\/glib\/timezone\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/timezone\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/timezone\/init(retainingraw:)-64z76","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/timezone\/init(retainingraw:)-722rb","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/timezone\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/timezone\/new(identifier:)","title":"static func new(identifier: UnsafePointer<gchar>?) -> TimeZone!","type":"method"},{"path":"\/documentation\/glib\/timezone\/new(offset:)","title":"static func new(offset: gint32) -> TimeZone!","type":"method"},{"path":"\/documentation\/glib\/timezone\/newlocal()","title":"static func newLocal() -> TimeZone!","type":"method"},{"path":"\/documentation\/glib\/timezone\/newutc()","title":"static func newUTC() -> TimeZone!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/timezone\/identifier","title":"var identifier: String!","type":"property"},{"path":"\/documentation\/glib\/timezone\/time_zone_ptr","title":"var time_zone_ptr: UnsafeMutablePointer<GTimeZone>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/timezone\/adjusttime(type:time:)","title":"func adjustTime(type: GTimeType, time: UnsafeMutablePointer<gint64>!) -> Int","type":"method"},{"path":"\/documentation\/glib\/timezone\/findinterval(type:time:)","title":"func findInterval(type: GTimeType, time: gint64) -> Int","type":"method"},{"path":"\/documentation\/glib\/timezone\/getabbreviation(interval:)","title":"func getAbbreviation(interval: Int) -> String!","type":"method"},{"path":"\/documentation\/glib\/timezone\/getidentifier()","title":"func getIDentifier() -> String!","type":"method"},{"path":"\/documentation\/glib\/timezone\/getoffset(interval:)","title":"func getOffset(interval: Int) -> gint32","type":"method"},{"path":"\/documentation\/glib\/timezone\/isdst(interval:)","title":"func isDst(interval: Int) -> Bool","type":"method"},{"path":"\/documentation\/glib\/timezone\/ref()","title":"func ref() -> TimeZoneRef!","type":"method"},{"path":"\/documentation\/glib\/timezone\/unref()","title":"func unref()","type":"method"}],"path":"\/documentation\/glib\/timezone\/timezoneprotocol-implementations","title":"TimeZoneProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/timezone","title":"TimeZone","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/timer\/init(_:)-41x2d","title":"init(UnsafeMutablePointer<GTimer>)","type":"init"},{"path":"\/documentation\/glib\/timer\/init(_:)-46vca","title":"init!(UnsafePointer<GTimer>?)","type":"init"},{"path":"\/documentation\/glib\/timer\/init(_:)-5t95p","title":"init!(UnsafeMutablePointer<GTimer>?)","type":"init"},{"path":"\/documentation\/glib\/timer\/init(_:)-90nub","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/timer\/init(_:)-98tyl","title":"init(UnsafePointer<GTimer>)","type":"init"},{"path":"\/documentation\/glib\/timer\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/timer\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/timer\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/timer\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/timer\/init(raw:)-45mez","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/timer\/init(raw:)-4em00","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/timer\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GTimer>)","type":"init"},{"path":"\/documentation\/glib\/timer\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/timer\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/timer\/init(retainingraw:)-581q1","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/timer\/init(retainingraw:)-8d1nc","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/timer\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/timer\/isactive","title":"var isActive: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/timer\/continue_()","title":"func continue_()","type":"method"},{"path":"\/documentation\/glib\/timer\/destroy()","title":"func destroy()","type":"method"},{"path":"\/documentation\/glib\/timer\/elapsed(microseconds:)","title":"func elapsed(microseconds: UnsafeMutablePointer<gulong>!) -> Double","type":"method"},{"path":"\/documentation\/glib\/timer\/reset()","title":"func reset()","type":"method"},{"path":"\/documentation\/glib\/timer\/start()","title":"func start()","type":"method"},{"path":"\/documentation\/glib\/timer\/stop()","title":"func stop()","type":"method"}],"path":"\/documentation\/glib\/timer\/timerprotocol-implementations","title":"TimerProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/timer","title":"Timer","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/timerclosureholder\/init(_:)","title":"init(() -> Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/timerclosureholder\/call","title":"let call: () -> Bool","type":"property"}],"path":"\/documentation\/glib\/timerclosureholder","title":"TimerClosureHolder","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/tokenvalue\/init(_:)-1axy5","title":"init!(UnsafeMutablePointer<GTokenValue>?)","type":"init"},{"path":"\/documentation\/glib\/tokenvalue\/init(_:)-23mck","title":"init(UnsafeMutablePointer<GTokenValue>)","type":"init"},{"path":"\/documentation\/glib\/tokenvalue\/init(_:)-6ian","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/tokenvalue\/init(_:)-8820d","title":"init(UnsafePointer<GTokenValue>)","type":"init"},{"path":"\/documentation\/glib\/tokenvalue\/init(_:)-8q3yn","title":"init!(UnsafePointer<GTokenValue>?)","type":"init"},{"path":"\/documentation\/glib\/tokenvalue\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/tokenvalue\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/tokenvalue\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/tokenvalue\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/tokenvalue\/init(raw:)-4o57l","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/tokenvalue\/init(raw:)-6n2ba","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/tokenvalue\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GTokenValue>)","type":"init"},{"path":"\/documentation\/glib\/tokenvalue\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/tokenvalue\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/tokenvalue\/init(retainingraw:)-5t2wo","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/tokenvalue\/init(retainingraw:)-9nxdp","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/tokenvalue\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/tokenvalue\/vbinary","title":"var vBinary: gulong","type":"property"},{"path":"\/documentation\/glib\/tokenvalue\/vchar","title":"var vChar: guchar","type":"property"},{"path":"\/documentation\/glib\/tokenvalue\/vcomment","title":"var vComment: UnsafeMutablePointer<gchar>!","type":"property"},{"path":"\/documentation\/glib\/tokenvalue\/verror","title":"var vError: guint","type":"property"},{"path":"\/documentation\/glib\/tokenvalue\/vfloat","title":"var vFloat: gdouble","type":"property"},{"path":"\/documentation\/glib\/tokenvalue\/vhex","title":"var vHex: gulong","type":"property"},{"path":"\/documentation\/glib\/tokenvalue\/videntifier","title":"var vIDentifier: UnsafeMutablePointer<gchar>!","type":"property"},{"path":"\/documentation\/glib\/tokenvalue\/vint","title":"var vInt: gulong","type":"property"},{"path":"\/documentation\/glib\/tokenvalue\/vint64","title":"var vInt64: guint64","type":"property"},{"path":"\/documentation\/glib\/tokenvalue\/voctal","title":"var vOctal: gulong","type":"property"},{"path":"\/documentation\/glib\/tokenvalue\/vstring","title":"var vString: UnsafeMutablePointer<gchar>!","type":"property"},{"path":"\/documentation\/glib\/tokenvalue\/vsymbol","title":"var vSymbol: gpointer?","type":"property"}],"path":"\/documentation\/glib\/tokenvalue\/tokenvalueprotocol-implementations","title":"TokenValueProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/tokenvalue","title":"TokenValue","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/trashstack\/init(_:)-2ru15","title":"init(UnsafePointer<GTrashStack>)","type":"init"},{"path":"\/documentation\/glib\/trashstack\/init(_:)-2vikd","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/trashstack\/init(_:)-2z2wm","title":"init!(UnsafePointer<GTrashStack>?)","type":"init"},{"path":"\/documentation\/glib\/trashstack\/init(_:)-6xs93","title":"init(UnsafeMutablePointer<GTrashStack>)","type":"init"},{"path":"\/documentation\/glib\/trashstack\/init(_:)-9oa0n","title":"init!(UnsafeMutablePointer<GTrashStack>?)","type":"init"},{"path":"\/documentation\/glib\/trashstack\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/trashstack\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/trashstack\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/trashstack\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/trashstack\/init(raw:)-3uyw6","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/trashstack\/init(raw:)-48r","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/trashstack\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GTrashStack>)","type":"init"},{"path":"\/documentation\/glib\/trashstack\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/trashstack\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/trashstack\/init(retainingraw:)-48qe0","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/trashstack\/init(retainingraw:)-dvqf","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/trashstack\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/trashstack\/next","title":"var next: TrashStackRef!","type":"property"}],"path":"\/documentation\/glib\/trashstack\/trashstackprotocol-implementations","title":"TrashStackProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/trashstack","title":"TrashStack","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/tree\/init(_:)-1q0ca","title":"init!(UnsafeMutablePointer<GTree>?)","type":"init"},{"path":"\/documentation\/glib\/tree\/init(_:)-30fpb","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/tree\/init(_:)-3nbff","title":"init(UnsafeMutablePointer<GTree>)","type":"init"},{"path":"\/documentation\/glib\/tree\/init(_:)-4yq4k","title":"init!(UnsafePointer<GTree>?)","type":"init"},{"path":"\/documentation\/glib\/tree\/init(_:)-9h5zs","title":"init(UnsafePointer<GTree>)","type":"init"},{"path":"\/documentation\/glib\/tree\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/tree\/init(data:keycomparedata:)","title":"init(data: GCompareDataFunc?, keyCompareData: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/tree\/init(full:keycomparedata:keydestroyfunc:valuedestroyfunc:)","title":"init(full: GCompareDataFunc?, keyCompareData: gpointer?, keyDestroyFunc: GDestroyNotify?, valueDestroyFunc: GDestroyNotify?)","type":"init"},{"path":"\/documentation\/glib\/tree\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/tree\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/tree\/init(keycomparefunc:)","title":"init(keyCompareFunc: GCompareFunc?)","type":"init"},{"path":"\/documentation\/glib\/tree\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/tree\/init(raw:)-17bwa","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/tree\/init(raw:)-3tvvp","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/tree\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GTree>)","type":"init"},{"path":"\/documentation\/glib\/tree\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/tree\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/tree\/init(retainingraw:)-4om4w","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/tree\/init(retainingraw:)-4ztgv","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/tree\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/tree\/new(full:keycomparedata:keydestroyfunc:valuedestroyfunc:)","title":"static func new(full: GCompareDataFunc?, keyCompareData: gpointer?, keyDestroyFunc: GDestroyNotify?, valueDestroyFunc: GDestroyNotify?) -> Tree!","type":"method"},{"path":"\/documentation\/glib\/tree\/newwith(data:keycomparedata:)","title":"static func newWith(data: GCompareDataFunc?, keyCompareData: gpointer?) -> Tree!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/tree\/tree_ptr","title":"var tree_ptr: UnsafeMutablePointer<GTree>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/tree\/destroy()","title":"func destroy()","type":"method"},{"path":"\/documentation\/glib\/tree\/foreach(func:userdata:)","title":"func foreach(func: GTraverseFunc?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/tree\/foreachnode(func:userdata:)","title":"func foreachNode(func: GTraverseNodeFunc?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/tree\/height()","title":"func height() -> Int","type":"method"},{"path":"\/documentation\/glib\/tree\/insert(key:value:)","title":"func insert(key: gpointer?, value: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/tree\/insertnode(key:value:)","title":"func insertNode(key: gpointer?, value: gpointer?) -> TreeNodeRef!","type":"method"},{"path":"\/documentation\/glib\/tree\/lookup(key:)","title":"func lookup(key: gconstpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/tree\/lookupextended(lookupkey:origkey:value:)","title":"func lookupExtended(lookupKey: gconstpointer?, origKey: UnsafeMutablePointer<gpointer?>?, value: UnsafeMutablePointer<gpointer?>?) -> Bool","type":"method"},{"path":"\/documentation\/glib\/tree\/lookupnode(key:)","title":"func lookupNode(key: gconstpointer?) -> TreeNodeRef!","type":"method"},{"path":"\/documentation\/glib\/tree\/lowerbound(key:)","title":"func lowerBound(key: gconstpointer?) -> TreeNodeRef!","type":"method"},{"path":"\/documentation\/glib\/tree\/nnodes()","title":"func nnodes() -> Int","type":"method"},{"path":"\/documentation\/glib\/tree\/nodefirst()","title":"func nodeFirst() -> TreeNodeRef!","type":"method"},{"path":"\/documentation\/glib\/tree\/nodelast()","title":"func nodeLast() -> TreeNodeRef!","type":"method"},{"path":"\/documentation\/glib\/tree\/ref()","title":"func ref() -> TreeRef!","type":"method"},{"path":"\/documentation\/glib\/tree\/remove(key:)","title":"func remove(key: gconstpointer?) -> Bool","type":"method"},{"path":"\/documentation\/glib\/tree\/removeall()","title":"func removeAll()","type":"method"},{"path":"\/documentation\/glib\/tree\/replace(key:value:)","title":"func replace(key: gpointer?, value: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/tree\/replacenode(key:value:)","title":"func replaceNode(key: gpointer?, value: gpointer?) -> TreeNodeRef!","type":"method"},{"path":"\/documentation\/glib\/tree\/search(searchfunc:userdata:)","title":"func search(searchFunc: GCompareFunc?, userData: gconstpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/tree\/searchnode(searchfunc:userdata:)","title":"func searchNode(searchFunc: GCompareFunc?, userData: gconstpointer?) -> TreeNodeRef!","type":"method"},{"path":"\/documentation\/glib\/tree\/steal(key:)","title":"func steal(key: gconstpointer?) -> Bool","type":"method"},{"path":"\/documentation\/glib\/tree\/traverse(traversefunc:traversetype:userdata:)","title":"func traverse(traverseFunc: GTraverseFunc?, traverseType: GTraverseType, userData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/tree\/unref()","title":"func unref()","type":"method"},{"path":"\/documentation\/glib\/tree\/upperbound(key:)","title":"func upperBound(key: gconstpointer?) -> TreeNodeRef!","type":"method"}],"path":"\/documentation\/glib\/tree\/treeprotocol-implementations","title":"TreeProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/tree","title":"Tree","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/treenode\/init(_:)-16s66","title":"init!(UnsafeMutablePointer<GTreeNode>?)","type":"init"},{"path":"\/documentation\/glib\/treenode\/init(_:)-50ta","title":"init(UnsafePointer<GTreeNode>)","type":"init"},{"path":"\/documentation\/glib\/treenode\/init(_:)-6dqs","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/treenode\/init(_:)-7rqr1","title":"init(UnsafeMutablePointer<GTreeNode>)","type":"init"},{"path":"\/documentation\/glib\/treenode\/init(_:)-9o60b","title":"init!(UnsafePointer<GTreeNode>?)","type":"init"},{"path":"\/documentation\/glib\/treenode\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/treenode\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/treenode\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/treenode\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/treenode\/init(raw:)-19wr7","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/treenode\/init(raw:)-7enmh","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/treenode\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GTreeNode>)","type":"init"},{"path":"\/documentation\/glib\/treenode\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/treenode\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/treenode\/init(retainingraw:)-1zi3","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/treenode\/init(retainingraw:)-3wu66","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/treenode\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/treenode\/key()","title":"func key() -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/treenode\/next()","title":"func next() -> TreeNodeRef!","type":"method"},{"path":"\/documentation\/glib\/treenode\/previous()","title":"func previous() -> TreeNodeRef!","type":"method"},{"path":"\/documentation\/glib\/treenode\/value()","title":"func value() -> gpointer?","type":"method"}],"path":"\/documentation\/glib\/treenode\/treenodeprotocol-implementations","title":"TreeNodeProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/treenode","title":"TreeNode","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/tuples\/init(_:)-328re","title":"init!(UnsafeMutablePointer<GTuples>?)","type":"init"},{"path":"\/documentation\/glib\/tuples\/init(_:)-3pd9m","title":"init!(UnsafePointer<GTuples>?)","type":"init"},{"path":"\/documentation\/glib\/tuples\/init(_:)-4xbnh","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/tuples\/init(_:)-6om7q","title":"init(UnsafeMutablePointer<GTuples>)","type":"init"},{"path":"\/documentation\/glib\/tuples\/init(_:)-6xvwx","title":"init(UnsafePointer<GTuples>)","type":"init"},{"path":"\/documentation\/glib\/tuples\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/tuples\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/tuples\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/tuples\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/tuples\/init(raw:)-20ad6","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/tuples\/init(raw:)-55acd","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/tuples\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GTuples>)","type":"init"},{"path":"\/documentation\/glib\/tuples\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/tuples\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/tuples\/init(retainingraw:)-5vhja","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/tuples\/init(retainingraw:)-wtne","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/tuples\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/tuples\/len","title":"var len: guint","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/tuples\/destroy()","title":"func destroy()","type":"method"},{"path":"\/documentation\/glib\/tuples\/index(index:field:)","title":"func index(index: Int, field: Int) -> gpointer?","type":"method"}],"path":"\/documentation\/glib\/tuples\/tuplesprotocol-implementations","title":"TuplesProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/tuples","title":"Tuples","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/typedarray\/init(arrayliteral:)","title":"init(arrayLiteral: Element...)","type":"init"},{"path":"\/documentation\/glib\/typedarray\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/typedarray\/last","title":"var last: Self.Element?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/typedarray\/difference(from:)","title":"func difference<C>(from: C) -> CollectionDifference<Self.Element>","type":"method"},{"path":"\/documentation\/glib\/typedarray\/difference(from:by:)","title":"func difference<C>(from: C, by: (C.Element, Self.Element) -> Bool) -> CollectionDifference<Self.Element>","type":"method"},{"path":"\/documentation\/glib\/typedarray\/droplast(_:)","title":"func dropLast(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/typedarray\/firstrange(of:)-7tseq","title":"func firstRange<C>(of: C) -> Range<Self.Index>?","type":"method"},{"path":"\/documentation\/glib\/typedarray\/formindex(before:)","title":"func formIndex(before: inout Self.Index)","type":"method"},{"path":"\/documentation\/glib\/typedarray\/joined(separator:)-h0h0","title":"func joined(separator: String) -> String","type":"method"},{"path":"\/documentation\/glib\/typedarray\/last(where:)","title":"func last(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/typedarray\/lastindex(of:)","title":"func lastIndex(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/glib\/typedarray\/lastindex(where:)","title":"func lastIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/glib\/typedarray\/reversed()","title":"func reversed() -> ReversedCollection<Self>","type":"method"},{"path":"\/documentation\/glib\/typedarray\/suffix(_:)","title":"func suffix(Int) -> Self.SubSequence","type":"method"}],"path":"\/documentation\/glib\/typedarray\/bidirectionalcollection-implementations","title":"BidirectionalCollection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/typedarray\/first","title":"var first: Self.Element?","type":"property"},{"path":"\/documentation\/glib\/typedarray\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/glib\/typedarray\/underestimatedcount","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/typedarray\/contains(_:)-1nfrh","title":"func contains<C>(C) -> Bool","type":"method"},{"path":"\/documentation\/glib\/typedarray\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/typedarray\/dropfirst(_:)","title":"func dropFirst(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/typedarray\/firstindex(of:)","title":"func firstIndex(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/glib\/typedarray\/firstindex(where:)","title":"func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/glib\/typedarray\/firstrange(of:)-7om59","title":"func firstRange<C>(of: C) -> Range<Self.Index>?","type":"method"},{"path":"\/documentation\/glib\/typedarray\/formindex(_:offsetby:)","title":"func formIndex(inout Self.Index, offsetBy: Int)","type":"method"},{"path":"\/documentation\/glib\/typedarray\/formindex(_:offsetby:limitedby:)","title":"func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool","type":"method"},{"path":"\/documentation\/glib\/typedarray\/formindex(after:)","title":"func formIndex(after: inout Self.Index)","type":"method"},{"path":"\/documentation\/glib\/typedarray\/index(of:)","title":"func index(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/glib\/typedarray\/makeiterator()","title":"func makeIterator() -> IndexingIterator<Self>","type":"method"},{"path":"\/documentation\/glib\/typedarray\/map(_:)-j3c9","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/glib\/typedarray\/prefix(_:)","title":"func prefix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/typedarray\/prefix(through:)","title":"func prefix(through: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/typedarray\/prefix(upto:)","title":"func prefix(upTo: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/typedarray\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/typedarray\/randomelement()","title":"func randomElement() -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/typedarray\/randomelement(using:)","title":"func randomElement<T>(using: inout T) -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/typedarray\/ranges(of:)","title":"func ranges<C>(of: C) -> [Range<Self.Index>]","type":"method"},{"path":"\/documentation\/glib\/typedarray\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/glib\/typedarray\/split(separator:maxsplits:omittingemptysubsequences:)-1xonq","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/glib\/typedarray\/split(separator:maxsplits:omittingemptysubsequences:)-6ibbc","title":"func split<C>(separator: C, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/glib\/typedarray\/suffix(from:)","title":"func suffix(from: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/typedarray\/trimmingprefix(_:)","title":"func trimmingPrefix<Prefix>(Prefix) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/typedarray\/trimmingprefix(while:)","title":"func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"}],"path":"\/documentation\/glib\/typedarray\/collection-implementations","title":"Collection Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/typedarray\/partition(by:)-9ytra","title":"func partition(by: (Self.Element) throws -> Bool) rethrows -> Self.Index","type":"method"},{"path":"\/documentation\/glib\/typedarray\/partition(by:)-qanq","title":"func partition(by: (Self.Element) throws -> Bool) rethrows -> Self.Index","type":"method"},{"path":"\/documentation\/glib\/typedarray\/reverse()","title":"func reverse()","type":"method"},{"path":"\/documentation\/glib\/typedarray\/shuffle()","title":"func shuffle()","type":"method"},{"path":"\/documentation\/glib\/typedarray\/shuffle(using:)","title":"func shuffle<T>(using: inout T)","type":"method"},{"path":"\/documentation\/glib\/typedarray\/sort()","title":"func sort()","type":"method"},{"path":"\/documentation\/glib\/typedarray\/sort(by:)","title":"func sort(by: (Self.Element, Self.Element) throws -> Bool) rethrows","type":"method"},{"path":"\/documentation\/glib\/typedarray\/sort(using:)-1bmia","title":"func sort<Comparator>(using: Comparator)","type":"method"},{"path":"\/documentation\/glib\/typedarray\/sort(using:)-2o584","title":"func sort<S, Comparator>(using: S)","type":"method"},{"path":"\/documentation\/glib\/typedarray\/swapat(_:_:)","title":"func swapAt(Self.Index, Self.Index)","type":"method"},{"path":"\/documentation\/glib\/typedarray\/withcontiguousmutablestorageifavailable(_:)","title":"func withContiguousMutableStorageIfAvailable<R>((inout UnsafeMutableBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"}],"path":"\/documentation\/glib\/typedarray\/mutablecollection-implementations","title":"MutableCollection Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/typedarray\/index(_:offsetby:limitedby:)","title":"func index(Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?","type":"method"}],"path":"\/documentation\/glib\/typedarray\/randomaccesscollection-implementations","title":"RandomAccessCollection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/typedarray\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"path":"\/documentation\/glib\/typedarray\/publisher","title":"var publisher: Publishers.Sequence<Self, Never>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/typedarray\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/typedarray\/compactmap(_:)","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/glib\/typedarray\/compare(_:_:)","title":"func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult","type":"method"},{"path":"\/documentation\/glib\/typedarray\/contains(_:)-31b70","title":"func contains(Self.Element) -> Bool","type":"method"},{"path":"\/documentation\/glib\/typedarray\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/typedarray\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/glib\/typedarray\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/typedarray\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/typedarray\/filter(_:)-22l7m","title":"func filter(Predicate<Self.Element>) throws -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/typedarray\/filter(_:)-6ljrm","title":"func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/typedarray\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/typedarray\/flatmap(_:)-7fp2b","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/glib\/typedarray\/flatmap(_:)-7kb4z","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/glib\/typedarray\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/glib\/typedarray\/formatted()","title":"func formatted() -> String","type":"method"},{"path":"\/documentation\/glib\/typedarray\/formatted(_:)","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/glib\/typedarray\/joined()","title":"func joined() -> FlattenSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/typedarray\/joined(separator:)-2g6lx","title":"func joined(separator: String) -> String","type":"method"},{"path":"\/documentation\/glib\/typedarray\/joined(separator:)-4oh1o","title":"func joined<Separator>(separator: Separator) -> JoinedSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/typedarray\/lexicographicallyprecedes(_:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/glib\/typedarray\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/typedarray\/map(_:)-92gca","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/glib\/typedarray\/max()","title":"func max() -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/typedarray\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/typedarray\/min()","title":"func min() -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/typedarray\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/typedarray\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/glib\/typedarray\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/glib\/typedarray\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/typedarray\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/typedarray\/sorted()","title":"func sorted() -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/typedarray\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/typedarray\/sorted(using:)-13fvx","title":"func sorted<Comparator>(using: Comparator) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/typedarray\/sorted(using:)-6l5to","title":"func sorted<S, Comparator>(using: S) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/typedarray\/split(separator:maxsplits:omittingemptysubsequences:)-554wq","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/glib\/typedarray\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/glib\/typedarray\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/typedarray\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"}],"path":"\/documentation\/glib\/typedarray\/sequence-implementations","title":"Sequence Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/typedarray\/count","title":"var count: Int","type":"property"},{"path":"\/documentation\/glib\/typedarray\/endindex","title":"var endIndex: Int","type":"property"},{"path":"\/documentation\/glib\/typedarray\/startindex","title":"var startIndex: Int","type":"property"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/glib\/typedarray\/subscript(_:)","title":"subscript(Int) -> Self.Element","type":"subscript"}],"path":"\/documentation\/glib\/typedarray\/typedarrayprotocol-implementations","title":"TypedArrayProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/typedarray","title":"TypedArray","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/typedlist\/init(arrayliteral:)","title":"init(arrayLiteral: Element...)","type":"init"},{"path":"\/documentation\/glib\/typedlist\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/typedlist\/freeelements","title":"var freeElements: Bool","type":"property"},{"path":"\/documentation\/glib\/typedlist\/freenodes","title":"var freeNodes: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/typedlist\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"path":"\/documentation\/glib\/typedlist\/publisher","title":"var publisher: Publishers.Sequence<Self, Never>","type":"property"},{"path":"\/documentation\/glib\/typedlist\/underestimatedcount","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/typedlist\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/typedlist\/compactmap(_:)","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/glib\/typedlist\/compare(_:_:)","title":"func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult","type":"method"},{"path":"\/documentation\/glib\/typedlist\/contains(_:)","title":"func contains(Self.Element) -> Bool","type":"method"},{"path":"\/documentation\/glib\/typedlist\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/typedlist\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> DropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/typedlist\/dropfirst(_:)","title":"func dropFirst(Int) -> DropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/typedlist\/droplast(_:)","title":"func dropLast(Int) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/typedlist\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/glib\/typedlist\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/typedlist\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/typedlist\/filter(_:)-409sm","title":"func filter(Predicate<Self.Element>) throws -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/typedlist\/filter(_:)-833kx","title":"func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/typedlist\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/typedlist\/flatmap(_:)-3e80h","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/glib\/typedlist\/flatmap(_:)-7uh0x","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/glib\/typedlist\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/glib\/typedlist\/formatted()","title":"func formatted() -> String","type":"method"},{"path":"\/documentation\/glib\/typedlist\/formatted(_:)","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/glib\/typedlist\/joined()","title":"func joined() -> FlattenSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/typedlist\/joined(separator:)-1jvy","title":"func joined<Separator>(separator: Separator) -> JoinedSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/typedlist\/joined(separator:)-7l3ny","title":"func joined(separator: String) -> String","type":"method"},{"path":"\/documentation\/glib\/typedlist\/lexicographicallyprecedes(_:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/glib\/typedlist\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/typedlist\/map(_:)","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/glib\/typedlist\/max()","title":"func max() -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/typedlist\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/typedlist\/min()","title":"func min() -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/typedlist\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/typedlist\/prefix(_:)","title":"func prefix(Int) -> PrefixSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/typedlist\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/typedlist\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/glib\/typedlist\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/glib\/typedlist\/reversed()","title":"func reversed() -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/typedlist\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/typedlist\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/typedlist\/sorted()","title":"func sorted() -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/typedlist\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/typedlist\/sorted(using:)-6dz4y","title":"func sorted<S, Comparator>(using: S) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/typedlist\/sorted(using:)-8j16o","title":"func sorted<Comparator>(using: Comparator) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/typedlist\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/glib\/typedlist\/split(separator:maxsplits:omittingemptysubsequences:)","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/glib\/typedlist\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/glib\/typedlist\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/typedlist\/suffix(_:)","title":"func suffix(Int) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/typedlist\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"}],"path":"\/documentation\/glib\/typedlist\/sequence-implementations","title":"Sequence Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/typedlist\/element","title":"var element: Self.Element!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/typedlist\/makeiterator()","title":"func makeIterator() -> TypedListIterator<Self.Element>","type":"method"}],"path":"\/documentation\/glib\/typedlist\/typedlistprotocol-implementations","title":"TypedListProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/typedlist","title":"TypedList","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/typedslist\/init(arrayliteral:)","title":"init(arrayLiteral: Element...)","type":"init"},{"path":"\/documentation\/glib\/typedslist\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/typedslist\/freeelements","title":"var freeElements: Bool","type":"property"},{"path":"\/documentation\/glib\/typedslist\/freenodes","title":"var freeNodes: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/typedslist\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"path":"\/documentation\/glib\/typedslist\/publisher","title":"var publisher: Publishers.Sequence<Self, Never>","type":"property"},{"path":"\/documentation\/glib\/typedslist\/underestimatedcount","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/typedslist\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/typedslist\/compactmap(_:)","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/glib\/typedslist\/compare(_:_:)","title":"func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult","type":"method"},{"path":"\/documentation\/glib\/typedslist\/contains(_:)","title":"func contains(Self.Element) -> Bool","type":"method"},{"path":"\/documentation\/glib\/typedslist\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/typedslist\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> DropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/typedslist\/dropfirst(_:)","title":"func dropFirst(Int) -> DropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/typedslist\/droplast(_:)","title":"func dropLast(Int) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/typedslist\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/glib\/typedslist\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/typedslist\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/typedslist\/filter(_:)-1qp8v","title":"func filter(Predicate<Self.Element>) throws -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/typedslist\/filter(_:)-4wqdi","title":"func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/typedslist\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/typedslist\/flatmap(_:)-4t7ln","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/glib\/typedslist\/flatmap(_:)-5qbxe","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/glib\/typedslist\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/glib\/typedslist\/formatted()","title":"func formatted() -> String","type":"method"},{"path":"\/documentation\/glib\/typedslist\/formatted(_:)","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/glib\/typedslist\/joined()","title":"func joined() -> FlattenSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/typedslist\/joined(separator:)-1f4e1","title":"func joined<Separator>(separator: Separator) -> JoinedSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/typedslist\/joined(separator:)-97uj8","title":"func joined(separator: String) -> String","type":"method"},{"path":"\/documentation\/glib\/typedslist\/lexicographicallyprecedes(_:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/glib\/typedslist\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/typedslist\/map(_:)","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/glib\/typedslist\/max()","title":"func max() -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/typedslist\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/typedslist\/min()","title":"func min() -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/typedslist\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/typedslist\/prefix(_:)","title":"func prefix(Int) -> PrefixSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/typedslist\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/typedslist\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/glib\/typedslist\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/glib\/typedslist\/reversed()","title":"func reversed() -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/typedslist\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/typedslist\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/typedslist\/sorted()","title":"func sorted() -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/typedslist\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/typedslist\/sorted(using:)-28zt","title":"func sorted<Comparator>(using: Comparator) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/typedslist\/sorted(using:)-m8bk","title":"func sorted<S, Comparator>(using: S) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/typedslist\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/glib\/typedslist\/split(separator:maxsplits:omittingemptysubsequences:)","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/glib\/typedslist\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/glib\/typedslist\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/typedslist\/suffix(_:)","title":"func suffix(Int) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/typedslist\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"}],"path":"\/documentation\/glib\/typedslist\/sequence-implementations","title":"Sequence Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/typedslist\/element","title":"var element: Self.Element!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/typedslist\/makeiterator()","title":"func makeIterator() -> SListIterator<Self.Element>","type":"method"}],"path":"\/documentation\/glib\/typedslist\/typedslistprotocol-implementations","title":"TypedSListProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/typedslist","title":"TypedSList","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/typedsequence\/init(arrayliteral:)","title":"init(arrayLiteral: Element...)","type":"init"},{"path":"\/documentation\/glib\/typedsequence\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/typedsequence\/makeiterator()","title":"func makeIterator() -> TypedSequenceIterator<Element>","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/typedsequence\/last","title":"var last: Self.Element?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/typedsequence\/difference(from:)","title":"func difference<C>(from: C) -> CollectionDifference<Self.Element>","type":"method"},{"path":"\/documentation\/glib\/typedsequence\/difference(from:by:)","title":"func difference<C>(from: C, by: (C.Element, Self.Element) -> Bool) -> CollectionDifference<Self.Element>","type":"method"},{"path":"\/documentation\/glib\/typedsequence\/distance(from:to:)","title":"func distance(from: Self.Index, to: Self.Index) -> Int","type":"method"},{"path":"\/documentation\/glib\/typedsequence\/droplast(_:)","title":"func dropLast(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/typedsequence\/firstrange(of:)-7p8d0","title":"func firstRange<C>(of: C) -> Range<Self.Index>?","type":"method"},{"path":"\/documentation\/glib\/typedsequence\/formindex(before:)","title":"func formIndex(before: inout Self.Index)","type":"method"},{"path":"\/documentation\/glib\/typedsequence\/index(_:offsetby:limitedby:)","title":"func index(Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?","type":"method"},{"path":"\/documentation\/glib\/typedsequence\/joined(separator:)-xxtn","title":"func joined(separator: String) -> String","type":"method"},{"path":"\/documentation\/glib\/typedsequence\/last(where:)","title":"func last(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/typedsequence\/lastindex(of:)","title":"func lastIndex(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/glib\/typedsequence\/lastindex(where:)","title":"func lastIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/glib\/typedsequence\/reversed()","title":"func reversed() -> ReversedCollection<Self>","type":"method"},{"path":"\/documentation\/glib\/typedsequence\/suffix(_:)","title":"func suffix(Int) -> Self.SubSequence","type":"method"}],"path":"\/documentation\/glib\/typedsequence\/bidirectionalcollection-implementations","title":"BidirectionalCollection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/typedsequence\/first","title":"var first: Self.Element?","type":"property"},{"path":"\/documentation\/glib\/typedsequence\/indices","title":"var indices: DefaultIndices<Self>","type":"property"},{"path":"\/documentation\/glib\/typedsequence\/underestimatedcount","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/typedsequence\/contains(_:)-38abk","title":"func contains<C>(C) -> Bool","type":"method"},{"path":"\/documentation\/glib\/typedsequence\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/typedsequence\/dropfirst(_:)","title":"func dropFirst(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/typedsequence\/firstindex(of:)","title":"func firstIndex(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/glib\/typedsequence\/firstindex(where:)","title":"func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/glib\/typedsequence\/firstrange(of:)-65zrw","title":"func firstRange<C>(of: C) -> Range<Self.Index>?","type":"method"},{"path":"\/documentation\/glib\/typedsequence\/formindex(_:offsetby:)","title":"func formIndex(inout Self.Index, offsetBy: Int)","type":"method"},{"path":"\/documentation\/glib\/typedsequence\/formindex(_:offsetby:limitedby:)","title":"func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool","type":"method"},{"path":"\/documentation\/glib\/typedsequence\/formindex(after:)","title":"func formIndex(after: inout Self.Index)","type":"method"},{"path":"\/documentation\/glib\/typedsequence\/index(of:)","title":"func index(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/glib\/typedsequence\/map(_:)-31wuy","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/glib\/typedsequence\/prefix(_:)","title":"func prefix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/typedsequence\/prefix(through:)","title":"func prefix(through: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/typedsequence\/prefix(upto:)","title":"func prefix(upTo: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/typedsequence\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/typedsequence\/randomelement()","title":"func randomElement() -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/typedsequence\/randomelement(using:)","title":"func randomElement<T>(using: inout T) -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/typedsequence\/ranges(of:)","title":"func ranges<C>(of: C) -> [Range<Self.Index>]","type":"method"},{"path":"\/documentation\/glib\/typedsequence\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/glib\/typedsequence\/split(separator:maxsplits:omittingemptysubsequences:)-2yar5","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/glib\/typedsequence\/split(separator:maxsplits:omittingemptysubsequences:)-9333a","title":"func split<C>(separator: C, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/glib\/typedsequence\/suffix(from:)","title":"func suffix(from: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/typedsequence\/trimmingprefix(_:)","title":"func trimmingPrefix<Prefix>(Prefix) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/typedsequence\/trimmingprefix(while:)","title":"func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"}],"path":"\/documentation\/glib\/typedsequence\/collection-implementations","title":"Collection Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/typedsequence\/partition(by:)-505rx","title":"func partition(by: (Self.Element) throws -> Bool) rethrows -> Self.Index","type":"method"},{"path":"\/documentation\/glib\/typedsequence\/partition(by:)-6i7gn","title":"func partition(by: (Self.Element) throws -> Bool) rethrows -> Self.Index","type":"method"},{"path":"\/documentation\/glib\/typedsequence\/reverse()","title":"func reverse()","type":"method"},{"path":"\/documentation\/glib\/typedsequence\/swapat(_:_:)","title":"func swapAt(Self.Index, Self.Index)","type":"method"},{"path":"\/documentation\/glib\/typedsequence\/withcontiguousmutablestorageifavailable(_:)","title":"func withContiguousMutableStorageIfAvailable<R>((inout UnsafeMutableBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"}],"path":"\/documentation\/glib\/typedsequence\/mutablecollection-implementations","title":"MutableCollection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/typedsequence\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"path":"\/documentation\/glib\/typedsequence\/publisher","title":"var publisher: Publishers.Sequence<Self, Never>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/typedsequence\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/typedsequence\/compactmap(_:)","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/glib\/typedsequence\/compare(_:_:)","title":"func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult","type":"method"},{"path":"\/documentation\/glib\/typedsequence\/contains(_:)-6obwx","title":"func contains(Self.Element) -> Bool","type":"method"},{"path":"\/documentation\/glib\/typedsequence\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/typedsequence\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/glib\/typedsequence\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/typedsequence\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/typedsequence\/filter(_:)-2apry","title":"func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/typedsequence\/filter(_:)-5vjim","title":"func filter(Predicate<Self.Element>) throws -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/typedsequence\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/typedsequence\/flatmap(_:)-5oeif","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/glib\/typedsequence\/flatmap(_:)-7tj1j","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/glib\/typedsequence\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/glib\/typedsequence\/formatted()","title":"func formatted() -> String","type":"method"},{"path":"\/documentation\/glib\/typedsequence\/formatted(_:)","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/glib\/typedsequence\/joined()","title":"func joined() -> FlattenSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/typedsequence\/joined(separator:)-2hcp8","title":"func joined(separator: String) -> String","type":"method"},{"path":"\/documentation\/glib\/typedsequence\/joined(separator:)-722d","title":"func joined<Separator>(separator: Separator) -> JoinedSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/typedsequence\/lexicographicallyprecedes(_:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/glib\/typedsequence\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/typedsequence\/map(_:)-7he6l","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/glib\/typedsequence\/max()","title":"func max() -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/typedsequence\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/typedsequence\/min()","title":"func min() -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/typedsequence\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/typedsequence\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/glib\/typedsequence\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/glib\/typedsequence\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/typedsequence\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/typedsequence\/sorted()","title":"func sorted() -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/typedsequence\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/typedsequence\/sorted(using:)-3y3rw","title":"func sorted<Comparator>(using: Comparator) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/typedsequence\/sorted(using:)-58zbn","title":"func sorted<S, Comparator>(using: S) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/typedsequence\/split(separator:maxsplits:omittingemptysubsequences:)-84rly","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/glib\/typedsequence\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/glib\/typedsequence\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/typedsequence\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"}],"path":"\/documentation\/glib\/typedsequence\/sequence-implementations","title":"Sequence Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/typedsequence\/count","title":"var count: Int","type":"property"},{"path":"\/documentation\/glib\/typedsequence\/endindex","title":"var endIndex: SequenceIterRef","type":"property"},{"path":"\/documentation\/glib\/typedsequence\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/glib\/typedsequence\/startindex","title":"var startIndex: SequenceIterRef","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/typedsequence\/index(_:offsetby:)","title":"func index(SequenceIterRef, offsetBy: Int) -> SequenceIterRef","type":"method"},{"path":"\/documentation\/glib\/typedsequence\/index(after:)","title":"func index(after: SequenceIterRef) -> SequenceIterRef","type":"method"},{"path":"\/documentation\/glib\/typedsequence\/index(before:)","title":"func index(before: SequenceIterRef) -> SequenceIterRef","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/glib\/typedsequence\/subscript(_:)","title":"subscript(SequenceIterRef) -> Self.Element","type":"subscript"}],"path":"\/documentation\/glib\/typedsequence\/typedsequenceprotocol-implementations","title":"TypedSequenceProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/typedsequence","title":"TypedSequence","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/uri\/init(_:)-33sml","title":"init!(UnsafeMutablePointer<GUri>?)","type":"init"},{"path":"\/documentation\/glib\/uri\/init(_:)-48qil","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/uri\/init(_:)-50acd","title":"init!(UnsafePointer<GUri>?)","type":"init"},{"path":"\/documentation\/glib\/uri\/init(_:)-7vbuk","title":"init(UnsafeMutablePointer<GUri>)","type":"init"},{"path":"\/documentation\/glib\/uri\/init(_:)-94lxr","title":"init(UnsafePointer<GUri>)","type":"init"},{"path":"\/documentation\/glib\/uri\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/uri\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/uri\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/uri\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/uri\/init(raw:)-71bko","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/uri\/init(raw:)-8y0th","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/uri\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GUri>)","type":"init"},{"path":"\/documentation\/glib\/uri\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/uri\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/uri\/init(retainingraw:)-6eg9p","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/uri\/init(retainingraw:)-7hsr","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/uri\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/uri\/build(flags:scheme:userinfo:host:port:path:query:fragment:)","title":"static func build(flags: URIFlags, scheme: UnsafePointer<gchar>!, userinfo: UnsafePointer<gchar>?, host: UnsafePointer<gchar>?, port: Int, path: UnsafePointer<gchar>!, query: UnsafePointer<gchar>?, fragment: UnsafePointer<gchar>?) -> URI!","type":"method"},{"path":"\/documentation\/glib\/uri\/buildwith(user:scheme:user:password:authparams:host:port:path:query:fragment:)","title":"static func buildWith(user: URIFlags, scheme: UnsafePointer<gchar>!, user: UnsafePointer<gchar>?, password: UnsafePointer<gchar>?, authParams: UnsafePointer<gchar>?, host: UnsafePointer<gchar>?, port: Int, path: UnsafePointer<gchar>!, query: UnsafePointer<gchar>?, fragment: UnsafePointer<gchar>?) -> URI!","type":"method"},{"path":"\/documentation\/glib\/uri\/parse(uristring:flags:)","title":"static func parse(uriString: UnsafePointer<gchar>!, flags: URIFlags) throws -> URI!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/uri\/authparams","title":"var authParams: String!","type":"property"},{"path":"\/documentation\/glib\/uri\/flags","title":"var flags: URIFlags","type":"property"},{"path":"\/documentation\/glib\/uri\/fragment","title":"var fragment: String!","type":"property"},{"path":"\/documentation\/glib\/uri\/host","title":"var host: String!","type":"property"},{"path":"\/documentation\/glib\/uri\/password","title":"var password: String!","type":"property"},{"path":"\/documentation\/glib\/uri\/path","title":"var path: String!","type":"property"},{"path":"\/documentation\/glib\/uri\/port","title":"var port: Int","type":"property"},{"path":"\/documentation\/glib\/uri\/query","title":"var query: String!","type":"property"},{"path":"\/documentation\/glib\/uri\/scheme","title":"var scheme: String!","type":"property"},{"path":"\/documentation\/glib\/uri\/uri_ptr","title":"var uri_ptr: UnsafeMutablePointer<GUri>!","type":"property"},{"path":"\/documentation\/glib\/uri\/user","title":"var user: String!","type":"property"},{"path":"\/documentation\/glib\/uri\/userinfo","title":"var userinfo: String!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/uri\/getauthparams()","title":"func getAuthParams() -> String!","type":"method"},{"path":"\/documentation\/glib\/uri\/getflags()","title":"func getFlags() -> URIFlags","type":"method"},{"path":"\/documentation\/glib\/uri\/getfragment()","title":"func getFragment() -> String!","type":"method"},{"path":"\/documentation\/glib\/uri\/gethost()","title":"func getHost() -> String!","type":"method"},{"path":"\/documentation\/glib\/uri\/getpassword()","title":"func getPassword() -> String!","type":"method"},{"path":"\/documentation\/glib\/uri\/getpath()","title":"func getPath() -> String!","type":"method"},{"path":"\/documentation\/glib\/uri\/getport()","title":"func getPort() -> Int","type":"method"},{"path":"\/documentation\/glib\/uri\/getquery()","title":"func getQuery() -> String!","type":"method"},{"path":"\/documentation\/glib\/uri\/getscheme()","title":"func getScheme() -> String!","type":"method"},{"path":"\/documentation\/glib\/uri\/getuser()","title":"func getUser() -> String!","type":"method"},{"path":"\/documentation\/glib\/uri\/getuserinfo()","title":"func getUserinfo() -> String!","type":"method"},{"path":"\/documentation\/glib\/uri\/parserelative(uriref:flags:)","title":"func parseRelative(uriRef: UnsafePointer<gchar>!, flags: URIFlags) throws -> URIRef!","type":"method"},{"path":"\/documentation\/glib\/uri\/ref()","title":"func ref() -> URIRef!","type":"method"},{"path":"\/documentation\/glib\/uri\/tostring()","title":"func toString() -> String!","type":"method"},{"path":"\/documentation\/glib\/uri\/tostringpartial(flags:)","title":"func toStringPartial(flags: URIHideFlags) -> String!","type":"method"},{"path":"\/documentation\/glib\/uri\/unref()","title":"func unref()","type":"method"}],"path":"\/documentation\/glib\/uri\/uriprotocol-implementations","title":"URIProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/uri","title":"URI","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/uriparamsiter\/init(_:)-30thh","title":"init!(UnsafeMutablePointer<GUriParamsIter>?)","type":"init"},{"path":"\/documentation\/glib\/uriparamsiter\/init(_:)-40mip","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/uriparamsiter\/init(_:)-7ovy","title":"init!(UnsafePointer<GUriParamsIter>?)","type":"init"},{"path":"\/documentation\/glib\/uriparamsiter\/init(_:)-8t22e","title":"init(UnsafeMutablePointer<GUriParamsIter>)","type":"init"},{"path":"\/documentation\/glib\/uriparamsiter\/init(_:)-rm1u","title":"init(UnsafePointer<GUriParamsIter>)","type":"init"},{"path":"\/documentation\/glib\/uriparamsiter\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/uriparamsiter\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/uriparamsiter\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/uriparamsiter\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/uriparamsiter\/init(raw:)-14r8f","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/uriparamsiter\/init(raw:)-79hy9","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/uriparamsiter\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GUriParamsIter>)","type":"init"},{"path":"\/documentation\/glib\/uriparamsiter\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/uriparamsiter\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/uriparamsiter\/init(retainingraw:)-404ts","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/uriparamsiter\/init(retainingraw:)-4bbxn","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/uriparamsiter\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/uriparamsiter\/init_(params:length:separators:flags:)","title":"func init_(params: UnsafePointer<gchar>!, length: gssize, separators: UnsafePointer<gchar>!, flags: URIParamsFlags)","type":"method"},{"path":"\/documentation\/glib\/uriparamsiter\/next(attribute:value:)","title":"func next(attribute: UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>?, value: UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>?) throws -> Bool","type":"method"}],"path":"\/documentation\/glib\/uriparamsiter\/uriparamsiterprotocol-implementations","title":"URIParamsIterProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/uriparamsiter","title":"URIParamsIter","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/unixpipe\/init(_:)-24to1","title":"init(UnsafePointer<GUnixPipe>)","type":"init"},{"path":"\/documentation\/glib\/unixpipe\/init(_:)-2d25e","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/unixpipe\/init(_:)-3ccvt","title":"init!(UnsafePointer<GUnixPipe>?)","type":"init"},{"path":"\/documentation\/glib\/unixpipe\/init(_:)-89asc","title":"init(UnsafeMutablePointer<GUnixPipe>)","type":"init"},{"path":"\/documentation\/glib\/unixpipe\/init(_:)-gb4u","title":"init!(UnsafeMutablePointer<GUnixPipe>?)","type":"init"},{"path":"\/documentation\/glib\/unixpipe\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/unixpipe\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/unixpipe\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/unixpipe\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/unixpipe\/init(raw:)-5budb","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/unixpipe\/init(raw:)-96oxg","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/unixpipe\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GUnixPipe>)","type":"init"},{"path":"\/documentation\/glib\/unixpipe\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/unixpipe\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/unixpipe\/init(retainingraw:)-79dgk","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/unixpipe\/init(retainingraw:)-erye","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/unixpipe\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/unixpipe\/fds","title":"var fds: (gint, gint)","type":"property"}],"path":"\/documentation\/glib\/unixpipe\/unixpipeprotocol-implementations","title":"UnixPipeProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/unixpipe","title":"UnixPipe","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/variant\/init(cdouble:)","title":"init(CDouble: Double)","type":"init"},{"path":"\/documentation\/glib\/variant\/init(_:)-10yr9","title":"init(UnsafeMutablePointer<GVariant>)","type":"init"},{"path":"\/documentation\/glib\/variant\/init(_:)-2etw1","title":"init!(UnsafeMutablePointer<GVariant>?)","type":"init"},{"path":"\/documentation\/glib\/variant\/init(_:)-8ld1v","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/variant\/init(_:)-9j0xh","title":"init!(UnsafePointer<GVariant>?)","type":"init"},{"path":"\/documentation\/glib\/variant\/init(_:)-l6rk","title":"init(UnsafePointer<GVariant>)","type":"init"},{"path":"\/documentation\/glib\/variant\/init(array:children:nchildren:)","title":"init<VariantTypeT>(array: VariantTypeT?, children: UnsafePointer<UnsafeMutablePointer<GVariant>?>!, nChildren: Int)","type":"init"},{"path":"\/documentation\/glib\/variant\/init(boolean:)","title":"init(boolean: Bool)","type":"init"},{"path":"\/documentation\/glib\/variant\/init(byte:)","title":"init(byte: guint8)","type":"init"},{"path":"\/documentation\/glib\/variant\/init(bytes:bytes:trusted:)","title":"init<BytesT, VariantTypeT>(bytes: VariantTypeT, bytes: BytesT, trusted: Bool)","type":"init"},{"path":"\/documentation\/glib\/variant\/init(bytestring:)","title":"init(bytestring: UnsafePointer<gchar>!)","type":"init"},{"path":"\/documentation\/glib\/variant\/init(bytestring_array:length:)","title":"init(bytestring_array: UnsafePointer<UnsafePointer<gchar>?>!, length: gssize)","type":"init"},{"path":"\/documentation\/glib\/variant\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/variant\/init(data:data:size:trusted:notify:userdata:)","title":"init<VariantTypeT>(data: VariantTypeT, data: gconstpointer!, size: Int, trusted: Bool, notify: GDestroyNotify?, userData: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/variant\/init(fixed_array:elements:nelements:elementsize:)","title":"init<VariantTypeT>(fixed_array: VariantTypeT, elements: gconstpointer?, nElements: Int, elementSize: Int)","type":"init"},{"path":"\/documentation\/glib\/variant\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/variant\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/variant\/init(handle:)","title":"init(handle: gint32)","type":"init"},{"path":"\/documentation\/glib\/variant\/init(int16:)","title":"init(int16: gint16)","type":"init"},{"path":"\/documentation\/glib\/variant\/init(int32:)","title":"init(int32: gint32)","type":"init"},{"path":"\/documentation\/glib\/variant\/init(int64:)","title":"init(int64: gint64)","type":"init"},{"path":"\/documentation\/glib\/variant\/init(maybe:child:)","title":"init<VariantT, VariantTypeT>(maybe: VariantTypeT?, child: VariantT?)","type":"init"},{"path":"\/documentation\/glib\/variant\/init(objectpath:)","title":"init(objectPath: UnsafePointer<gchar>!)","type":"init"},{"path":"\/documentation\/glib\/variant\/init(objv:length:)","title":"init(objv: UnsafePointer<UnsafePointer<gchar>?>!, length: gssize)","type":"init"},{"path":"\/documentation\/glib\/variant\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/variant\/init(raw:)-6lbmt","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/variant\/init(raw:)-edb7","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/variant\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GVariant>)","type":"init"},{"path":"\/documentation\/glib\/variant\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/variant\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/variant\/init(retainingraw:)-4ohd","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/variant\/init(retainingraw:)-6z9xz","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/variant\/init(signature:)","title":"init(signature: UnsafePointer<gchar>!)","type":"init"},{"path":"\/documentation\/glib\/variant\/init(string:)","title":"init(string: UnsafePointer<gchar>!)","type":"init"},{"path":"\/documentation\/glib\/variant\/init(strv:length:)","title":"init(strv: UnsafePointer<UnsafePointer<gchar>?>!, length: gssize)","type":"init"},{"path":"\/documentation\/glib\/variant\/init(take_string:)","title":"init(take_string: UnsafeMutablePointer<gchar>!)","type":"init"},{"path":"\/documentation\/glib\/variant\/init(tuple:nchildren:)","title":"init(tuple: UnsafePointer<UnsafeMutablePointer<GVariant>?>!, nChildren: Int)","type":"init"},{"path":"\/documentation\/glib\/variant\/init(uint16:)","title":"init(uint16: guint16)","type":"init"},{"path":"\/documentation\/glib\/variant\/init(uint32:)","title":"init(uint32: guint32)","type":"init"},{"path":"\/documentation\/glib\/variant\/init(uint64:)","title":"init(uint64: guint64)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/variant\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/variant\/new(array:children:nchildren:)","title":"static func new<VariantTypeT>(array: VariantTypeT?, children: UnsafePointer<UnsafeMutablePointer<GVariant>?>!, nChildren: Int) -> Variant!","type":"method"},{"path":"\/documentation\/glib\/variant\/new(boolean:)","title":"static func new(boolean: Bool) -> Variant!","type":"method"},{"path":"\/documentation\/glib\/variant\/new(byte:)","title":"static func new(byte: guint8) -> Variant!","type":"method"},{"path":"\/documentation\/glib\/variant\/new(handle:)","title":"static func new(handle: gint32) -> Variant!","type":"method"},{"path":"\/documentation\/glib\/variant\/new(int16:)","title":"static func new(int16: gint16) -> Variant!","type":"method"},{"path":"\/documentation\/glib\/variant\/new(int32:)","title":"static func new(int32: gint32) -> Variant!","type":"method"},{"path":"\/documentation\/glib\/variant\/new(int64:)","title":"static func new(int64: gint64) -> Variant!","type":"method"},{"path":"\/documentation\/glib\/variant\/new(maybe:child:)","title":"static func new<VariantT, VariantTypeT>(maybe: VariantTypeT?, child: VariantT?) -> Variant!","type":"method"},{"path":"\/documentation\/glib\/variant\/new(objectpath:)","title":"static func new(objectPath: UnsafePointer<gchar>!) -> Variant!","type":"method"},{"path":"\/documentation\/glib\/variant\/new(objv:length:)","title":"static func new(objv: UnsafePointer<UnsafePointer<gchar>?>!, length: gssize) -> Variant!","type":"method"},{"path":"\/documentation\/glib\/variant\/new(signature:)","title":"static func new(signature: UnsafePointer<gchar>!) -> Variant!","type":"method"},{"path":"\/documentation\/glib\/variant\/new(string:)","title":"static func new(string: UnsafePointer<gchar>!) -> Variant!","type":"method"},{"path":"\/documentation\/glib\/variant\/new(strv:length:)","title":"static func new(strv: UnsafePointer<UnsafePointer<gchar>?>!, length: gssize) -> Variant!","type":"method"},{"path":"\/documentation\/glib\/variant\/new(tuple:nchildren:)","title":"static func new(tuple: UnsafePointer<UnsafeMutablePointer<GVariant>?>!, nChildren: Int) -> Variant!","type":"method"},{"path":"\/documentation\/glib\/variant\/new(uint16:)","title":"static func new(uint16: guint16) -> Variant!","type":"method"},{"path":"\/documentation\/glib\/variant\/new(uint32:)","title":"static func new(uint32: guint32) -> Variant!","type":"method"},{"path":"\/documentation\/glib\/variant\/new(uint64:)","title":"static func new(uint64: guint64) -> Variant!","type":"method"},{"path":"\/documentation\/glib\/variant\/newbyte(bytestring:)","title":"static func newByte(bytestring: UnsafePointer<gchar>!) -> Variant!","type":"method"},{"path":"\/documentation\/glib\/variant\/newbytestringarray(bytestring_array:length:)","title":"static func newBytestringArray(bytestring_array: UnsafePointer<UnsafePointer<gchar>?>!, length: gssize) -> Variant!","type":"method"},{"path":"\/documentation\/glib\/variant\/newdouble(cdouble:)","title":"static func newDouble(CDouble: Double) -> Variant!","type":"method"},{"path":"\/documentation\/glib\/variant\/newfixedarray(fixed_array:elements:nelements:elementsize:)","title":"static func newFixedArray<VariantTypeT>(fixed_array: VariantTypeT, elements: gconstpointer?, nElements: Int, elementSize: Int) -> Variant!","type":"method"},{"path":"\/documentation\/glib\/variant\/newfrom(bytes:bytes:trusted:)","title":"static func newFrom<BytesT, VariantTypeT>(bytes: VariantTypeT, bytes: BytesT, trusted: Bool) -> Variant!","type":"method"},{"path":"\/documentation\/glib\/variant\/newfrom(data:data:size:trusted:notify:userdata:)","title":"static func newFrom<VariantTypeT>(data: VariantTypeT, data: gconstpointer!, size: Int, trusted: Bool, notify: GDestroyNotify?, userData: gpointer?) -> Variant!","type":"method"},{"path":"\/documentation\/glib\/variant\/newtake(take_string:)","title":"static func newTake(take_string: UnsafeMutablePointer<gchar>!) -> Variant!","type":"method"},{"path":"\/documentation\/glib\/variant\/parse(type:text:limit:endptr:)","title":"static func parse<VariantTypeT>(type: VariantTypeT?, text: UnsafePointer<gchar>!, limit: UnsafePointer<gchar>?, endptr: UnsafeMutablePointer<UnsafePointer<gchar>?>?) throws -> Variant!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/variant\/boolean","title":"var boolean: Bool","type":"property"},{"path":"\/documentation\/glib\/variant\/byte","title":"var byte: guint8","type":"property"},{"path":"\/documentation\/glib\/variant\/bytestring","title":"var bytestring: String!","type":"property"},{"path":"\/documentation\/glib\/variant\/data","title":"var data: gconstpointer?","type":"property"},{"path":"\/documentation\/glib\/variant\/dataasbytes","title":"var dataAsBytes: BytesRef!","type":"property"},{"path":"\/documentation\/glib\/variant\/double","title":"var double: Double","type":"property"},{"path":"\/documentation\/glib\/variant\/handle","title":"var handle: gint32","type":"property"},{"path":"\/documentation\/glib\/variant\/int16","title":"var int16: gint16","type":"property"},{"path":"\/documentation\/glib\/variant\/int32","title":"var int32: gint32","type":"property"},{"path":"\/documentation\/glib\/variant\/int64","title":"var int64: gint64","type":"property"},{"path":"\/documentation\/glib\/variant\/iscontainer","title":"var isContainer: Bool","type":"property"},{"path":"\/documentation\/glib\/variant\/isfloating","title":"var isFloating: Bool","type":"property"},{"path":"\/documentation\/glib\/variant\/isnormalform","title":"var isNormalForm: Bool","type":"property"},{"path":"\/documentation\/glib\/variant\/maybe","title":"var maybe: VariantRef!","type":"property"},{"path":"\/documentation\/glib\/variant\/normalform","title":"var normalForm: VariantRef!","type":"property"},{"path":"\/documentation\/glib\/variant\/size","title":"var size: Int","type":"property"},{"path":"\/documentation\/glib\/variant\/type","title":"var type: VariantTypeRef!","type":"property"},{"path":"\/documentation\/glib\/variant\/typestring","title":"var typeString: String!","type":"property"},{"path":"\/documentation\/glib\/variant\/uint16","title":"var uint16: guint16","type":"property"},{"path":"\/documentation\/glib\/variant\/uint32","title":"var uint32: guint32","type":"property"},{"path":"\/documentation\/glib\/variant\/uint64","title":"var uint64: guint64","type":"property"},{"path":"\/documentation\/glib\/variant\/variant","title":"var variant: VariantRef!","type":"property"},{"path":"\/documentation\/glib\/variant\/variant_ptr","title":"var variant_ptr: UnsafeMutablePointer<GVariant>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/variant\/byteswap()","title":"func byteswap() -> VariantRef!","type":"method"},{"path":"\/documentation\/glib\/variant\/check(formatstring:copyonly:)","title":"func check(formatString: UnsafePointer<gchar>!, copyOnly: Bool) -> Bool","type":"method"},{"path":"\/documentation\/glib\/variant\/classify()","title":"func classify() -> GVariantClass","type":"method"},{"path":"\/documentation\/glib\/variant\/compare(two:)","title":"func compare<VariantT>(two: VariantT) -> Int","type":"method"},{"path":"\/documentation\/glib\/variant\/dupbytestring(length:)","title":"func dupBytestring(length: UnsafeMutablePointer<gsize>!) -> String!","type":"method"},{"path":"\/documentation\/glib\/variant\/dupbytestringarray(length:)","title":"func dupBytestringArray(length: UnsafeMutablePointer<gsize>!) -> UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!","type":"method"},{"path":"\/documentation\/glib\/variant\/dupobjv(length:)","title":"func dupObjv(length: UnsafeMutablePointer<gsize>!) -> UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!","type":"method"},{"path":"\/documentation\/glib\/variant\/dupstring(length:)","title":"func dupString(length: UnsafeMutablePointer<gsize>!) -> String!","type":"method"},{"path":"\/documentation\/glib\/variant\/dupstrv(length:)","title":"func dupStrv(length: UnsafeMutablePointer<gsize>!) -> UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!","type":"method"},{"path":"\/documentation\/glib\/variant\/equal(two:)","title":"func equal<VariantT>(two: VariantT) -> Bool","type":"method"},{"path":"\/documentation\/glib\/variant\/getboolean()","title":"func getBoolean() -> Bool","type":"method"},{"path":"\/documentation\/glib\/variant\/getbyte()","title":"func getByte() -> guint8","type":"method"},{"path":"\/documentation\/glib\/variant\/getbytestring()","title":"func getBytestring() -> String!","type":"method"},{"path":"\/documentation\/glib\/variant\/getbytestringarray(length:)","title":"func getBytestringArray(length: UnsafeMutablePointer<gsize>!) -> UnsafeMutablePointer<UnsafePointer<gchar>?>!","type":"method"},{"path":"\/documentation\/glib\/variant\/getchildvalue(index:)","title":"func getChildValue(index: Int) -> VariantRef!","type":"method"},{"path":"\/documentation\/glib\/variant\/getdata()","title":"func getData() -> gconstpointer?","type":"method"},{"path":"\/documentation\/glib\/variant\/getdataasbytes()","title":"func getDataAsBytes() -> BytesRef!","type":"method"},{"path":"\/documentation\/glib\/variant\/getdouble()","title":"func getDouble() -> Double","type":"method"},{"path":"\/documentation\/glib\/variant\/getfixedarray(nelements:elementsize:)","title":"func getFixedArray(nElements: UnsafeMutablePointer<gsize>!, elementSize: Int) -> gconstpointer!","type":"method"},{"path":"\/documentation\/glib\/variant\/gethandle()","title":"func getHandle() -> gint32","type":"method"},{"path":"\/documentation\/glib\/variant\/getint16()","title":"func getInt16() -> gint16","type":"method"},{"path":"\/documentation\/glib\/variant\/getint32()","title":"func getInt32() -> gint32","type":"method"},{"path":"\/documentation\/glib\/variant\/getint64()","title":"func getInt64() -> gint64","type":"method"},{"path":"\/documentation\/glib\/variant\/getmaybe()","title":"func getMaybe() -> VariantRef!","type":"method"},{"path":"\/documentation\/glib\/variant\/getnormalform()","title":"func getNormalForm() -> VariantRef!","type":"method"},{"path":"\/documentation\/glib\/variant\/getobjv(length:)","title":"func getObjv(length: UnsafeMutablePointer<gsize>!) -> UnsafeMutablePointer<UnsafePointer<gchar>?>!","type":"method"},{"path":"\/documentation\/glib\/variant\/getsize()","title":"func getSize() -> Int","type":"method"},{"path":"\/documentation\/glib\/variant\/getstring(length:)","title":"func getString(length: UnsafeMutablePointer<gsize>!) -> String!","type":"method"},{"path":"\/documentation\/glib\/variant\/getstrv(length:)","title":"func getStrv(length: UnsafeMutablePointer<gsize>!) -> UnsafeMutablePointer<UnsafePointer<gchar>?>!","type":"method"},{"path":"\/documentation\/glib\/variant\/gettype()","title":"func getType() -> VariantTypeRef!","type":"method"},{"path":"\/documentation\/glib\/variant\/gettypestring()","title":"func getTypeString() -> String!","type":"method"},{"path":"\/documentation\/glib\/variant\/getuint16()","title":"func getUint16() -> guint16","type":"method"},{"path":"\/documentation\/glib\/variant\/getuint32()","title":"func getUint32() -> guint32","type":"method"},{"path":"\/documentation\/glib\/variant\/getuint64()","title":"func getUint64() -> guint64","type":"method"},{"path":"\/documentation\/glib\/variant\/getvariant()","title":"func getVariant() -> VariantRef!","type":"method"},{"path":"\/documentation\/glib\/variant\/hash()","title":"func hash() -> Int","type":"method"},{"path":"\/documentation\/glib\/variant\/isof(type:)","title":"func isOf<VariantTypeT>(type: VariantTypeT) -> Bool","type":"method"},{"path":"\/documentation\/glib\/variant\/iternew()","title":"func iterNew() -> VariantIterRef!","type":"method"},{"path":"\/documentation\/glib\/variant\/logvariant(logdomain:loglevel:)","title":"func logVariant(logDomain: UnsafePointer<gchar>?, logLevel: LogLevelFlags)","type":"method"},{"path":"\/documentation\/glib\/variant\/lookupvalue(key:expectedtype:)","title":"func lookupValue(key: UnsafePointer<gchar>!, expectedType: VariantTypeRef?) -> VariantRef!","type":"method"},{"path":"\/documentation\/glib\/variant\/nchildren()","title":"func nChildren() -> Int","type":"method"},{"path":"\/documentation\/glib\/variant\/print(string:typeannotate:)","title":"func print(string: StringRef?, typeAnnotate: Bool) -> StringRef!","type":"method"},{"path":"\/documentation\/glib\/variant\/print(typeannotate:)","title":"func print(typeAnnotate: Bool) -> String!","type":"method"},{"path":"\/documentation\/glib\/variant\/ref()","title":"func ref() -> VariantRef!","type":"method"},{"path":"\/documentation\/glib\/variant\/refsink()","title":"func refSink() -> VariantRef!","type":"method"},{"path":"\/documentation\/glib\/variant\/store(data:)","title":"func store(data: gpointer!)","type":"method"},{"path":"\/documentation\/glib\/variant\/takeref()","title":"func takeRef() -> VariantRef!","type":"method"},{"path":"\/documentation\/glib\/variant\/unref()","title":"func unref()","type":"method"}],"path":"\/documentation\/glib\/variant\/variantprotocol-implementations","title":"VariantProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/variant","title":"Variant","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/variantbuilder\/init(_:)-2v4ik","title":"init(UnsafeMutablePointer<GVariantBuilder>)","type":"init"},{"path":"\/documentation\/glib\/variantbuilder\/init(_:)-3ckbe","title":"init(UnsafePointer<GVariantBuilder>)","type":"init"},{"path":"\/documentation\/glib\/variantbuilder\/init(_:)-57mh3","title":"init!(UnsafeMutablePointer<GVariantBuilder>?)","type":"init"},{"path":"\/documentation\/glib\/variantbuilder\/init(_:)-588rw","title":"init!(UnsafePointer<GVariantBuilder>?)","type":"init"},{"path":"\/documentation\/glib\/variantbuilder\/init(_:)-p8bd","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/variantbuilder\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/variantbuilder\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/variantbuilder\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/variantbuilder\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/variantbuilder\/init(raw:)-11e3s","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/variantbuilder\/init(raw:)-4w8o7","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/variantbuilder\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GVariantBuilder>)","type":"init"},{"path":"\/documentation\/glib\/variantbuilder\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/variantbuilder\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/variantbuilder\/init(retainingraw:)-6xgrt","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/variantbuilder\/init(retainingraw:)-sq5r","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/variantbuilder\/init(type:)","title":"init<VariantTypeT>(type: VariantTypeT)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/variantbuilder\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/variantbuilder\/variant_builder_ptr","title":"var variant_builder_ptr: UnsafeMutablePointer<GVariantBuilder>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/variantbuilder\/add(value:)","title":"func add<VariantT>(value: VariantT)","type":"method"},{"path":"\/documentation\/glib\/variantbuilder\/clear()","title":"func clear()","type":"method"},{"path":"\/documentation\/glib\/variantbuilder\/close()","title":"func close()","type":"method"},{"path":"\/documentation\/glib\/variantbuilder\/end()","title":"func end() -> VariantRef!","type":"method"},{"path":"\/documentation\/glib\/variantbuilder\/init_(type:)","title":"func init_<VariantTypeT>(type: VariantTypeT)","type":"method"},{"path":"\/documentation\/glib\/variantbuilder\/open(type:)","title":"func open<VariantTypeT>(type: VariantTypeT)","type":"method"},{"path":"\/documentation\/glib\/variantbuilder\/ref()","title":"func ref() -> VariantBuilderRef!","type":"method"},{"path":"\/documentation\/glib\/variantbuilder\/unref()","title":"func unref()","type":"method"}],"path":"\/documentation\/glib\/variantbuilder\/variantbuilderprotocol-implementations","title":"VariantBuilderProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/variantbuilder","title":"VariantBuilder","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/variantdict\/init(_:)-2ksq6","title":"init!(UnsafeMutablePointer<GVariantDict>?)","type":"init"},{"path":"\/documentation\/glib\/variantdict\/init(_:)-44k6f","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/variantdict\/init(_:)-6durr","title":"init(UnsafeMutablePointer<GVariantDict>)","type":"init"},{"path":"\/documentation\/glib\/variantdict\/init(_:)-6mm5q","title":"init(UnsafePointer<GVariantDict>)","type":"init"},{"path":"\/documentation\/glib\/variantdict\/init(_:)-6y8h5","title":"init!(UnsafePointer<GVariantDict>?)","type":"init"},{"path":"\/documentation\/glib\/variantdict\/init(asv:)","title":"init<VariantT>(asv: VariantT?)","type":"init"},{"path":"\/documentation\/glib\/variantdict\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/variantdict\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/variantdict\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/variantdict\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/variantdict\/init(raw:)-1rndj","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/variantdict\/init(raw:)-5mi2y","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/variantdict\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GVariantDict>)","type":"init"},{"path":"\/documentation\/glib\/variantdict\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/variantdict\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/variantdict\/init(retainingraw:)-2823f","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/variantdict\/init(retainingraw:)-9l3bf","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/variantdict\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/variantdict\/variant_dict_ptr","title":"var variant_dict_ptr: UnsafeMutablePointer<GVariantDict>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/variantdict\/clear()","title":"func clear()","type":"method"},{"path":"\/documentation\/glib\/variantdict\/contains(key:)","title":"func contains(key: UnsafePointer<gchar>!) -> Bool","type":"method"},{"path":"\/documentation\/glib\/variantdict\/end()","title":"func end() -> VariantRef!","type":"method"},{"path":"\/documentation\/glib\/variantdict\/init_(from:)","title":"func init_(from: VariantRef?)","type":"method"},{"path":"\/documentation\/glib\/variantdict\/insertvalue(key:value:)","title":"func insertValue<VariantT>(key: UnsafePointer<gchar>!, value: VariantT)","type":"method"},{"path":"\/documentation\/glib\/variantdict\/lookupvalue(key:expectedtype:)","title":"func lookupValue(key: UnsafePointer<gchar>!, expectedType: VariantTypeRef?) -> VariantRef!","type":"method"},{"path":"\/documentation\/glib\/variantdict\/ref()","title":"func ref() -> VariantDictRef!","type":"method"},{"path":"\/documentation\/glib\/variantdict\/remove(key:)","title":"func remove(key: UnsafePointer<gchar>!) -> Bool","type":"method"},{"path":"\/documentation\/glib\/variantdict\/unref()","title":"func unref()","type":"method"}],"path":"\/documentation\/glib\/variantdict\/variantdictprotocol-implementations","title":"VariantDictProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/variantdict","title":"VariantDict","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/variantiter\/init(_:)-1hwrn","title":"init(UnsafePointer<GVariantIter>)","type":"init"},{"path":"\/documentation\/glib\/variantiter\/init(_:)-31rnf","title":"init!(UnsafePointer<GVariantIter>?)","type":"init"},{"path":"\/documentation\/glib\/variantiter\/init(_:)-4a2lr","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/variantiter\/init(_:)-7ryy2","title":"init!(UnsafeMutablePointer<GVariantIter>?)","type":"init"},{"path":"\/documentation\/glib\/variantiter\/init(_:)-u6r8","title":"init(UnsafeMutablePointer<GVariantIter>)","type":"init"},{"path":"\/documentation\/glib\/variantiter\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/variantiter\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/variantiter\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/variantiter\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/variantiter\/init(raw:)-1xymj","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/variantiter\/init(raw:)-4kins","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/variantiter\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GVariantIter>)","type":"init"},{"path":"\/documentation\/glib\/variantiter\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/variantiter\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/variantiter\/init(retainingraw:)-4hapf","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/variantiter\/init(retainingraw:)-6dzza","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/variantiter\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/variantiter\/copy()","title":"func copy() -> VariantIterRef!","type":"method"},{"path":"\/documentation\/glib\/variantiter\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/glib\/variantiter\/init_(value:)","title":"func init_<VariantT>(value: VariantT) -> Int","type":"method"},{"path":"\/documentation\/glib\/variantiter\/nchildren()","title":"func nChildren() -> Int","type":"method"},{"path":"\/documentation\/glib\/variantiter\/nextvalue()","title":"func nextValue() -> VariantRef!","type":"method"}],"path":"\/documentation\/glib\/variantiter\/variantiterprotocol-implementations","title":"VariantIterProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/variantiter","title":"VariantIter","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/varianttype\/init(_:)-5y8b2","title":"init(UnsafeMutablePointer<GVariantType>)","type":"init"},{"path":"\/documentation\/glib\/varianttype\/init(_:)-6gp0c","title":"init!(UnsafePointer<GVariantType>?)","type":"init"},{"path":"\/documentation\/glib\/varianttype\/init(_:)-7f72f","title":"init!(UnsafeMutablePointer<GVariantType>?)","type":"init"},{"path":"\/documentation\/glib\/varianttype\/init(_:)-8obca","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/varianttype\/init(_:)-9qngo","title":"init(UnsafePointer<GVariantType>)","type":"init"},{"path":"\/documentation\/glib\/varianttype\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/varianttype\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/varianttype\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/varianttype\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/varianttype\/init(raw:)-2bp98","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/varianttype\/init(raw:)-96av2","title":"init(raw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/varianttype\/init(retaining:)","title":"init(retaining: UnsafeMutablePointer<GVariantType>)","type":"init"},{"path":"\/documentation\/glib\/varianttype\/init(retainingcpointer:)","title":"init<T>(retainingCPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/varianttype\/init(retainingopaquepointer:)","title":"init(retainingOpaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/varianttype\/init(retainingraw:)-1w0qp","title":"init(retainingRaw: UnsafeMutableRawPointer)","type":"init"},{"path":"\/documentation\/glib\/varianttype\/init(retainingraw:)-991zl","title":"init(retainingRaw: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/varianttype\/init(typestring:)","title":"init(typeString: UnsafePointer<gchar>!)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/varianttype\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/varianttype\/checked(typestring:)","title":"static func checked(typeString: UnsafePointer<gchar>!) -> VariantType!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/varianttype\/isarray","title":"var isArray: Bool","type":"property"},{"path":"\/documentation\/glib\/varianttype\/isbasic","title":"var isBasic: Bool","type":"property"},{"path":"\/documentation\/glib\/varianttype\/iscontainer","title":"var isContainer: Bool","type":"property"},{"path":"\/documentation\/glib\/varianttype\/isdefinite","title":"var isDefinite: Bool","type":"property"},{"path":"\/documentation\/glib\/varianttype\/isdictentry","title":"var isDictEntry: Bool","type":"property"},{"path":"\/documentation\/glib\/varianttype\/ismaybe","title":"var isMaybe: Bool","type":"property"},{"path":"\/documentation\/glib\/varianttype\/istuple","title":"var isTuple: Bool","type":"property"},{"path":"\/documentation\/glib\/varianttype\/isvariant","title":"var isVariant: Bool","type":"property"},{"path":"\/documentation\/glib\/varianttype\/stringlength","title":"var stringLength: Int","type":"property"},{"path":"\/documentation\/glib\/varianttype\/variant_type_ptr","title":"var variant_type_ptr: UnsafeMutablePointer<GVariantType>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/varianttype\/copy()","title":"func copy() -> VariantTypeRef!","type":"method"},{"path":"\/documentation\/glib\/varianttype\/dupstring()","title":"func dupString() -> String!","type":"method"},{"path":"\/documentation\/glib\/varianttype\/element()","title":"func element() -> VariantTypeRef!","type":"method"},{"path":"\/documentation\/glib\/varianttype\/equal(type2:)","title":"func equal<VariantTypeT>(type2: VariantTypeT) -> Bool","type":"method"},{"path":"\/documentation\/glib\/varianttype\/first()","title":"func first() -> VariantTypeRef!","type":"method"},{"path":"\/documentation\/glib\/varianttype\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/glib\/varianttype\/getstringlength()","title":"func getStringLength() -> Int","type":"method"},{"path":"\/documentation\/glib\/varianttype\/hash()","title":"func hash() -> Int","type":"method"},{"path":"\/documentation\/glib\/varianttype\/issubtypeof(supertype:)","title":"func isSubtypeOf<VariantTypeT>(supertype: VariantTypeT) -> Bool","type":"method"},{"path":"\/documentation\/glib\/varianttype\/key()","title":"func key() -> VariantTypeRef!","type":"method"},{"path":"\/documentation\/glib\/varianttype\/nitems()","title":"func nItems() -> Int","type":"method"},{"path":"\/documentation\/glib\/varianttype\/next()","title":"func next() -> VariantTypeRef!","type":"method"},{"path":"\/documentation\/glib\/varianttype\/peekstring()","title":"func peekString() -> String!","type":"method"},{"path":"\/documentation\/glib\/varianttype\/value()","title":"func value() -> VariantTypeRef!","type":"method"},{"path":"\/documentation\/glib\/varianttype\/variantparse(text:limit:endptr:)","title":"func variantParse(text: UnsafePointer<gchar>!, limit: UnsafePointer<gchar>?, endptr: UnsafeMutablePointer<UnsafePointer<gchar>?>?) throws -> VariantRef!","type":"method"}],"path":"\/documentation\/glib\/varianttype\/varianttypeprotocol-implementations","title":"VariantTypeProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/varianttype","title":"VariantType","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/allocatorprotocol\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/glib\/allocatorprotocol\/listpushallocator()","title":"func listPushAllocator()","type":"method"},{"path":"\/documentation\/glib\/allocatorprotocol\/nodepushallocator()","title":"func nodePushAllocator()","type":"method"},{"path":"\/documentation\/glib\/allocatorprotocol\/slistpushallocator()","title":"func slistPushAllocator()","type":"method"}],"path":"\/documentation\/glib\/allocatorprotocol","title":"AllocatorProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/glib\/arrayprotocol\/array_ptr-dxdv","title":"var array_ptr: UnsafeMutablePointer<GArray>!","type":"property"}],"title":"ArrayProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/glib\/arrayprotocol\/array_ptr-1nv7d","title":"var array_ptr: UnsafeMutablePointer<GArray>!","type":"property"},{"path":"\/documentation\/glib\/arrayprotocol\/data","title":"var data: UnsafeMutablePointer<gchar>!","type":"property"},{"path":"\/documentation\/glib\/arrayprotocol\/elementsize","title":"var elementSize: Int","type":"property"},{"path":"\/documentation\/glib\/arrayprotocol\/len","title":"var len: guint","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/arrayprotocol\/appendvals(data:len:)","title":"func appendVals(data: gconstpointer?, len: Int) -> ArrayRef!","type":"method"},{"path":"\/documentation\/glib\/arrayprotocol\/binarysearch(target:comparefunc:outmatchindex:)","title":"func binarySearch(target: gconstpointer?, compareFunc: GCompareFunc?, outMatchIndex: UnsafeMutablePointer<guint>!) -> Bool","type":"method"},{"path":"\/documentation\/glib\/arrayprotocol\/copy()","title":"func copy() -> ArrayRef!","type":"method"},{"path":"\/documentation\/glib\/arrayprotocol\/free(freesegment:)","title":"func free(freeSegment: Bool) -> String!","type":"method"},{"path":"\/documentation\/glib\/arrayprotocol\/getelementsize()","title":"func getElementSize() -> Int","type":"method"},{"path":"\/documentation\/glib\/arrayprotocol\/insertvals(index:data:len:)","title":"func insertVals(index: Int, data: gconstpointer?, len: Int) -> ArrayRef!","type":"method"},{"path":"\/documentation\/glib\/arrayprotocol\/prependvals(data:len:)","title":"func prependVals(data: gconstpointer?, len: Int) -> ArrayRef!","type":"method"},{"path":"\/documentation\/glib\/arrayprotocol\/ref()","title":"func ref() -> ArrayRef!","type":"method"},{"path":"\/documentation\/glib\/arrayprotocol\/remove(index:)","title":"func remove(index: Int) -> ArrayRef!","type":"method"},{"path":"\/documentation\/glib\/arrayprotocol\/removeindexfast(index:)","title":"func removeIndexFast(index: Int) -> ArrayRef!","type":"method"},{"path":"\/documentation\/glib\/arrayprotocol\/removerange(index:length:)","title":"func removeRange(index: Int, length: Int) -> ArrayRef!","type":"method"},{"path":"\/documentation\/glib\/arrayprotocol\/set(clearfunc:)","title":"func set(clearFunc: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/glib\/arrayprotocol\/setsize(length:)","title":"func setSize(length: Int) -> ArrayRef!","type":"method"},{"path":"\/documentation\/glib\/arrayprotocol\/sort(comparefunc:)","title":"func sort(compareFunc: GCompareFunc?)","type":"method"},{"path":"\/documentation\/glib\/arrayprotocol\/sortwithdata(comparefunc:userdata:)","title":"func sortWithData(compareFunc: GCompareDataFunc?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/arrayprotocol\/steal(len:)","title":"func steal(len: UnsafeMutablePointer<gsize>!) -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/arrayprotocol\/unref()","title":"func unref()","type":"method"}],"path":"\/documentation\/glib\/arrayprotocol","title":"ArrayProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/asyncqueueprotocol\/length()","title":"func length() -> Int","type":"method"},{"path":"\/documentation\/glib\/asyncqueueprotocol\/lengthunlocked()","title":"func lengthUnlocked() -> Int","type":"method"},{"path":"\/documentation\/glib\/asyncqueueprotocol\/lock()","title":"func lock()","type":"method"},{"path":"\/documentation\/glib\/asyncqueueprotocol\/pop()","title":"func pop() -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/asyncqueueprotocol\/popunlocked()","title":"func popUnlocked() -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/asyncqueueprotocol\/push(data:)","title":"func push(data: gpointer!)","type":"method"},{"path":"\/documentation\/glib\/asyncqueueprotocol\/pushfront(item:)","title":"func pushFront(item: gpointer!)","type":"method"},{"path":"\/documentation\/glib\/asyncqueueprotocol\/pushfrontunlocked(item:)","title":"func pushFrontUnlocked(item: gpointer!)","type":"method"},{"path":"\/documentation\/glib\/asyncqueueprotocol\/pushsorted(data:func:userdata:)","title":"func pushSorted(data: gpointer!, func: GCompareDataFunc?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/asyncqueueprotocol\/pushsortedunlocked(data:func:userdata:)","title":"func pushSortedUnlocked(data: gpointer?, func: GCompareDataFunc?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/asyncqueueprotocol\/pushunlocked(data:)","title":"func pushUnlocked(data: gpointer!)","type":"method"},{"path":"\/documentation\/glib\/asyncqueueprotocol\/ref()","title":"func ref() -> AsyncQueueRef!","type":"method"},{"path":"\/documentation\/glib\/asyncqueueprotocol\/refunlocked()","title":"func refUnlocked()","type":"method"},{"path":"\/documentation\/glib\/asyncqueueprotocol\/remove(item:)","title":"func remove(item: gpointer!) -> Bool","type":"method"},{"path":"\/documentation\/glib\/asyncqueueprotocol\/removeunlocked(item:)","title":"func removeUnlocked(item: gpointer?) -> Bool","type":"method"},{"path":"\/documentation\/glib\/asyncqueueprotocol\/sort(func:userdata:)","title":"func sort(func: GCompareDataFunc?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/asyncqueueprotocol\/sortunlocked(func:userdata:)","title":"func sortUnlocked(func: GCompareDataFunc?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/asyncqueueprotocol\/timedpop(endtime:)","title":"func timedPop<TimeValT>(endTime: TimeValT) -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/asyncqueueprotocol\/timedpopunlocked(endtime:)","title":"func timedPopUnlocked<TimeValT>(endTime: TimeValT) -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/asyncqueueprotocol\/timeoutpop(timeout:)","title":"func timeoutPop(timeout: guint64) -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/asyncqueueprotocol\/timeoutpopunlocked(timeout:)","title":"func timeoutPopUnlocked(timeout: guint64) -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/asyncqueueprotocol\/trypop()","title":"func tryPop() -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/asyncqueueprotocol\/trypopunlocked()","title":"func tryPopUnlocked() -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/asyncqueueprotocol\/unlock()","title":"func unlock()","type":"method"},{"path":"\/documentation\/glib\/asyncqueueprotocol\/unref()","title":"func unref()","type":"method"},{"path":"\/documentation\/glib\/asyncqueueprotocol\/unrefandunlock()","title":"func unrefAndUnlock()","type":"method"}],"path":"\/documentation\/glib\/asyncqueueprotocol","title":"AsyncQueueProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/glib\/bookmarkfileprotocol\/bookmark_file_ptr-7854e","title":"var bookmark_file_ptr: UnsafeMutablePointer<GBookmarkFile>!","type":"property"}],"title":"BookmarkFileProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/glib\/bookmarkfileprotocol\/bookmark_file_ptr-5arif","title":"var bookmark_file_ptr: UnsafeMutablePointer<GBookmarkFile>!","type":"property"},{"path":"\/documentation\/glib\/bookmarkfileprotocol\/size","title":"var size: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/bookmarkfileprotocol\/addapplication(uri:name:exec:)","title":"func addApplication(uri: UnsafePointer<gchar>!, name: UnsafePointer<gchar>?, exec: UnsafePointer<gchar>?)","type":"method"},{"path":"\/documentation\/glib\/bookmarkfileprotocol\/addgroup(uri:group:)","title":"func addGroup(uri: UnsafePointer<gchar>!, group: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/glib\/bookmarkfileprotocol\/copy()","title":"func copy() -> BookmarkFileRef!","type":"method"},{"path":"\/documentation\/glib\/bookmarkfileprotocol\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/glib\/bookmarkfileprotocol\/getadded(uri:)","title":"func getAdded(uri: UnsafePointer<gchar>!) throws -> time_t","type":"method"},{"path":"\/documentation\/glib\/bookmarkfileprotocol\/getaddeddatetime(uri:)","title":"func getAddedDateTime(uri: UnsafePointer<CChar>!) throws -> DateTimeRef!","type":"method"},{"path":"\/documentation\/glib\/bookmarkfileprotocol\/getappinfo(uri:name:exec:count:stamp:)","title":"func getAppInfo(uri: UnsafePointer<gchar>!, name: UnsafePointer<gchar>!, exec: UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!, count: UnsafeMutablePointer<guint>!, stamp: UnsafeMutablePointer<time_t>!) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/bookmarkfileprotocol\/getapplicationinfo(uri:name:exec:count:stamp:)","title":"func getApplicationInfo(uri: UnsafePointer<CChar>!, name: UnsafePointer<CChar>!, exec: UnsafeMutablePointer<UnsafeMutablePointer<CChar>?>!, count: UnsafeMutablePointer<guint>!, stamp: UnsafeMutablePointer<UnsafeMutablePointer<GDateTime>?>!) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/bookmarkfileprotocol\/getapplications(uri:length:)","title":"func getApplications(uri: UnsafePointer<gchar>!, length: UnsafeMutablePointer<gsize>!) throws -> UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!","type":"method"},{"path":"\/documentation\/glib\/bookmarkfileprotocol\/getdescription(uri:)","title":"func getDescription(uri: UnsafePointer<gchar>!) throws -> String!","type":"method"},{"path":"\/documentation\/glib\/bookmarkfileprotocol\/getgroups(uri:length:)","title":"func getGroups(uri: UnsafePointer<gchar>!, length: UnsafeMutablePointer<gsize>!) throws -> UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!","type":"method"},{"path":"\/documentation\/glib\/bookmarkfileprotocol\/geticon(uri:href:mimetype:)","title":"func getIcon(uri: UnsafePointer<gchar>!, href: UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!, mimeType: UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/bookmarkfileprotocol\/getisprivate(uri:)","title":"func getIsPrivate(uri: UnsafePointer<gchar>!) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/bookmarkfileprotocol\/getmimetype(uri:)","title":"func getMimeType(uri: UnsafePointer<gchar>!) throws -> String!","type":"method"},{"path":"\/documentation\/glib\/bookmarkfileprotocol\/getmodified(uri:)","title":"func getModified(uri: UnsafePointer<gchar>!) throws -> time_t","type":"method"},{"path":"\/documentation\/glib\/bookmarkfileprotocol\/getmodifieddatetime(uri:)","title":"func getModifiedDateTime(uri: UnsafePointer<CChar>!) throws -> DateTimeRef!","type":"method"},{"path":"\/documentation\/glib\/bookmarkfileprotocol\/getsize()","title":"func getSize() -> Int","type":"method"},{"path":"\/documentation\/glib\/bookmarkfileprotocol\/gettitle(uri:)","title":"func getTitle(uri: UnsafePointer<gchar>?) throws -> String!","type":"method"},{"path":"\/documentation\/glib\/bookmarkfileprotocol\/geturis(length:)","title":"func getURIs(length: UnsafeMutablePointer<gsize>!) -> UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!","type":"method"},{"path":"\/documentation\/glib\/bookmarkfileprotocol\/getvisited(uri:)","title":"func getVisited(uri: UnsafePointer<gchar>!) throws -> time_t","type":"method"},{"path":"\/documentation\/glib\/bookmarkfileprotocol\/getvisiteddatetime(uri:)","title":"func getVisitedDateTime(uri: UnsafePointer<CChar>!) throws -> DateTimeRef!","type":"method"},{"path":"\/documentation\/glib\/bookmarkfileprotocol\/hasapplication(uri:name:)","title":"func hasApplication(uri: UnsafePointer<gchar>!, name: UnsafePointer<gchar>!) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/bookmarkfileprotocol\/hasgroup(uri:group:)","title":"func hasGroup(uri: UnsafePointer<gchar>!, group: UnsafePointer<gchar>!) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/bookmarkfileprotocol\/hasitem(uri:)","title":"func hasItem(uri: UnsafePointer<gchar>!) -> Bool","type":"method"},{"path":"\/documentation\/glib\/bookmarkfileprotocol\/loadfrom(data:length:)","title":"func loadFrom(data: UnsafePointer<gchar>!, length: Int) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/bookmarkfileprotocol\/loadfromdatadirs(file:fullpath:)","title":"func loadFromDataDirs(file: UnsafePointer<gchar>!, fullPath: UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/bookmarkfileprotocol\/loadfromfile(filename:)","title":"func loadFromFile(filename: UnsafePointer<gchar>!) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/bookmarkfileprotocol\/moveitem(olduri:newuri:)","title":"func moveItem(oldURI: UnsafePointer<gchar>!, newURI: UnsafePointer<gchar>?) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/bookmarkfileprotocol\/removeapplication(uri:name:)","title":"func removeApplication(uri: UnsafePointer<gchar>!, name: UnsafePointer<gchar>!) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/bookmarkfileprotocol\/removegroup(uri:group:)","title":"func removeGroup(uri: UnsafePointer<gchar>!, group: UnsafePointer<gchar>!) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/bookmarkfileprotocol\/removeitem(uri:)","title":"func removeItem(uri: UnsafePointer<gchar>!) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/bookmarkfileprotocol\/setadded(uri:added:)","title":"func setAdded(uri: UnsafePointer<gchar>!, added: time_t)","type":"method"},{"path":"\/documentation\/glib\/bookmarkfileprotocol\/setaddeddatetime(uri:added:)","title":"func setAddedDateTime<DateTimeT>(uri: UnsafePointer<CChar>!, added: DateTimeT)","type":"method"},{"path":"\/documentation\/glib\/bookmarkfileprotocol\/setappinfo(uri:name:exec:count:stamp:)","title":"func setAppInfo(uri: UnsafePointer<gchar>!, name: UnsafePointer<gchar>!, exec: UnsafePointer<gchar>!, count: Int, stamp: time_t) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/bookmarkfileprotocol\/setapplicationinfo(uri:name:exec:count:stamp:)-41r0h","title":"func setApplicationInfo<DateTimeT>(uri: UnsafePointer<CChar>!, name: UnsafePointer<CChar>!, exec: UnsafePointer<CChar>!, count: Int, stamp: DateTimeT?) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/bookmarkfileprotocol\/setapplicationinfo(uri:name:exec:count:stamp:)-9l4id","title":"func setApplicationInfo(uri: UnsafePointer<CChar>!, name: UnsafePointer<CChar>!, exec: UnsafePointer<CChar>!, count: Int, stamp: DateTimeRef?) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/bookmarkfileprotocol\/setdescription(uri:description:)","title":"func setDescription(uri: UnsafePointer<gchar>?, description: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/glib\/bookmarkfileprotocol\/setgroups(uri:groups:length:)","title":"func setGroups(uri: UnsafePointer<gchar>!, groups: UnsafeMutablePointer<UnsafePointer<gchar>?>!, length: Int)","type":"method"},{"path":"\/documentation\/glib\/bookmarkfileprotocol\/seticon(uri:href:mimetype:)","title":"func setIcon(uri: UnsafePointer<gchar>!, href: UnsafePointer<gchar>?, mimeType: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/glib\/bookmarkfileprotocol\/setisprivate(uri:isprivate:)","title":"func setIsPrivate(uri: UnsafePointer<gchar>!, isPrivate: Bool)","type":"method"},{"path":"\/documentation\/glib\/bookmarkfileprotocol\/setmimetype(uri:mimetype:)","title":"func setMimeType(uri: UnsafePointer<gchar>!, mimeType: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/glib\/bookmarkfileprotocol\/setmodified(uri:modified:)","title":"func setModified(uri: UnsafePointer<gchar>!, modified: time_t)","type":"method"},{"path":"\/documentation\/glib\/bookmarkfileprotocol\/setmodifieddatetime(uri:modified:)","title":"func setModifiedDateTime<DateTimeT>(uri: UnsafePointer<CChar>!, modified: DateTimeT)","type":"method"},{"path":"\/documentation\/glib\/bookmarkfileprotocol\/settitle(uri:title:)","title":"func setTitle(uri: UnsafePointer<gchar>?, title: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/glib\/bookmarkfileprotocol\/setvisited(uri:visited:)","title":"func setVisited(uri: UnsafePointer<gchar>!, visited: time_t)","type":"method"},{"path":"\/documentation\/glib\/bookmarkfileprotocol\/setvisiteddatetime(uri:visited:)","title":"func setVisitedDateTime<DateTimeT>(uri: UnsafePointer<CChar>!, visited: DateTimeT)","type":"method"},{"path":"\/documentation\/glib\/bookmarkfileprotocol\/todata(length:)","title":"func toData(length: UnsafeMutablePointer<gsize>!) throws -> String!","type":"method"},{"path":"\/documentation\/glib\/bookmarkfileprotocol\/tofile(filename:)","title":"func toFile(filename: UnsafePointer<gchar>!) throws -> Bool","type":"method"}],"path":"\/documentation\/glib\/bookmarkfileprotocol","title":"BookmarkFileProtocol","type":"protocol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/glib\/bytearrayprotocol\/==(_:_:)","title":"static func == <BArray>(Self, BArray) -> Bool","type":"op"},{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/glib\/bytearrayprotocol\/byte_array_ptr-2z7ac","title":"var byte_array_ptr: UnsafeMutablePointer<GByteArray>!","type":"property"}],"title":"ByteArrayProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/glib\/bytearrayprotocol\/byte_array_ptr-7nnik","title":"var byte_array_ptr: UnsafeMutablePointer<GByteArray>!","type":"property"},{"path":"\/documentation\/glib\/bytearrayprotocol\/data","title":"var data: UnsafeMutablePointer<guint8>!","type":"property"},{"path":"\/documentation\/glib\/bytearrayprotocol\/endindex","title":"var endIndex: Int","type":"property"},{"path":"\/documentation\/glib\/bytearrayprotocol\/len","title":"var len: guint","type":"property"},{"path":"\/documentation\/glib\/bytearrayprotocol\/startindex","title":"var startIndex: Int","type":"property"},{"path":"\/documentation\/glib\/bytearrayprotocol\/stringvalue","title":"var stringValue: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/bytearrayprotocol\/append(data:len:)","title":"func append(data: UnsafePointer<guint8>!, len: Int) -> ByteArrayRef!","type":"method"},{"path":"\/documentation\/glib\/bytearrayprotocol\/bytearrayappend(data:len:)","title":"func byteArrayAppend(data: UnsafePointer<guint8>!, len: Int) -> ByteArrayRef!","type":"method"},{"path":"\/documentation\/glib\/bytearrayprotocol\/bytearrayfree(freesegment:)","title":"func byteArrayFree(freeSegment: Bool) -> UnsafeMutablePointer<guint8>!","type":"method"},{"path":"\/documentation\/glib\/bytearrayprotocol\/bytearrayfreetobytes()","title":"func byteArrayFreeToBytes() -> BytesRef!","type":"method"},{"path":"\/documentation\/glib\/bytearrayprotocol\/bytearrayprepend(data:len:)","title":"func byteArrayPrepend(data: UnsafePointer<guint8>!, len: Int) -> ByteArrayRef!","type":"method"},{"path":"\/documentation\/glib\/bytearrayprotocol\/bytearrayref()","title":"func byteArrayRef() -> ByteArrayRef!","type":"method"},{"path":"\/documentation\/glib\/bytearrayprotocol\/bytearrayremove(index:)","title":"func byteArrayRemove(index: Int) -> ByteArrayRef!","type":"method"},{"path":"\/documentation\/glib\/bytearrayprotocol\/bytearrayremoveindexfast(index:)","title":"func byteArrayRemoveIndexFast(index: Int) -> ByteArrayRef!","type":"method"},{"path":"\/documentation\/glib\/bytearrayprotocol\/bytearrayremoverange(index:length:)","title":"func byteArrayRemoveRange(index: Int, length: Int) -> ByteArrayRef!","type":"method"},{"path":"\/documentation\/glib\/bytearrayprotocol\/bytearraysetsize(length:)","title":"func byteArraySetSize(length: Int) -> ByteArrayRef!","type":"method"},{"path":"\/documentation\/glib\/bytearrayprotocol\/bytearraysort(comparefunc:)","title":"func byteArraySort(compareFunc: GCompareFunc?)","type":"method"},{"path":"\/documentation\/glib\/bytearrayprotocol\/bytearraysortwithdata(comparefunc:userdata:)","title":"func byteArraySortWithData(compareFunc: GCompareDataFunc?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/bytearrayprotocol\/bytearraysteal(len:)","title":"func byteArraySteal(len: UnsafeMutablePointer<gsize>!) -> UnsafeMutablePointer<guint8>!","type":"method"},{"path":"\/documentation\/glib\/bytearrayprotocol\/bytearrayunref()","title":"func byteArrayUnref()","type":"method"},{"path":"\/documentation\/glib\/bytearrayprotocol\/free(freesegment:)","title":"func free(freeSegment: Bool) -> UnsafeMutablePointer<guint8>!","type":"method"},{"path":"\/documentation\/glib\/bytearrayprotocol\/freetobytes()","title":"func freeToBytes() -> BytesRef!","type":"method"},{"path":"\/documentation\/glib\/bytearrayprotocol\/index(after:)","title":"func index(after: Int) -> Int","type":"method"},{"path":"\/documentation\/glib\/bytearrayprotocol\/index(before:)","title":"func index(before: Int) -> Int","type":"method"},{"path":"\/documentation\/glib\/bytearrayprotocol\/prepend(data:len:)","title":"func prepend(data: UnsafePointer<guint8>!, len: Int) -> ByteArrayRef!","type":"method"},{"path":"\/documentation\/glib\/bytearrayprotocol\/ref()","title":"func ref() -> ByteArrayRef!","type":"method"},{"path":"\/documentation\/glib\/bytearrayprotocol\/remove(index:)","title":"func remove(index: Int) -> ByteArrayRef!","type":"method"},{"path":"\/documentation\/glib\/bytearrayprotocol\/removeindexfast(index:)","title":"func removeIndexFast(index: Int) -> ByteArrayRef!","type":"method"},{"path":"\/documentation\/glib\/bytearrayprotocol\/removerange(index:length:)","title":"func removeRange(index: Int, length: Int) -> ByteArrayRef!","type":"method"},{"path":"\/documentation\/glib\/bytearrayprotocol\/setsize(length:)","title":"func setSize(length: Int) -> ByteArrayRef!","type":"method"},{"path":"\/documentation\/glib\/bytearrayprotocol\/sort(comparefunc:)","title":"func sort(compareFunc: GCompareFunc?)","type":"method"},{"path":"\/documentation\/glib\/bytearrayprotocol\/sortwithdata(comparefunc:userdata:)","title":"func sortWithData(compareFunc: GCompareDataFunc?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/bytearrayprotocol\/steal(len:)","title":"func steal(len: UnsafeMutablePointer<gsize>!) -> UnsafeMutablePointer<guint8>!","type":"method"},{"path":"\/documentation\/glib\/bytearrayprotocol\/unref()","title":"func unref()","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/glib\/bytearrayprotocol\/subscript(_:)","title":"subscript(Int) -> UInt8","type":"subscript"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/glib\/bytearrayprotocol\/element","title":"ByteArrayProtocol.Element","type":"typealias"},{"path":"\/documentation\/glib\/bytearrayprotocol\/index","title":"ByteArrayProtocol.Index","type":"typealias"}],"path":"\/documentation\/glib\/bytearrayprotocol","title":"ByteArrayProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/glib\/bytesprotocol\/bytes_ptr-4mcck","title":"var bytes_ptr: UnsafeMutablePointer<GBytes>!","type":"property"}],"title":"BytesProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/glib\/bytesprotocol\/bytes_ptr-7x533","title":"var bytes_ptr: UnsafeMutablePointer<GBytes>!","type":"property"},{"path":"\/documentation\/glib\/bytesprotocol\/size","title":"var size: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/bytesprotocol\/compare(bytes2:)","title":"func compare<BytesT>(bytes2: BytesT) -> Int","type":"method"},{"path":"\/documentation\/glib\/bytesprotocol\/computechecksumforbytes(checksumtype:)","title":"func computeChecksumForBytes(checksumType: GChecksumType) -> String!","type":"method"},{"path":"\/documentation\/glib\/bytesprotocol\/computehmacforbytes(digesttype:data:)","title":"func computeHmacForBytes<BytesT>(digestType: GChecksumType, data: BytesT) -> String!","type":"method"},{"path":"\/documentation\/glib\/bytesprotocol\/equal(bytes2:)","title":"func equal<BytesT>(bytes2: BytesT) -> Bool","type":"method"},{"path":"\/documentation\/glib\/bytesprotocol\/getdata(size:)","title":"func getData(size: UnsafeMutablePointer<gsize>!) -> gconstpointer?","type":"method"},{"path":"\/documentation\/glib\/bytesprotocol\/getregion(elementsize:offset:nelements:)","title":"func getRegion(elementSize: Int, offset: Int, nElements: Int) -> gconstpointer?","type":"method"},{"path":"\/documentation\/glib\/bytesprotocol\/getsize()","title":"func getSize() -> Int","type":"method"},{"path":"\/documentation\/glib\/bytesprotocol\/hash()","title":"func hash() -> Int","type":"method"},{"path":"\/documentation\/glib\/bytesprotocol\/newfrombytes(offset:length:)","title":"func newFromBytes(offset: Int, length: Int) -> BytesRef!","type":"method"},{"path":"\/documentation\/glib\/bytesprotocol\/ref()","title":"func ref() -> BytesRef!","type":"method"},{"path":"\/documentation\/glib\/bytesprotocol\/unref()","title":"func unref()","type":"method"},{"path":"\/documentation\/glib\/bytesprotocol\/unreftoarray()","title":"func unrefToArray() -> ByteArrayRef!","type":"method"},{"path":"\/documentation\/glib\/bytesprotocol\/unreftodata(size:)","title":"func unrefToData(size: UnsafeMutablePointer<gsize>!) -> gpointer!","type":"method"}],"path":"\/documentation\/glib\/bytesprotocol","title":"BytesProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/cacheprotocol\/destroy()","title":"func destroy()","type":"method"},{"path":"\/documentation\/glib\/cacheprotocol\/insert(key:)","title":"func insert(key: gpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/cacheprotocol\/keyforeach(func:userdata:)","title":"func keyForeach(func: GHFunc?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/cacheprotocol\/remove(value:)","title":"func remove(value: gconstpointer?)","type":"method"},{"path":"\/documentation\/glib\/cacheprotocol\/valueforeach(func:userdata:)","title":"func valueForeach(func: GHFunc?, userData: gpointer?)","type":"method"}],"path":"\/documentation\/glib\/cacheprotocol","title":"CacheProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/glib\/checksumprotocol\/checksum_ptr-3172v","title":"var checksum_ptr: UnsafeMutablePointer<GChecksum>!","type":"property"}],"title":"ChecksumProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/glib\/checksumprotocol\/checksum_ptr-7irxf","title":"var checksum_ptr: UnsafeMutablePointer<GChecksum>!","type":"property"},{"path":"\/documentation\/glib\/checksumprotocol\/string","title":"var string: String!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/checksumprotocol\/copy()","title":"func copy() -> ChecksumRef!","type":"method"},{"path":"\/documentation\/glib\/checksumprotocol\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/glib\/checksumprotocol\/getdigest(buffer:digestlen:)","title":"func getDigest(buffer: UnsafeMutablePointer<guint8>!, digestLen: UnsafeMutablePointer<gsize>!)","type":"method"},{"path":"\/documentation\/glib\/checksumprotocol\/getstring()","title":"func getString() -> String!","type":"method"},{"path":"\/documentation\/glib\/checksumprotocol\/reset()","title":"func reset()","type":"method"},{"path":"\/documentation\/glib\/checksumprotocol\/update(data:length:)","title":"func update(data: UnsafePointer<guchar>!, length: gssize)","type":"method"}],"path":"\/documentation\/glib\/checksumprotocol","title":"ChecksumProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/completionprotocol\/cache","title":"var cache: ListRef!","type":"property"},{"path":"\/documentation\/glib\/completionprotocol\/func","title":"var `func`: GCompletionFunc!","type":"property"},{"path":"\/documentation\/glib\/completionprotocol\/items","title":"var items: ListRef!","type":"property"},{"path":"\/documentation\/glib\/completionprotocol\/prefix","title":"var prefix: UnsafeMutablePointer<gchar>!","type":"property"},{"path":"\/documentation\/glib\/completionprotocol\/strncmpfunc","title":"var strncmpFunc: GCompletionStrncmpFunc!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/completionprotocol\/add(items:)","title":"func add<ListT>(items: ListT)","type":"method"},{"path":"\/documentation\/glib\/completionprotocol\/clearitems()","title":"func clearItems()","type":"method"},{"path":"\/documentation\/glib\/completionprotocol\/complete(prefix:newprefix:)","title":"func complete(prefix: UnsafePointer<gchar>!, newPrefix: UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!) -> ReferenceListRef<gpointer>!","type":"method"},{"path":"\/documentation\/glib\/completionprotocol\/completeutf8(prefix:newprefix:)","title":"func completeUTF8(prefix: UnsafePointer<gchar>!, newPrefix: UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/completionprotocol\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/glib\/completionprotocol\/remove(items:)","title":"func remove<ListT>(items: ListT)","type":"method"},{"path":"\/documentation\/glib\/completionprotocol\/setcompare(strncmpfunc:)","title":"func setCompare(strncmpFunc: GCompletionStrncmpFunc?)","type":"method"}],"path":"\/documentation\/glib\/completionprotocol","title":"CompletionProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/condprotocol\/broadcast()","title":"func broadcast()","type":"method"},{"path":"\/documentation\/glib\/condprotocol\/clear()","title":"func clear()","type":"method"},{"path":"\/documentation\/glib\/condprotocol\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/glib\/condprotocol\/init_()","title":"func init_()","type":"method"},{"path":"\/documentation\/glib\/condprotocol\/signal()","title":"func signal()","type":"method"},{"path":"\/documentation\/glib\/condprotocol\/timedwait(mutex:abstime:)","title":"func timedWait<MutexT, TimeValT>(mutex: MutexT, absTime: TimeValT) -> Bool","type":"method"},{"path":"\/documentation\/glib\/condprotocol\/wait(mutex:)","title":"func wait<MutexT>(mutex: MutexT)","type":"method"},{"path":"\/documentation\/glib\/condprotocol\/waituntil(mutex:endtime:)","title":"func waitUntil<MutexT>(mutex: MutexT, endTime: gint64) -> Bool","type":"method"}],"path":"\/documentation\/glib\/condprotocol","title":"CondProtocol","type":"protocol"},{"path":"\/documentation\/glib\/dataprotocol","title":"DataProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/glib\/dateprotocol\/date_ptr-90ocx","title":"var date_ptr: UnsafeMutablePointer<GDate>!","type":"property"}],"title":"DateProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/glib\/dateprotocol\/date_ptr-9p0th","title":"var date_ptr: UnsafeMutablePointer<GDate>!","type":"property"},{"path":"\/documentation\/glib\/dateprotocol\/day","title":"var day: GDateDay","type":"property"},{"path":"\/documentation\/glib\/dateprotocol\/dayofyear","title":"var dayOfYear: Int","type":"property"},{"path":"\/documentation\/glib\/dateprotocol\/dmy","title":"var dmy: guint","type":"property"},{"path":"\/documentation\/glib\/dateprotocol\/isfirstofmonth","title":"var isFirstOfMonth: Bool","type":"property"},{"path":"\/documentation\/glib\/dateprotocol\/islastofmonth","title":"var isLastOfMonth: Bool","type":"property"},{"path":"\/documentation\/glib\/dateprotocol\/iso8601weekofyear","title":"var iso8601WeekOfYear: Int","type":"property"},{"path":"\/documentation\/glib\/dateprotocol\/julian","title":"var julian: guint32","type":"property"},{"path":"\/documentation\/glib\/dateprotocol\/juliandays","title":"var julianDays: guint","type":"property"},{"path":"\/documentation\/glib\/dateprotocol\/mondayweekofyear","title":"var mondayWeekOfYear: Int","type":"property"},{"path":"\/documentation\/glib\/dateprotocol\/month","title":"var month: GDateMonth","type":"property"},{"path":"\/documentation\/glib\/dateprotocol\/sundayweekofyear","title":"var sundayWeekOfYear: Int","type":"property"},{"path":"\/documentation\/glib\/dateprotocol\/weekday","title":"var weekday: GDateWeekday","type":"property"},{"path":"\/documentation\/glib\/dateprotocol\/year","title":"var year: GDateYear","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/dateprotocol\/adddays(ndays:)","title":"func addDays(nDays: Int)","type":"method"},{"path":"\/documentation\/glib\/dateprotocol\/addmonths(nmonths:)","title":"func addMonths(nMonths: Int)","type":"method"},{"path":"\/documentation\/glib\/dateprotocol\/addyears(nyears:)","title":"func addYears(nYears: Int)","type":"method"},{"path":"\/documentation\/glib\/dateprotocol\/clamp(mindate:maxdate:)","title":"func clamp<DateT>(minDate: DateT, maxDate: DateT)","type":"method"},{"path":"\/documentation\/glib\/dateprotocol\/clear(ndates:)","title":"func clear(nDates: Int)","type":"method"},{"path":"\/documentation\/glib\/dateprotocol\/compare(rhs:)","title":"func compare<DateT>(rhs: DateT) -> Int","type":"method"},{"path":"\/documentation\/glib\/dateprotocol\/copy()","title":"func copy() -> DateRef!","type":"method"},{"path":"\/documentation\/glib\/dateprotocol\/datestrftime(s:slen:format:)","title":"func dateStrftime(s: UnsafeMutablePointer<gchar>!, slen: Int, format: UnsafePointer<gchar>!) -> Int","type":"method"},{"path":"\/documentation\/glib\/dateprotocol\/daysbetween(date2:)","title":"func daysBetween<DateT>(date2: DateT) -> Int","type":"method"},{"path":"\/documentation\/glib\/dateprotocol\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/glib\/dateprotocol\/getday()","title":"func getDay() -> GDateDay","type":"method"},{"path":"\/documentation\/glib\/dateprotocol\/getdayofyear()","title":"func getDayOfYear() -> Int","type":"method"},{"path":"\/documentation\/glib\/dateprotocol\/getiso8601weekofyear()","title":"func getIso8601WeekOfYear() -> Int","type":"method"},{"path":"\/documentation\/glib\/dateprotocol\/getjulian()","title":"func getJulian() -> guint32","type":"method"},{"path":"\/documentation\/glib\/dateprotocol\/getmondayweekofyear()","title":"func getMondayWeekOfYear() -> Int","type":"method"},{"path":"\/documentation\/glib\/dateprotocol\/getmonth()","title":"func getMonth() -> GDateMonth","type":"method"},{"path":"\/documentation\/glib\/dateprotocol\/getsundayweekofyear()","title":"func getSundayWeekOfYear() -> Int","type":"method"},{"path":"\/documentation\/glib\/dateprotocol\/getweekday()","title":"func getWeekday() -> GDateWeekday","type":"method"},{"path":"\/documentation\/glib\/dateprotocol\/getyear()","title":"func getYear() -> GDateYear","type":"method"},{"path":"\/documentation\/glib\/dateprotocol\/order(date2:)","title":"func order<DateT>(date2: DateT)","type":"method"},{"path":"\/documentation\/glib\/dateprotocol\/set(day:)","title":"func set(day: GDateDay)","type":"method"},{"path":"\/documentation\/glib\/dateprotocol\/set(month:)","title":"func set(month: GDateMonth)","type":"method"},{"path":"\/documentation\/glib\/dateprotocol\/set(time:)","title":"func set(time: GTime)","type":"method"},{"path":"\/documentation\/glib\/dateprotocol\/set(year:)","title":"func set(year: GDateYear)","type":"method"},{"path":"\/documentation\/glib\/dateprotocol\/setdmy(day:month:y:)","title":"func setDmy(day: GDateDay, month: GDateMonth, y: GDateYear)","type":"method"},{"path":"\/documentation\/glib\/dateprotocol\/setjulian(juliandate:)","title":"func setJulian(julianDate: guint32)","type":"method"},{"path":"\/documentation\/glib\/dateprotocol\/setparse(str:)","title":"func setParse(str: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/glib\/dateprotocol\/settimet(timet:)","title":"func setTimeT(timet: time_t)","type":"method"},{"path":"\/documentation\/glib\/dateprotocol\/settimeval(timeval:)","title":"func setTimeVal<TimeValT>(timeval: TimeValT)","type":"method"},{"path":"\/documentation\/glib\/dateprotocol\/strftime(s:slen:format:)","title":"func strftime(s: UnsafeMutablePointer<gchar>!, slen: Int, format: UnsafePointer<gchar>!) -> Int","type":"method"},{"path":"\/documentation\/glib\/dateprotocol\/subtractdays(ndays:)","title":"func subtractDays(nDays: Int)","type":"method"},{"path":"\/documentation\/glib\/dateprotocol\/subtractmonths(nmonths:)","title":"func subtractMonths(nMonths: Int)","type":"method"},{"path":"\/documentation\/glib\/dateprotocol\/subtractyears(nyears:)","title":"func subtractYears(nYears: Int)","type":"method"},{"path":"\/documentation\/glib\/dateprotocol\/tostruct(tm:)","title":"func toStruct(tm: UnsafeMutablePointer<tm>!)","type":"method"},{"path":"\/documentation\/glib\/dateprotocol\/valid()","title":"func valid() -> Bool","type":"method"}],"path":"\/documentation\/glib\/dateprotocol","title":"DateProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/glib\/datetimeprotocol\/date_time_ptr-3g4ms","title":"var date_time_ptr: UnsafeMutablePointer<GDateTime>!","type":"property"}],"title":"DateTimeProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/glib\/datetimeprotocol\/date_time_ptr-25w2v","title":"var date_time_ptr: UnsafeMutablePointer<GDateTime>!","type":"property"},{"path":"\/documentation\/glib\/datetimeprotocol\/dayofmonth","title":"var dayOfMonth: Int","type":"property"},{"path":"\/documentation\/glib\/datetimeprotocol\/dayofweek","title":"var dayOfWeek: Int","type":"property"},{"path":"\/documentation\/glib\/datetimeprotocol\/dayofyear","title":"var dayOfYear: Int","type":"property"},{"path":"\/documentation\/glib\/datetimeprotocol\/hour","title":"var hour: Int","type":"property"},{"path":"\/documentation\/glib\/datetimeprotocol\/isdaylightsavings","title":"var isDaylightSavings: Bool","type":"property"},{"path":"\/documentation\/glib\/datetimeprotocol\/microsecond","title":"var microsecond: Int","type":"property"},{"path":"\/documentation\/glib\/datetimeprotocol\/minute","title":"var minute: Int","type":"property"},{"path":"\/documentation\/glib\/datetimeprotocol\/month","title":"var month: Int","type":"property"},{"path":"\/documentation\/glib\/datetimeprotocol\/second","title":"var second: Int","type":"property"},{"path":"\/documentation\/glib\/datetimeprotocol\/seconds","title":"var seconds: Double","type":"property"},{"path":"\/documentation\/glib\/datetimeprotocol\/timezone","title":"var timezone: TimeZoneRef!","type":"property"},{"path":"\/documentation\/glib\/datetimeprotocol\/timezoneabbreviation","title":"var timezoneAbbreviation: String!","type":"property"},{"path":"\/documentation\/glib\/datetimeprotocol\/utcoffset","title":"var utcOffset: GTimeSpan","type":"property"},{"path":"\/documentation\/glib\/datetimeprotocol\/weeknumberingyear","title":"var weekNumberingYear: Int","type":"property"},{"path":"\/documentation\/glib\/datetimeprotocol\/weekofyear","title":"var weekOfYear: Int","type":"property"},{"path":"\/documentation\/glib\/datetimeprotocol\/year","title":"var year: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/datetimeprotocol\/add(days:)","title":"func add(days: Int) -> DateTimeRef!","type":"method"},{"path":"\/documentation\/glib\/datetimeprotocol\/add(hours:)","title":"func add(hours: Int) -> DateTimeRef!","type":"method"},{"path":"\/documentation\/glib\/datetimeprotocol\/add(minutes:)","title":"func add(minutes: Int) -> DateTimeRef!","type":"method"},{"path":"\/documentation\/glib\/datetimeprotocol\/add(months:)","title":"func add(months: Int) -> DateTimeRef!","type":"method"},{"path":"\/documentation\/glib\/datetimeprotocol\/add(seconds:)","title":"func add(seconds: Double) -> DateTimeRef!","type":"method"},{"path":"\/documentation\/glib\/datetimeprotocol\/add(timespan:)","title":"func add(timespan: GTimeSpan) -> DateTimeRef!","type":"method"},{"path":"\/documentation\/glib\/datetimeprotocol\/add(weeks:)","title":"func add(weeks: Int) -> DateTimeRef!","type":"method"},{"path":"\/documentation\/glib\/datetimeprotocol\/add(years:)","title":"func add(years: Int) -> DateTimeRef!","type":"method"},{"path":"\/documentation\/glib\/datetimeprotocol\/addfull(years:months:days:hours:minutes:seconds:)","title":"func addFull(years: Int, months: Int, days: Int, hours: Int, minutes: Int, seconds: Double) -> DateTimeRef!","type":"method"},{"path":"\/documentation\/glib\/datetimeprotocol\/compare(dt2:)","title":"func compare<DateTimeT>(dt2: DateTimeT) -> Int","type":"method"},{"path":"\/documentation\/glib\/datetimeprotocol\/difference(begin:)","title":"func difference<DateTimeT>(begin: DateTimeT) -> GTimeSpan","type":"method"},{"path":"\/documentation\/glib\/datetimeprotocol\/equal(dt2:)","title":"func equal<DateTimeT>(dt2: DateTimeT) -> Bool","type":"method"},{"path":"\/documentation\/glib\/datetimeprotocol\/format(format:)","title":"func format(format: UnsafePointer<gchar>!) -> String!","type":"method"},{"path":"\/documentation\/glib\/datetimeprotocol\/formatiso8601()","title":"func formatIso8601() -> String!","type":"method"},{"path":"\/documentation\/glib\/datetimeprotocol\/getdayofmonth()","title":"func getDayOfMonth() -> Int","type":"method"},{"path":"\/documentation\/glib\/datetimeprotocol\/getdayofweek()","title":"func getDayOfWeek() -> Int","type":"method"},{"path":"\/documentation\/glib\/datetimeprotocol\/getdayofyear()","title":"func getDayOfYear() -> Int","type":"method"},{"path":"\/documentation\/glib\/datetimeprotocol\/gethour()","title":"func getHour() -> Int","type":"method"},{"path":"\/documentation\/glib\/datetimeprotocol\/getmicrosecond()","title":"func getMicrosecond() -> Int","type":"method"},{"path":"\/documentation\/glib\/datetimeprotocol\/getminute()","title":"func getMinute() -> Int","type":"method"},{"path":"\/documentation\/glib\/datetimeprotocol\/getmonth()","title":"func getMonth() -> Int","type":"method"},{"path":"\/documentation\/glib\/datetimeprotocol\/getsecond()","title":"func getSecond() -> Int","type":"method"},{"path":"\/documentation\/glib\/datetimeprotocol\/getseconds()","title":"func getSeconds() -> Double","type":"method"},{"path":"\/documentation\/glib\/datetimeprotocol\/gettimezone()","title":"func getTimezone() -> TimeZoneRef!","type":"method"},{"path":"\/documentation\/glib\/datetimeprotocol\/gettimezoneabbreviation()","title":"func getTimezoneAbbreviation() -> String!","type":"method"},{"path":"\/documentation\/glib\/datetimeprotocol\/getutcoffset()","title":"func getUTCOffset() -> GTimeSpan","type":"method"},{"path":"\/documentation\/glib\/datetimeprotocol\/getweeknumberingyear()","title":"func getWeekNumberingYear() -> Int","type":"method"},{"path":"\/documentation\/glib\/datetimeprotocol\/getweekofyear()","title":"func getWeekOfYear() -> Int","type":"method"},{"path":"\/documentation\/glib\/datetimeprotocol\/getyear()","title":"func getYear() -> Int","type":"method"},{"path":"\/documentation\/glib\/datetimeprotocol\/getymd(year:month:day:)","title":"func getYmd(year: UnsafeMutablePointer<gint>!, month: UnsafeMutablePointer<gint>!, day: UnsafeMutablePointer<gint>!)","type":"method"},{"path":"\/documentation\/glib\/datetimeprotocol\/hash()","title":"func hash() -> Int","type":"method"},{"path":"\/documentation\/glib\/datetimeprotocol\/ref()","title":"func ref() -> DateTimeRef!","type":"method"},{"path":"\/documentation\/glib\/datetimeprotocol\/tolocal()","title":"func toLocal() -> DateTimeRef!","type":"method"},{"path":"\/documentation\/glib\/datetimeprotocol\/totimeval(tv:)","title":"func toTimeval<TimeValT>(tv: TimeValT) -> Bool","type":"method"},{"path":"\/documentation\/glib\/datetimeprotocol\/totimezone(tz:)","title":"func toTimezone<TimeZoneT>(tz: TimeZoneT) -> DateTimeRef!","type":"method"},{"path":"\/documentation\/glib\/datetimeprotocol\/toutc()","title":"func toUTC() -> DateTimeRef!","type":"method"},{"path":"\/documentation\/glib\/datetimeprotocol\/tounix()","title":"func toUnix() -> gint64","type":"method"},{"path":"\/documentation\/glib\/datetimeprotocol\/tounixusec()","title":"func toUnixUsec() -> gint64","type":"method"},{"path":"\/documentation\/glib\/datetimeprotocol\/unref()","title":"func unref()","type":"method"}],"path":"\/documentation\/glib\/datetimeprotocol","title":"DateTimeProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/debugkeyprotocol\/key","title":"var key: UnsafePointer<gchar>!","type":"property"},{"path":"\/documentation\/glib\/debugkeyprotocol\/value","title":"var value: guint","type":"property"}],"path":"\/documentation\/glib\/debugkeyprotocol","title":"DebugKeyProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/glib\/dirprotocol\/dir_ptr-5su2o","title":"var dir_ptr: UnsafeMutablePointer<GDir>!","type":"property"}],"title":"DirProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/glib\/dirprotocol\/dir_ptr-8qdgy","title":"var dir_ptr: UnsafeMutablePointer<GDir>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/dirprotocol\/close()","title":"func close()","type":"method"},{"path":"\/documentation\/glib\/dirprotocol\/readname()","title":"func readName() -> String!","type":"method"},{"path":"\/documentation\/glib\/dirprotocol\/ref()","title":"func ref() -> DirRef!","type":"method"},{"path":"\/documentation\/glib\/dirprotocol\/rewind()","title":"func rewind()","type":"method"},{"path":"\/documentation\/glib\/dirprotocol\/unref()","title":"func unref()","type":"method"}],"path":"\/documentation\/glib\/dirprotocol","title":"DirProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/doubleieee754protocol\/mpn-swift.property","title":"var mpn: Self.Mpn","type":"property"},{"path":"\/documentation\/glib\/doubleieee754protocol\/vdouble","title":"var vDouble: gdouble","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/glib\/doubleieee754protocol\/mpn-swift.typealias","title":"DoubleIEEE754Protocol.Mpn","type":"typealias"}],"path":"\/documentation\/glib\/doubleieee754protocol","title":"DoubleIEEE754Protocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/errorprotocol\/code","title":"var code: gint","type":"property"},{"path":"\/documentation\/glib\/errorprotocol\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/glib\/errorprotocol\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/glib\/errorprotocol\/domain","title":"var domain: GQuark","type":"property"},{"children":[{"children":[{"path":"\/documentation\/glib\/errorprotocol\/error_ptr-6co9e","title":"var error_ptr: UnsafeMutablePointer<GError>!","type":"property"}],"title":"ErrorProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/glib\/errorprotocol\/error_ptr-4l7gj","title":"var error_ptr: UnsafeMutablePointer<GError>!","type":"property"},{"path":"\/documentation\/glib\/errorprotocol\/message","title":"var message: UnsafeMutablePointer<gchar>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/errorprotocol\/assertionmessageerror(domain:file:line:func:expr:errordomain:errorcode:)","title":"func assertionMessageError(domain: UnsafePointer<CChar>!, file: UnsafePointer<CChar>!, line: Int, func: UnsafePointer<CChar>!, expr: UnsafePointer<CChar>!, errorDomain: GQuark, errorCode: Int)","type":"method"},{"path":"\/documentation\/glib\/errorprotocol\/copy()","title":"func copy() -> ErrorRef!","type":"method"},{"path":"\/documentation\/glib\/errorprotocol\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/glib\/errorprotocol\/matches(domain:code:)","title":"func matches(domain: GQuark, code: Int) -> Bool","type":"method"},{"path":"\/documentation\/glib\/errorprotocol\/propagateerror(dest:)","title":"func propagateError(dest: UnsafeMutablePointer<UnsafeMutablePointer<GError>?>?)","type":"method"},{"path":"\/documentation\/glib\/errorprotocol\/variantparseerrorprintcontext(sourcestr:)","title":"func variantParseErrorPrintContext(sourceStr: UnsafePointer<gchar>!) -> String!","type":"method"}],"path":"\/documentation\/glib\/errorprotocol","title":"ErrorProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/floatieee754protocol\/mpn-swift.property","title":"var mpn: Self.Mpn","type":"property"},{"path":"\/documentation\/glib\/floatieee754protocol\/vfloat","title":"var vFloat: gfloat","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/glib\/floatieee754protocol\/mpn-swift.typealias","title":"FloatIEEE754Protocol.Mpn","type":"typealias"}],"path":"\/documentation\/glib\/floatieee754protocol","title":"FloatIEEE754Protocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/hashtableiterprotocol\/hashtable","title":"var hashTable: HashTableRef!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/hashtableiterprotocol\/gethashtable()","title":"func getHashTable() -> HashTableRef!","type":"method"},{"path":"\/documentation\/glib\/hashtableiterprotocol\/init_(hashtable:)","title":"func init_<HashTableT>(hashTable: HashTableT)","type":"method"},{"path":"\/documentation\/glib\/hashtableiterprotocol\/next(key:value:)","title":"func next(key: UnsafeMutablePointer<gpointer?>?, value: UnsafeMutablePointer<gpointer?>?) -> Bool","type":"method"},{"path":"\/documentation\/glib\/hashtableiterprotocol\/remove()","title":"func remove()","type":"method"},{"path":"\/documentation\/glib\/hashtableiterprotocol\/replace(value:)","title":"func replace(value: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/hashtableiterprotocol\/steal()","title":"func steal()","type":"method"}],"path":"\/documentation\/glib\/hashtableiterprotocol","title":"HashTableIterProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/glib\/hashtableprotocol\/hash_table_ptr-5mktk","title":"var hash_table_ptr: UnsafeMutablePointer<GHashTable>!","type":"property"}],"title":"HashTableProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/glib\/hashtableprotocol\/hash_table_ptr-6fqeo","title":"var hash_table_ptr: UnsafeMutablePointer<GHashTable>!","type":"property"},{"path":"\/documentation\/glib\/hashtableprotocol\/keys","title":"var keys: ReferenceListRef<gpointer>!","type":"property"},{"path":"\/documentation\/glib\/hashtableprotocol\/keysasptrarray","title":"var keysAsPtrArray: ReferenceArrayRef<gpointer>!","type":"property"},{"path":"\/documentation\/glib\/hashtableprotocol\/values","title":"var values: ReferenceListRef<gpointer>!","type":"property"},{"path":"\/documentation\/glib\/hashtableprotocol\/valuesasptrarray","title":"var valuesAsPtrArray: ReferenceArrayRef<gpointer>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/hashtableprotocol\/add(key:)","title":"func add(key: gpointer?) -> Bool","type":"method"},{"path":"\/documentation\/glib\/hashtableprotocol\/contains(key:)","title":"func contains(key: gconstpointer?) -> Bool","type":"method"},{"path":"\/documentation\/glib\/hashtableprotocol\/destroy()","title":"func destroy()","type":"method"},{"path":"\/documentation\/glib\/hashtableprotocol\/find(predicate:userdata:)","title":"func find(predicate: GHRFunc?, userData: gpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/hashtableprotocol\/foreach(func:userdata:)","title":"func foreach(func: GHFunc?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/hashtableprotocol\/foreachremove(func:userdata:)","title":"func foreachRemove(func: GHRFunc?, userData: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/glib\/hashtableprotocol\/foreachsteal(func:userdata:)","title":"func foreachSteal(func: GHRFunc?, userData: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/glib\/hashtableprotocol\/getkeys()","title":"func getKeys() -> ReferenceListRef<gpointer>!","type":"method"},{"path":"\/documentation\/glib\/hashtableprotocol\/getkeysasarray(length:)","title":"func getKeysAsArray(length: UnsafeMutablePointer<guint>!) -> UnsafeMutablePointer<gpointer?>!","type":"method"},{"path":"\/documentation\/glib\/hashtableprotocol\/getkeysasptrarray()","title":"func getKeysAsPtrArray() -> ReferenceArrayRef<gpointer>!","type":"method"},{"path":"\/documentation\/glib\/hashtableprotocol\/getvalues()","title":"func getValues() -> ReferenceListRef<gpointer>!","type":"method"},{"path":"\/documentation\/glib\/hashtableprotocol\/getvaluesasptrarray()","title":"func getValuesAsPtrArray() -> ReferenceArrayRef<gpointer>!","type":"method"},{"path":"\/documentation\/glib\/hashtableprotocol\/hashtableadd(key:)","title":"func hashTableAdd(key: gpointer?) -> Bool","type":"method"},{"path":"\/documentation\/glib\/hashtableprotocol\/hashtablecontains(key:)","title":"func hashTableContains(key: gconstpointer?) -> Bool","type":"method"},{"path":"\/documentation\/glib\/hashtableprotocol\/hashtabledestroy()","title":"func hashTableDestroy()","type":"method"},{"path":"\/documentation\/glib\/hashtableprotocol\/hashtablefind(predicate:userdata:)","title":"func hashTableFind(predicate: GHRFunc?, userData: gpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/hashtableprotocol\/hashtableforeach(func:userdata:)","title":"func hashTableForeach(func: GHFunc?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/hashtableprotocol\/hashtableforeachremove(func:userdata:)","title":"func hashTableForeachRemove(func: GHRFunc?, userData: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/glib\/hashtableprotocol\/hashtableforeachsteal(func:userdata:)","title":"func hashTableForeachSteal(func: GHRFunc?, userData: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/glib\/hashtableprotocol\/hashtablegetkeysasptrarray()","title":"func hashTableGetKeysAsPtrArray() -> ReferenceArrayRef<gpointer>!","type":"method"},{"path":"\/documentation\/glib\/hashtableprotocol\/hashtablegetvaluesasptrarray()","title":"func hashTableGetValuesAsPtrArray() -> ReferenceArrayRef<gpointer>!","type":"method"},{"path":"\/documentation\/glib\/hashtableprotocol\/hashtableinsert(key:value:)","title":"func hashTableInsert(key: gpointer?, value: gpointer?) -> Bool","type":"method"},{"path":"\/documentation\/glib\/hashtableprotocol\/hashtablelookup(key:)","title":"func hashTableLookup(key: gconstpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/hashtableprotocol\/hashtablelookupextended(lookupkey:origkey:value:)","title":"func hashTableLookupExtended(lookupKey: gconstpointer?, origKey: UnsafeMutablePointer<gpointer?>?, value: UnsafeMutablePointer<gpointer?>?) -> Bool","type":"method"},{"path":"\/documentation\/glib\/hashtableprotocol\/hashtablenewsimilar()","title":"func hashTableNewSimilar() -> HashTableRef!","type":"method"},{"path":"\/documentation\/glib\/hashtableprotocol\/hashtableref()","title":"func hashTableRef() -> HashTableRef!","type":"method"},{"path":"\/documentation\/glib\/hashtableprotocol\/hashtableremove(key:)","title":"func hashTableRemove(key: gconstpointer?) -> Bool","type":"method"},{"path":"\/documentation\/glib\/hashtableprotocol\/hashtableremoveall()","title":"func hashTableRemoveAll()","type":"method"},{"path":"\/documentation\/glib\/hashtableprotocol\/hashtablereplace(key:value:)","title":"func hashTableReplace(key: gpointer?, value: gpointer?) -> Bool","type":"method"},{"path":"\/documentation\/glib\/hashtableprotocol\/hashtablesize()","title":"func hashTableSize() -> Int","type":"method"},{"path":"\/documentation\/glib\/hashtableprotocol\/hashtablesteal(key:)","title":"func hashTableSteal(key: gconstpointer?) -> Bool","type":"method"},{"path":"\/documentation\/glib\/hashtableprotocol\/hashtablestealall()","title":"func hashTableStealAll()","type":"method"},{"path":"\/documentation\/glib\/hashtableprotocol\/hashtablestealallkeys()","title":"func hashTableStealAllKeys() -> ReferenceArrayRef<gpointer>!","type":"method"},{"path":"\/documentation\/glib\/hashtableprotocol\/hashtablestealallvalues()","title":"func hashTableStealAllValues() -> ReferenceArrayRef<gpointer>!","type":"method"},{"path":"\/documentation\/glib\/hashtableprotocol\/hashtablestealextended(lookupkey:stolenkey:stolenvalue:)","title":"func hashTableStealExtended(lookupKey: gconstpointer?, stolenKey: UnsafeMutablePointer<gpointer?>?, stolenValue: UnsafeMutablePointer<gpointer?>?) -> Bool","type":"method"},{"path":"\/documentation\/glib\/hashtableprotocol\/hashtableunref()","title":"func hashTableUnref()","type":"method"},{"path":"\/documentation\/glib\/hashtableprotocol\/insert(key:value:)","title":"func insert(key: gpointer?, value: gpointer?) -> Bool","type":"method"},{"path":"\/documentation\/glib\/hashtableprotocol\/lookup(key:)","title":"func lookup(key: gconstpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/hashtableprotocol\/lookupextended(lookupkey:origkey:value:)","title":"func lookupExtended(lookupKey: gconstpointer?, origKey: UnsafeMutablePointer<gpointer?>?, value: UnsafeMutablePointer<gpointer?>?) -> Bool","type":"method"},{"path":"\/documentation\/glib\/hashtableprotocol\/newsimilar()","title":"func newSimilar() -> HashTableRef!","type":"method"},{"path":"\/documentation\/glib\/hashtableprotocol\/ref()","title":"func ref() -> HashTableRef!","type":"method"},{"path":"\/documentation\/glib\/hashtableprotocol\/remove(key:)","title":"func remove(key: gconstpointer?) -> Bool","type":"method"},{"path":"\/documentation\/glib\/hashtableprotocol\/removeall()","title":"func removeAll()","type":"method"},{"path":"\/documentation\/glib\/hashtableprotocol\/replace(key:value:)","title":"func replace(key: gpointer?, value: gpointer?) -> Bool","type":"method"},{"path":"\/documentation\/glib\/hashtableprotocol\/size()","title":"func size() -> Int","type":"method"},{"path":"\/documentation\/glib\/hashtableprotocol\/steal(key:)","title":"func steal(key: gconstpointer?) -> Bool","type":"method"},{"path":"\/documentation\/glib\/hashtableprotocol\/stealall()","title":"func stealAll()","type":"method"},{"path":"\/documentation\/glib\/hashtableprotocol\/stealallkeys()","title":"func stealAllKeys() -> ReferenceArrayRef<gpointer>!","type":"method"},{"path":"\/documentation\/glib\/hashtableprotocol\/stealallvalues()","title":"func stealAllValues() -> ReferenceArrayRef<gpointer>!","type":"method"},{"path":"\/documentation\/glib\/hashtableprotocol\/stealextended(lookupkey:stolenkey:stolenvalue:)","title":"func stealExtended(lookupKey: gconstpointer?, stolenKey: UnsafeMutablePointer<gpointer?>?, stolenValue: UnsafeMutablePointer<gpointer?>?) -> Bool","type":"method"},{"path":"\/documentation\/glib\/hashtableprotocol\/unref()","title":"func unref()","type":"method"}],"path":"\/documentation\/glib\/hashtableprotocol","title":"HashTableProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/glib\/hmacprotocol\/hmac_ptr-2d3so","title":"var hmac_ptr: UnsafeMutablePointer<GHmac>!","type":"property"}],"title":"HmacProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/glib\/hmacprotocol\/hmac_ptr-1loq4","title":"var hmac_ptr: UnsafeMutablePointer<GHmac>!","type":"property"},{"path":"\/documentation\/glib\/hmacprotocol\/string","title":"var string: String!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/hmacprotocol\/copy()","title":"func copy() -> HmacRef!","type":"method"},{"path":"\/documentation\/glib\/hmacprotocol\/getdigest(buffer:digestlen:)","title":"func getDigest(buffer: UnsafeMutablePointer<guint8>!, digestLen: UnsafeMutablePointer<gsize>!)","type":"method"},{"path":"\/documentation\/glib\/hmacprotocol\/getstring()","title":"func getString() -> String!","type":"method"},{"path":"\/documentation\/glib\/hmacprotocol\/ref()","title":"func ref() -> HmacRef!","type":"method"},{"path":"\/documentation\/glib\/hmacprotocol\/unref()","title":"func unref()","type":"method"},{"path":"\/documentation\/glib\/hmacprotocol\/update(data:length:)","title":"func update(data: UnsafePointer<guchar>!, length: gssize)","type":"method"}],"path":"\/documentation\/glib\/hmacprotocol","title":"HmacProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/hooklistprotocol\/dummy","title":"var dummy: (gpointer?, gpointer?)","type":"property"},{"path":"\/documentation\/glib\/hooklistprotocol\/dummy3","title":"var dummy3: gpointer?","type":"property"},{"path":"\/documentation\/glib\/hooklistprotocol\/finalizehook","title":"var finalizeHook: GHookFinalizeFunc!","type":"property"},{"path":"\/documentation\/glib\/hooklistprotocol\/hooksize","title":"var hookSize: guint","type":"property"},{"path":"\/documentation\/glib\/hooklistprotocol\/hooks","title":"var hooks: HookRef!","type":"property"},{"path":"\/documentation\/glib\/hooklistprotocol\/issetup","title":"var isSetup: guint","type":"property"},{"path":"\/documentation\/glib\/hooklistprotocol\/seqid","title":"var seqID: gulong","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/hooklistprotocol\/clear()","title":"func clear()","type":"method"},{"path":"\/documentation\/glib\/hooklistprotocol\/hookdestroy(hookid:)","title":"func hookDestroy(hookID: Int) -> Bool","type":"method"},{"path":"\/documentation\/glib\/hooklistprotocol\/hookdestroylink(hook:)","title":"func hookDestroyLink<HookT>(hook: HookT)","type":"method"},{"path":"\/documentation\/glib\/hooklistprotocol\/hookfree(hook:)","title":"func hookFree<HookT>(hook: HookT)","type":"method"},{"path":"\/documentation\/glib\/hooklistprotocol\/hookinsertbefore(sibling:hook:)","title":"func hookInsertBefore<HookT>(sibling: HookT?, hook: HookT)","type":"method"},{"path":"\/documentation\/glib\/hooklistprotocol\/hookinsertsorted(hook:func:)","title":"func hookInsertSorted<HookT>(hook: HookT, func: GHookCompareFunc?)","type":"method"},{"path":"\/documentation\/glib\/hooklistprotocol\/hookprepend(hook:)","title":"func hookPrepend<HookT>(hook: HookT)","type":"method"},{"path":"\/documentation\/glib\/hooklistprotocol\/hookunref(hook:)","title":"func hookUnref<HookT>(hook: HookT)","type":"method"},{"path":"\/documentation\/glib\/hooklistprotocol\/init_(hooksize:)","title":"func init_(hookSize: Int)","type":"method"},{"path":"\/documentation\/glib\/hooklistprotocol\/invoke(mayrecurse:)","title":"func invoke(mayRecurse: Bool)","type":"method"},{"path":"\/documentation\/glib\/hooklistprotocol\/invokecheck(mayrecurse:)","title":"func invokeCheck(mayRecurse: Bool)","type":"method"},{"path":"\/documentation\/glib\/hooklistprotocol\/marshal(mayrecurse:marshaller:marshaldata:)","title":"func marshal(mayRecurse: Bool, marshaller: GHookMarshaller?, marshalData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/hooklistprotocol\/marshalcheck(mayrecurse:marshaller:marshaldata:)","title":"func marshalCheck(mayRecurse: Bool, marshaller: GHookCheckMarshaller?, marshalData: gpointer?)","type":"method"}],"path":"\/documentation\/glib\/hooklistprotocol","title":"HookListProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/hookprotocol\/data","title":"var data: gpointer?","type":"property"},{"path":"\/documentation\/glib\/hookprotocol\/destroy","title":"var destroy: GDestroyNotify!","type":"property"},{"path":"\/documentation\/glib\/hookprotocol\/flags","title":"var flags: guint","type":"property"},{"path":"\/documentation\/glib\/hookprotocol\/func","title":"var `func`: gpointer?","type":"property"},{"path":"\/documentation\/glib\/hookprotocol\/hookid","title":"var hookID: gulong","type":"property"},{"path":"\/documentation\/glib\/hookprotocol\/next","title":"var next: HookRef!","type":"property"},{"path":"\/documentation\/glib\/hookprotocol\/prev","title":"var prev: HookRef!","type":"property"},{"path":"\/documentation\/glib\/hookprotocol\/refcount","title":"var refCount: guint","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/hookprotocol\/compareids(sibling:)","title":"func compareIDs<HookT>(sibling: HookT) -> Int","type":"method"},{"path":"\/documentation\/glib\/hookprotocol\/destroylink(hooklist:)","title":"func destroyLink<HookListT>(hookList: HookListT)","type":"method"},{"path":"\/documentation\/glib\/hookprotocol\/free(hooklist:)","title":"func free<HookListT>(hookList: HookListT)","type":"method"},{"path":"\/documentation\/glib\/hookprotocol\/hookdestroylink(hooklist:)","title":"func hookDestroyLink<HookListT>(hookList: HookListT)","type":"method"},{"path":"\/documentation\/glib\/hookprotocol\/hookfree(hooklist:)","title":"func hookFree<HookListT>(hookList: HookListT)","type":"method"},{"path":"\/documentation\/glib\/hookprotocol\/hookinsertbefore(hooklist:hook:)","title":"func hookInsertBefore<HookListT, HookT>(hookList: HookListT, hook: HookT)","type":"method"},{"path":"\/documentation\/glib\/hookprotocol\/hookinsertsorted(hooklist:func:)","title":"func hookInsertSorted<HookListT>(hookList: HookListT, func: GHookCompareFunc?)","type":"method"},{"path":"\/documentation\/glib\/hookprotocol\/hookprepend(hooklist:)","title":"func hookPrepend<HookListT>(hookList: HookListT)","type":"method"},{"path":"\/documentation\/glib\/hookprotocol\/hookunref(hooklist:)","title":"func hookUnref<HookListT>(hookList: HookListT)","type":"method"},{"path":"\/documentation\/glib\/hookprotocol\/insertbefore(hooklist:hook:)","title":"func insertBefore<HookListT, HookT>(hookList: HookListT, hook: HookT)","type":"method"},{"path":"\/documentation\/glib\/hookprotocol\/insertsorted(hooklist:func:)","title":"func insertSorted<HookListT>(hookList: HookListT, func: GHookCompareFunc?)","type":"method"},{"path":"\/documentation\/glib\/hookprotocol\/nextvalid(hooklist:maybeincall:)","title":"func nextValid<HookListT>(hookList: HookListT, mayBeInCall: Bool) -> HookRef!","type":"method"},{"path":"\/documentation\/glib\/hookprotocol\/prepend(hooklist:)","title":"func prepend<HookListT>(hookList: HookListT)","type":"method"},{"path":"\/documentation\/glib\/hookprotocol\/ref(hooklist:)","title":"func ref<HookListT>(hookList: HookListT) -> HookRef!","type":"method"},{"path":"\/documentation\/glib\/hookprotocol\/unref(hooklist:)","title":"func unref<HookListT>(hookList: HookListT)","type":"method"}],"path":"\/documentation\/glib\/hookprotocol","title":"HookProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/iconvprotocol\/close()","title":"func close() -> Int","type":"method"}],"path":"\/documentation\/glib\/iconvprotocol","title":"IConvProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/iochannelprotocol\/buffercondition","title":"var bufferCondition: IOCondition","type":"property"},{"path":"\/documentation\/glib\/iochannelprotocol\/buffersize","title":"var bufferSize: Int","type":"property"},{"path":"\/documentation\/glib\/iochannelprotocol\/buffered","title":"var buffered: Bool","type":"property"},{"path":"\/documentation\/glib\/iochannelprotocol\/closeonunref","title":"var closeOnUnref: Bool","type":"property"},{"path":"\/documentation\/glib\/iochannelprotocol\/encoding","title":"var encoding: String!","type":"property"},{"path":"\/documentation\/glib\/iochannelprotocol\/flags","title":"var flags: IOFlags","type":"property"},{"children":[{"children":[{"path":"\/documentation\/glib\/iochannelprotocol\/io_channel_ptr-649xx","title":"var io_channel_ptr: UnsafeMutablePointer<GIOChannel>!","type":"property"}],"title":"IOChannelProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/glib\/iochannelprotocol\/io_channel_ptr-247yh","title":"var io_channel_ptr: UnsafeMutablePointer<GIOChannel>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/iochannelprotocol\/close()","title":"func close()","type":"method"},{"path":"\/documentation\/glib\/iochannelprotocol\/flush()","title":"func flush() throws -> GIOStatus","type":"method"},{"path":"\/documentation\/glib\/iochannelprotocol\/getbuffercondition()","title":"func getBufferCondition() -> IOCondition","type":"method"},{"path":"\/documentation\/glib\/iochannelprotocol\/getbuffersize()","title":"func getBufferSize() -> Int","type":"method"},{"path":"\/documentation\/glib\/iochannelprotocol\/getbuffered()","title":"func getBuffered() -> Bool","type":"method"},{"path":"\/documentation\/glib\/iochannelprotocol\/getcloseonunref()","title":"func getCloseOnUnref() -> Bool","type":"method"},{"path":"\/documentation\/glib\/iochannelprotocol\/getencoding()","title":"func getEncoding() -> String!","type":"method"},{"path":"\/documentation\/glib\/iochannelprotocol\/getflags()","title":"func getFlags() -> IOFlags","type":"method"},{"path":"\/documentation\/glib\/iochannelprotocol\/getlineterm(length:)","title":"func getLineTerm(length: UnsafeMutablePointer<gint>!) -> String!","type":"method"},{"path":"\/documentation\/glib\/iochannelprotocol\/init_()","title":"func init_()","type":"method"},{"path":"\/documentation\/glib\/iochannelprotocol\/ioaddwatch(condition:func:userdata:)","title":"func ioAddWatch(condition: IOCondition, func: GIOFunc?, userData: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/glib\/iochannelprotocol\/ioaddwatchfull(priority:condition:func:userdata:notify:)","title":"func ioAddWatchFull(priority: Int, condition: IOCondition, func: GIOFunc?, userData: gpointer?, notify: GDestroyNotify?) -> Int","type":"method"},{"path":"\/documentation\/glib\/iochannelprotocol\/iocreatewatch(condition:)","title":"func ioCreateWatch(condition: IOCondition) -> SourceRef!","type":"method"},{"path":"\/documentation\/glib\/iochannelprotocol\/read(buf:count:bytesread:)","title":"func read(buf: UnsafeMutablePointer<gchar>!, count: Int, bytesRead: UnsafeMutablePointer<gsize>!) -> GIOError","type":"method"},{"path":"\/documentation\/glib\/iochannelprotocol\/readchars(buf:count:bytesread:)","title":"func readChars(buf: UnsafeMutablePointer<gchar>!, count: Int, bytesRead: UnsafeMutablePointer<gsize>!) throws -> GIOStatus","type":"method"},{"path":"\/documentation\/glib\/iochannelprotocol\/readline(strreturn:length:terminatorpos:)","title":"func readLine(strReturn: UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!, length: UnsafeMutablePointer<gsize>!, terminatorPos: UnsafeMutablePointer<gsize>!) throws -> GIOStatus","type":"method"},{"path":"\/documentation\/glib\/iochannelprotocol\/readlinestring(buffer:terminatorpos:)","title":"func readLineString<StringTypeT>(buffer: StringTypeT, terminatorPos: UnsafeMutablePointer<gsize>?) throws -> GIOStatus","type":"method"},{"path":"\/documentation\/glib\/iochannelprotocol\/readtoend(strreturn:length:)","title":"func readToEnd(strReturn: UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!, length: UnsafeMutablePointer<gsize>!) throws -> GIOStatus","type":"method"},{"path":"\/documentation\/glib\/iochannelprotocol\/readunichar(thechar:)","title":"func readUnichar(thechar: UnsafeMutablePointer<gunichar>!) throws -> GIOStatus","type":"method"},{"path":"\/documentation\/glib\/iochannelprotocol\/ref()","title":"func ref() -> IOChannelRef!","type":"method"},{"path":"\/documentation\/glib\/iochannelprotocol\/seek(offset:type:)","title":"func seek(offset: gint64, type: GSeekType) -> GIOError","type":"method"},{"path":"\/documentation\/glib\/iochannelprotocol\/seekposition(offset:type:)","title":"func seekPosition(offset: gint64, type: GSeekType) throws -> GIOStatus","type":"method"},{"path":"\/documentation\/glib\/iochannelprotocol\/set(buffered:)","title":"func set(buffered: Bool)","type":"method"},{"path":"\/documentation\/glib\/iochannelprotocol\/set(encoding:)","title":"func set(encoding: UnsafePointer<gchar>?) throws -> GIOStatus","type":"method"},{"path":"\/documentation\/glib\/iochannelprotocol\/set(flags:)","title":"func set(flags: IOFlags) throws -> GIOStatus","type":"method"},{"path":"\/documentation\/glib\/iochannelprotocol\/set(lineterm:length:)","title":"func set(lineTerm: UnsafePointer<gchar>?, length: Int)","type":"method"},{"path":"\/documentation\/glib\/iochannelprotocol\/setbuffer(size:)","title":"func setBuffer(size: Int)","type":"method"},{"path":"\/documentation\/glib\/iochannelprotocol\/setcloseonunref(doclose:)","title":"func setCloseOnUnref(doClose: Bool)","type":"method"},{"path":"\/documentation\/glib\/iochannelprotocol\/shutdown(flush:)","title":"func shutdown(flush: Bool) throws -> GIOStatus","type":"method"},{"path":"\/documentation\/glib\/iochannelprotocol\/unixgetfd()","title":"func unixGetFd() -> Int","type":"method"},{"path":"\/documentation\/glib\/iochannelprotocol\/unref()","title":"func unref()","type":"method"},{"path":"\/documentation\/glib\/iochannelprotocol\/write(buf:count:byteswritten:)","title":"func write(buf: UnsafePointer<gchar>!, count: Int, bytesWritten: UnsafeMutablePointer<gsize>!) -> GIOError","type":"method"},{"path":"\/documentation\/glib\/iochannelprotocol\/writechars(buf:count:byteswritten:)","title":"func writeChars(buf: UnsafePointer<gchar>!, count: gssize, bytesWritten: UnsafeMutablePointer<gsize>!) throws -> GIOStatus","type":"method"},{"path":"\/documentation\/glib\/iochannelprotocol\/writeunichar(thechar:)","title":"func writeUnichar(thechar: gunichar) throws -> GIOStatus","type":"method"}],"path":"\/documentation\/glib\/iochannelprotocol","title":"IOChannelProtocol","type":"protocol"},{"path":"\/documentation\/glib\/iofuncsprotocol","title":"IOFuncsProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/glib\/keyfileprotocol\/key_file_ptr-29csn","title":"var key_file_ptr: UnsafeMutablePointer<GKeyFile>!","type":"property"}],"title":"KeyFileProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/glib\/keyfileprotocol\/key_file_ptr-4bsh2","title":"var key_file_ptr: UnsafeMutablePointer<GKeyFile>!","type":"property"},{"path":"\/documentation\/glib\/keyfileprotocol\/startgroup","title":"var startGroup: String!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/keyfileprotocol\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/glib\/keyfileprotocol\/getboolean(groupname:key:)","title":"func getBoolean(groupName: UnsafePointer<gchar>!, key: UnsafePointer<gchar>!) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/keyfileprotocol\/getbooleanlist(groupname:key:length:)","title":"func getBooleanList(groupName: UnsafePointer<gchar>!, key: UnsafePointer<gchar>!, length: UnsafeMutablePointer<gsize>!) throws -> UnsafeMutablePointer<gboolean>!","type":"method"},{"path":"\/documentation\/glib\/keyfileprotocol\/getcomment(groupname:key:)","title":"func getComment(groupName: UnsafePointer<gchar>?, key: UnsafePointer<gchar>?) throws -> String!","type":"method"},{"path":"\/documentation\/glib\/keyfileprotocol\/getdouble(groupname:key:)","title":"func getDouble(groupName: UnsafePointer<gchar>!, key: UnsafePointer<gchar>!) throws -> Double","type":"method"},{"path":"\/documentation\/glib\/keyfileprotocol\/getdoublelist(groupname:key:length:)","title":"func getDoubleList(groupName: UnsafePointer<gchar>!, key: UnsafePointer<gchar>!, length: UnsafeMutablePointer<gsize>!) throws -> UnsafeMutablePointer<gdouble>!","type":"method"},{"path":"\/documentation\/glib\/keyfileprotocol\/getgroups(length:)","title":"func getGroups(length: UnsafeMutablePointer<gsize>!) -> UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!","type":"method"},{"path":"\/documentation\/glib\/keyfileprotocol\/getint64(groupname:key:)","title":"func getInt64(groupName: UnsafePointer<gchar>!, key: UnsafePointer<gchar>!) throws -> gint64","type":"method"},{"path":"\/documentation\/glib\/keyfileprotocol\/getinteger(groupname:key:)","title":"func getInteger(groupName: UnsafePointer<gchar>!, key: UnsafePointer<gchar>!) throws -> Int","type":"method"},{"path":"\/documentation\/glib\/keyfileprotocol\/getintegerlist(groupname:key:length:)","title":"func getIntegerList(groupName: UnsafePointer<gchar>!, key: UnsafePointer<gchar>!, length: UnsafeMutablePointer<gsize>!) throws -> UnsafeMutablePointer<gint>!","type":"method"},{"path":"\/documentation\/glib\/keyfileprotocol\/getkeys(groupname:length:)","title":"func getKeys(groupName: UnsafePointer<gchar>!, length: UnsafeMutablePointer<gsize>!) throws -> UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!","type":"method"},{"path":"\/documentation\/glib\/keyfileprotocol\/getlocaleforkey(groupname:key:locale:)","title":"func getLocaleForKey(groupName: UnsafePointer<gchar>!, key: UnsafePointer<gchar>!, locale: UnsafePointer<gchar>?) -> String!","type":"method"},{"path":"\/documentation\/glib\/keyfileprotocol\/getlocalestring(groupname:key:locale:)","title":"func getLocaleString(groupName: UnsafePointer<gchar>!, key: UnsafePointer<gchar>!, locale: UnsafePointer<gchar>?) throws -> String!","type":"method"},{"path":"\/documentation\/glib\/keyfileprotocol\/getlocalestringlist(groupname:key:locale:length:)","title":"func getLocaleStringList(groupName: UnsafePointer<gchar>!, key: UnsafePointer<gchar>!, locale: UnsafePointer<gchar>?, length: UnsafeMutablePointer<gsize>!) throws -> UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!","type":"method"},{"path":"\/documentation\/glib\/keyfileprotocol\/getstartgroup()","title":"func getStartGroup() -> String!","type":"method"},{"path":"\/documentation\/glib\/keyfileprotocol\/getstring(groupname:key:)","title":"func getString(groupName: UnsafePointer<gchar>!, key: UnsafePointer<gchar>!) throws -> String!","type":"method"},{"path":"\/documentation\/glib\/keyfileprotocol\/getstringlist(groupname:key:length:)","title":"func getStringList(groupName: UnsafePointer<gchar>!, key: UnsafePointer<gchar>!, length: UnsafeMutablePointer<gsize>!) throws -> UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!","type":"method"},{"path":"\/documentation\/glib\/keyfileprotocol\/getuint64(groupname:key:)","title":"func getUint64(groupName: UnsafePointer<gchar>!, key: UnsafePointer<gchar>!) throws -> guint64","type":"method"},{"path":"\/documentation\/glib\/keyfileprotocol\/getvalue(groupname:key:)","title":"func getValue(groupName: UnsafePointer<gchar>!, key: UnsafePointer<gchar>!) throws -> String!","type":"method"},{"path":"\/documentation\/glib\/keyfileprotocol\/hasgroup(groupname:)","title":"func hasGroup(groupName: UnsafePointer<gchar>!) -> Bool","type":"method"},{"path":"\/documentation\/glib\/keyfileprotocol\/haskey(groupname:key:)","title":"func hasKey(groupName: UnsafePointer<gchar>!, key: UnsafePointer<gchar>!) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/keyfileprotocol\/loadfrom(bytes:flags:)","title":"func loadFrom<BytesT>(bytes: BytesT, flags: KeyFileFlags) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/keyfileprotocol\/loadfrom(data:length:flags:)","title":"func loadFrom(data: UnsafePointer<gchar>!, length: Int, flags: KeyFileFlags) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/keyfileprotocol\/loadfrom(file:flags:)","title":"func loadFrom(file: UnsafePointer<gchar>!, flags: KeyFileFlags) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/keyfileprotocol\/loadfromdatadirs(file:fullpath:flags:)","title":"func loadFromDataDirs(file: UnsafePointer<gchar>!, fullPath: UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!, flags: KeyFileFlags) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/keyfileprotocol\/loadfromdirs(file:searchdirs:fullpath:flags:)","title":"func loadFromDirs(file: UnsafePointer<gchar>!, searchDirs: UnsafeMutablePointer<UnsafePointer<gchar>?>!, fullPath: UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!, flags: KeyFileFlags) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/keyfileprotocol\/ref()","title":"func ref() -> KeyFileRef!","type":"method"},{"path":"\/documentation\/glib\/keyfileprotocol\/removecomment(groupname:key:)","title":"func removeComment(groupName: UnsafePointer<gchar>?, key: UnsafePointer<gchar>?) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/keyfileprotocol\/removegroup(groupname:)","title":"func removeGroup(groupName: UnsafePointer<gchar>!) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/keyfileprotocol\/removekey(groupname:key:)","title":"func removeKey(groupName: UnsafePointer<gchar>!, key: UnsafePointer<gchar>!) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/keyfileprotocol\/savetofile(filename:)","title":"func saveToFile(filename: UnsafePointer<gchar>!) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/keyfileprotocol\/setboolean(groupname:key:value:)","title":"func setBoolean(groupName: UnsafePointer<gchar>!, key: UnsafePointer<gchar>!, value: Bool)","type":"method"},{"path":"\/documentation\/glib\/keyfileprotocol\/setbooleanlist(groupname:key:list:length:)","title":"func setBooleanList(groupName: UnsafePointer<gchar>!, key: UnsafePointer<gchar>!, list: UnsafeMutablePointer<gboolean>!, length: Int)","type":"method"},{"path":"\/documentation\/glib\/keyfileprotocol\/setcomment(groupname:key:comment:)","title":"func setComment(groupName: UnsafePointer<gchar>?, key: UnsafePointer<gchar>?, comment: UnsafePointer<gchar>!) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/keyfileprotocol\/setdouble(groupname:key:value:)","title":"func setDouble(groupName: UnsafePointer<gchar>!, key: UnsafePointer<gchar>!, value: Double)","type":"method"},{"path":"\/documentation\/glib\/keyfileprotocol\/setdoublelist(groupname:key:list:length:)","title":"func setDoubleList(groupName: UnsafePointer<gchar>!, key: UnsafePointer<gchar>!, list: UnsafeMutablePointer<gdouble>!, length: Int)","type":"method"},{"path":"\/documentation\/glib\/keyfileprotocol\/setint64(groupname:key:value:)","title":"func setInt64(groupName: UnsafePointer<gchar>!, key: UnsafePointer<gchar>!, value: gint64)","type":"method"},{"path":"\/documentation\/glib\/keyfileprotocol\/setinteger(groupname:key:value:)","title":"func setInteger(groupName: UnsafePointer<gchar>!, key: UnsafePointer<gchar>!, value: Int)","type":"method"},{"path":"\/documentation\/glib\/keyfileprotocol\/setintegerlist(groupname:key:list:length:)","title":"func setIntegerList(groupName: UnsafePointer<gchar>!, key: UnsafePointer<gchar>!, list: UnsafeMutablePointer<gint>!, length: Int)","type":"method"},{"path":"\/documentation\/glib\/keyfileprotocol\/setlist(separator:)","title":"func setList(separator: gchar)","type":"method"},{"path":"\/documentation\/glib\/keyfileprotocol\/setlocalestring(groupname:key:locale:string:)","title":"func setLocaleString(groupName: UnsafePointer<gchar>!, key: UnsafePointer<gchar>!, locale: UnsafePointer<gchar>!, string: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/glib\/keyfileprotocol\/setlocalestringlist(groupname:key:locale:list:length:)","title":"func setLocaleStringList(groupName: UnsafePointer<gchar>!, key: UnsafePointer<gchar>!, locale: UnsafePointer<gchar>!, list: UnsafePointer<UnsafePointer<gchar>?>!, length: Int)","type":"method"},{"path":"\/documentation\/glib\/keyfileprotocol\/setstring(groupname:key:string:)","title":"func setString(groupName: UnsafePointer<gchar>!, key: UnsafePointer<gchar>!, string: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/glib\/keyfileprotocol\/setstringlist(groupname:key:list:length:)","title":"func setStringList(groupName: UnsafePointer<gchar>!, key: UnsafePointer<gchar>!, list: UnsafePointer<UnsafePointer<gchar>?>!, length: Int)","type":"method"},{"path":"\/documentation\/glib\/keyfileprotocol\/setuint64(groupname:key:value:)","title":"func setUint64(groupName: UnsafePointer<gchar>!, key: UnsafePointer<gchar>!, value: guint64)","type":"method"},{"path":"\/documentation\/glib\/keyfileprotocol\/setvalue(groupname:key:value:)","title":"func setValue(groupName: UnsafePointer<gchar>!, key: UnsafePointer<gchar>!, value: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/glib\/keyfileprotocol\/todata(length:)","title":"func toData(length: UnsafeMutablePointer<gsize>!) throws -> String!","type":"method"},{"path":"\/documentation\/glib\/keyfileprotocol\/unref()","title":"func unref()","type":"method"}],"path":"\/documentation\/glib\/keyfileprotocol","title":"KeyFileProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/listprotocol\/data","title":"var data: gpointer?","type":"property"},{"path":"\/documentation\/glib\/listprotocol\/next","title":"var next: ListRef!","type":"property"},{"path":"\/documentation\/glib\/listprotocol\/prev","title":"var prev: ListRef!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/listprotocol\/append(data:)","title":"func append(data: gpointer?) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/listprotocol\/concat(list2:)","title":"func concat<ListT>(list2: ListT) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/listprotocol\/copy()","title":"func copy() -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/listprotocol\/copydeep(func:userdata:)","title":"func copyDeep(func: GCopyFunc?, userData: gpointer?) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/listprotocol\/delete(link:)","title":"func delete<ListT>(link: ListT) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/listprotocol\/find(data:)","title":"func find(data: gconstpointer?) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/listprotocol\/findcustom(data:func:)","title":"func findCustom(data: gconstpointer?, func: GCompareFunc?) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/listprotocol\/first()","title":"func first() -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/listprotocol\/foreach(func:userdata:)","title":"func foreach(func: GFunc?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/listprotocol\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/glib\/listprotocol\/free1()","title":"func free1()","type":"method"},{"path":"\/documentation\/glib\/listprotocol\/freefull(freefunc:)","title":"func freeFull(freeFunc: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/glib\/listprotocol\/index(data:)","title":"func index(data: gconstpointer?) -> Int","type":"method"},{"path":"\/documentation\/glib\/listprotocol\/insert(data:position:)","title":"func insert(data: gpointer?, position: Int) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/listprotocol\/insertbefore(sibling:data:)","title":"func insertBefore<ListT>(sibling: ListT, data: gpointer?) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/listprotocol\/insertbeforelink(sibling:link:)","title":"func insertBeforeLink<ListT>(sibling: ListT?, link: ListT) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/listprotocol\/insertsorted(data:func:)","title":"func insertSorted(data: gpointer?, func: GCompareFunc?) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/listprotocol\/insertsortedwith(data:func:userdata:)","title":"func insertSortedWith(data: gpointer?, func: GCompareDataFunc?, userData: gpointer?) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/listprotocol\/last()","title":"func last() -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/listprotocol\/length()","title":"func length() -> Int","type":"method"},{"path":"\/documentation\/glib\/listprotocol\/nth(n:)","title":"func nth(n: Int) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/listprotocol\/nthdata(n:)","title":"func nthData(n: Int) -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/listprotocol\/nthprev(n:)","title":"func nthPrev(n: Int) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/listprotocol\/position(llink:)","title":"func position<ListT>(llink: ListT) -> Int","type":"method"},{"path":"\/documentation\/glib\/listprotocol\/prepend(data:)","title":"func prepend(data: gpointer?) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/listprotocol\/remove(data:)","title":"func remove(data: gconstpointer?) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/listprotocol\/removeall(data:)","title":"func removeAll(data: gconstpointer?) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/listprotocol\/removelink(llink:)","title":"func removeLink<ListT>(llink: ListT) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/listprotocol\/reverse()","title":"func reverse() -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/listprotocol\/sort(comparefunc:)","title":"func sort(compareFunc: GCompareFunc?) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/listprotocol\/sortwithdata(comparefunc:userdata:)","title":"func sortWithData(compareFunc: GCompareDataFunc?, userData: gpointer?) -> ListRef!","type":"method"}],"path":"\/documentation\/glib\/listprotocol","title":"ListProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/logfieldprotocol\/key","title":"var key: UnsafePointer<gchar>!","type":"property"},{"path":"\/documentation\/glib\/logfieldprotocol\/length","title":"var length: gssize","type":"property"},{"path":"\/documentation\/glib\/logfieldprotocol\/value","title":"var value: gconstpointer?","type":"property"}],"path":"\/documentation\/glib\/logfieldprotocol","title":"LogFieldProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/maincontextprotocol\/isowner","title":"var isOwner: Bool","type":"property"},{"children":[{"children":[{"path":"\/documentation\/glib\/maincontextprotocol\/main_context_ptr-7o110","title":"var main_context_ptr: UnsafeMutablePointer<GMainContext>!","type":"property"}],"title":"MainContextProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/glib\/maincontextprotocol\/main_context_ptr-4zgge","title":"var main_context_ptr: UnsafeMutablePointer<GMainContext>!","type":"property"},{"path":"\/documentation\/glib\/maincontextprotocol\/pollfunc","title":"var pollFunc: GPollFunc!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/maincontextprotocol\/acquire()","title":"func acquire() -> Bool","type":"method"},{"path":"\/documentation\/glib\/maincontextprotocol\/addpoll(fd:priority:)","title":"func addPoll<PollFDT>(fd: PollFDT, priority: Int)","type":"method"},{"path":"\/documentation\/glib\/maincontextprotocol\/check(maxpriority:fds:nfds:)","title":"func check(maxPriority: Int, fds: UnsafeMutablePointer<GPollFD>!, nFds: Int) -> Bool","type":"method"},{"path":"\/documentation\/glib\/maincontextprotocol\/dispatch()","title":"func dispatch()","type":"method"},{"path":"\/documentation\/glib\/maincontextprotocol\/findsourceby(userdata:)","title":"func findSourceBy(userData: gpointer?) -> SourceRef!","type":"method"},{"path":"\/documentation\/glib\/maincontextprotocol\/findsourcebyfuncsuserdata(funcs:userdata:)","title":"func findSourceByFuncsUserData<SourceFuncsT>(funcs: SourceFuncsT, userData: gpointer?) -> SourceRef!","type":"method"},{"path":"\/documentation\/glib\/maincontextprotocol\/findsourcebyid(sourceid:)","title":"func findSourceByID(sourceID: Int) -> SourceRef!","type":"method"},{"path":"\/documentation\/glib\/maincontextprotocol\/getpollfunc()","title":"func getPollFunc() -> GPollFunc!","type":"method"},{"path":"\/documentation\/glib\/maincontextprotocol\/invoke(function:data:)","title":"func invoke(function: GSourceFunc?, data: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/maincontextprotocol\/invokefull(priority:function:data:notify:)","title":"func invokeFull(priority: Int, function: GSourceFunc?, data: gpointer?, notify: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/glib\/maincontextprotocol\/iteration(mayblock:)","title":"func iteration(mayBlock: Bool) -> Bool","type":"method"},{"path":"\/documentation\/glib\/maincontextprotocol\/pending()","title":"func pending() -> Bool","type":"method"},{"path":"\/documentation\/glib\/maincontextprotocol\/popthreaddefault()","title":"func popThreadDefault()","type":"method"},{"path":"\/documentation\/glib\/maincontextprotocol\/prepare(priority:)","title":"func prepare(priority: UnsafeMutablePointer<gint>!) -> Bool","type":"method"},{"path":"\/documentation\/glib\/maincontextprotocol\/pushthreaddefault()","title":"func pushThreadDefault()","type":"method"},{"path":"\/documentation\/glib\/maincontextprotocol\/query(maxpriority:timeout:fds:nfds:)","title":"func query(maxPriority: Int, timeout: UnsafeMutablePointer<gint>!, fds: UnsafeMutablePointer<GPollFD>!, nFds: Int) -> Int","type":"method"},{"path":"\/documentation\/glib\/maincontextprotocol\/ref()","title":"func ref() -> MainContextRef!","type":"method"},{"path":"\/documentation\/glib\/maincontextprotocol\/release()","title":"func release()","type":"method"},{"path":"\/documentation\/glib\/maincontextprotocol\/removepoll(fd:)","title":"func removePoll<PollFDT>(fd: PollFDT)","type":"method"},{"path":"\/documentation\/glib\/maincontextprotocol\/setpollfunc(func:)","title":"func setPollFunc(func: GPollFunc?)","type":"method"},{"path":"\/documentation\/glib\/maincontextprotocol\/unref()","title":"func unref()","type":"method"},{"path":"\/documentation\/glib\/maincontextprotocol\/wait(cond:mutex:)","title":"func wait<CondT, MutexT>(cond: CondT, mutex: MutexT) -> Bool","type":"method"},{"path":"\/documentation\/glib\/maincontextprotocol\/wakeup()","title":"func wakeup()","type":"method"}],"path":"\/documentation\/glib\/maincontextprotocol","title":"MainContextProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/mainloopprotocol\/context","title":"var context: MainContextRef!","type":"property"},{"path":"\/documentation\/glib\/mainloopprotocol\/isrunning","title":"var isRunning: Bool","type":"property"},{"children":[{"children":[{"path":"\/documentation\/glib\/mainloopprotocol\/main_loop_ptr-87ehk","title":"var main_loop_ptr: UnsafeMutablePointer<GMainLoop>!","type":"property"}],"title":"MainLoopProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/glib\/mainloopprotocol\/main_loop_ptr-6jb9h","title":"var main_loop_ptr: UnsafeMutablePointer<GMainLoop>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/mainloopprotocol\/getcontext()","title":"func getContext() -> MainContextRef!","type":"method"},{"path":"\/documentation\/glib\/mainloopprotocol\/quit()","title":"func quit()","type":"method"},{"path":"\/documentation\/glib\/mainloopprotocol\/ref()","title":"func ref() -> MainLoopRef!","type":"method"},{"path":"\/documentation\/glib\/mainloopprotocol\/run()","title":"func run()","type":"method"},{"path":"\/documentation\/glib\/mainloopprotocol\/unref()","title":"func unref()","type":"method"}],"path":"\/documentation\/glib\/mainloopprotocol","title":"MainLoopProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/mappedfileprotocol\/bytes","title":"var bytes: BytesRef!","type":"property"},{"path":"\/documentation\/glib\/mappedfileprotocol\/contents","title":"var contents: String!","type":"property"},{"path":"\/documentation\/glib\/mappedfileprotocol\/length","title":"var length: Int","type":"property"},{"children":[{"children":[{"path":"\/documentation\/glib\/mappedfileprotocol\/mapped_file_ptr-6t78o","title":"var mapped_file_ptr: UnsafeMutablePointer<GMappedFile>!","type":"property"}],"title":"MappedFileProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/glib\/mappedfileprotocol\/mapped_file_ptr-p08p","title":"var mapped_file_ptr: UnsafeMutablePointer<GMappedFile>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/mappedfileprotocol\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/glib\/mappedfileprotocol\/getbytes()","title":"func getBytes() -> BytesRef!","type":"method"},{"path":"\/documentation\/glib\/mappedfileprotocol\/getcontents()","title":"func getContents() -> String!","type":"method"},{"path":"\/documentation\/glib\/mappedfileprotocol\/getlength()","title":"func getLength() -> Int","type":"method"},{"path":"\/documentation\/glib\/mappedfileprotocol\/ref()","title":"func ref() -> MappedFileRef!","type":"method"},{"path":"\/documentation\/glib\/mappedfileprotocol\/unref()","title":"func unref()","type":"method"}],"path":"\/documentation\/glib\/mappedfileprotocol","title":"MappedFileProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/markupparsecontextprotocol\/element","title":"var element: String!","type":"property"},{"path":"\/documentation\/glib\/markupparsecontextprotocol\/elementstack","title":"var elementStack: SListRef!","type":"property"},{"children":[{"children":[{"path":"\/documentation\/glib\/markupparsecontextprotocol\/markup_parse_context_ptr-6vrsp","title":"var markup_parse_context_ptr: UnsafeMutablePointer<GMarkupParseContext>!","type":"property"}],"title":"MarkupParseContextProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/glib\/markupparsecontextprotocol\/markup_parse_context_ptr-28vxg","title":"var markup_parse_context_ptr: UnsafeMutablePointer<GMarkupParseContext>!","type":"property"},{"path":"\/documentation\/glib\/markupparsecontextprotocol\/userdata","title":"var userData: gpointer?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/markupparsecontextprotocol\/endparse()","title":"func endParse() throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/markupparsecontextprotocol\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/glib\/markupparsecontextprotocol\/getelement()","title":"func getElement() -> String!","type":"method"},{"path":"\/documentation\/glib\/markupparsecontextprotocol\/getelementstack()","title":"func getElementStack() -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/markupparsecontextprotocol\/getposition(linenumber:charnumber:)","title":"func getPosition(lineNumber: UnsafeMutablePointer<gint>!, charNumber: UnsafeMutablePointer<gint>!)","type":"method"},{"path":"\/documentation\/glib\/markupparsecontextprotocol\/getuserdata()","title":"func getUserData() -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/markupparsecontextprotocol\/parse(text:textlen:)","title":"func parse(text: UnsafePointer<gchar>!, textLen: gssize) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/markupparsecontextprotocol\/pop()","title":"func pop() -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/markupparsecontextprotocol\/push(parser:userdata:)","title":"func push<MarkupParserT>(parser: MarkupParserT, userData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/markupparsecontextprotocol\/ref()","title":"func ref() -> MarkupParseContextRef!","type":"method"},{"path":"\/documentation\/glib\/markupparsecontextprotocol\/unref()","title":"func unref()","type":"method"}],"path":"\/documentation\/glib\/markupparsecontextprotocol","title":"MarkupParseContextProtocol","type":"protocol"},{"path":"\/documentation\/glib\/markupparserprotocol","title":"MarkupParserProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/matchinfoprotocol\/ispartialmatch","title":"var isPartialMatch: Bool","type":"property"},{"path":"\/documentation\/glib\/matchinfoprotocol\/matchcount","title":"var matchCount: Int","type":"property"},{"children":[{"children":[{"path":"\/documentation\/glib\/matchinfoprotocol\/match_info_ptr-26l4d","title":"var match_info_ptr: UnsafeMutablePointer<GMatchInfo>!","type":"property"}],"title":"MatchInfoProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/glib\/matchinfoprotocol\/match_info_ptr-5ha7n","title":"var match_info_ptr: UnsafeMutablePointer<GMatchInfo>!","type":"property"},{"path":"\/documentation\/glib\/matchinfoprotocol\/regex","title":"var regex: RegexRef!","type":"property"},{"path":"\/documentation\/glib\/matchinfoprotocol\/string","title":"var string: String!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/matchinfoprotocol\/expandreferences(stringtoexpand:)","title":"func expandReferences(stringToExpand: UnsafePointer<gchar>!) throws -> String!","type":"method"},{"path":"\/documentation\/glib\/matchinfoprotocol\/fetch(matchnum:)","title":"func fetch(matchNum: Int) -> String!","type":"method"},{"path":"\/documentation\/glib\/matchinfoprotocol\/fetchall()","title":"func fetchAll() -> UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!","type":"method"},{"path":"\/documentation\/glib\/matchinfoprotocol\/fetchnamed(name:)","title":"func fetchNamed(name: UnsafePointer<gchar>!) -> String!","type":"method"},{"path":"\/documentation\/glib\/matchinfoprotocol\/fetchnamedpos(name:startpos:endpos:)","title":"func fetchNamedPos(name: UnsafePointer<gchar>!, startPos: UnsafeMutablePointer<gint>!, endPos: UnsafeMutablePointer<gint>!) -> Bool","type":"method"},{"path":"\/documentation\/glib\/matchinfoprotocol\/fetchpos(matchnum:startpos:endpos:)","title":"func fetchPos(matchNum: Int, startPos: UnsafeMutablePointer<gint>!, endPos: UnsafeMutablePointer<gint>!) -> Bool","type":"method"},{"path":"\/documentation\/glib\/matchinfoprotocol\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/glib\/matchinfoprotocol\/getmatchcount()","title":"func getMatchCount() -> Int","type":"method"},{"path":"\/documentation\/glib\/matchinfoprotocol\/getregex()","title":"func getRegex() -> RegexRef!","type":"method"},{"path":"\/documentation\/glib\/matchinfoprotocol\/getstring()","title":"func getString() -> String!","type":"method"},{"path":"\/documentation\/glib\/matchinfoprotocol\/matches()","title":"func matches() -> Bool","type":"method"},{"path":"\/documentation\/glib\/matchinfoprotocol\/next()","title":"func next() throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/matchinfoprotocol\/ref()","title":"func ref() -> MatchInfoRef!","type":"method"},{"path":"\/documentation\/glib\/matchinfoprotocol\/unref()","title":"func unref()","type":"method"}],"path":"\/documentation\/glib\/matchinfoprotocol","title":"MatchInfoProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/memchunkprotocol\/alloc()","title":"func alloc() -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/memchunkprotocol\/alloc0()","title":"func alloc0() -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/memchunkprotocol\/clean()","title":"func clean()","type":"method"},{"path":"\/documentation\/glib\/memchunkprotocol\/destroy()","title":"func destroy()","type":"method"},{"path":"\/documentation\/glib\/memchunkprotocol\/free(mem:)","title":"func free(mem: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/memchunkprotocol\/print()","title":"func print()","type":"method"},{"path":"\/documentation\/glib\/memchunkprotocol\/reset()","title":"func reset()","type":"method"}],"path":"\/documentation\/glib\/memchunkprotocol","title":"MemChunkProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/memvtableprotocol\/memsetvtable()","title":"func memSetVtable()","type":"method"}],"path":"\/documentation\/glib\/memvtableprotocol","title":"MemVTableProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/mutexprotocol\/clear()","title":"func clear()","type":"method"},{"path":"\/documentation\/glib\/mutexprotocol\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/glib\/mutexprotocol\/init_()","title":"func init_()","type":"method"},{"path":"\/documentation\/glib\/mutexprotocol\/lock()","title":"func lock()","type":"method"},{"path":"\/documentation\/glib\/mutexprotocol\/trylock()","title":"func trylock() -> Bool","type":"method"},{"path":"\/documentation\/glib\/mutexprotocol\/unlock()","title":"func unlock()","type":"method"}],"path":"\/documentation\/glib\/mutexprotocol","title":"MutexProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/nodeprotocol\/children","title":"var children: NodeRef!","type":"property"},{"path":"\/documentation\/glib\/nodeprotocol\/data","title":"var data: gpointer?","type":"property"},{"path":"\/documentation\/glib\/nodeprotocol\/next","title":"var next: NodeRef!","type":"property"},{"path":"\/documentation\/glib\/nodeprotocol\/parent","title":"var parent: NodeRef!","type":"property"},{"path":"\/documentation\/glib\/nodeprotocol\/prev","title":"var prev: NodeRef!","type":"property"},{"path":"\/documentation\/glib\/nodeprotocol\/root","title":"var root: NodeRef!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/nodeprotocol\/childindex(data:)","title":"func childIndex(data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/glib\/nodeprotocol\/childposition(child:)","title":"func childPosition<NodeT>(child: NodeT) -> Int","type":"method"},{"path":"\/documentation\/glib\/nodeprotocol\/childrenforeach(flags:func:data:)","title":"func childrenForeach(flags: TraverseFlags, func: GNodeForeachFunc?, data: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/nodeprotocol\/copy()","title":"func copy() -> NodeRef!","type":"method"},{"path":"\/documentation\/glib\/nodeprotocol\/copydeep(copyfunc:data:)","title":"func copyDeep(copyFunc: GCopyFunc?, data: gpointer?) -> NodeRef!","type":"method"},{"path":"\/documentation\/glib\/nodeprotocol\/depth()","title":"func depth() -> Int","type":"method"},{"path":"\/documentation\/glib\/nodeprotocol\/destroy()","title":"func destroy()","type":"method"},{"path":"\/documentation\/glib\/nodeprotocol\/find(order:flags:data:)","title":"func find(order: GTraverseType, flags: TraverseFlags, data: gpointer?) -> NodeRef!","type":"method"},{"path":"\/documentation\/glib\/nodeprotocol\/findchild(flags:data:)","title":"func findChild(flags: TraverseFlags, data: gpointer?) -> NodeRef!","type":"method"},{"path":"\/documentation\/glib\/nodeprotocol\/firstsibling()","title":"func firstSibling() -> NodeRef!","type":"method"},{"path":"\/documentation\/glib\/nodeprotocol\/getroot()","title":"func getRoot() -> NodeRef!","type":"method"},{"path":"\/documentation\/glib\/nodeprotocol\/insert(position:node:)","title":"func insert<NodeT>(position: Int, node: NodeT) -> NodeRef!","type":"method"},{"path":"\/documentation\/glib\/nodeprotocol\/insertafter(sibling:node:)","title":"func insertAfter<NodeT>(sibling: NodeT, node: NodeT) -> NodeRef!","type":"method"},{"path":"\/documentation\/glib\/nodeprotocol\/insertbefore(sibling:node:)","title":"func insertBefore<NodeT>(sibling: NodeT, node: NodeT) -> NodeRef!","type":"method"},{"path":"\/documentation\/glib\/nodeprotocol\/isancestor(descendant:)","title":"func isAncestor<NodeT>(descendant: NodeT) -> Bool","type":"method"},{"path":"\/documentation\/glib\/nodeprotocol\/lastchild()","title":"func lastChild() -> NodeRef!","type":"method"},{"path":"\/documentation\/glib\/nodeprotocol\/lastsibling()","title":"func lastSibling() -> NodeRef!","type":"method"},{"path":"\/documentation\/glib\/nodeprotocol\/maxheight()","title":"func maxHeight() -> Int","type":"method"},{"path":"\/documentation\/glib\/nodeprotocol\/nchildren()","title":"func nChildren() -> Int","type":"method"},{"path":"\/documentation\/glib\/nodeprotocol\/nnodes(flags:)","title":"func nNodes(flags: TraverseFlags) -> Int","type":"method"},{"path":"\/documentation\/glib\/nodeprotocol\/nthchild(n:)","title":"func nthChild(n: Int) -> NodeRef!","type":"method"},{"path":"\/documentation\/glib\/nodeprotocol\/prepend(node:)","title":"func prepend<NodeT>(node: NodeT) -> NodeRef!","type":"method"},{"path":"\/documentation\/glib\/nodeprotocol\/reversechildren()","title":"func reverseChildren()","type":"method"},{"path":"\/documentation\/glib\/nodeprotocol\/traverse(order:flags:maxdepth:func:data:)","title":"func traverse(order: GTraverseType, flags: TraverseFlags, maxDepth: Int, func: GNodeTraverseFunc?, data: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/nodeprotocol\/unlink()","title":"func unlink()","type":"method"}],"path":"\/documentation\/glib\/nodeprotocol","title":"NodeProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/onceprotocol\/retval","title":"var retval: gpointer?","type":"property"},{"path":"\/documentation\/glib\/onceprotocol\/status","title":"var status: GOnceStatus","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/onceprotocol\/impl(func:arg:)","title":"func impl(func: GThreadFunc?, arg: gpointer?) -> gpointer?","type":"method"}],"path":"\/documentation\/glib\/onceprotocol","title":"OnceProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/optioncontextprotocol\/description","title":"var description: String!","type":"property"},{"path":"\/documentation\/glib\/optioncontextprotocol\/helpenabled","title":"var helpEnabled: Bool","type":"property"},{"path":"\/documentation\/glib\/optioncontextprotocol\/ignoreunknownoptions","title":"var ignoreUnknownOptions: Bool","type":"property"},{"path":"\/documentation\/glib\/optioncontextprotocol\/maingroup","title":"var mainGroup: OptionGroupRef!","type":"property"},{"path":"\/documentation\/glib\/optioncontextprotocol\/strictposix","title":"var strictPosix: Bool","type":"property"},{"path":"\/documentation\/glib\/optioncontextprotocol\/summary","title":"var summary: String!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/optioncontextprotocol\/add(group:)","title":"func add<OptionGroupT>(group: OptionGroupT)","type":"method"},{"path":"\/documentation\/glib\/optioncontextprotocol\/addmain(entries:translationdomain:)","title":"func addMain(entries: UnsafePointer<GOptionEntry>!, translationDomain: UnsafePointer<gchar>?)","type":"method"},{"path":"\/documentation\/glib\/optioncontextprotocol\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/glib\/optioncontextprotocol\/getdescription()","title":"func getDescription() -> String!","type":"method"},{"path":"\/documentation\/glib\/optioncontextprotocol\/gethelp(mainhelp:group:)-3fp92","title":"func getHelp(mainHelp: Bool, group: OptionGroupRef?) -> String!","type":"method"},{"path":"\/documentation\/glib\/optioncontextprotocol\/gethelp(mainhelp:group:)-9j0us","title":"func getHelp<OptionGroupT>(mainHelp: Bool, group: OptionGroupT?) -> String!","type":"method"},{"path":"\/documentation\/glib\/optioncontextprotocol\/gethelpenabled()","title":"func getHelpEnabled() -> Bool","type":"method"},{"path":"\/documentation\/glib\/optioncontextprotocol\/getignoreunknownoptions()","title":"func getIgnoreUnknownOptions() -> Bool","type":"method"},{"path":"\/documentation\/glib\/optioncontextprotocol\/getmaingroup()","title":"func getMainGroup() -> OptionGroupRef!","type":"method"},{"path":"\/documentation\/glib\/optioncontextprotocol\/getstrictposix()","title":"func getStrictPosix() -> Bool","type":"method"},{"path":"\/documentation\/glib\/optioncontextprotocol\/getsummary()","title":"func getSummary() -> String!","type":"method"},{"path":"\/documentation\/glib\/optioncontextprotocol\/parse(argc:argv:)","title":"func parse(argc: UnsafeMutablePointer<gint>!, argv: UnsafeMutablePointer<UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>?>!) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/optioncontextprotocol\/parsestrv(arguments:)","title":"func parseStrv(arguments: UnsafeMutablePointer<UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>?>!) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/optioncontextprotocol\/set(description:)","title":"func set(description: UnsafePointer<gchar>?)","type":"method"},{"path":"\/documentation\/glib\/optioncontextprotocol\/set(helpenabled:)","title":"func set(helpEnabled: Bool)","type":"method"},{"path":"\/documentation\/glib\/optioncontextprotocol\/set(strictposix:)","title":"func set(strictPosix: Bool)","type":"method"},{"path":"\/documentation\/glib\/optioncontextprotocol\/set(summary:)","title":"func set(summary: UnsafePointer<gchar>?)","type":"method"},{"path":"\/documentation\/glib\/optioncontextprotocol\/setignoreunknownoptions(ignoreunknown:)","title":"func setIgnoreUnknownOptions(ignoreUnknown: Bool)","type":"method"},{"path":"\/documentation\/glib\/optioncontextprotocol\/setmain(group:)","title":"func setMain<OptionGroupT>(group: OptionGroupT)","type":"method"},{"path":"\/documentation\/glib\/optioncontextprotocol\/settranslatefunc(func:data:destroynotify:)","title":"func setTranslateFunc(func: GTranslateFunc?, data: gpointer?, destroyNotify: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/glib\/optioncontextprotocol\/settranslation(domain:)","title":"func setTranslation(domain: UnsafePointer<gchar>!)","type":"method"}],"path":"\/documentation\/glib\/optioncontextprotocol","title":"OptionContextProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/optionentryprotocol\/arg","title":"var arg: GOptionArg","type":"property"},{"path":"\/documentation\/glib\/optionentryprotocol\/argdata","title":"var argData: gpointer?","type":"property"},{"path":"\/documentation\/glib\/optionentryprotocol\/argdescription","title":"var argDescription: UnsafePointer<gchar>!","type":"property"},{"path":"\/documentation\/glib\/optionentryprotocol\/description","title":"var description: UnsafePointer<gchar>!","type":"property"},{"path":"\/documentation\/glib\/optionentryprotocol\/flags","title":"var flags: gint","type":"property"},{"path":"\/documentation\/glib\/optionentryprotocol\/longname","title":"var longName: UnsafePointer<gchar>!","type":"property"},{"path":"\/documentation\/glib\/optionentryprotocol\/shortname","title":"var shortName: gchar","type":"property"}],"path":"\/documentation\/glib\/optionentryprotocol","title":"OptionEntryProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/glib\/optiongroupprotocol\/option_group_ptr-9ll7","title":"var option_group_ptr: UnsafeMutablePointer<GOptionGroup>!","type":"property"}],"title":"OptionGroupProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/glib\/optiongroupprotocol\/option_group_ptr-75j59","title":"var option_group_ptr: UnsafeMutablePointer<GOptionGroup>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/optiongroupprotocol\/add(entries:)","title":"func add(entries: UnsafePointer<GOptionEntry>!)","type":"method"},{"path":"\/documentation\/glib\/optiongroupprotocol\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/glib\/optiongroupprotocol\/ref()","title":"func ref() -> OptionGroupRef!","type":"method"},{"path":"\/documentation\/glib\/optiongroupprotocol\/seterrorhook(errorfunc:)","title":"func setErrorHook(errorFunc: GOptionErrorFunc?)","type":"method"},{"path":"\/documentation\/glib\/optiongroupprotocol\/setparsehooks(preparsefunc:postparsefunc:)","title":"func setParseHooks(preParseFunc: GOptionParseFunc?, postParseFunc: GOptionParseFunc?)","type":"method"},{"path":"\/documentation\/glib\/optiongroupprotocol\/settranslatefunc(func:data:destroynotify:)","title":"func setTranslateFunc(func: GTranslateFunc?, data: gpointer?, destroyNotify: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/glib\/optiongroupprotocol\/settranslation(domain:)","title":"func setTranslation(domain: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/glib\/optiongroupprotocol\/unref()","title":"func unref()","type":"method"}],"path":"\/documentation\/glib\/optiongroupprotocol","title":"OptionGroupProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/pathbufprotocol\/clear()","title":"func clear()","type":"method"},{"path":"\/documentation\/glib\/pathbufprotocol\/cleartopath()","title":"func clearToPath() -> String!","type":"method"},{"path":"\/documentation\/glib\/pathbufprotocol\/copy()","title":"func copy() -> PathBufRef!","type":"method"},{"path":"\/documentation\/glib\/pathbufprotocol\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/glib\/pathbufprotocol\/freetopath()","title":"func freeToPath() -> String!","type":"method"},{"path":"\/documentation\/glib\/pathbufprotocol\/initfrom(path:)","title":"func initFrom(path: UnsafePointer<CChar>?) -> PathBufRef!","type":"method"},{"path":"\/documentation\/glib\/pathbufprotocol\/init_()","title":"func init_() -> PathBufRef!","type":"method"},{"path":"\/documentation\/glib\/pathbufprotocol\/pop()","title":"func pop() -> Bool","type":"method"},{"path":"\/documentation\/glib\/pathbufprotocol\/push(path:)","title":"func push(path: UnsafePointer<CChar>!) -> PathBufRef!","type":"method"},{"path":"\/documentation\/glib\/pathbufprotocol\/setextension(extension:)","title":"func setExtension(extension: UnsafePointer<CChar>?) -> Bool","type":"method"},{"path":"\/documentation\/glib\/pathbufprotocol\/setfilename(filename:)","title":"func setFilename(fileName: UnsafePointer<CChar>!) -> Bool","type":"method"},{"path":"\/documentation\/glib\/pathbufprotocol\/topath()","title":"func toPath() -> String!","type":"method"}],"path":"\/documentation\/glib\/pathbufprotocol","title":"PathBufProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/glib\/patternspecprotocol\/pattern_spec_ptr-44ksk","title":"var pattern_spec_ptr: UnsafeMutablePointer<GPatternSpec>!","type":"property"}],"title":"PatternSpecProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/glib\/patternspecprotocol\/pattern_spec_ptr-sxvi","title":"var pattern_spec_ptr: UnsafeMutablePointer<GPatternSpec>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/patternspecprotocol\/copy()","title":"func copy() -> PatternSpecRef!","type":"method"},{"path":"\/documentation\/glib\/patternspecprotocol\/equal(pspec2:)","title":"func equal<PatternSpecT>(pspec2: PatternSpecT) -> Bool","type":"method"},{"path":"\/documentation\/glib\/patternspecprotocol\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/glib\/patternspecprotocol\/match(string:)","title":"func match(string: UnsafePointer<gchar>!) -> Bool","type":"method"},{"path":"\/documentation\/glib\/patternspecprotocol\/match(stringlength:string:stringreversed:)","title":"func match(stringLength: Int, string: UnsafePointer<gchar>!, stringReversed: UnsafePointer<gchar>?) -> Bool","type":"method"},{"path":"\/documentation\/glib\/patternspecprotocol\/patternmatch(string:)","title":"func patternMatch(string: UnsafePointer<gchar>!) -> Bool","type":"method"},{"path":"\/documentation\/glib\/patternspecprotocol\/patternmatch(stringlength:string:stringreversed:)","title":"func patternMatch(stringLength: Int, string: UnsafePointer<gchar>!, stringReversed: UnsafePointer<gchar>?) -> Bool","type":"method"}],"path":"\/documentation\/glib\/patternspecprotocol","title":"PatternSpecProtocol","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/pointerwrapper\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/pointerwrapper\/ptr","title":"var ptr: UnsafeMutableRawPointer!","type":"property"}],"path":"\/documentation\/glib\/pointerwrapper","title":"PointerWrapper","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/pollfdprotocol\/events","title":"var events: gushort","type":"property"},{"path":"\/documentation\/glib\/pollfdprotocol\/fd","title":"var fd: gint","type":"property"},{"children":[{"children":[{"path":"\/documentation\/glib\/pollfdprotocol\/pollfd_ptr-5dhy0","title":"var pollfd_ptr: UnsafeMutablePointer<GPollFD>!","type":"property"}],"title":"PollFDProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/glib\/pollfdprotocol\/pollfd_ptr-49ggn","title":"var pollfd_ptr: UnsafeMutablePointer<GPollFD>!","type":"property"},{"path":"\/documentation\/glib\/pollfdprotocol\/revents","title":"var revents: gushort","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/pollfdprotocol\/poll(nfds:timeout:)","title":"func poll(nfds: Int, timeout: Int) -> Int","type":"method"}],"path":"\/documentation\/glib\/pollfdprotocol","title":"PollFDProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/privateprotocol\/get()","title":"func get() -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/privateprotocol\/replace(value:)","title":"func replace(value: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/privateprotocol\/set(value:)","title":"func set(value: gpointer?)","type":"method"}],"path":"\/documentation\/glib\/privateprotocol","title":"PrivateProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/ptrarrayprotocol\/isnullterminated","title":"var isNullTerminated: Bool","type":"property"},{"path":"\/documentation\/glib\/ptrarrayprotocol\/len","title":"var len: guint","type":"property"},{"path":"\/documentation\/glib\/ptrarrayprotocol\/pdata","title":"var pdata: UnsafeMutablePointer<gpointer?>!","type":"property"},{"children":[{"children":[{"path":"\/documentation\/glib\/ptrarrayprotocol\/ptr_array_ptr-4fhx9","title":"var ptr_array_ptr: UnsafeMutablePointer<GPtrArray>!","type":"property"}],"title":"PtrArrayProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/glib\/ptrarrayprotocol\/ptr_array_ptr-6c5nq","title":"var ptr_array_ptr: UnsafeMutablePointer<GPtrArray>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/ptrarrayprotocol\/add(data:)","title":"func add(data: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/ptrarrayprotocol\/copy(func:userdata:)","title":"func copy(func: GCopyFunc?, userData: gpointer?) -> PtrArrayRef!","type":"method"},{"path":"\/documentation\/glib\/ptrarrayprotocol\/extend(array:func:userdata:)","title":"func extend<PtrArrayT>(array: PtrArrayT, func: GCopyFunc?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/ptrarrayprotocol\/extendandsteal(array:)","title":"func extendAndSteal<PtrArrayT>(array: PtrArrayT)","type":"method"},{"path":"\/documentation\/glib\/ptrarrayprotocol\/find(needle:index:)","title":"func find(needle: gconstpointer?, index: UnsafeMutablePointer<guint>!) -> Bool","type":"method"},{"path":"\/documentation\/glib\/ptrarrayprotocol\/findwithequalfunc(needle:equalfunc:index:)","title":"func findWithEqualFunc(needle: gconstpointer?, equalFunc: GEqualFunc?, index: UnsafeMutablePointer<guint>!) -> Bool","type":"method"},{"path":"\/documentation\/glib\/ptrarrayprotocol\/foreach(func:userdata:)","title":"func foreach(func: GFunc?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/ptrarrayprotocol\/free(freeseg:)","title":"func free(freeSeg: Bool) -> UnsafeMutablePointer<gpointer?>?","type":"method"},{"path":"\/documentation\/glib\/ptrarrayprotocol\/insert(index:data:)","title":"func insert(index: Int, data: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/ptrarrayprotocol\/ptrarrayfind(needle:index:)","title":"func ptrArrayFind(needle: gconstpointer?, index: UnsafeMutablePointer<guint>!) -> Bool","type":"method"},{"path":"\/documentation\/glib\/ptrarrayprotocol\/ptrarrayfindwithequalfunc(needle:equalfunc:index:)","title":"func ptrArrayFindWithEqualFunc(needle: gconstpointer?, equalFunc: GEqualFunc?, index: UnsafeMutablePointer<guint>!) -> Bool","type":"method"},{"path":"\/documentation\/glib\/ptrarrayprotocol\/ref()","title":"func ref() -> PtrArrayRef!","type":"method"},{"path":"\/documentation\/glib\/ptrarrayprotocol\/remove(data:)","title":"func remove(data: gpointer?) -> Bool","type":"method"},{"path":"\/documentation\/glib\/ptrarrayprotocol\/remove(index:)","title":"func remove(index: Int) -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/ptrarrayprotocol\/removefast(data:)","title":"func removeFast(data: gpointer?) -> Bool","type":"method"},{"path":"\/documentation\/glib\/ptrarrayprotocol\/removeindexfast(index:)","title":"func removeIndexFast(index: Int) -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/ptrarrayprotocol\/removerange(index:length:)","title":"func removeRange(index: Int, length: Int) -> PtrArrayRef!","type":"method"},{"path":"\/documentation\/glib\/ptrarrayprotocol\/setfreefunc(elementfreefunc:)","title":"func setFreeFunc(elementFreeFunc: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/glib\/ptrarrayprotocol\/setsize(length:)","title":"func setSize(length: Int)","type":"method"},{"path":"\/documentation\/glib\/ptrarrayprotocol\/sort(comparefunc:)","title":"func sort(compareFunc: GCompareFunc?)","type":"method"},{"path":"\/documentation\/glib\/ptrarrayprotocol\/sortvalues(comparefunc:)","title":"func sortValues(compareFunc: GCompareFunc?)","type":"method"},{"path":"\/documentation\/glib\/ptrarrayprotocol\/sortvalueswithdata(comparefunc:userdata:)","title":"func sortValuesWithData(compareFunc: GCompareDataFunc?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/ptrarrayprotocol\/sortwithdata(comparefunc:userdata:)","title":"func sortWithData(compareFunc: GCompareDataFunc?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/ptrarrayprotocol\/steal(index:)","title":"func steal(index: Int) -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/ptrarrayprotocol\/steal(len:)","title":"func steal(len: UnsafeMutablePointer<gsize>!) -> UnsafeMutablePointer<gpointer?>?","type":"method"},{"path":"\/documentation\/glib\/ptrarrayprotocol\/stealindexfast(index:)","title":"func stealIndexFast(index: Int) -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/ptrarrayprotocol\/unref()","title":"func unref()","type":"method"}],"path":"\/documentation\/glib\/ptrarrayprotocol","title":"PtrArrayProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/queueprotocol\/head","title":"var head: ListRef!","type":"property"},{"path":"\/documentation\/glib\/queueprotocol\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/glib\/queueprotocol\/length","title":"var length: Int","type":"property"},{"path":"\/documentation\/glib\/queueprotocol\/tail","title":"var tail: ListRef!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/queueprotocol\/clear()","title":"func clear()","type":"method"},{"path":"\/documentation\/glib\/queueprotocol\/clearfull(freefunc:)","title":"func clearFull(freeFunc: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/glib\/queueprotocol\/copy()","title":"func copy() -> QueueRef!","type":"method"},{"path":"\/documentation\/glib\/queueprotocol\/delete(link:)","title":"func delete<ListT>(link: ListT)","type":"method"},{"path":"\/documentation\/glib\/queueprotocol\/find(data:)","title":"func find(data: gconstpointer?) -> ReferenceListRef<gpointer>!","type":"method"},{"path":"\/documentation\/glib\/queueprotocol\/findcustom(data:func:)","title":"func findCustom(data: gconstpointer?, func: GCompareFunc?) -> ReferenceListRef<gpointer>!","type":"method"},{"path":"\/documentation\/glib\/queueprotocol\/foreach(func:userdata:)","title":"func foreach(func: GFunc?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/queueprotocol\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/glib\/queueprotocol\/freefull(freefunc:)","title":"func freeFull(freeFunc: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/glib\/queueprotocol\/getlength()","title":"func getLength() -> Int","type":"method"},{"path":"\/documentation\/glib\/queueprotocol\/index(data:)","title":"func index(data: gconstpointer?) -> Int","type":"method"},{"path":"\/documentation\/glib\/queueprotocol\/init_()","title":"func init_()","type":"method"},{"path":"\/documentation\/glib\/queueprotocol\/insertafter(sibling:data:)-2dwp6","title":"func insertAfter(sibling: ListRef?, data: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/queueprotocol\/insertafter(sibling:data:)-4w361","title":"func insertAfter<ListT>(sibling: ListT?, data: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/queueprotocol\/insertafterlink(sibling:link:)","title":"func insertAfterLink<ListT>(sibling: ListT?, link: ListT)","type":"method"},{"path":"\/documentation\/glib\/queueprotocol\/insertbefore(sibling:data:)-1tb45","title":"func insertBefore<ListT>(sibling: ListT?, data: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/queueprotocol\/insertbefore(sibling:data:)-7rkpl","title":"func insertBefore(sibling: ListRef?, data: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/queueprotocol\/insertbeforelink(sibling:link:)","title":"func insertBeforeLink<ListT>(sibling: ListT?, link: ListT)","type":"method"},{"path":"\/documentation\/glib\/queueprotocol\/insertsorted(data:func:userdata:)","title":"func insertSorted(data: gpointer?, func: GCompareDataFunc?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/queueprotocol\/linkindex(link:)","title":"func linkIndex<ListT>(link: ListT) -> Int","type":"method"},{"path":"\/documentation\/glib\/queueprotocol\/peekhead()","title":"func peekHead() -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/queueprotocol\/peekheadlink()","title":"func peekHeadLink() -> ReferenceListRef<gpointer>!","type":"method"},{"path":"\/documentation\/glib\/queueprotocol\/peeknth(n:)","title":"func peekNth(n: Int) -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/queueprotocol\/peeknthlink(n:)","title":"func peekNthLink(n: Int) -> ReferenceListRef<gpointer>!","type":"method"},{"path":"\/documentation\/glib\/queueprotocol\/peektail()","title":"func peekTail() -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/queueprotocol\/peektaillink()","title":"func peekTailLink() -> ReferenceListRef<gpointer>!","type":"method"},{"path":"\/documentation\/glib\/queueprotocol\/pophead()","title":"func popHead() -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/queueprotocol\/popheadlink()","title":"func popHeadLink() -> ReferenceListRef<gpointer>!","type":"method"},{"path":"\/documentation\/glib\/queueprotocol\/popnth(n:)","title":"func popNth(n: Int) -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/queueprotocol\/popnthlink(n:)","title":"func popNthLink(n: Int) -> ReferenceListRef<gpointer>!","type":"method"},{"path":"\/documentation\/glib\/queueprotocol\/poptail()","title":"func popTail() -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/queueprotocol\/poptaillink()","title":"func popTailLink() -> ReferenceListRef<gpointer>!","type":"method"},{"path":"\/documentation\/glib\/queueprotocol\/pushhead(data:)","title":"func pushHead(data: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/queueprotocol\/pushhead(link:)","title":"func pushHead<ListT>(link: ListT)","type":"method"},{"path":"\/documentation\/glib\/queueprotocol\/pushnth(data:n:)","title":"func pushNth(data: gpointer?, n: Int)","type":"method"},{"path":"\/documentation\/glib\/queueprotocol\/pushnthlink(n:link:)","title":"func pushNthLink<ListT>(n: Int, link: ListT)","type":"method"},{"path":"\/documentation\/glib\/queueprotocol\/pushtail(data:)","title":"func pushTail(data: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/queueprotocol\/pushtail(link:)","title":"func pushTail<ListT>(link: ListT)","type":"method"},{"path":"\/documentation\/glib\/queueprotocol\/remove(data:)","title":"func remove(data: gconstpointer?) -> Bool","type":"method"},{"path":"\/documentation\/glib\/queueprotocol\/removeall(data:)","title":"func removeAll(data: gconstpointer?) -> Int","type":"method"},{"path":"\/documentation\/glib\/queueprotocol\/reverse()","title":"func reverse()","type":"method"},{"path":"\/documentation\/glib\/queueprotocol\/sort(comparefunc:userdata:)","title":"func sort(compareFunc: GCompareDataFunc?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/queueprotocol\/unlink(link:)","title":"func unlink<ListT>(link: ListT)","type":"method"}],"path":"\/documentation\/glib\/queueprotocol","title":"QueueProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/rwlockprotocol\/clear()","title":"func clear()","type":"method"},{"path":"\/documentation\/glib\/rwlockprotocol\/init_()","title":"func init_()","type":"method"},{"path":"\/documentation\/glib\/rwlockprotocol\/readerlock()","title":"func readerLock()","type":"method"},{"path":"\/documentation\/glib\/rwlockprotocol\/readertrylock()","title":"func readerTrylock() -> Bool","type":"method"},{"path":"\/documentation\/glib\/rwlockprotocol\/readerunlock()","title":"func readerUnlock()","type":"method"},{"path":"\/documentation\/glib\/rwlockprotocol\/writerlock()","title":"func writerLock()","type":"method"},{"path":"\/documentation\/glib\/rwlockprotocol\/writertrylock()","title":"func writerTrylock() -> Bool","type":"method"},{"path":"\/documentation\/glib\/rwlockprotocol\/writerunlock()","title":"func writerUnlock()","type":"method"}],"path":"\/documentation\/glib\/rwlockprotocol","title":"RWLockProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/glib\/randprotocol\/rand_ptr-2fnjw","title":"var rand_ptr: UnsafeMutablePointer<GRand>!","type":"property"}],"title":"RandProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/glib\/randprotocol\/rand_ptr-9ym4x","title":"var rand_ptr: UnsafeMutablePointer<GRand>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/randprotocol\/cdouble()","title":"func CDouble() -> Double","type":"method"},{"path":"\/documentation\/glib\/randprotocol\/cint()","title":"func CInt() -> guint32","type":"method"},{"path":"\/documentation\/glib\/randprotocol\/copy()","title":"func copy() -> RandRef!","type":"method"},{"path":"\/documentation\/glib\/randprotocol\/doublerange(begin:end:)","title":"func doubleRange(begin: Double, end: Double) -> Double","type":"method"},{"path":"\/documentation\/glib\/randprotocol\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/glib\/randprotocol\/intrange(begin:end:)","title":"func intRange(begin: gint32, end: gint32) -> gint32","type":"method"},{"path":"\/documentation\/glib\/randprotocol\/set(seed:)","title":"func set(seed: guint32)","type":"method"},{"path":"\/documentation\/glib\/randprotocol\/setseedarray(seed:seedlength:)","title":"func setSeedArray(seed: UnsafePointer<guint32>!, seedLength: Int)","type":"method"}],"path":"\/documentation\/glib\/randprotocol","title":"RandProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/recmutexprotocol\/clear()","title":"func clear()","type":"method"},{"path":"\/documentation\/glib\/recmutexprotocol\/init_()","title":"func init_()","type":"method"},{"path":"\/documentation\/glib\/recmutexprotocol\/lock()","title":"func lock()","type":"method"},{"path":"\/documentation\/glib\/recmutexprotocol\/trylock()","title":"func trylock() -> Bool","type":"method"},{"path":"\/documentation\/glib\/recmutexprotocol\/unlock()","title":"func unlock()","type":"method"}],"path":"\/documentation\/glib\/recmutexprotocol","title":"RecMutexProtocol","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/glib\/refarrayprotocol\/element","title":"Element","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/refarrayprotocol\/count","title":"var count: Int","type":"property"},{"path":"\/documentation\/glib\/refarrayprotocol\/endindex","title":"var endIndex: Int","type":"property"},{"path":"\/documentation\/glib\/refarrayprotocol\/startindex","title":"var startIndex: Int","type":"property"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/glib\/refarrayprotocol\/subscript(_:)","title":"subscript(Int) -> Self.Element","type":"subscript"}],"path":"\/documentation\/glib\/refarrayprotocol","title":"RefArrayProtocol","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/glib\/reflistprotocol\/element-swift.associatedtype","title":"Element","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/reflistprotocol\/element-swift.property","title":"var element: Self.Element!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/reflistprotocol\/makeiterator()","title":"func makeIterator() -> RefListIterator<Self.Element>","type":"method"}],"path":"\/documentation\/glib\/reflistprotocol","title":"RefListProtocol","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/glib\/refslistprotocol\/element-swift.associatedtype","title":"Element","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/refslistprotocol\/element-swift.property","title":"var element: Self.Element!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/refslistprotocol\/makeiterator()","title":"func makeIterator() -> RefSListIterator<Self.Element>","type":"method"}],"path":"\/documentation\/glib\/refslistprotocol","title":"RefSListProtocol","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/glib\/refsequenceprotocol\/element","title":"Element","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/refsequenceprotocol\/count","title":"var count: Int","type":"property"},{"path":"\/documentation\/glib\/refsequenceprotocol\/endindex","title":"var endIndex: SequenceIterRef","type":"property"},{"path":"\/documentation\/glib\/refsequenceprotocol\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/glib\/refsequenceprotocol\/startindex","title":"var startIndex: SequenceIterRef","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/refsequenceprotocol\/index(_:offsetby:)","title":"func index(SequenceIterRef, offsetBy: Int) -> SequenceIterRef","type":"method"},{"path":"\/documentation\/glib\/refsequenceprotocol\/index(after:)","title":"func index(after: SequenceIterRef) -> SequenceIterRef","type":"method"},{"path":"\/documentation\/glib\/refsequenceprotocol\/index(before:)","title":"func index(before: SequenceIterRef) -> SequenceIterRef","type":"method"},{"path":"\/documentation\/glib\/refsequenceprotocol\/makeiterator()","title":"func makeIterator() -> RefSequenceIterator<Self.Element>","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/glib\/refsequenceprotocol\/subscript(_:)","title":"subscript(SequenceIterRef) -> Self.Element","type":"subscript"}],"path":"\/documentation\/glib\/refsequenceprotocol","title":"RefSequenceProtocol","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/glib\/referencearrayprotocol\/element","title":"Element","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/referencearrayprotocol\/count","title":"var count: Int","type":"property"},{"path":"\/documentation\/glib\/referencearrayprotocol\/endindex","title":"var endIndex: Int","type":"property"},{"path":"\/documentation\/glib\/referencearrayprotocol\/startindex","title":"var startIndex: Int","type":"property"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/glib\/referencearrayprotocol\/subscript(_:)","title":"subscript(Int) -> Self.Element","type":"subscript"}],"path":"\/documentation\/glib\/referencearrayprotocol","title":"ReferenceArrayProtocol","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/glib\/referencelistprotocol\/element-swift.associatedtype","title":"Element","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/referencelistprotocol\/element-swift.property","title":"var element: Self.Element!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/referencelistprotocol\/makeiterator()","title":"func makeIterator() -> ReferenceListIterator<Self.Element>","type":"method"}],"path":"\/documentation\/glib\/referencelistprotocol","title":"ReferenceListProtocol","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/glib\/referenceslistprotocol\/element-swift.associatedtype","title":"Element","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/referenceslistprotocol\/element-swift.property","title":"var element: Self.Element!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/referenceslistprotocol\/makeiterator()","title":"func makeIterator() -> ReferenceSListIterator<Self.Element>","type":"method"}],"path":"\/documentation\/glib\/referenceslistprotocol","title":"ReferenceSListProtocol","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/glib\/referencesequenceprotocol\/element","title":"Element","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/referencesequenceprotocol\/count","title":"var count: Int","type":"property"},{"path":"\/documentation\/glib\/referencesequenceprotocol\/endindex","title":"var endIndex: SequenceIterRef","type":"property"},{"path":"\/documentation\/glib\/referencesequenceprotocol\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/glib\/referencesequenceprotocol\/startindex","title":"var startIndex: SequenceIterRef","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/referencesequenceprotocol\/index(_:offsetby:)","title":"func index(SequenceIterRef, offsetBy: Int) -> SequenceIterRef","type":"method"},{"path":"\/documentation\/glib\/referencesequenceprotocol\/index(after:)","title":"func index(after: SequenceIterRef) -> SequenceIterRef","type":"method"},{"path":"\/documentation\/glib\/referencesequenceprotocol\/index(before:)","title":"func index(before: SequenceIterRef) -> SequenceIterRef","type":"method"},{"path":"\/documentation\/glib\/referencesequenceprotocol\/makeiterator()","title":"func makeIterator() -> ReferenceSequenceIterator<Self.Element>","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/glib\/referencesequenceprotocol\/subscript(_:)","title":"subscript(SequenceIterRef) -> Self.Element","type":"subscript"}],"path":"\/documentation\/glib\/referencesequenceprotocol","title":"ReferenceSequenceProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/regexprotocol\/capturecount","title":"var captureCount: Int","type":"property"},{"path":"\/documentation\/glib\/regexprotocol\/compileflags","title":"var compileFlags: RegexCompileFlags","type":"property"},{"path":"\/documentation\/glib\/regexprotocol\/hascrorlf","title":"var hasCrOrLf: Bool","type":"property"},{"path":"\/documentation\/glib\/regexprotocol\/matchflags","title":"var matchFlags: RegexMatchFlags","type":"property"},{"path":"\/documentation\/glib\/regexprotocol\/maxbackref","title":"var maxBackref: Int","type":"property"},{"path":"\/documentation\/glib\/regexprotocol\/maxlookbehind","title":"var maxLookbehind: Int","type":"property"},{"path":"\/documentation\/glib\/regexprotocol\/pattern","title":"var pattern: String!","type":"property"},{"children":[{"children":[{"path":"\/documentation\/glib\/regexprotocol\/regex_ptr-8n7zw","title":"var regex_ptr: UnsafeMutablePointer<GRegex>!","type":"property"}],"title":"RegexProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/glib\/regexprotocol\/regex_ptr-66oa5","title":"var regex_ptr: UnsafeMutablePointer<GRegex>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/regexprotocol\/getcapturecount()","title":"func getCaptureCount() -> Int","type":"method"},{"path":"\/documentation\/glib\/regexprotocol\/getcompileflags()","title":"func getCompileFlags() -> RegexCompileFlags","type":"method"},{"path":"\/documentation\/glib\/regexprotocol\/gethascrorlf()","title":"func getHasCrOrLf() -> Bool","type":"method"},{"path":"\/documentation\/glib\/regexprotocol\/getmatchflags()","title":"func getMatchFlags() -> RegexMatchFlags","type":"method"},{"path":"\/documentation\/glib\/regexprotocol\/getmaxbackref()","title":"func getMaxBackref() -> Int","type":"method"},{"path":"\/documentation\/glib\/regexprotocol\/getmaxlookbehind()","title":"func getMaxLookbehind() -> Int","type":"method"},{"path":"\/documentation\/glib\/regexprotocol\/getpattern()","title":"func getPattern() -> String!","type":"method"},{"path":"\/documentation\/glib\/regexprotocol\/getstringnumber(name:)","title":"func getStringNumber(name: UnsafePointer<gchar>!) -> Int","type":"method"},{"path":"\/documentation\/glib\/regexprotocol\/match(string:matchoptions:matchinfo:)","title":"func match(string: UnsafePointer<gchar>!, matchOptions: RegexMatchFlags, matchInfo: UnsafeMutablePointer<UnsafeMutablePointer<GMatchInfo>?>!) -> Bool","type":"method"},{"path":"\/documentation\/glib\/regexprotocol\/matchall(string:matchoptions:matchinfo:)","title":"func matchAll(string: UnsafePointer<gchar>!, matchOptions: RegexMatchFlags, matchInfo: UnsafeMutablePointer<UnsafeMutablePointer<GMatchInfo>?>!) -> Bool","type":"method"},{"path":"\/documentation\/glib\/regexprotocol\/matchallfull(string:stringlen:startposition:matchoptions:matchinfo:)","title":"func matchAllFull(string: UnsafePointer<gchar>!, stringLen: gssize, startPosition: Int, matchOptions: RegexMatchFlags, matchInfo: UnsafeMutablePointer<UnsafeMutablePointer<GMatchInfo>?>!) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/regexprotocol\/matchfull(string:stringlen:startposition:matchoptions:matchinfo:)","title":"func matchFull(string: UnsafePointer<gchar>!, stringLen: gssize, startPosition: Int, matchOptions: RegexMatchFlags, matchInfo: UnsafeMutablePointer<UnsafeMutablePointer<GMatchInfo>?>!) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/regexprotocol\/ref()","title":"func ref() -> RegexRef!","type":"method"},{"path":"\/documentation\/glib\/regexprotocol\/replace(string:stringlen:startposition:replacement:matchoptions:)","title":"func replace(string: UnsafePointer<gchar>!, stringLen: gssize, startPosition: Int, replacement: UnsafePointer<gchar>!, matchOptions: RegexMatchFlags) throws -> String!","type":"method"},{"path":"\/documentation\/glib\/regexprotocol\/replaceeval(string:stringlen:startposition:matchoptions:eval:userdata:)","title":"func replaceEval(string: UnsafePointer<gchar>!, stringLen: gssize, startPosition: Int, matchOptions: RegexMatchFlags, eval: GRegexEvalCallback?, userData: gpointer?) throws -> String!","type":"method"},{"path":"\/documentation\/glib\/regexprotocol\/replaceliteral(string:stringlen:startposition:replacement:matchoptions:)","title":"func replaceLiteral(string: UnsafePointer<gchar>!, stringLen: gssize, startPosition: Int, replacement: UnsafePointer<gchar>!, matchOptions: RegexMatchFlags) throws -> String!","type":"method"},{"path":"\/documentation\/glib\/regexprotocol\/split(string:matchoptions:)","title":"func split(string: UnsafePointer<gchar>!, matchOptions: RegexMatchFlags) -> UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!","type":"method"},{"path":"\/documentation\/glib\/regexprotocol\/splitfull(string:stringlen:startposition:matchoptions:maxtokens:)","title":"func splitFull(string: UnsafePointer<gchar>!, stringLen: gssize, startPosition: Int, matchOptions: RegexMatchFlags, maxTokens: Int) throws -> UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!","type":"method"},{"path":"\/documentation\/glib\/regexprotocol\/unref()","title":"func unref()","type":"method"}],"path":"\/documentation\/glib\/regexprotocol","title":"RegexProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/relationprotocol\/count(key:field:)","title":"func count(key: gconstpointer?, field: Int) -> Int","type":"method"},{"path":"\/documentation\/glib\/relationprotocol\/delete(key:field:)","title":"func delete(key: gconstpointer?, field: Int) -> Int","type":"method"},{"path":"\/documentation\/glib\/relationprotocol\/destroy()","title":"func destroy()","type":"method"},{"path":"\/documentation\/glib\/relationprotocol\/index(field:hashfunc:keyequalfunc:)","title":"func index(field: Int, hashFunc: GHashFunc?, keyEqualFunc: GEqualFunc?)","type":"method"},{"path":"\/documentation\/glib\/relationprotocol\/print()","title":"func print()","type":"method"},{"path":"\/documentation\/glib\/relationprotocol\/select(key:field:)","title":"func select(key: gconstpointer?, field: Int) -> TuplesRef!","type":"method"}],"path":"\/documentation\/glib\/relationprotocol","title":"RelationProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/slistprotocol\/data","title":"var data: gpointer?","type":"property"},{"path":"\/documentation\/glib\/slistprotocol\/next","title":"var next: SListRef!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/slistprotocol\/append(data:)","title":"func append(data: gpointer?) -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/slistprotocol\/concat(list2:)","title":"func concat<SListT>(list2: SListT) -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/slistprotocol\/copy()","title":"func copy() -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/slistprotocol\/copydeep(func:userdata:)","title":"func copyDeep(func: GCopyFunc?, userData: gpointer?) -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/slistprotocol\/delete(link:)","title":"func delete<SListT>(link: SListT) -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/slistprotocol\/find(data:)","title":"func find(data: gconstpointer?) -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/slistprotocol\/findcustom(data:func:)","title":"func findCustom(data: gconstpointer?, func: GCompareFunc?) -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/slistprotocol\/foreach(func:userdata:)","title":"func foreach(func: GFunc?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/slistprotocol\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/glib\/slistprotocol\/free1()","title":"func free1()","type":"method"},{"path":"\/documentation\/glib\/slistprotocol\/freefull(freefunc:)","title":"func freeFull(freeFunc: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/glib\/slistprotocol\/index(data:)","title":"func index(data: gconstpointer?) -> Int","type":"method"},{"path":"\/documentation\/glib\/slistprotocol\/insert(data:position:)","title":"func insert(data: gpointer?, position: Int) -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/slistprotocol\/insertbefore(sibling:data:)","title":"func insertBefore<SListT>(sibling: SListT, data: gpointer?) -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/slistprotocol\/insertsorted(data:func:)","title":"func insertSorted(data: gpointer?, func: GCompareFunc?) -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/slistprotocol\/insertsortedwith(data:func:userdata:)","title":"func insertSortedWith(data: gpointer?, func: GCompareDataFunc?, userData: gpointer?) -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/slistprotocol\/last()","title":"func last() -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/slistprotocol\/length()","title":"func length() -> Int","type":"method"},{"path":"\/documentation\/glib\/slistprotocol\/nth(n:)","title":"func nth(n: Int) -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/slistprotocol\/nthdata(n:)","title":"func nthData(n: Int) -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/slistprotocol\/position(llink:)","title":"func position<SListT>(llink: SListT) -> Int","type":"method"},{"path":"\/documentation\/glib\/slistprotocol\/prepend(data:)","title":"func prepend(data: gpointer?) -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/slistprotocol\/remove(data:)","title":"func remove(data: gconstpointer?) -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/slistprotocol\/remove(link:)","title":"func remove<SListT>(link: SListT) -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/slistprotocol\/removeall(data:)","title":"func removeAll(data: gconstpointer?) -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/slistprotocol\/reverse()","title":"func reverse() -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/slistprotocol\/sort(comparefunc:)","title":"func sort(compareFunc: GCompareFunc?) -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/slistprotocol\/sortwithdata(comparefunc:userdata:)","title":"func sortWithData(compareFunc: GCompareDataFunc?, userData: gpointer?) -> SListRef!","type":"method"}],"path":"\/documentation\/glib\/slistprotocol","title":"SListProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/scannerconfigprotocol\/casesensitive","title":"var caseSensitive: guint","type":"property"},{"path":"\/documentation\/glib\/scannerconfigprotocol\/char2token","title":"var char2Token: guint","type":"property"},{"path":"\/documentation\/glib\/scannerconfigprotocol\/cpaircommentsingle","title":"var cpairCommentSingle: UnsafeMutablePointer<gchar>!","type":"property"},{"path":"\/documentation\/glib\/scannerconfigprotocol\/csetidentifierfirst","title":"var csetIDentifierFirst: UnsafeMutablePointer<gchar>!","type":"property"},{"path":"\/documentation\/glib\/scannerconfigprotocol\/csetidentifiernth","title":"var csetIDentifierNth: UnsafeMutablePointer<gchar>!","type":"property"},{"path":"\/documentation\/glib\/scannerconfigprotocol\/csetskipcharacters","title":"var csetSkipCharacters: UnsafeMutablePointer<gchar>!","type":"property"},{"path":"\/documentation\/glib\/scannerconfigprotocol\/identifier2string","title":"var identifier2String: guint","type":"property"},{"path":"\/documentation\/glib\/scannerconfigprotocol\/int2float","title":"var int2Float: guint","type":"property"},{"path":"\/documentation\/glib\/scannerconfigprotocol\/numbers2int","title":"var numbers2Int: guint","type":"property"},{"path":"\/documentation\/glib\/scannerconfigprotocol\/scanbinary","title":"var scanBinary: guint","type":"property"},{"path":"\/documentation\/glib\/scannerconfigprotocol\/scancommentmulti","title":"var scanCommentMulti: guint","type":"property"},{"path":"\/documentation\/glib\/scannerconfigprotocol\/scanfloat","title":"var scanFloat: guint","type":"property"},{"path":"\/documentation\/glib\/scannerconfigprotocol\/scanhex","title":"var scanHex: guint","type":"property"},{"path":"\/documentation\/glib\/scannerconfigprotocol\/scanhexdollar","title":"var scanHexDollar: guint","type":"property"},{"path":"\/documentation\/glib\/scannerconfigprotocol\/scanidentifier","title":"var scanIDentifier: guint","type":"property"},{"path":"\/documentation\/glib\/scannerconfigprotocol\/scanidentifier1char","title":"var scanIDentifier1char: guint","type":"property"},{"path":"\/documentation\/glib\/scannerconfigprotocol\/scanidentifiernull","title":"var scanIDentifierNULL: guint","type":"property"},{"path":"\/documentation\/glib\/scannerconfigprotocol\/scanoctal","title":"var scanOctal: guint","type":"property"},{"path":"\/documentation\/glib\/scannerconfigprotocol\/scanstringdq","title":"var scanStringDq: guint","type":"property"},{"path":"\/documentation\/glib\/scannerconfigprotocol\/scanstringsq","title":"var scanStringSq: guint","type":"property"},{"path":"\/documentation\/glib\/scannerconfigprotocol\/scansymbols","title":"var scanSymbols: guint","type":"property"},{"path":"\/documentation\/glib\/scannerconfigprotocol\/scope0fallback","title":"var scope0Fallback: guint","type":"property"},{"path":"\/documentation\/glib\/scannerconfigprotocol\/skipcommentmulti","title":"var skipCommentMulti: guint","type":"property"},{"path":"\/documentation\/glib\/scannerconfigprotocol\/skipcommentsingle","title":"var skipCommentSingle: guint","type":"property"},{"path":"\/documentation\/glib\/scannerconfigprotocol\/storeint64","title":"var storeInt64: guint","type":"property"},{"path":"\/documentation\/glib\/scannerconfigprotocol\/symbol2token","title":"var symbol2Token: guint","type":"property"}],"path":"\/documentation\/glib\/scannerconfigprotocol","title":"ScannerConfigProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/scannerprotocol\/config","title":"var config: ScannerConfigRef!","type":"property"},{"path":"\/documentation\/glib\/scannerprotocol\/inputname","title":"var inputName: UnsafePointer<gchar>!","type":"property"},{"path":"\/documentation\/glib\/scannerprotocol\/line","title":"var line: guint","type":"property"},{"path":"\/documentation\/glib\/scannerprotocol\/maxparseerrors","title":"var maxParseErrors: guint","type":"property"},{"path":"\/documentation\/glib\/scannerprotocol\/msghandler","title":"var msgHandler: GScannerMsgFunc!","type":"property"},{"path":"\/documentation\/glib\/scannerprotocol\/nextline","title":"var nextLine: guint","type":"property"},{"path":"\/documentation\/glib\/scannerprotocol\/nextposition","title":"var nextPosition: guint","type":"property"},{"path":"\/documentation\/glib\/scannerprotocol\/nexttoken","title":"var nextToken: GTokenType","type":"property"},{"path":"\/documentation\/glib\/scannerprotocol\/nextvalue","title":"var nextValue: GTokenValue","type":"property"},{"path":"\/documentation\/glib\/scannerprotocol\/parseerrors","title":"var parseErrors: guint","type":"property"},{"path":"\/documentation\/glib\/scannerprotocol\/position","title":"var position: guint","type":"property"},{"path":"\/documentation\/glib\/scannerprotocol\/qdata","title":"var qdata: DataRef!","type":"property"},{"path":"\/documentation\/glib\/scannerprotocol\/token","title":"var token: GTokenType","type":"property"},{"path":"\/documentation\/glib\/scannerprotocol\/userdata","title":"var userData: gpointer?","type":"property"},{"path":"\/documentation\/glib\/scannerprotocol\/value","title":"var value: GTokenValue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/scannerprotocol\/curline()","title":"func curLine() -> Int","type":"method"},{"path":"\/documentation\/glib\/scannerprotocol\/curposition()","title":"func curPosition() -> Int","type":"method"},{"path":"\/documentation\/glib\/scannerprotocol\/curtoken()","title":"func curToken() -> GTokenType","type":"method"},{"path":"\/documentation\/glib\/scannerprotocol\/curvalue()","title":"func curValue() -> GTokenValue","type":"method"},{"path":"\/documentation\/glib\/scannerprotocol\/destroy()","title":"func destroy()","type":"method"},{"path":"\/documentation\/glib\/scannerprotocol\/eof()","title":"func eof() -> Bool","type":"method"},{"path":"\/documentation\/glib\/scannerprotocol\/getnexttoken()","title":"func getNextToken() -> GTokenType","type":"method"},{"path":"\/documentation\/glib\/scannerprotocol\/input(text:textlen:)","title":"func input(text: UnsafePointer<gchar>!, textLen: Int)","type":"method"},{"path":"\/documentation\/glib\/scannerprotocol\/inputfile(inputfd:)","title":"func inputFile(inputFd: Int)","type":"method"},{"path":"\/documentation\/glib\/scannerprotocol\/lookup(symbol:)","title":"func lookup(symbol: UnsafePointer<gchar>!) -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/scannerprotocol\/peeknexttoken()","title":"func peekNextToken() -> GTokenType","type":"method"},{"path":"\/documentation\/glib\/scannerprotocol\/scopeaddsymbol(scopeid:symbol:value:)","title":"func scopeAddSymbol(scopeID: Int, symbol: UnsafePointer<gchar>!, value: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/scannerprotocol\/scopeforeachsymbol(scopeid:func:userdata:)","title":"func scopeForeachSymbol(scopeID: Int, func: GHFunc?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/scannerprotocol\/scopelookupsymbol(scopeid:symbol:)","title":"func scopeLookupSymbol(scopeID: Int, symbol: UnsafePointer<gchar>!) -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/scannerprotocol\/scoperemovesymbol(scopeid:symbol:)","title":"func scopeRemoveSymbol(scopeID: Int, symbol: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/glib\/scannerprotocol\/setscope(scopeid:)","title":"func setScope(scopeID: Int) -> Int","type":"method"},{"path":"\/documentation\/glib\/scannerprotocol\/syncfileoffset()","title":"func syncFileOffset()","type":"method"},{"path":"\/documentation\/glib\/scannerprotocol\/unexptoken(expectedtoken:identifierspec:symbolspec:symbolname:message:iserror:)","title":"func unexpToken(expectedToken: GTokenType, identifierSpec: UnsafePointer<gchar>!, symbolSpec: UnsafePointer<gchar>!, symbolName: UnsafePointer<gchar>!, message: UnsafePointer<gchar>!, isError: Int)","type":"method"}],"path":"\/documentation\/glib\/scannerprotocol","title":"ScannerProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/sequenceiterprotocol\/isbegin","title":"var isBegin: Bool","type":"property"},{"path":"\/documentation\/glib\/sequenceiterprotocol\/isend","title":"var isEnd: Bool","type":"property"},{"path":"\/documentation\/glib\/sequenceiterprotocol\/position","title":"var position: Int","type":"property"},{"path":"\/documentation\/glib\/sequenceiterprotocol\/sequence","title":"var sequence: SequenceRef!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/sequenceiterprotocol\/compare(b:)","title":"func compare<SequenceIterT>(b: SequenceIterT) -> Int","type":"method"},{"path":"\/documentation\/glib\/sequenceiterprotocol\/getposition()","title":"func getPosition() -> Int","type":"method"},{"path":"\/documentation\/glib\/sequenceiterprotocol\/getsequence()","title":"func getSequence() -> SequenceRef!","type":"method"},{"path":"\/documentation\/glib\/sequenceiterprotocol\/move(delta:)","title":"func move(delta: Int) -> SequenceIterRef!","type":"method"},{"path":"\/documentation\/glib\/sequenceiterprotocol\/next()","title":"func next() -> SequenceIterRef!","type":"method"},{"path":"\/documentation\/glib\/sequenceiterprotocol\/prev()","title":"func prev() -> SequenceIterRef!","type":"method"},{"path":"\/documentation\/glib\/sequenceiterprotocol\/sequenceforeachrange(end:func:userdata:)","title":"func sequenceForeachRange<SequenceIterT>(end: SequenceIterT, func: GFunc?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/sequenceiterprotocol\/sequenceget()","title":"func sequenceGet() -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/sequenceiterprotocol\/sequenceinsertbefore(data:)","title":"func sequenceInsertBefore(data: gpointer?) -> SequenceIterRef!","type":"method"},{"path":"\/documentation\/glib\/sequenceiterprotocol\/sequencemove(dest:)","title":"func sequenceMove<SequenceIterT>(dest: SequenceIterT)","type":"method"},{"path":"\/documentation\/glib\/sequenceiterprotocol\/sequencemoverange(begin:end:)","title":"func sequenceMoveRange<SequenceIterT>(begin: SequenceIterT, end: SequenceIterT)","type":"method"},{"path":"\/documentation\/glib\/sequenceiterprotocol\/sequencerangegetmidpoint(end:)","title":"func sequenceRangeGetMidpoint<SequenceIterT>(end: SequenceIterT) -> SequenceIterRef!","type":"method"},{"path":"\/documentation\/glib\/sequenceiterprotocol\/sequenceremove()","title":"func sequenceRemove()","type":"method"},{"path":"\/documentation\/glib\/sequenceiterprotocol\/sequenceremoverange(end:)","title":"func sequenceRemoveRange<SequenceIterT>(end: SequenceIterT)","type":"method"},{"path":"\/documentation\/glib\/sequenceiterprotocol\/sequenceset(data:)","title":"func sequenceSet(data: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/sequenceiterprotocol\/sequencesortchanged(cmpfunc:cmpdata:)","title":"func sequenceSortChanged(cmpFunc: GCompareDataFunc?, cmpData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/sequenceiterprotocol\/sequencesortchangediter(itercmp:cmpdata:)","title":"func sequenceSortChangedIter(iterCmp: GSequenceIterCompareFunc?, cmpData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/sequenceiterprotocol\/sequenceswap(b:)","title":"func sequenceSwap<SequenceIterT>(b: SequenceIterT)","type":"method"}],"path":"\/documentation\/glib\/sequenceiterprotocol","title":"SequenceIterProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/sequenceprotocol\/beginiter","title":"var beginIter: SequenceIterRef!","type":"property"},{"path":"\/documentation\/glib\/sequenceprotocol\/enditer","title":"var endIter: SequenceIterRef!","type":"property"},{"path":"\/documentation\/glib\/sequenceprotocol\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/glib\/sequenceprotocol\/length","title":"var length: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/sequenceprotocol\/append(data:)","title":"func append(data: gpointer?) -> SequenceIterRef!","type":"method"},{"path":"\/documentation\/glib\/sequenceprotocol\/foreach(func:userdata:)","title":"func foreach(func: GFunc?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/sequenceprotocol\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/glib\/sequenceprotocol\/getbeginiter()","title":"func getBeginIter() -> SequenceIterRef!","type":"method"},{"path":"\/documentation\/glib\/sequenceprotocol\/getenditer()","title":"func getEndIter() -> SequenceIterRef!","type":"method"},{"path":"\/documentation\/glib\/sequenceprotocol\/getiterat(pos:)","title":"func getIterAt(pos: Int) -> SequenceIterRef!","type":"method"},{"path":"\/documentation\/glib\/sequenceprotocol\/getlength()","title":"func getLength() -> Int","type":"method"},{"path":"\/documentation\/glib\/sequenceprotocol\/insertsorted(data:cmpfunc:cmpdata:)","title":"func insertSorted(data: gpointer?, cmpFunc: GCompareDataFunc?, cmpData: gpointer?) -> SequenceIterRef!","type":"method"},{"path":"\/documentation\/glib\/sequenceprotocol\/insertsortediter(data:itercmp:cmpdata:)","title":"func insertSortedIter(data: gpointer?, iterCmp: GSequenceIterCompareFunc?, cmpData: gpointer?) -> SequenceIterRef!","type":"method"},{"path":"\/documentation\/glib\/sequenceprotocol\/lookup(data:cmpfunc:cmpdata:)","title":"func lookup(data: gpointer?, cmpFunc: GCompareDataFunc?, cmpData: gpointer?) -> SequenceIterRef!","type":"method"},{"path":"\/documentation\/glib\/sequenceprotocol\/lookupiter(data:itercmp:cmpdata:)","title":"func lookupIter(data: gpointer?, iterCmp: GSequenceIterCompareFunc?, cmpData: gpointer?) -> SequenceIterRef!","type":"method"},{"path":"\/documentation\/glib\/sequenceprotocol\/prepend(data:)","title":"func prepend(data: gpointer?) -> SequenceIterRef!","type":"method"},{"path":"\/documentation\/glib\/sequenceprotocol\/search(data:cmpfunc:cmpdata:)","title":"func search(data: gpointer?, cmpFunc: GCompareDataFunc?, cmpData: gpointer?) -> SequenceIterRef!","type":"method"},{"path":"\/documentation\/glib\/sequenceprotocol\/searchiter(data:itercmp:cmpdata:)","title":"func searchIter(data: gpointer?, iterCmp: GSequenceIterCompareFunc?, cmpData: gpointer?) -> SequenceIterRef!","type":"method"},{"path":"\/documentation\/glib\/sequenceprotocol\/sort(cmpfunc:cmpdata:)","title":"func sort(cmpFunc: GCompareDataFunc?, cmpData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/sequenceprotocol\/sortiter(cmpfunc:cmpdata:)","title":"func sortIter(cmpFunc: GSequenceIterCompareFunc?, cmpData: gpointer?)","type":"method"}],"path":"\/documentation\/glib\/sequenceprotocol","title":"SequenceProtocol","type":"protocol"},{"path":"\/documentation\/glib\/sourcecallbackfuncsprotocol","title":"SourceCallbackFuncsProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/sourcefuncsprotocol\/check","title":"var check: GSourceFuncsCheckFunc!","type":"property"},{"path":"\/documentation\/glib\/sourcefuncsprotocol\/dispatch","title":"var dispatch: GSourceFuncsDispatchFunc!","type":"property"},{"path":"\/documentation\/glib\/sourcefuncsprotocol\/finalize","title":"var finalize: GSourceFuncsFinalizeFunc!","type":"property"},{"path":"\/documentation\/glib\/sourcefuncsprotocol\/prepare","title":"var prepare: GSourceFuncsPrepareFunc!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/sourcefuncsprotocol\/sourceremovebyfuncs(userdata:)","title":"func sourceRemoveByFuncs(userData: gpointer?) -> Bool","type":"method"}],"path":"\/documentation\/glib\/sourcefuncsprotocol","title":"SourceFuncsProtocol","type":"protocol"},{"path":"\/documentation\/glib\/sourceprivateprotocol","title":"SourcePrivateProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/sourceprotocol\/canrecurse","title":"var canRecurse: Bool","type":"property"},{"path":"\/documentation\/glib\/sourceprotocol\/context","title":"var context: MainContextRef!","type":"property"},{"path":"\/documentation\/glib\/sourceprotocol\/id","title":"var id: Int","type":"property"},{"path":"\/documentation\/glib\/sourceprotocol\/isdestroyed","title":"var isDestroyed: Bool","type":"property"},{"path":"\/documentation\/glib\/sourceprotocol\/name","title":"var name: String!","type":"property"},{"path":"\/documentation\/glib\/sourceprotocol\/priority","title":"var priority: Int","type":"property"},{"path":"\/documentation\/glib\/sourceprotocol\/readytime","title":"var readyTime: gint64","type":"property"},{"children":[{"children":[{"path":"\/documentation\/glib\/sourceprotocol\/source_ptr-38whh","title":"var source_ptr: UnsafeMutablePointer<GSource>!","type":"property"}],"title":"SourceProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/glib\/sourceprotocol\/source_ptr-5yy6y","title":"var source_ptr: UnsafeMutablePointer<GSource>!","type":"property"},{"path":"\/documentation\/glib\/sourceprotocol\/time","title":"var time: gint64","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/sourceprotocol\/add(childsource:)","title":"func add<SourceT>(childSource: SourceT)","type":"method"},{"path":"\/documentation\/glib\/sourceprotocol\/addpoll(fd:)","title":"func addPoll<PollFDT>(fd: PollFDT)","type":"method"},{"path":"\/documentation\/glib\/sourceprotocol\/addunix(fd:events:)","title":"func addUnix(fd: Int, events: IOCondition) -> gpointer!","type":"method"},{"path":"\/documentation\/glib\/sourceprotocol\/attach(context:)-2g6ha","title":"func attach<MainContextT>(context: MainContextT?) -> Int","type":"method"},{"path":"\/documentation\/glib\/sourceprotocol\/attach(context:)-wpxn","title":"func attach(context: MainContextRef?) -> Int","type":"method"},{"path":"\/documentation\/glib\/sourceprotocol\/destroy()","title":"func destroy()","type":"method"},{"path":"\/documentation\/glib\/sourceprotocol\/getcanrecurse()","title":"func getCanRecurse() -> Bool","type":"method"},{"path":"\/documentation\/glib\/sourceprotocol\/getcontext()","title":"func getContext() -> MainContextRef!","type":"method"},{"path":"\/documentation\/glib\/sourceprotocol\/getcurrenttime(timeval:)","title":"func getCurrentTime<TimeValT>(timeval: TimeValT)","type":"method"},{"path":"\/documentation\/glib\/sourceprotocol\/getid()","title":"func getID() -> Int","type":"method"},{"path":"\/documentation\/glib\/sourceprotocol\/getname()","title":"func getName() -> String!","type":"method"},{"path":"\/documentation\/glib\/sourceprotocol\/getpriority()","title":"func getPriority() -> Int","type":"method"},{"path":"\/documentation\/glib\/sourceprotocol\/getreadytime()","title":"func getReadyTime() -> gint64","type":"method"},{"path":"\/documentation\/glib\/sourceprotocol\/gettime()","title":"func getTime() -> gint64","type":"method"},{"path":"\/documentation\/glib\/sourceprotocol\/modifyunixfd(tag:newevents:)","title":"func modifyUnixFd(tag: gpointer!, newEvents: IOCondition)","type":"method"},{"path":"\/documentation\/glib\/sourceprotocol\/queryunixfd(tag:)","title":"func queryUnixFd(tag: gpointer!) -> IOCondition","type":"method"},{"path":"\/documentation\/glib\/sourceprotocol\/ref()","title":"func ref() -> SourceRef!","type":"method"},{"path":"\/documentation\/glib\/sourceprotocol\/remove(childsource:)","title":"func remove<SourceT>(childSource: SourceT)","type":"method"},{"path":"\/documentation\/glib\/sourceprotocol\/removepoll(fd:)","title":"func removePoll<PollFDT>(fd: PollFDT)","type":"method"},{"path":"\/documentation\/glib\/sourceprotocol\/removeunixfd(tag:)","title":"func removeUnixFd(tag: gpointer!)","type":"method"},{"path":"\/documentation\/glib\/sourceprotocol\/set(canrecurse:)","title":"func set(canRecurse: Bool)","type":"method"},{"path":"\/documentation\/glib\/sourceprotocol\/set(funcs:)","title":"func set<SourceFuncsT>(funcs: SourceFuncsT)","type":"method"},{"path":"\/documentation\/glib\/sourceprotocol\/set(name:)","title":"func set(name: UnsafePointer<CChar>!)","type":"method"},{"path":"\/documentation\/glib\/sourceprotocol\/set(priority:)","title":"func set(priority: Int)","type":"method"},{"path":"\/documentation\/glib\/sourceprotocol\/set(readytime:)","title":"func set(readyTime: gint64)","type":"method"},{"path":"\/documentation\/glib\/sourceprotocol\/setcallback(func:data:notify:)","title":"func setCallback(func: GSourceFunc?, data: gpointer?, notify: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/glib\/sourceprotocol\/setcallbackindirect(callbackdata:callbackfuncs:)","title":"func setCallbackIndirect<SourceCallbackFuncsT>(callbackData: gpointer?, callbackFuncs: SourceCallbackFuncsT)","type":"method"},{"path":"\/documentation\/glib\/sourceprotocol\/setdisposefunction(dispose:)","title":"func setDisposeFunction(dispose: GSourceDisposeFunc?)","type":"method"},{"path":"\/documentation\/glib\/sourceprotocol\/setstatic(name:)","title":"func setStatic(name: UnsafePointer<CChar>!)","type":"method"},{"path":"\/documentation\/glib\/sourceprotocol\/unref()","title":"func unref()","type":"method"}],"path":"\/documentation\/glib\/sourceprotocol","title":"SourceProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/statbufprotocol\/lstat(filename:)","title":"func lstat(filename: UnsafePointer<gchar>!) -> Int","type":"method"},{"path":"\/documentation\/glib\/statbufprotocol\/stat(filename:)","title":"func stat(filename: UnsafePointer<gchar>!) -> Int","type":"method"}],"path":"\/documentation\/glib\/statbufprotocol","title":"StatBufProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/staticmutexprotocol\/mutex","title":"var mutex: MutexRef!","type":"property"},{"path":"\/documentation\/glib\/staticmutexprotocol\/muteximpl","title":"var mutexImpl: MutexRef!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/staticmutexprotocol\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/glib\/staticmutexprotocol\/getmuteximpl()","title":"func getMutexImpl() -> MutexRef!","type":"method"},{"path":"\/documentation\/glib\/staticmutexprotocol\/init_()","title":"func init_()","type":"method"}],"path":"\/documentation\/glib\/staticmutexprotocol","title":"StaticMutexProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/staticprivateprotocol\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/glib\/staticprivateprotocol\/get()","title":"func get() -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/staticprivateprotocol\/init_()","title":"func init_()","type":"method"},{"path":"\/documentation\/glib\/staticprivateprotocol\/set(data:notify:)","title":"func set(data: gpointer?, notify: GDestroyNotify?)","type":"method"}],"path":"\/documentation\/glib\/staticprivateprotocol","title":"StaticPrivateProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/staticrwlockprotocol\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/glib\/staticrwlockprotocol\/init_()","title":"func init_()","type":"method"},{"path":"\/documentation\/glib\/staticrwlockprotocol\/readerlock()","title":"func readerLock()","type":"method"},{"path":"\/documentation\/glib\/staticrwlockprotocol\/readertrylock()","title":"func readerTrylock() -> Bool","type":"method"},{"path":"\/documentation\/glib\/staticrwlockprotocol\/readerunlock()","title":"func readerUnlock()","type":"method"},{"path":"\/documentation\/glib\/staticrwlockprotocol\/writerlock()","title":"func writerLock()","type":"method"},{"path":"\/documentation\/glib\/staticrwlockprotocol\/writertrylock()","title":"func writerTrylock() -> Bool","type":"method"},{"path":"\/documentation\/glib\/staticrwlockprotocol\/writerunlock()","title":"func writerUnlock()","type":"method"}],"path":"\/documentation\/glib\/staticrwlockprotocol","title":"StaticRWLockProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/staticrecmutexprotocol\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/glib\/staticrecmutexprotocol\/init_()","title":"func init_()","type":"method"},{"path":"\/documentation\/glib\/staticrecmutexprotocol\/lock()","title":"func lock()","type":"method"},{"path":"\/documentation\/glib\/staticrecmutexprotocol\/lockfull(depth:)","title":"func lockFull(depth: Int)","type":"method"},{"path":"\/documentation\/glib\/staticrecmutexprotocol\/trylock()","title":"func trylock() -> Bool","type":"method"},{"path":"\/documentation\/glib\/staticrecmutexprotocol\/unlock()","title":"func unlock()","type":"method"},{"path":"\/documentation\/glib\/staticrecmutexprotocol\/unlockfull()","title":"func unlockFull() -> Int","type":"method"}],"path":"\/documentation\/glib\/staticrecmutexprotocol","title":"StaticRecMutexProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/stringchunkprotocol\/clear()","title":"func clear()","type":"method"},{"path":"\/documentation\/glib\/stringchunkprotocol\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/glib\/stringchunkprotocol\/insert(string:)","title":"func insert(string: UnsafePointer<gchar>!) -> String!","type":"method"},{"path":"\/documentation\/glib\/stringchunkprotocol\/insertconst(string:)","title":"func insertConst(string: UnsafePointer<gchar>!) -> String!","type":"method"},{"path":"\/documentation\/glib\/stringchunkprotocol\/insertlen(string:len:)","title":"func insertLen(string: UnsafePointer<gchar>!, len: gssize) -> String!","type":"method"}],"path":"\/documentation\/glib\/stringchunkprotocol","title":"StringChunkProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/stringprotocol\/allocatedlen","title":"var allocatedLen: gsize","type":"property"},{"children":[{"children":[{"path":"\/documentation\/glib\/stringprotocol\/gstring_ptr-5tbd4","title":"var gstring_ptr: UnsafeMutablePointer<GString>!","type":"property"}],"title":"StringProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/glib\/stringprotocol\/gstring_ptr-1e9b4","title":"var gstring_ptr: UnsafeMutablePointer<GString>!","type":"property"},{"path":"\/documentation\/glib\/stringprotocol\/len","title":"var len: gsize","type":"property"},{"path":"\/documentation\/glib\/stringprotocol\/str","title":"var str: UnsafeMutablePointer<gchar>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/stringprotocol\/append(c:)","title":"func append(c: gchar) -> StringRef!","type":"method"},{"path":"\/documentation\/glib\/stringprotocol\/append(val:)","title":"func append(val: UnsafePointer<gchar>!) -> StringRef!","type":"method"},{"path":"\/documentation\/glib\/stringprotocol\/appendlen(val:len:)","title":"func appendLen(val: UnsafePointer<gchar>!, len: gssize) -> StringRef!","type":"method"},{"path":"\/documentation\/glib\/stringprotocol\/appenduriescaped(unescaped:reservedcharsallowed:allowutf8:)","title":"func appendURIEscaped(unescaped: UnsafePointer<gchar>!, reservedCharsAllowed: UnsafePointer<gchar>!, allowUTF8: Bool) -> StringRef!","type":"method"},{"path":"\/documentation\/glib\/stringprotocol\/appendunichar(wc:)","title":"func appendUnichar(wc: gunichar) -> StringRef!","type":"method"},{"path":"\/documentation\/glib\/stringprotocol\/appendvprintf(format:args:)","title":"func appendVprintf(format: UnsafePointer<gchar>!, args: CVaListPointer)","type":"method"},{"path":"\/documentation\/glib\/stringprotocol\/asciidown()","title":"func asciiDown() -> StringRef!","type":"method"},{"path":"\/documentation\/glib\/stringprotocol\/asciiup()","title":"func asciiUp() -> StringRef!","type":"method"},{"path":"\/documentation\/glib\/stringprotocol\/assign(rval:)","title":"func assign(rval: UnsafePointer<gchar>!) -> StringRef!","type":"method"},{"path":"\/documentation\/glib\/stringprotocol\/down()","title":"func down() -> StringRef!","type":"method"},{"path":"\/documentation\/glib\/stringprotocol\/equal(v2:)","title":"func equal<StringTypeT>(v2: StringTypeT) -> Bool","type":"method"},{"path":"\/documentation\/glib\/stringprotocol\/erase(pos:len:)","title":"func erase(pos: gssize, len: gssize) -> StringRef!","type":"method"},{"path":"\/documentation\/glib\/stringprotocol\/free(freesegment:)","title":"func free(freeSegment: Bool) -> String!","type":"method"},{"path":"\/documentation\/glib\/stringprotocol\/freeandsteal()","title":"func freeAndSteal() -> String!","type":"method"},{"path":"\/documentation\/glib\/stringprotocol\/freetobytes()","title":"func freeToBytes() -> BytesRef!","type":"method"},{"path":"\/documentation\/glib\/stringprotocol\/hash()","title":"func hash() -> Int","type":"method"},{"path":"\/documentation\/glib\/stringprotocol\/insert(pos:val:)","title":"func insert(pos: gssize, val: UnsafePointer<gchar>!) -> StringRef!","type":"method"},{"path":"\/documentation\/glib\/stringprotocol\/insertc(pos:c:)","title":"func insertC(pos: gssize, c: gchar) -> StringRef!","type":"method"},{"path":"\/documentation\/glib\/stringprotocol\/insertlen(pos:val:len:)","title":"func insertLen(pos: gssize, val: UnsafePointer<gchar>!, len: gssize) -> StringRef!","type":"method"},{"path":"\/documentation\/glib\/stringprotocol\/insertunichar(pos:wc:)","title":"func insertUnichar(pos: gssize, wc: gunichar) -> StringRef!","type":"method"},{"path":"\/documentation\/glib\/stringprotocol\/overwrite(pos:val:)","title":"func overwrite(pos: Int, val: UnsafePointer<gchar>!) -> StringRef!","type":"method"},{"path":"\/documentation\/glib\/stringprotocol\/overwritelen(pos:val:len:)","title":"func overwriteLen(pos: Int, val: UnsafePointer<gchar>!, len: gssize) -> StringRef!","type":"method"},{"path":"\/documentation\/glib\/stringprotocol\/prepend(c:)","title":"func prepend(c: gchar) -> StringRef!","type":"method"},{"path":"\/documentation\/glib\/stringprotocol\/prepend(val:)","title":"func prepend(val: UnsafePointer<gchar>!) -> StringRef!","type":"method"},{"path":"\/documentation\/glib\/stringprotocol\/prependlen(val:len:)","title":"func prependLen(val: UnsafePointer<gchar>!, len: gssize) -> StringRef!","type":"method"},{"path":"\/documentation\/glib\/stringprotocol\/prependunichar(wc:)","title":"func prependUnichar(wc: gunichar) -> StringRef!","type":"method"},{"path":"\/documentation\/glib\/stringprotocol\/replace(find:replace:limit:)","title":"func replace(find: UnsafePointer<gchar>!, replace: UnsafePointer<gchar>!, limit: Int) -> Int","type":"method"},{"path":"\/documentation\/glib\/stringprotocol\/setsize(len:)","title":"func setSize(len: Int) -> StringRef!","type":"method"},{"path":"\/documentation\/glib\/stringprotocol\/truncate(len:)","title":"func truncate(len: Int) -> StringRef!","type":"method"},{"path":"\/documentation\/glib\/stringprotocol\/up()","title":"func up() -> StringRef!","type":"method"},{"path":"\/documentation\/glib\/stringprotocol\/vprintf(format:args:)","title":"func vprintf(format: UnsafePointer<gchar>!, args: CVaListPointer)","type":"method"}],"path":"\/documentation\/glib\/stringprotocol","title":"StringProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/glib\/strvbuilderprotocol\/strv_builder_ptr-3nroh","title":"var strv_builder_ptr: UnsafeMutablePointer<GStrvBuilder>!","type":"property"}],"title":"StrvBuilderProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/glib\/strvbuilderprotocol\/strv_builder_ptr-9g4zw","title":"var strv_builder_ptr: UnsafeMutablePointer<GStrvBuilder>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/strvbuilderprotocol\/add(value:)","title":"func add(value: UnsafePointer<CChar>!)","type":"method"},{"path":"\/documentation\/glib\/strvbuilderprotocol\/addv(value:)","title":"func addv(value: UnsafeMutablePointer<UnsafePointer<CChar>?>!)","type":"method"},{"path":"\/documentation\/glib\/strvbuilderprotocol\/end()","title":"func end() -> GStrv!","type":"method"},{"path":"\/documentation\/glib\/strvbuilderprotocol\/ref()","title":"func ref() -> StrvBuilderRef!","type":"method"},{"path":"\/documentation\/glib\/strvbuilderprotocol\/take(value:)","title":"func take(value: UnsafeMutablePointer<CChar>!)","type":"method"},{"path":"\/documentation\/glib\/strvbuilderprotocol\/unref()","title":"func unref()","type":"method"},{"path":"\/documentation\/glib\/strvbuilderprotocol\/unreftostrv()","title":"func unrefToStrv() -> GStrv!","type":"method"}],"path":"\/documentation\/glib\/strvbuilderprotocol","title":"StrvBuilderProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/testcaseprotocol\/free()","title":"func free()","type":"method"}],"path":"\/documentation\/glib\/testcaseprotocol","title":"TestCaseProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/testconfigprotocol\/testinitialized","title":"var testInitialized: gboolean","type":"property"},{"path":"\/documentation\/glib\/testconfigprotocol\/testperf","title":"var testPerf: gboolean","type":"property"},{"path":"\/documentation\/glib\/testconfigprotocol\/testquick","title":"var testQuick: gboolean","type":"property"},{"path":"\/documentation\/glib\/testconfigprotocol\/testquiet","title":"var testQuiet: gboolean","type":"property"},{"path":"\/documentation\/glib\/testconfigprotocol\/testundefined","title":"var testUndefined: gboolean","type":"property"},{"path":"\/documentation\/glib\/testconfigprotocol\/testverbose","title":"var testVerbose: gboolean","type":"property"}],"path":"\/documentation\/glib\/testconfigprotocol","title":"TestConfigProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/testlogbufferprotocol\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/glib\/testlogbufferprotocol\/pop()","title":"func pop() -> TestLogMsgRef!","type":"method"},{"path":"\/documentation\/glib\/testlogbufferprotocol\/push(nbytes:bytes:)","title":"func push(nBytes: Int, bytes: UnsafePointer<guint8>!)","type":"method"}],"path":"\/documentation\/glib\/testlogbufferprotocol","title":"TestLogBufferProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/testlogmsgprotocol\/logtype","title":"var logType: GTestLogType","type":"property"},{"path":"\/documentation\/glib\/testlogmsgprotocol\/nnums","title":"var nNums: guint","type":"property"},{"path":"\/documentation\/glib\/testlogmsgprotocol\/nstrings","title":"var nStrings: guint","type":"property"},{"path":"\/documentation\/glib\/testlogmsgprotocol\/nums","title":"var nums: UnsafeMutablePointer<CLongDouble>!","type":"property"},{"path":"\/documentation\/glib\/testlogmsgprotocol\/strings","title":"var strings: UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/testlogmsgprotocol\/free()","title":"func free()","type":"method"}],"path":"\/documentation\/glib\/testlogmsgprotocol","title":"TestLogMsgProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/testsuiteprotocol\/add(testcase:)","title":"func add<TestCaseT>(testCase: TestCaseT)","type":"method"},{"path":"\/documentation\/glib\/testsuiteprotocol\/addsuite(nestedsuite:)","title":"func addSuite<TestSuiteT>(nestedsuite: TestSuiteT)","type":"method"},{"path":"\/documentation\/glib\/testsuiteprotocol\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/glib\/testsuiteprotocol\/testrunsuite()","title":"func testRunSuite() -> Int","type":"method"}],"path":"\/documentation\/glib\/testsuiteprotocol","title":"TestSuiteProtocol","type":"protocol"},{"path":"\/documentation\/glib\/threadfunctionsprotocol","title":"ThreadFunctionsProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/threadpoolprotocol\/exclusive","title":"var exclusive: gboolean","type":"property"},{"path":"\/documentation\/glib\/threadpoolprotocol\/func","title":"var `func`: GFunc!","type":"property"},{"path":"\/documentation\/glib\/threadpoolprotocol\/maxthreads","title":"var maxThreads: Int","type":"property"},{"path":"\/documentation\/glib\/threadpoolprotocol\/numthreads","title":"var numThreads: Int","type":"property"},{"path":"\/documentation\/glib\/threadpoolprotocol\/userdata","title":"var userData: gpointer?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/threadpoolprotocol\/free(immediate:wait:)","title":"func free(immediate: Bool, wait: Bool)","type":"method"},{"path":"\/documentation\/glib\/threadpoolprotocol\/getmaxthreads()","title":"func getMaxThreads() -> Int","type":"method"},{"path":"\/documentation\/glib\/threadpoolprotocol\/getnumthreads()","title":"func getNumThreads() -> Int","type":"method"},{"path":"\/documentation\/glib\/threadpoolprotocol\/movetofront(data:)","title":"func moveToFront(data: gpointer?) -> Bool","type":"method"},{"path":"\/documentation\/glib\/threadpoolprotocol\/push(data:)","title":"func push(data: gpointer?) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/threadpoolprotocol\/set(maxthreads:)","title":"func set(maxThreads: Int) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/threadpoolprotocol\/setsortfunction(func:userdata:)","title":"func setSortFunction(func: GCompareDataFunc?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/threadpoolprotocol\/unprocessed()","title":"func unprocessed() -> Int","type":"method"}],"path":"\/documentation\/glib\/threadpoolprotocol","title":"ThreadPoolProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/glib\/threadprotocol\/thread_ptr-89n0u","title":"var thread_ptr: UnsafeMutablePointer<GThread>!","type":"property"}],"title":"ThreadProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/glib\/threadprotocol\/thread_ptr-5a6z9","title":"var thread_ptr: UnsafeMutablePointer<GThread>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/threadprotocol\/join()","title":"func join() -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/threadprotocol\/ref()","title":"func ref() -> ThreadRef!","type":"method"},{"path":"\/documentation\/glib\/threadprotocol\/set(priority:)","title":"func set(priority: GThreadPriority)","type":"method"},{"path":"\/documentation\/glib\/threadprotocol\/unref()","title":"func unref()","type":"method"}],"path":"\/documentation\/glib\/threadprotocol","title":"ThreadProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/timevalprotocol\/tvsec","title":"var tvSec: glong","type":"property"},{"path":"\/documentation\/glib\/timevalprotocol\/tvusec","title":"var tvUsec: glong","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/timevalprotocol\/add(microseconds:)","title":"func add(microseconds: Int)","type":"method"},{"path":"\/documentation\/glib\/timevalprotocol\/fromiso8601(isodate:)","title":"func fromIso8601(isoDate: UnsafePointer<gchar>!) -> Bool","type":"method"},{"path":"\/documentation\/glib\/timevalprotocol\/getcurrenttime()","title":"func getCurrentTime()","type":"method"},{"path":"\/documentation\/glib\/timevalprotocol\/timevalfromiso8601(isodate:)","title":"func timeValFromIso8601(isoDate: UnsafePointer<gchar>!) -> Bool","type":"method"},{"path":"\/documentation\/glib\/timevalprotocol\/toiso8601()","title":"func toIso8601() -> String!","type":"method"}],"path":"\/documentation\/glib\/timevalprotocol","title":"TimeValProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/timezoneprotocol\/identifier","title":"var identifier: String!","type":"property"},{"children":[{"children":[{"path":"\/documentation\/glib\/timezoneprotocol\/time_zone_ptr-9h65y","title":"var time_zone_ptr: UnsafeMutablePointer<GTimeZone>!","type":"property"}],"title":"TimeZoneProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/glib\/timezoneprotocol\/time_zone_ptr-osvz","title":"var time_zone_ptr: UnsafeMutablePointer<GTimeZone>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/timezoneprotocol\/adjusttime(type:time:)","title":"func adjustTime(type: GTimeType, time: UnsafeMutablePointer<gint64>!) -> Int","type":"method"},{"path":"\/documentation\/glib\/timezoneprotocol\/findinterval(type:time:)","title":"func findInterval(type: GTimeType, time: gint64) -> Int","type":"method"},{"path":"\/documentation\/glib\/timezoneprotocol\/getabbreviation(interval:)","title":"func getAbbreviation(interval: Int) -> String!","type":"method"},{"path":"\/documentation\/glib\/timezoneprotocol\/getidentifier()","title":"func getIDentifier() -> String!","type":"method"},{"path":"\/documentation\/glib\/timezoneprotocol\/getoffset(interval:)","title":"func getOffset(interval: Int) -> gint32","type":"method"},{"path":"\/documentation\/glib\/timezoneprotocol\/isdst(interval:)","title":"func isDst(interval: Int) -> Bool","type":"method"},{"path":"\/documentation\/glib\/timezoneprotocol\/ref()","title":"func ref() -> TimeZoneRef!","type":"method"},{"path":"\/documentation\/glib\/timezoneprotocol\/unref()","title":"func unref()","type":"method"}],"path":"\/documentation\/glib\/timezoneprotocol","title":"TimeZoneProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/timerprotocol\/isactive","title":"var isActive: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/timerprotocol\/continue_()","title":"func continue_()","type":"method"},{"path":"\/documentation\/glib\/timerprotocol\/destroy()","title":"func destroy()","type":"method"},{"path":"\/documentation\/glib\/timerprotocol\/elapsed(microseconds:)","title":"func elapsed(microseconds: UnsafeMutablePointer<gulong>!) -> Double","type":"method"},{"path":"\/documentation\/glib\/timerprotocol\/reset()","title":"func reset()","type":"method"},{"path":"\/documentation\/glib\/timerprotocol\/start()","title":"func start()","type":"method"},{"path":"\/documentation\/glib\/timerprotocol\/stop()","title":"func stop()","type":"method"}],"path":"\/documentation\/glib\/timerprotocol","title":"TimerProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/tokenvalueprotocol\/vbinary","title":"var vBinary: gulong","type":"property"},{"path":"\/documentation\/glib\/tokenvalueprotocol\/vchar","title":"var vChar: guchar","type":"property"},{"path":"\/documentation\/glib\/tokenvalueprotocol\/vcomment","title":"var vComment: UnsafeMutablePointer<gchar>!","type":"property"},{"path":"\/documentation\/glib\/tokenvalueprotocol\/verror","title":"var vError: guint","type":"property"},{"path":"\/documentation\/glib\/tokenvalueprotocol\/vfloat","title":"var vFloat: gdouble","type":"property"},{"path":"\/documentation\/glib\/tokenvalueprotocol\/vhex","title":"var vHex: gulong","type":"property"},{"path":"\/documentation\/glib\/tokenvalueprotocol\/videntifier","title":"var vIDentifier: UnsafeMutablePointer<gchar>!","type":"property"},{"path":"\/documentation\/glib\/tokenvalueprotocol\/vint","title":"var vInt: gulong","type":"property"},{"path":"\/documentation\/glib\/tokenvalueprotocol\/vint64","title":"var vInt64: guint64","type":"property"},{"path":"\/documentation\/glib\/tokenvalueprotocol\/voctal","title":"var vOctal: gulong","type":"property"},{"path":"\/documentation\/glib\/tokenvalueprotocol\/vstring","title":"var vString: UnsafeMutablePointer<gchar>!","type":"property"},{"path":"\/documentation\/glib\/tokenvalueprotocol\/vsymbol","title":"var vSymbol: gpointer?","type":"property"}],"path":"\/documentation\/glib\/tokenvalueprotocol","title":"TokenValueProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/trashstackprotocol\/next","title":"var next: TrashStackRef!","type":"property"}],"path":"\/documentation\/glib\/trashstackprotocol","title":"TrashStackProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/treenodeprotocol\/key()","title":"func key() -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/treenodeprotocol\/next()","title":"func next() -> TreeNodeRef!","type":"method"},{"path":"\/documentation\/glib\/treenodeprotocol\/previous()","title":"func previous() -> TreeNodeRef!","type":"method"},{"path":"\/documentation\/glib\/treenodeprotocol\/value()","title":"func value() -> gpointer?","type":"method"}],"path":"\/documentation\/glib\/treenodeprotocol","title":"TreeNodeProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/glib\/treeprotocol\/tree_ptr-8jgl2","title":"var tree_ptr: UnsafeMutablePointer<GTree>!","type":"property"}],"title":"TreeProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/glib\/treeprotocol\/tree_ptr-8bl6m","title":"var tree_ptr: UnsafeMutablePointer<GTree>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/treeprotocol\/destroy()","title":"func destroy()","type":"method"},{"path":"\/documentation\/glib\/treeprotocol\/foreach(func:userdata:)","title":"func foreach(func: GTraverseFunc?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/treeprotocol\/foreachnode(func:userdata:)","title":"func foreachNode(func: GTraverseNodeFunc?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/treeprotocol\/height()","title":"func height() -> Int","type":"method"},{"path":"\/documentation\/glib\/treeprotocol\/insert(key:value:)","title":"func insert(key: gpointer?, value: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/treeprotocol\/insertnode(key:value:)","title":"func insertNode(key: gpointer?, value: gpointer?) -> TreeNodeRef!","type":"method"},{"path":"\/documentation\/glib\/treeprotocol\/lookup(key:)","title":"func lookup(key: gconstpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/treeprotocol\/lookupextended(lookupkey:origkey:value:)","title":"func lookupExtended(lookupKey: gconstpointer?, origKey: UnsafeMutablePointer<gpointer?>?, value: UnsafeMutablePointer<gpointer?>?) -> Bool","type":"method"},{"path":"\/documentation\/glib\/treeprotocol\/lookupnode(key:)","title":"func lookupNode(key: gconstpointer?) -> TreeNodeRef!","type":"method"},{"path":"\/documentation\/glib\/treeprotocol\/lowerbound(key:)","title":"func lowerBound(key: gconstpointer?) -> TreeNodeRef!","type":"method"},{"path":"\/documentation\/glib\/treeprotocol\/nnodes()","title":"func nnodes() -> Int","type":"method"},{"path":"\/documentation\/glib\/treeprotocol\/nodefirst()","title":"func nodeFirst() -> TreeNodeRef!","type":"method"},{"path":"\/documentation\/glib\/treeprotocol\/nodelast()","title":"func nodeLast() -> TreeNodeRef!","type":"method"},{"path":"\/documentation\/glib\/treeprotocol\/ref()","title":"func ref() -> TreeRef!","type":"method"},{"path":"\/documentation\/glib\/treeprotocol\/remove(key:)","title":"func remove(key: gconstpointer?) -> Bool","type":"method"},{"path":"\/documentation\/glib\/treeprotocol\/removeall()","title":"func removeAll()","type":"method"},{"path":"\/documentation\/glib\/treeprotocol\/replace(key:value:)","title":"func replace(key: gpointer?, value: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/treeprotocol\/replacenode(key:value:)","title":"func replaceNode(key: gpointer?, value: gpointer?) -> TreeNodeRef!","type":"method"},{"path":"\/documentation\/glib\/treeprotocol\/search(searchfunc:userdata:)","title":"func search(searchFunc: GCompareFunc?, userData: gconstpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/treeprotocol\/searchnode(searchfunc:userdata:)","title":"func searchNode(searchFunc: GCompareFunc?, userData: gconstpointer?) -> TreeNodeRef!","type":"method"},{"path":"\/documentation\/glib\/treeprotocol\/steal(key:)","title":"func steal(key: gconstpointer?) -> Bool","type":"method"},{"path":"\/documentation\/glib\/treeprotocol\/traverse(traversefunc:traversetype:userdata:)","title":"func traverse(traverseFunc: GTraverseFunc?, traverseType: GTraverseType, userData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/treeprotocol\/unref()","title":"func unref()","type":"method"},{"path":"\/documentation\/glib\/treeprotocol\/upperbound(key:)","title":"func upperBound(key: gconstpointer?) -> TreeNodeRef!","type":"method"}],"path":"\/documentation\/glib\/treeprotocol","title":"TreeProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/tuplesprotocol\/len","title":"var len: guint","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/tuplesprotocol\/destroy()","title":"func destroy()","type":"method"},{"path":"\/documentation\/glib\/tuplesprotocol\/index(index:field:)","title":"func index(index: Int, field: Int) -> gpointer?","type":"method"}],"path":"\/documentation\/glib\/tuplesprotocol","title":"TuplesProtocol","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/glib\/typedarrayprotocol\/element","title":"Element","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/typedarrayprotocol\/count","title":"var count: Int","type":"property"},{"path":"\/documentation\/glib\/typedarrayprotocol\/endindex","title":"var endIndex: Int","type":"property"},{"path":"\/documentation\/glib\/typedarrayprotocol\/startindex","title":"var startIndex: Int","type":"property"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/glib\/typedarrayprotocol\/subscript(_:)","title":"subscript(Int) -> Self.Element","type":"subscript"}],"path":"\/documentation\/glib\/typedarrayprotocol","title":"TypedArrayProtocol","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/glib\/typedlistprotocol\/element-swift.associatedtype","title":"Element","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/typedlistprotocol\/element-swift.property","title":"var element: Self.Element!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/typedlistprotocol\/makeiterator()","title":"func makeIterator() -> TypedListIterator<Self.Element>","type":"method"}],"path":"\/documentation\/glib\/typedlistprotocol","title":"TypedListProtocol","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/glib\/typedslistprotocol\/element-swift.associatedtype","title":"Element","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/typedslistprotocol\/element-swift.property","title":"var element: Self.Element!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/typedslistprotocol\/makeiterator()","title":"func makeIterator() -> SListIterator<Self.Element>","type":"method"}],"path":"\/documentation\/glib\/typedslistprotocol","title":"TypedSListProtocol","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/glib\/typedsequenceprotocol\/element","title":"Element","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/typedsequenceprotocol\/count","title":"var count: Int","type":"property"},{"path":"\/documentation\/glib\/typedsequenceprotocol\/endindex","title":"var endIndex: SequenceIterRef","type":"property"},{"path":"\/documentation\/glib\/typedsequenceprotocol\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/glib\/typedsequenceprotocol\/startindex","title":"var startIndex: SequenceIterRef","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/typedsequenceprotocol\/index(_:offsetby:)","title":"func index(SequenceIterRef, offsetBy: Int) -> SequenceIterRef","type":"method"},{"path":"\/documentation\/glib\/typedsequenceprotocol\/index(after:)","title":"func index(after: SequenceIterRef) -> SequenceIterRef","type":"method"},{"path":"\/documentation\/glib\/typedsequenceprotocol\/index(before:)","title":"func index(before: SequenceIterRef) -> SequenceIterRef","type":"method"},{"path":"\/documentation\/glib\/typedsequenceprotocol\/makeiterator()","title":"func makeIterator() -> TypedSequenceIterator<Self.Element>","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/glib\/typedsequenceprotocol\/subscript(_:)","title":"subscript(SequenceIterRef) -> Self.Element","type":"subscript"}],"path":"\/documentation\/glib\/typedsequenceprotocol","title":"TypedSequenceProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/uriparamsiterprotocol\/init_(params:length:separators:flags:)","title":"func init_(params: UnsafePointer<gchar>!, length: gssize, separators: UnsafePointer<gchar>!, flags: URIParamsFlags)","type":"method"},{"path":"\/documentation\/glib\/uriparamsiterprotocol\/next(attribute:value:)","title":"func next(attribute: UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>?, value: UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>?) throws -> Bool","type":"method"}],"path":"\/documentation\/glib\/uriparamsiterprotocol","title":"URIParamsIterProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/uriprotocol\/authparams","title":"var authParams: String!","type":"property"},{"path":"\/documentation\/glib\/uriprotocol\/flags","title":"var flags: URIFlags","type":"property"},{"path":"\/documentation\/glib\/uriprotocol\/fragment","title":"var fragment: String!","type":"property"},{"path":"\/documentation\/glib\/uriprotocol\/host","title":"var host: String!","type":"property"},{"path":"\/documentation\/glib\/uriprotocol\/password","title":"var password: String!","type":"property"},{"path":"\/documentation\/glib\/uriprotocol\/path","title":"var path: String!","type":"property"},{"path":"\/documentation\/glib\/uriprotocol\/port","title":"var port: Int","type":"property"},{"path":"\/documentation\/glib\/uriprotocol\/query","title":"var query: String!","type":"property"},{"path":"\/documentation\/glib\/uriprotocol\/scheme","title":"var scheme: String!","type":"property"},{"children":[{"children":[{"path":"\/documentation\/glib\/uriprotocol\/uri_ptr-9ah1i","title":"var uri_ptr: UnsafeMutablePointer<GUri>!","type":"property"}],"title":"URIProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/glib\/uriprotocol\/uri_ptr-kjx7","title":"var uri_ptr: UnsafeMutablePointer<GUri>!","type":"property"},{"path":"\/documentation\/glib\/uriprotocol\/user","title":"var user: String!","type":"property"},{"path":"\/documentation\/glib\/uriprotocol\/userinfo","title":"var userinfo: String!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/uriprotocol\/getauthparams()","title":"func getAuthParams() -> String!","type":"method"},{"path":"\/documentation\/glib\/uriprotocol\/getflags()","title":"func getFlags() -> URIFlags","type":"method"},{"path":"\/documentation\/glib\/uriprotocol\/getfragment()","title":"func getFragment() -> String!","type":"method"},{"path":"\/documentation\/glib\/uriprotocol\/gethost()","title":"func getHost() -> String!","type":"method"},{"path":"\/documentation\/glib\/uriprotocol\/getpassword()","title":"func getPassword() -> String!","type":"method"},{"path":"\/documentation\/glib\/uriprotocol\/getpath()","title":"func getPath() -> String!","type":"method"},{"path":"\/documentation\/glib\/uriprotocol\/getport()","title":"func getPort() -> Int","type":"method"},{"path":"\/documentation\/glib\/uriprotocol\/getquery()","title":"func getQuery() -> String!","type":"method"},{"path":"\/documentation\/glib\/uriprotocol\/getscheme()","title":"func getScheme() -> String!","type":"method"},{"path":"\/documentation\/glib\/uriprotocol\/getuser()","title":"func getUser() -> String!","type":"method"},{"path":"\/documentation\/glib\/uriprotocol\/getuserinfo()","title":"func getUserinfo() -> String!","type":"method"},{"path":"\/documentation\/glib\/uriprotocol\/parserelative(uriref:flags:)","title":"func parseRelative(uriRef: UnsafePointer<gchar>!, flags: URIFlags) throws -> URIRef!","type":"method"},{"path":"\/documentation\/glib\/uriprotocol\/ref()","title":"func ref() -> URIRef!","type":"method"},{"path":"\/documentation\/glib\/uriprotocol\/tostring()","title":"func toString() -> String!","type":"method"},{"path":"\/documentation\/glib\/uriprotocol\/tostringpartial(flags:)","title":"func toStringPartial(flags: URIHideFlags) -> String!","type":"method"},{"path":"\/documentation\/glib\/uriprotocol\/unref()","title":"func unref()","type":"method"}],"path":"\/documentation\/glib\/uriprotocol","title":"URIProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/unixpipeprotocol\/fds","title":"var fds: (gint, gint)","type":"property"}],"path":"\/documentation\/glib\/unixpipeprotocol","title":"UnixPipeProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/glib\/variantbuilderprotocol\/variant_builder_ptr-77t1a","title":"var variant_builder_ptr: UnsafeMutablePointer<GVariantBuilder>!","type":"property"}],"title":"VariantBuilderProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/glib\/variantbuilderprotocol\/variant_builder_ptr-6e42j","title":"var variant_builder_ptr: UnsafeMutablePointer<GVariantBuilder>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/variantbuilderprotocol\/add(value:)","title":"func add<VariantT>(value: VariantT)","type":"method"},{"path":"\/documentation\/glib\/variantbuilderprotocol\/clear()","title":"func clear()","type":"method"},{"path":"\/documentation\/glib\/variantbuilderprotocol\/close()","title":"func close()","type":"method"},{"path":"\/documentation\/glib\/variantbuilderprotocol\/end()","title":"func end() -> VariantRef!","type":"method"},{"path":"\/documentation\/glib\/variantbuilderprotocol\/init_(type:)","title":"func init_<VariantTypeT>(type: VariantTypeT)","type":"method"},{"path":"\/documentation\/glib\/variantbuilderprotocol\/open(type:)","title":"func open<VariantTypeT>(type: VariantTypeT)","type":"method"},{"path":"\/documentation\/glib\/variantbuilderprotocol\/ref()","title":"func ref() -> VariantBuilderRef!","type":"method"},{"path":"\/documentation\/glib\/variantbuilderprotocol\/unref()","title":"func unref()","type":"method"}],"path":"\/documentation\/glib\/variantbuilderprotocol","title":"VariantBuilderProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/glib\/variantdictprotocol\/variant_dict_ptr-6qxgo","title":"var variant_dict_ptr: UnsafeMutablePointer<GVariantDict>!","type":"property"}],"title":"VariantDictProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/glib\/variantdictprotocol\/variant_dict_ptr-6dgor","title":"var variant_dict_ptr: UnsafeMutablePointer<GVariantDict>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/variantdictprotocol\/clear()","title":"func clear()","type":"method"},{"path":"\/documentation\/glib\/variantdictprotocol\/contains(key:)","title":"func contains(key: UnsafePointer<gchar>!) -> Bool","type":"method"},{"path":"\/documentation\/glib\/variantdictprotocol\/end()","title":"func end() -> VariantRef!","type":"method"},{"path":"\/documentation\/glib\/variantdictprotocol\/init_(from:)-2u3tj","title":"func init_(from: VariantRef?)","type":"method"},{"path":"\/documentation\/glib\/variantdictprotocol\/init_(from:)-5rs48","title":"func init_<VariantT>(from: VariantT?)","type":"method"},{"path":"\/documentation\/glib\/variantdictprotocol\/insertvalue(key:value:)","title":"func insertValue<VariantT>(key: UnsafePointer<gchar>!, value: VariantT)","type":"method"},{"path":"\/documentation\/glib\/variantdictprotocol\/lookupvalue(key:expectedtype:)-7v6kw","title":"func lookupValue(key: UnsafePointer<gchar>!, expectedType: VariantTypeRef?) -> VariantRef!","type":"method"},{"path":"\/documentation\/glib\/variantdictprotocol\/lookupvalue(key:expectedtype:)-9lxae","title":"func lookupValue<VariantTypeT>(key: UnsafePointer<gchar>!, expectedType: VariantTypeT?) -> VariantRef!","type":"method"},{"path":"\/documentation\/glib\/variantdictprotocol\/ref()","title":"func ref() -> VariantDictRef!","type":"method"},{"path":"\/documentation\/glib\/variantdictprotocol\/remove(key:)","title":"func remove(key: UnsafePointer<gchar>!) -> Bool","type":"method"},{"path":"\/documentation\/glib\/variantdictprotocol\/unref()","title":"func unref()","type":"method"}],"path":"\/documentation\/glib\/variantdictprotocol","title":"VariantDictProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/variantiterprotocol\/copy()","title":"func copy() -> VariantIterRef!","type":"method"},{"path":"\/documentation\/glib\/variantiterprotocol\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/glib\/variantiterprotocol\/init_(value:)","title":"func init_<VariantT>(value: VariantT) -> Int","type":"method"},{"path":"\/documentation\/glib\/variantiterprotocol\/nchildren()","title":"func nChildren() -> Int","type":"method"},{"path":"\/documentation\/glib\/variantiterprotocol\/nextvalue()","title":"func nextValue() -> VariantRef!","type":"method"}],"path":"\/documentation\/glib\/variantiterprotocol","title":"VariantIterProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/variantprotocol\/boolean","title":"var boolean: Bool","type":"property"},{"path":"\/documentation\/glib\/variantprotocol\/byte","title":"var byte: guint8","type":"property"},{"path":"\/documentation\/glib\/variantprotocol\/bytestring","title":"var bytestring: String!","type":"property"},{"path":"\/documentation\/glib\/variantprotocol\/data","title":"var data: gconstpointer?","type":"property"},{"path":"\/documentation\/glib\/variantprotocol\/dataasbytes","title":"var dataAsBytes: BytesRef!","type":"property"},{"path":"\/documentation\/glib\/variantprotocol\/double","title":"var double: Double","type":"property"},{"path":"\/documentation\/glib\/variantprotocol\/handle","title":"var handle: gint32","type":"property"},{"path":"\/documentation\/glib\/variantprotocol\/int16","title":"var int16: gint16","type":"property"},{"path":"\/documentation\/glib\/variantprotocol\/int32","title":"var int32: gint32","type":"property"},{"path":"\/documentation\/glib\/variantprotocol\/int64","title":"var int64: gint64","type":"property"},{"path":"\/documentation\/glib\/variantprotocol\/iscontainer","title":"var isContainer: Bool","type":"property"},{"path":"\/documentation\/glib\/variantprotocol\/isfloating","title":"var isFloating: Bool","type":"property"},{"path":"\/documentation\/glib\/variantprotocol\/isnormalform","title":"var isNormalForm: Bool","type":"property"},{"path":"\/documentation\/glib\/variantprotocol\/maybe","title":"var maybe: VariantRef!","type":"property"},{"path":"\/documentation\/glib\/variantprotocol\/normalform","title":"var normalForm: VariantRef!","type":"property"},{"path":"\/documentation\/glib\/variantprotocol\/size","title":"var size: Int","type":"property"},{"path":"\/documentation\/glib\/variantprotocol\/type","title":"var type: VariantTypeRef!","type":"property"},{"path":"\/documentation\/glib\/variantprotocol\/typestring","title":"var typeString: String!","type":"property"},{"path":"\/documentation\/glib\/variantprotocol\/uint16","title":"var uint16: guint16","type":"property"},{"path":"\/documentation\/glib\/variantprotocol\/uint32","title":"var uint32: guint32","type":"property"},{"path":"\/documentation\/glib\/variantprotocol\/uint64","title":"var uint64: guint64","type":"property"},{"path":"\/documentation\/glib\/variantprotocol\/variant","title":"var variant: VariantRef!","type":"property"},{"children":[{"children":[{"path":"\/documentation\/glib\/variantprotocol\/variant_ptr-6tvfp","title":"var variant_ptr: UnsafeMutablePointer<GVariant>!","type":"property"}],"title":"VariantProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/glib\/variantprotocol\/variant_ptr-4tjcr","title":"var variant_ptr: UnsafeMutablePointer<GVariant>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/variantprotocol\/byteswap()","title":"func byteswap() -> VariantRef!","type":"method"},{"path":"\/documentation\/glib\/variantprotocol\/check(formatstring:copyonly:)","title":"func check(formatString: UnsafePointer<gchar>!, copyOnly: Bool) -> Bool","type":"method"},{"path":"\/documentation\/glib\/variantprotocol\/classify()","title":"func classify() -> GVariantClass","type":"method"},{"path":"\/documentation\/glib\/variantprotocol\/compare(two:)","title":"func compare<VariantT>(two: VariantT) -> Int","type":"method"},{"path":"\/documentation\/glib\/variantprotocol\/dupbytestring(length:)","title":"func dupBytestring(length: UnsafeMutablePointer<gsize>!) -> String!","type":"method"},{"path":"\/documentation\/glib\/variantprotocol\/dupbytestringarray(length:)","title":"func dupBytestringArray(length: UnsafeMutablePointer<gsize>!) -> UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!","type":"method"},{"path":"\/documentation\/glib\/variantprotocol\/dupobjv(length:)","title":"func dupObjv(length: UnsafeMutablePointer<gsize>!) -> UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!","type":"method"},{"path":"\/documentation\/glib\/variantprotocol\/dupstring(length:)","title":"func dupString(length: UnsafeMutablePointer<gsize>!) -> String!","type":"method"},{"path":"\/documentation\/glib\/variantprotocol\/dupstrv(length:)","title":"func dupStrv(length: UnsafeMutablePointer<gsize>!) -> UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!","type":"method"},{"path":"\/documentation\/glib\/variantprotocol\/equal(two:)","title":"func equal<VariantT>(two: VariantT) -> Bool","type":"method"},{"path":"\/documentation\/glib\/variantprotocol\/getboolean()","title":"func getBoolean() -> Bool","type":"method"},{"path":"\/documentation\/glib\/variantprotocol\/getbyte()","title":"func getByte() -> guint8","type":"method"},{"path":"\/documentation\/glib\/variantprotocol\/getbytestring()","title":"func getBytestring() -> String!","type":"method"},{"path":"\/documentation\/glib\/variantprotocol\/getbytestringarray(length:)","title":"func getBytestringArray(length: UnsafeMutablePointer<gsize>!) -> UnsafeMutablePointer<UnsafePointer<gchar>?>!","type":"method"},{"path":"\/documentation\/glib\/variantprotocol\/getchildvalue(index:)","title":"func getChildValue(index: Int) -> VariantRef!","type":"method"},{"path":"\/documentation\/glib\/variantprotocol\/getdata()","title":"func getData() -> gconstpointer?","type":"method"},{"path":"\/documentation\/glib\/variantprotocol\/getdataasbytes()","title":"func getDataAsBytes() -> BytesRef!","type":"method"},{"path":"\/documentation\/glib\/variantprotocol\/getdouble()","title":"func getDouble() -> Double","type":"method"},{"path":"\/documentation\/glib\/variantprotocol\/getfixedarray(nelements:elementsize:)","title":"func getFixedArray(nElements: UnsafeMutablePointer<gsize>!, elementSize: Int) -> gconstpointer!","type":"method"},{"path":"\/documentation\/glib\/variantprotocol\/gethandle()","title":"func getHandle() -> gint32","type":"method"},{"path":"\/documentation\/glib\/variantprotocol\/getint16()","title":"func getInt16() -> gint16","type":"method"},{"path":"\/documentation\/glib\/variantprotocol\/getint32()","title":"func getInt32() -> gint32","type":"method"},{"path":"\/documentation\/glib\/variantprotocol\/getint64()","title":"func getInt64() -> gint64","type":"method"},{"path":"\/documentation\/glib\/variantprotocol\/getmaybe()","title":"func getMaybe() -> VariantRef!","type":"method"},{"path":"\/documentation\/glib\/variantprotocol\/getnormalform()","title":"func getNormalForm() -> VariantRef!","type":"method"},{"path":"\/documentation\/glib\/variantprotocol\/getobjv(length:)","title":"func getObjv(length: UnsafeMutablePointer<gsize>!) -> UnsafeMutablePointer<UnsafePointer<gchar>?>!","type":"method"},{"path":"\/documentation\/glib\/variantprotocol\/getsize()","title":"func getSize() -> Int","type":"method"},{"path":"\/documentation\/glib\/variantprotocol\/getstring(length:)","title":"func getString(length: UnsafeMutablePointer<gsize>!) -> String!","type":"method"},{"path":"\/documentation\/glib\/variantprotocol\/getstrv(length:)","title":"func getStrv(length: UnsafeMutablePointer<gsize>!) -> UnsafeMutablePointer<UnsafePointer<gchar>?>!","type":"method"},{"path":"\/documentation\/glib\/variantprotocol\/gettype()","title":"func getType() -> VariantTypeRef!","type":"method"},{"path":"\/documentation\/glib\/variantprotocol\/gettypestring()","title":"func getTypeString() -> String!","type":"method"},{"path":"\/documentation\/glib\/variantprotocol\/getuint16()","title":"func getUint16() -> guint16","type":"method"},{"path":"\/documentation\/glib\/variantprotocol\/getuint32()","title":"func getUint32() -> guint32","type":"method"},{"path":"\/documentation\/glib\/variantprotocol\/getuint64()","title":"func getUint64() -> guint64","type":"method"},{"path":"\/documentation\/glib\/variantprotocol\/getvariant()","title":"func getVariant() -> VariantRef!","type":"method"},{"path":"\/documentation\/glib\/variantprotocol\/hash()","title":"func hash() -> Int","type":"method"},{"path":"\/documentation\/glib\/variantprotocol\/isof(type:)","title":"func isOf<VariantTypeT>(type: VariantTypeT) -> Bool","type":"method"},{"path":"\/documentation\/glib\/variantprotocol\/iternew()","title":"func iterNew() -> VariantIterRef!","type":"method"},{"path":"\/documentation\/glib\/variantprotocol\/logvariant(logdomain:loglevel:)","title":"func logVariant(logDomain: UnsafePointer<gchar>?, logLevel: LogLevelFlags)","type":"method"},{"path":"\/documentation\/glib\/variantprotocol\/lookupvalue(key:expectedtype:)-43hhk","title":"func lookupValue<VariantTypeT>(key: UnsafePointer<gchar>!, expectedType: VariantTypeT?) -> VariantRef!","type":"method"},{"path":"\/documentation\/glib\/variantprotocol\/lookupvalue(key:expectedtype:)-4oqal","title":"func lookupValue(key: UnsafePointer<gchar>!, expectedType: VariantTypeRef?) -> VariantRef!","type":"method"},{"path":"\/documentation\/glib\/variantprotocol\/nchildren()","title":"func nChildren() -> Int","type":"method"},{"path":"\/documentation\/glib\/variantprotocol\/print(string:typeannotate:)-5hbbk","title":"func print(string: StringRef?, typeAnnotate: Bool) -> StringRef!","type":"method"},{"path":"\/documentation\/glib\/variantprotocol\/print(string:typeannotate:)-5w2vu","title":"func print<StringTypeT>(string: StringTypeT?, typeAnnotate: Bool) -> StringRef!","type":"method"},{"path":"\/documentation\/glib\/variantprotocol\/print(typeannotate:)","title":"func print(typeAnnotate: Bool) -> String!","type":"method"},{"path":"\/documentation\/glib\/variantprotocol\/ref()","title":"func ref() -> VariantRef!","type":"method"},{"path":"\/documentation\/glib\/variantprotocol\/refsink()","title":"func refSink() -> VariantRef!","type":"method"},{"path":"\/documentation\/glib\/variantprotocol\/store(data:)","title":"func store(data: gpointer!)","type":"method"},{"path":"\/documentation\/glib\/variantprotocol\/takeref()","title":"func takeRef() -> VariantRef!","type":"method"},{"path":"\/documentation\/glib\/variantprotocol\/unref()","title":"func unref()","type":"method"}],"path":"\/documentation\/glib\/variantprotocol","title":"VariantProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/varianttypeprotocol\/isarray","title":"var isArray: Bool","type":"property"},{"path":"\/documentation\/glib\/varianttypeprotocol\/isbasic","title":"var isBasic: Bool","type":"property"},{"path":"\/documentation\/glib\/varianttypeprotocol\/iscontainer","title":"var isContainer: Bool","type":"property"},{"path":"\/documentation\/glib\/varianttypeprotocol\/isdefinite","title":"var isDefinite: Bool","type":"property"},{"path":"\/documentation\/glib\/varianttypeprotocol\/isdictentry","title":"var isDictEntry: Bool","type":"property"},{"path":"\/documentation\/glib\/varianttypeprotocol\/ismaybe","title":"var isMaybe: Bool","type":"property"},{"path":"\/documentation\/glib\/varianttypeprotocol\/istuple","title":"var isTuple: Bool","type":"property"},{"path":"\/documentation\/glib\/varianttypeprotocol\/isvariant","title":"var isVariant: Bool","type":"property"},{"path":"\/documentation\/glib\/varianttypeprotocol\/stringlength","title":"var stringLength: Int","type":"property"},{"children":[{"children":[{"path":"\/documentation\/glib\/varianttypeprotocol\/variant_type_ptr-7p6u8","title":"var variant_type_ptr: UnsafeMutablePointer<GVariantType>!","type":"property"}],"title":"VariantTypeProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/glib\/varianttypeprotocol\/variant_type_ptr-3wsc4","title":"var variant_type_ptr: UnsafeMutablePointer<GVariantType>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/varianttypeprotocol\/copy()","title":"func copy() -> VariantTypeRef!","type":"method"},{"path":"\/documentation\/glib\/varianttypeprotocol\/dupstring()","title":"func dupString() -> String!","type":"method"},{"path":"\/documentation\/glib\/varianttypeprotocol\/element()","title":"func element() -> VariantTypeRef!","type":"method"},{"path":"\/documentation\/glib\/varianttypeprotocol\/equal(type2:)","title":"func equal<VariantTypeT>(type2: VariantTypeT) -> Bool","type":"method"},{"path":"\/documentation\/glib\/varianttypeprotocol\/first()","title":"func first() -> VariantTypeRef!","type":"method"},{"path":"\/documentation\/glib\/varianttypeprotocol\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/glib\/varianttypeprotocol\/getstringlength()","title":"func getStringLength() -> Int","type":"method"},{"path":"\/documentation\/glib\/varianttypeprotocol\/hash()","title":"func hash() -> Int","type":"method"},{"path":"\/documentation\/glib\/varianttypeprotocol\/issubtypeof(supertype:)","title":"func isSubtypeOf<VariantTypeT>(supertype: VariantTypeT) -> Bool","type":"method"},{"path":"\/documentation\/glib\/varianttypeprotocol\/key()","title":"func key() -> VariantTypeRef!","type":"method"},{"path":"\/documentation\/glib\/varianttypeprotocol\/nitems()","title":"func nItems() -> Int","type":"method"},{"path":"\/documentation\/glib\/varianttypeprotocol\/next()","title":"func next() -> VariantTypeRef!","type":"method"},{"path":"\/documentation\/glib\/varianttypeprotocol\/peekstring()","title":"func peekString() -> String!","type":"method"},{"path":"\/documentation\/glib\/varianttypeprotocol\/value()","title":"func value() -> VariantTypeRef!","type":"method"},{"path":"\/documentation\/glib\/varianttypeprotocol\/variantparse(text:limit:endptr:)","title":"func variantParse(text: UnsafePointer<gchar>!, limit: UnsafePointer<gchar>?, endptr: UnsafeMutablePointer<UnsafePointer<gchar>?>?) throws -> VariantRef!","type":"method"}],"path":"\/documentation\/glib\/varianttypeprotocol","title":"VariantTypeProtocol","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/allocatorref\/init(_:)-1icg3","title":"init(UnsafePointer<GAllocator>)","type":"init"},{"path":"\/documentation\/glib\/allocatorref\/init(_:)-6jeeo","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/allocatorref\/init(_:)-7t27l","title":"init(UnsafeMutablePointer<GAllocator>)","type":"init"},{"path":"\/documentation\/glib\/allocatorref\/init(_:)-9axhj","title":"init!(UnsafePointer<GAllocator>?)","type":"init"},{"path":"\/documentation\/glib\/allocatorref\/init(_:)-9wc9o","title":"init!(UnsafeMutablePointer<GAllocator>?)","type":"init"},{"path":"\/documentation\/glib\/allocatorref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/allocatorref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/allocatorref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/allocatorref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/allocatorref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/allocatorref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/allocatorref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/allocatorref\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/glib\/allocatorref\/listpushallocator()","title":"func listPushAllocator()","type":"method"},{"path":"\/documentation\/glib\/allocatorref\/nodepushallocator()","title":"func nodePushAllocator()","type":"method"},{"path":"\/documentation\/glib\/allocatorref\/slistpushallocator()","title":"func slistPushAllocator()","type":"method"}],"path":"\/documentation\/glib\/allocatorref\/allocatorprotocol-implementations","title":"AllocatorProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/allocatorref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/allocatorref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/glib\/allocatorref","title":"AllocatorRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/arrayref\/init(_:)-2cnzk","title":"init(UnsafePointer<GArray>)","type":"init"},{"path":"\/documentation\/glib\/arrayref\/init(_:)-5mb65","title":"init!(UnsafePointer<GArray>?)","type":"init"},{"path":"\/documentation\/glib\/arrayref\/init(_:)-6t76r","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/arrayref\/init(_:)-7fbbu","title":"init!(UnsafeMutablePointer<GArray>?)","type":"init"},{"path":"\/documentation\/glib\/arrayref\/init(_:)-849h9","title":"init(UnsafeMutablePointer<GArray>)","type":"init"},{"path":"\/documentation\/glib\/arrayref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/arrayref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/arrayref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/arrayref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/arrayref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/arrayref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/arrayref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/arrayref\/new(take:len:clear:elementsize:)","title":"static func new(take: gpointer!, len: Int, clear: Bool, elementSize: Int) -> ArrayRef!","type":"method"},{"path":"\/documentation\/glib\/arrayref\/newtakezeroterminated(take_zero_terminated:clear:elementsize:)","title":"static func newTakeZeroTerminated(take_zero_terminated: gpointer!, clear: Bool, elementSize: Int) -> ArrayRef!","type":"method"},{"path":"\/documentation\/glib\/arrayref\/sizednew(sized:clear:elementsize:reservedsize:)","title":"static func sizedNew(sized: Bool, clear: Bool, elementSize: Int, reservedSize: Int) -> ArrayRef!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/arrayref\/array_ptr","title":"var array_ptr: UnsafeMutablePointer<GArray>!","type":"property"},{"path":"\/documentation\/glib\/arrayref\/data","title":"var data: UnsafeMutablePointer<gchar>!","type":"property"},{"path":"\/documentation\/glib\/arrayref\/elementsize","title":"var elementSize: Int","type":"property"},{"path":"\/documentation\/glib\/arrayref\/len","title":"var len: guint","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/arrayref\/appendvals(data:len:)","title":"func appendVals(data: gconstpointer?, len: Int) -> ArrayRef!","type":"method"},{"path":"\/documentation\/glib\/arrayref\/binarysearch(target:comparefunc:outmatchindex:)","title":"func binarySearch(target: gconstpointer?, compareFunc: GCompareFunc?, outMatchIndex: UnsafeMutablePointer<guint>!) -> Bool","type":"method"},{"path":"\/documentation\/glib\/arrayref\/copy()","title":"func copy() -> ArrayRef!","type":"method"},{"path":"\/documentation\/glib\/arrayref\/free(freesegment:)","title":"func free(freeSegment: Bool) -> String!","type":"method"},{"path":"\/documentation\/glib\/arrayref\/getelementsize()","title":"func getElementSize() -> Int","type":"method"},{"path":"\/documentation\/glib\/arrayref\/insertvals(index:data:len:)","title":"func insertVals(index: Int, data: gconstpointer?, len: Int) -> ArrayRef!","type":"method"},{"path":"\/documentation\/glib\/arrayref\/prependvals(data:len:)","title":"func prependVals(data: gconstpointer?, len: Int) -> ArrayRef!","type":"method"},{"path":"\/documentation\/glib\/arrayref\/ref()","title":"func ref() -> ArrayRef!","type":"method"},{"path":"\/documentation\/glib\/arrayref\/remove(index:)","title":"func remove(index: Int) -> ArrayRef!","type":"method"},{"path":"\/documentation\/glib\/arrayref\/removeindexfast(index:)","title":"func removeIndexFast(index: Int) -> ArrayRef!","type":"method"},{"path":"\/documentation\/glib\/arrayref\/removerange(index:length:)","title":"func removeRange(index: Int, length: Int) -> ArrayRef!","type":"method"},{"path":"\/documentation\/glib\/arrayref\/set(clearfunc:)","title":"func set(clearFunc: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/glib\/arrayref\/setsize(length:)","title":"func setSize(length: Int) -> ArrayRef!","type":"method"},{"path":"\/documentation\/glib\/arrayref\/sort(comparefunc:)","title":"func sort(compareFunc: GCompareFunc?)","type":"method"},{"path":"\/documentation\/glib\/arrayref\/sortwithdata(comparefunc:userdata:)","title":"func sortWithData(compareFunc: GCompareDataFunc?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/arrayref\/steal(len:)","title":"func steal(len: UnsafeMutablePointer<gsize>!) -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/arrayref\/unref()","title":"func unref()","type":"method"}],"path":"\/documentation\/glib\/arrayref\/arrayprotocol-implementations","title":"ArrayProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/arrayref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/arrayref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/glib\/arrayref","title":"ArrayRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/asciitype\/init(_:)-49n2f","title":"init(GAsciiType)","type":"init"},{"path":"\/documentation\/glib\/asciitype\/init(_:)-8sv0k","title":"init<I>(I)","type":"init"},{"path":"\/documentation\/glib\/asciitype\/init(rawvalue:)","title":"init(rawValue: UInt32)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/asciitype\/int","title":"var int: gint","type":"property"},{"path":"\/documentation\/glib\/asciitype\/intvalue","title":"var intValue: Int","type":"property"},{"path":"\/documentation\/glib\/asciitype\/rawvalue","title":"var rawValue: UInt32","type":"property"},{"path":"\/documentation\/glib\/asciitype\/value","title":"var value: GAsciiType","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/asciitype\/alnum","title":"static let alnum: AsciiType","type":"property"},{"path":"\/documentation\/glib\/asciitype\/alpha","title":"static let alpha: AsciiType","type":"property"},{"path":"\/documentation\/glib\/asciitype\/cntrl","title":"static let cntrl: AsciiType","type":"property"},{"path":"\/documentation\/glib\/asciitype\/digit","title":"static let digit: AsciiType","type":"property"},{"path":"\/documentation\/glib\/asciitype\/graph","title":"static let graph: AsciiType","type":"property"},{"path":"\/documentation\/glib\/asciitype\/lower","title":"static let lower: AsciiType","type":"property"},{"path":"\/documentation\/glib\/asciitype\/print","title":"static let print: AsciiType","type":"property"},{"path":"\/documentation\/glib\/asciitype\/punct","title":"static let punct: AsciiType","type":"property"},{"path":"\/documentation\/glib\/asciitype\/space","title":"static let space: AsciiType","type":"property"},{"path":"\/documentation\/glib\/asciitype\/upper","title":"static let upper: AsciiType","type":"property"},{"path":"\/documentation\/glib\/asciitype\/xdigit","title":"static let xdigit: AsciiType","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/glib\/asciitype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/glib\/asciitype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/asciitype\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/asciitype\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/asciitype\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/glib\/asciitype\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/glib\/asciitype\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/glib\/asciitype\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/glib\/asciitype\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/glib\/asciitype\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/asciitype\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/glib\/asciitype\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/glib\/asciitype\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/glib\/asciitype\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/asciitype\/init(_:)-1b52v","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/glib\/asciitype\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/asciitype\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/asciitype\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/asciitype\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/asciitype\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/asciitype\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/asciitype\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/asciitype\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/glib\/asciitype\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/glib\/asciitype\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/glib\/asciitype","title":"AsciiType","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/asyncqueueref\/init(_:)-32kdp","title":"init(UnsafePointer<GAsyncQueue>)","type":"init"},{"path":"\/documentation\/glib\/asyncqueueref\/init(_:)-49iix","title":"init!(UnsafePointer<GAsyncQueue>?)","type":"init"},{"path":"\/documentation\/glib\/asyncqueueref\/init(_:)-5h2kn","title":"init!(UnsafeMutablePointer<GAsyncQueue>?)","type":"init"},{"path":"\/documentation\/glib\/asyncqueueref\/init(_:)-8i9ab","title":"init(UnsafeMutablePointer<GAsyncQueue>)","type":"init"},{"path":"\/documentation\/glib\/asyncqueueref\/init(_:)-cum3","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/asyncqueueref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/asyncqueueref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/asyncqueueref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/asyncqueueref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/asyncqueueref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/asyncqueueref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/asyncqueueref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/asyncqueueref\/new(full:)","title":"static func new(full: GDestroyNotify?) -> AsyncQueueRef!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/asyncqueueref\/length()","title":"func length() -> Int","type":"method"},{"path":"\/documentation\/glib\/asyncqueueref\/lengthunlocked()","title":"func lengthUnlocked() -> Int","type":"method"},{"path":"\/documentation\/glib\/asyncqueueref\/lock()","title":"func lock()","type":"method"},{"path":"\/documentation\/glib\/asyncqueueref\/pop()","title":"func pop() -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/asyncqueueref\/popunlocked()","title":"func popUnlocked() -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/asyncqueueref\/push(data:)","title":"func push(data: gpointer!)","type":"method"},{"path":"\/documentation\/glib\/asyncqueueref\/pushfront(item:)","title":"func pushFront(item: gpointer!)","type":"method"},{"path":"\/documentation\/glib\/asyncqueueref\/pushfrontunlocked(item:)","title":"func pushFrontUnlocked(item: gpointer!)","type":"method"},{"path":"\/documentation\/glib\/asyncqueueref\/pushsorted(data:func:userdata:)","title":"func pushSorted(data: gpointer!, func: GCompareDataFunc?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/asyncqueueref\/pushsortedunlocked(data:func:userdata:)","title":"func pushSortedUnlocked(data: gpointer?, func: GCompareDataFunc?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/asyncqueueref\/pushunlocked(data:)","title":"func pushUnlocked(data: gpointer!)","type":"method"},{"path":"\/documentation\/glib\/asyncqueueref\/ref()","title":"func ref() -> AsyncQueueRef!","type":"method"},{"path":"\/documentation\/glib\/asyncqueueref\/refunlocked()","title":"func refUnlocked()","type":"method"},{"path":"\/documentation\/glib\/asyncqueueref\/remove(item:)","title":"func remove(item: gpointer!) -> Bool","type":"method"},{"path":"\/documentation\/glib\/asyncqueueref\/removeunlocked(item:)","title":"func removeUnlocked(item: gpointer?) -> Bool","type":"method"},{"path":"\/documentation\/glib\/asyncqueueref\/sort(func:userdata:)","title":"func sort(func: GCompareDataFunc?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/asyncqueueref\/sortunlocked(func:userdata:)","title":"func sortUnlocked(func: GCompareDataFunc?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/asyncqueueref\/timedpop(endtime:)","title":"func timedPop<TimeValT>(endTime: TimeValT) -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/asyncqueueref\/timedpopunlocked(endtime:)","title":"func timedPopUnlocked<TimeValT>(endTime: TimeValT) -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/asyncqueueref\/timeoutpop(timeout:)","title":"func timeoutPop(timeout: guint64) -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/asyncqueueref\/timeoutpopunlocked(timeout:)","title":"func timeoutPopUnlocked(timeout: guint64) -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/asyncqueueref\/trypop()","title":"func tryPop() -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/asyncqueueref\/trypopunlocked()","title":"func tryPopUnlocked() -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/asyncqueueref\/unlock()","title":"func unlock()","type":"method"},{"path":"\/documentation\/glib\/asyncqueueref\/unref()","title":"func unref()","type":"method"},{"path":"\/documentation\/glib\/asyncqueueref\/unrefandunlock()","title":"func unrefAndUnlock()","type":"method"}],"path":"\/documentation\/glib\/asyncqueueref\/asyncqueueprotocol-implementations","title":"AsyncQueueProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/asyncqueueref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/asyncqueueref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/glib\/asyncqueueref","title":"AsyncQueueRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/bookmarkfileref\/init()","title":"init()","type":"init"},{"path":"\/documentation\/glib\/bookmarkfileref\/init(_:)-2fawg","title":"init(UnsafeMutablePointer<GBookmarkFile>)","type":"init"},{"path":"\/documentation\/glib\/bookmarkfileref\/init(_:)-2gux1","title":"init!(UnsafePointer<GBookmarkFile>?)","type":"init"},{"path":"\/documentation\/glib\/bookmarkfileref\/init(_:)-5l1bm","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/bookmarkfileref\/init(_:)-9fjcb","title":"init(UnsafePointer<GBookmarkFile>)","type":"init"},{"path":"\/documentation\/glib\/bookmarkfileref\/init(_:)-x28p","title":"init!(UnsafeMutablePointer<GBookmarkFile>?)","type":"init"},{"path":"\/documentation\/glib\/bookmarkfileref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/bookmarkfileref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/bookmarkfileref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/bookmarkfileref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/bookmarkfileref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/bookmarkfileref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/bookmarkfileref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/bookmarkfileref\/bookmark_file_ptr","title":"var bookmark_file_ptr: UnsafeMutablePointer<GBookmarkFile>!","type":"property"},{"path":"\/documentation\/glib\/bookmarkfileref\/size","title":"var size: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/bookmarkfileref\/addapplication(uri:name:exec:)","title":"func addApplication(uri: UnsafePointer<gchar>!, name: UnsafePointer<gchar>?, exec: UnsafePointer<gchar>?)","type":"method"},{"path":"\/documentation\/glib\/bookmarkfileref\/addgroup(uri:group:)","title":"func addGroup(uri: UnsafePointer<gchar>!, group: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/glib\/bookmarkfileref\/copy()","title":"func copy() -> BookmarkFileRef!","type":"method"},{"path":"\/documentation\/glib\/bookmarkfileref\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/glib\/bookmarkfileref\/getadded(uri:)","title":"func getAdded(uri: UnsafePointer<gchar>!) throws -> time_t","type":"method"},{"path":"\/documentation\/glib\/bookmarkfileref\/getaddeddatetime(uri:)","title":"func getAddedDateTime(uri: UnsafePointer<CChar>!) throws -> DateTimeRef!","type":"method"},{"path":"\/documentation\/glib\/bookmarkfileref\/getappinfo(uri:name:exec:count:stamp:)","title":"func getAppInfo(uri: UnsafePointer<gchar>!, name: UnsafePointer<gchar>!, exec: UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!, count: UnsafeMutablePointer<guint>!, stamp: UnsafeMutablePointer<time_t>!) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/bookmarkfileref\/getapplicationinfo(uri:name:exec:count:stamp:)","title":"func getApplicationInfo(uri: UnsafePointer<CChar>!, name: UnsafePointer<CChar>!, exec: UnsafeMutablePointer<UnsafeMutablePointer<CChar>?>!, count: UnsafeMutablePointer<guint>!, stamp: UnsafeMutablePointer<UnsafeMutablePointer<GDateTime>?>!) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/bookmarkfileref\/getapplications(uri:length:)","title":"func getApplications(uri: UnsafePointer<gchar>!, length: UnsafeMutablePointer<gsize>!) throws -> UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!","type":"method"},{"path":"\/documentation\/glib\/bookmarkfileref\/getdescription(uri:)","title":"func getDescription(uri: UnsafePointer<gchar>!) throws -> String!","type":"method"},{"path":"\/documentation\/glib\/bookmarkfileref\/getgroups(uri:length:)","title":"func getGroups(uri: UnsafePointer<gchar>!, length: UnsafeMutablePointer<gsize>!) throws -> UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!","type":"method"},{"path":"\/documentation\/glib\/bookmarkfileref\/geticon(uri:href:mimetype:)","title":"func getIcon(uri: UnsafePointer<gchar>!, href: UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!, mimeType: UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/bookmarkfileref\/getisprivate(uri:)","title":"func getIsPrivate(uri: UnsafePointer<gchar>!) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/bookmarkfileref\/getmimetype(uri:)","title":"func getMimeType(uri: UnsafePointer<gchar>!) throws -> String!","type":"method"},{"path":"\/documentation\/glib\/bookmarkfileref\/getmodified(uri:)","title":"func getModified(uri: UnsafePointer<gchar>!) throws -> time_t","type":"method"},{"path":"\/documentation\/glib\/bookmarkfileref\/getmodifieddatetime(uri:)","title":"func getModifiedDateTime(uri: UnsafePointer<CChar>!) throws -> DateTimeRef!","type":"method"},{"path":"\/documentation\/glib\/bookmarkfileref\/getsize()","title":"func getSize() -> Int","type":"method"},{"path":"\/documentation\/glib\/bookmarkfileref\/gettitle(uri:)","title":"func getTitle(uri: UnsafePointer<gchar>?) throws -> String!","type":"method"},{"path":"\/documentation\/glib\/bookmarkfileref\/geturis(length:)","title":"func getURIs(length: UnsafeMutablePointer<gsize>!) -> UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!","type":"method"},{"path":"\/documentation\/glib\/bookmarkfileref\/getvisited(uri:)","title":"func getVisited(uri: UnsafePointer<gchar>!) throws -> time_t","type":"method"},{"path":"\/documentation\/glib\/bookmarkfileref\/getvisiteddatetime(uri:)","title":"func getVisitedDateTime(uri: UnsafePointer<CChar>!) throws -> DateTimeRef!","type":"method"},{"path":"\/documentation\/glib\/bookmarkfileref\/hasapplication(uri:name:)","title":"func hasApplication(uri: UnsafePointer<gchar>!, name: UnsafePointer<gchar>!) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/bookmarkfileref\/hasgroup(uri:group:)","title":"func hasGroup(uri: UnsafePointer<gchar>!, group: UnsafePointer<gchar>!) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/bookmarkfileref\/hasitem(uri:)","title":"func hasItem(uri: UnsafePointer<gchar>!) -> Bool","type":"method"},{"path":"\/documentation\/glib\/bookmarkfileref\/loadfrom(data:length:)","title":"func loadFrom(data: UnsafePointer<gchar>!, length: Int) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/bookmarkfileref\/loadfromdatadirs(file:fullpath:)","title":"func loadFromDataDirs(file: UnsafePointer<gchar>!, fullPath: UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/bookmarkfileref\/loadfromfile(filename:)","title":"func loadFromFile(filename: UnsafePointer<gchar>!) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/bookmarkfileref\/moveitem(olduri:newuri:)","title":"func moveItem(oldURI: UnsafePointer<gchar>!, newURI: UnsafePointer<gchar>?) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/bookmarkfileref\/removeapplication(uri:name:)","title":"func removeApplication(uri: UnsafePointer<gchar>!, name: UnsafePointer<gchar>!) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/bookmarkfileref\/removegroup(uri:group:)","title":"func removeGroup(uri: UnsafePointer<gchar>!, group: UnsafePointer<gchar>!) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/bookmarkfileref\/removeitem(uri:)","title":"func removeItem(uri: UnsafePointer<gchar>!) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/bookmarkfileref\/setadded(uri:added:)","title":"func setAdded(uri: UnsafePointer<gchar>!, added: time_t)","type":"method"},{"path":"\/documentation\/glib\/bookmarkfileref\/setaddeddatetime(uri:added:)","title":"func setAddedDateTime<DateTimeT>(uri: UnsafePointer<CChar>!, added: DateTimeT)","type":"method"},{"path":"\/documentation\/glib\/bookmarkfileref\/setappinfo(uri:name:exec:count:stamp:)","title":"func setAppInfo(uri: UnsafePointer<gchar>!, name: UnsafePointer<gchar>!, exec: UnsafePointer<gchar>!, count: Int, stamp: time_t) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/bookmarkfileref\/setapplicationinfo(uri:name:exec:count:stamp:)","title":"func setApplicationInfo(uri: UnsafePointer<CChar>!, name: UnsafePointer<CChar>!, exec: UnsafePointer<CChar>!, count: Int, stamp: DateTimeRef?) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/bookmarkfileref\/setdescription(uri:description:)","title":"func setDescription(uri: UnsafePointer<gchar>?, description: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/glib\/bookmarkfileref\/setgroups(uri:groups:length:)","title":"func setGroups(uri: UnsafePointer<gchar>!, groups: UnsafeMutablePointer<UnsafePointer<gchar>?>!, length: Int)","type":"method"},{"path":"\/documentation\/glib\/bookmarkfileref\/seticon(uri:href:mimetype:)","title":"func setIcon(uri: UnsafePointer<gchar>!, href: UnsafePointer<gchar>?, mimeType: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/glib\/bookmarkfileref\/setisprivate(uri:isprivate:)","title":"func setIsPrivate(uri: UnsafePointer<gchar>!, isPrivate: Bool)","type":"method"},{"path":"\/documentation\/glib\/bookmarkfileref\/setmimetype(uri:mimetype:)","title":"func setMimeType(uri: UnsafePointer<gchar>!, mimeType: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/glib\/bookmarkfileref\/setmodified(uri:modified:)","title":"func setModified(uri: UnsafePointer<gchar>!, modified: time_t)","type":"method"},{"path":"\/documentation\/glib\/bookmarkfileref\/setmodifieddatetime(uri:modified:)","title":"func setModifiedDateTime<DateTimeT>(uri: UnsafePointer<CChar>!, modified: DateTimeT)","type":"method"},{"path":"\/documentation\/glib\/bookmarkfileref\/settitle(uri:title:)","title":"func setTitle(uri: UnsafePointer<gchar>?, title: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/glib\/bookmarkfileref\/setvisited(uri:visited:)","title":"func setVisited(uri: UnsafePointer<gchar>!, visited: time_t)","type":"method"},{"path":"\/documentation\/glib\/bookmarkfileref\/setvisiteddatetime(uri:visited:)","title":"func setVisitedDateTime<DateTimeT>(uri: UnsafePointer<CChar>!, visited: DateTimeT)","type":"method"},{"path":"\/documentation\/glib\/bookmarkfileref\/todata(length:)","title":"func toData(length: UnsafeMutablePointer<gsize>!) throws -> String!","type":"method"},{"path":"\/documentation\/glib\/bookmarkfileref\/tofile(filename:)","title":"func toFile(filename: UnsafePointer<gchar>!) throws -> Bool","type":"method"}],"path":"\/documentation\/glib\/bookmarkfileref\/bookmarkfileprotocol-implementations","title":"BookmarkFileProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/bookmarkfileref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/bookmarkfileref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/glib\/bookmarkfileref","title":"BookmarkFileRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/bytearrayref\/init(_:)-6e9jz","title":"init!(UnsafeMutablePointer<GByteArray>?)","type":"init"},{"path":"\/documentation\/glib\/bytearrayref\/init(_:)-8ptrg","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/bytearrayref\/init(_:)-95gd5","title":"init(UnsafePointer<GByteArray>)","type":"init"},{"path":"\/documentation\/glib\/bytearrayref\/init(_:)-9ppu1","title":"init!(UnsafePointer<GByteArray>?)","type":"init"},{"path":"\/documentation\/glib\/bytearrayref\/init(_:)-gt52","title":"init(UnsafeMutablePointer<GByteArray>)","type":"init"},{"path":"\/documentation\/glib\/bytearrayref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/bytearrayref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/bytearrayref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/bytearrayref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/bytearrayref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/bytearrayref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/bytearrayref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/bytearrayref\/new(take:len:)","title":"static func new(take: UnsafeMutablePointer<guint8>!, len: Int) -> ByteArrayRef!","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/sizednew(sized:)","title":"static func sizedNew(sized: Int) -> ByteArrayRef!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/bytearrayref\/last","title":"var last: Self.Element?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/bytearrayref\/difference(from:)","title":"func difference<C>(from: C) -> CollectionDifference<Self.Element>","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/difference(from:by:)","title":"func difference<C>(from: C, by: (C.Element, Self.Element) -> Bool) -> CollectionDifference<Self.Element>","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/droplast(_:)","title":"func dropLast(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/firstrange(of:)-6c936","title":"func firstRange<C>(of: C) -> Range<Self.Index>?","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/formindex(before:)","title":"func formIndex(before: inout Self.Index)","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/last(where:)","title":"func last(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/lastindex(of:)","title":"func lastIndex(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/lastindex(where:)","title":"func lastIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/reversed()","title":"func reversed() -> ReversedCollection<Self>","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/suffix(_:)","title":"func suffix(Int) -> Self.SubSequence","type":"method"}],"path":"\/documentation\/glib\/bytearrayref\/bidirectionalcollection-implementations","title":"BidirectionalCollection Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/glib\/bytearrayref\/==(_:_:)","title":"static func == <BArray>(Self, BArray) -> Bool","type":"op"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/bytearrayref\/byte_array_ptr","title":"var byte_array_ptr: UnsafeMutablePointer<GByteArray>!","type":"property"},{"path":"\/documentation\/glib\/bytearrayref\/data","title":"var data: UnsafeMutablePointer<guint8>!","type":"property"},{"path":"\/documentation\/glib\/bytearrayref\/endindex","title":"var endIndex: Int","type":"property"},{"path":"\/documentation\/glib\/bytearrayref\/len","title":"var len: guint","type":"property"},{"path":"\/documentation\/glib\/bytearrayref\/startindex","title":"var startIndex: Int","type":"property"},{"path":"\/documentation\/glib\/bytearrayref\/stringvalue","title":"var stringValue: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/bytearrayref\/append(data:len:)","title":"func append(data: UnsafePointer<guint8>!, len: Int) -> ByteArrayRef!","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/bytearrayappend(data:len:)","title":"func byteArrayAppend(data: UnsafePointer<guint8>!, len: Int) -> ByteArrayRef!","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/bytearrayfree(freesegment:)","title":"func byteArrayFree(freeSegment: Bool) -> UnsafeMutablePointer<guint8>!","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/bytearrayfreetobytes()","title":"func byteArrayFreeToBytes() -> BytesRef!","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/bytearrayprepend(data:len:)","title":"func byteArrayPrepend(data: UnsafePointer<guint8>!, len: Int) -> ByteArrayRef!","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/bytearrayref()","title":"func byteArrayRef() -> ByteArrayRef!","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/bytearrayremove(index:)","title":"func byteArrayRemove(index: Int) -> ByteArrayRef!","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/bytearrayremoveindexfast(index:)","title":"func byteArrayRemoveIndexFast(index: Int) -> ByteArrayRef!","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/bytearrayremoverange(index:length:)","title":"func byteArrayRemoveRange(index: Int, length: Int) -> ByteArrayRef!","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/bytearraysetsize(length:)","title":"func byteArraySetSize(length: Int) -> ByteArrayRef!","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/bytearraysort(comparefunc:)","title":"func byteArraySort(compareFunc: GCompareFunc?)","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/bytearraysortwithdata(comparefunc:userdata:)","title":"func byteArraySortWithData(compareFunc: GCompareDataFunc?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/bytearraysteal(len:)","title":"func byteArraySteal(len: UnsafeMutablePointer<gsize>!) -> UnsafeMutablePointer<guint8>!","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/bytearrayunref()","title":"func byteArrayUnref()","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/free(freesegment:)","title":"func free(freeSegment: Bool) -> UnsafeMutablePointer<guint8>!","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/freetobytes()","title":"func freeToBytes() -> BytesRef!","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/index(after:)","title":"func index(after: Int) -> Int","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/index(before:)","title":"func index(before: Int) -> Int","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/prepend(data:len:)","title":"func prepend(data: UnsafePointer<guint8>!, len: Int) -> ByteArrayRef!","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/ref()","title":"func ref() -> ByteArrayRef!","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/remove(index:)","title":"func remove(index: Int) -> ByteArrayRef!","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/removeindexfast(index:)","title":"func removeIndexFast(index: Int) -> ByteArrayRef!","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/removerange(index:length:)","title":"func removeRange(index: Int, length: Int) -> ByteArrayRef!","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/setsize(length:)","title":"func setSize(length: Int) -> ByteArrayRef!","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/sort(comparefunc:)","title":"func sort(compareFunc: GCompareFunc?)","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/sortwithdata(comparefunc:userdata:)","title":"func sortWithData(compareFunc: GCompareDataFunc?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/steal(len:)","title":"func steal(len: UnsafeMutablePointer<gsize>!) -> UnsafeMutablePointer<guint8>!","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/unref()","title":"func unref()","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/glib\/bytearrayref\/subscript(_:)-2l5g","title":"subscript(Int) -> UInt8","type":"subscript"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/glib\/bytearrayref\/element","title":"ByteArrayRef.Element","type":"typealias"},{"path":"\/documentation\/glib\/bytearrayref\/index","title":"ByteArrayRef.Index","type":"typealias"}],"path":"\/documentation\/glib\/bytearrayref\/bytearrayprotocol-implementations","title":"ByteArrayProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/bytearrayref\/count","title":"var count: Int","type":"property"},{"path":"\/documentation\/glib\/bytearrayref\/first","title":"var first: Self.Element?","type":"property"},{"path":"\/documentation\/glib\/bytearrayref\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/glib\/bytearrayref\/underestimatedcount","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/bytearrayref\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/dropfirst(_:)","title":"func dropFirst(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/firstindex(of:)","title":"func firstIndex(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/firstindex(where:)","title":"func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/firstrange(of:)-6xc17","title":"func firstRange<C>(of: C) -> Range<Self.Index>?","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/formindex(_:offsetby:)","title":"func formIndex(inout Self.Index, offsetBy: Int)","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/formindex(_:offsetby:limitedby:)","title":"func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/formindex(after:)","title":"func formIndex(after: inout Self.Index)","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/index(of:)","title":"func index(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/makeiterator()","title":"func makeIterator() -> IndexingIterator<Self>","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/map(_:)-8dvl8","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/prefix(_:)","title":"func prefix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/prefix(through:)","title":"func prefix(through: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/prefix(upto:)","title":"func prefix(upTo: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/randomelement()","title":"func randomElement() -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/randomelement(using:)","title":"func randomElement<T>(using: inout T) -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/ranges(of:)","title":"func ranges<C>(of: C) -> [Range<Self.Index>]","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/split(separator:maxsplits:omittingemptysubsequences:)","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/suffix(from:)","title":"func suffix(from: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/trimmingprefix(_:)","title":"func trimmingPrefix<Prefix>(Prefix) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/trimmingprefix(while:)","title":"func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/glib\/bytearrayref\/subscript(_:)-1dxsk","title":"subscript<R>(R) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/glib\/bytearrayref\/subscript(_:)-20w9n","title":"subscript((UnboundedRange_) -> ()) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/glib\/bytearrayref\/subscript(_:)-7c17d","title":"subscript(Range<Self.Index>) -> Slice<Self>","type":"subscript"}],"path":"\/documentation\/glib\/bytearrayref\/collection-implementations","title":"Collection Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/glib\/bytearrayref\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/glib\/bytearrayref\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/bytearrayref\/partition(by:)-1u5qt","title":"func partition(by: (Self.Element) throws -> Bool) rethrows -> Self.Index","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/partition(by:)-64ye1","title":"func partition(by: (Self.Element) throws -> Bool) rethrows -> Self.Index","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/reverse()","title":"func reverse()","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/shuffle()","title":"func shuffle()","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/shuffle(using:)","title":"func shuffle<T>(using: inout T)","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/sort()","title":"func sort()","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/sort(by:)","title":"func sort(by: (Self.Element, Self.Element) throws -> Bool) rethrows","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/sort(using:)-6xnp2","title":"func sort<Comparator>(using: Comparator)","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/sort(using:)-9ojvb","title":"func sort<S, Comparator>(using: S)","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/swapat(_:_:)","title":"func swapAt(Self.Index, Self.Index)","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/withcontiguousmutablestorageifavailable(_:)","title":"func withContiguousMutableStorageIfAvailable<R>((inout UnsafeMutableBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/glib\/bytearrayref\/subscript(_:)-38j9l","title":"subscript(Range<Self.Index>) -> Slice<Self>","type":"subscript"},{"path":"\/documentation\/glib\/bytearrayref\/subscript(_:)-3qra4","title":"subscript(Range<Self.Index>) -> Slice<Self>","type":"subscript"},{"path":"\/documentation\/glib\/bytearrayref\/subscript(_:)-71poe","title":"subscript((UnboundedRange_) -> ()) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/glib\/bytearrayref\/subscript(_:)-7trbh","title":"subscript<R>(R) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/glib\/bytearrayref\/subscript(_:)-8wnrn","title":"subscript(Range<Self.Index>) -> Self.SubSequence","type":"subscript"}],"path":"\/documentation\/glib\/bytearrayref\/mutablecollection-implementations","title":"MutableCollection Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/bytearrayref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/bytearrayref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/bytearrayref\/index(_:offsetby:limitedby:)","title":"func index(Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?","type":"method"}],"path":"\/documentation\/glib\/bytearrayref\/randomaccesscollection-implementations","title":"RandomAccessCollection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/bytearrayref\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"path":"\/documentation\/glib\/bytearrayref\/publisher","title":"var publisher: Publishers.Sequence<Self, Never>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/bytearrayref\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/compactmap(_:)","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/compare(_:_:)","title":"func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/contains(_:)","title":"func contains(Self.Element) -> Bool","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/filter(_:)-1fddb","title":"func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/filter(_:)-86nsy","title":"func filter(Predicate<Self.Element>) throws -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/flatmap(_:)-3bya","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/flatmap(_:)-j8vx","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/formatted(_:)","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/lexicographicallyprecedes(_:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/map(_:)-aj8g","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/max()","title":"func max() -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/min()","title":"func min() -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/sorted()","title":"func sorted() -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/sorted(using:)-6nff5","title":"func sorted<S, Comparator>(using: S) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/sorted(using:)-84iqc","title":"func sorted<Comparator>(using: Comparator) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/bytearrayref\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"}],"path":"\/documentation\/glib\/bytearrayref\/sequence-implementations","title":"Sequence Implementations","type":"symbol"}],"path":"\/documentation\/glib\/bytearrayref","title":"ByteArrayRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/bytesref\/init(_:)-2v7gp","title":"init!(UnsafePointer<GBytes>?)","type":"init"},{"path":"\/documentation\/glib\/bytesref\/init(_:)-2zlxv","title":"init(UnsafePointer<GBytes>)","type":"init"},{"path":"\/documentation\/glib\/bytesref\/init(_:)-5dd8d","title":"init(UnsafeMutablePointer<GBytes>)","type":"init"},{"path":"\/documentation\/glib\/bytesref\/init(_:)-7lmq","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/bytesref\/init(_:)-g30b","title":"init!(UnsafeMutablePointer<GBytes>?)","type":"init"},{"path":"\/documentation\/glib\/bytesref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/bytesref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/bytesref\/init(data:size:)","title":"init(data: gconstpointer!, size: Int)","type":"init"},{"path":"\/documentation\/glib\/bytesref\/init(freefunc:size:freefunc:userdata:)","title":"init(freeFunc: gconstpointer!, size: Int, freeFunc: GDestroyNotify?, userData: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/bytesref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/bytesref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/bytesref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/bytesref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/bytesref\/init(static_:size:)","title":"init(static_: gconstpointer!, size: Int)","type":"init"},{"path":"\/documentation\/glib\/bytesref\/init(take:size:)","title":"init(take: gpointer!, size: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/bytesref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/bytesref\/new(take:size:)","title":"static func new(take: gpointer!, size: Int) -> BytesRef!","type":"method"},{"path":"\/documentation\/glib\/bytesref\/newstatic(static_:size:)","title":"static func newStatic(static_: gconstpointer!, size: Int) -> BytesRef!","type":"method"},{"path":"\/documentation\/glib\/bytesref\/newwith(freefunc:size:freefunc:userdata:)","title":"static func newWith(freeFunc: gconstpointer!, size: Int, freeFunc: GDestroyNotify?, userData: gpointer?) -> BytesRef!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/bytesref\/bytes_ptr","title":"var bytes_ptr: UnsafeMutablePointer<GBytes>!","type":"property"},{"path":"\/documentation\/glib\/bytesref\/size","title":"var size: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/bytesref\/compare(bytes2:)","title":"func compare<BytesT>(bytes2: BytesT) -> Int","type":"method"},{"path":"\/documentation\/glib\/bytesref\/computechecksumforbytes(checksumtype:)","title":"func computeChecksumForBytes(checksumType: GChecksumType) -> String!","type":"method"},{"path":"\/documentation\/glib\/bytesref\/computehmacforbytes(digesttype:data:)","title":"func computeHmacForBytes<BytesT>(digestType: GChecksumType, data: BytesT) -> String!","type":"method"},{"path":"\/documentation\/glib\/bytesref\/equal(bytes2:)","title":"func equal<BytesT>(bytes2: BytesT) -> Bool","type":"method"},{"path":"\/documentation\/glib\/bytesref\/getdata(size:)","title":"func getData(size: UnsafeMutablePointer<gsize>!) -> gconstpointer?","type":"method"},{"path":"\/documentation\/glib\/bytesref\/getregion(elementsize:offset:nelements:)","title":"func getRegion(elementSize: Int, offset: Int, nElements: Int) -> gconstpointer?","type":"method"},{"path":"\/documentation\/glib\/bytesref\/getsize()","title":"func getSize() -> Int","type":"method"},{"path":"\/documentation\/glib\/bytesref\/hash()","title":"func hash() -> Int","type":"method"},{"path":"\/documentation\/glib\/bytesref\/newfrombytes(offset:length:)","title":"func newFromBytes(offset: Int, length: Int) -> BytesRef!","type":"method"},{"path":"\/documentation\/glib\/bytesref\/ref()","title":"func ref() -> BytesRef!","type":"method"},{"path":"\/documentation\/glib\/bytesref\/unref()","title":"func unref()","type":"method"},{"path":"\/documentation\/glib\/bytesref\/unreftoarray()","title":"func unrefToArray() -> ByteArrayRef!","type":"method"},{"path":"\/documentation\/glib\/bytesref\/unreftodata(size:)","title":"func unrefToData(size: UnsafeMutablePointer<gsize>!) -> gpointer!","type":"method"}],"path":"\/documentation\/glib\/bytesref\/bytesprotocol-implementations","title":"BytesProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/bytesref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/bytesref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/glib\/bytesref","title":"BytesRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/cacheref\/init(_:)-4q0dn","title":"init!(UnsafePointer<GCache>?)","type":"init"},{"path":"\/documentation\/glib\/cacheref\/init(_:)-4uqyv","title":"init!(UnsafeMutablePointer<GCache>?)","type":"init"},{"path":"\/documentation\/glib\/cacheref\/init(_:)-5do61","title":"init(UnsafeMutablePointer<GCache>)","type":"init"},{"path":"\/documentation\/glib\/cacheref\/init(_:)-5edfp","title":"init(UnsafePointer<GCache>)","type":"init"},{"path":"\/documentation\/glib\/cacheref\/init(_:)-ay4u","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/cacheref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/cacheref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/cacheref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/cacheref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/cacheref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/cacheref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/cacheref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/cacheref\/destroy()","title":"func destroy()","type":"method"},{"path":"\/documentation\/glib\/cacheref\/insert(key:)","title":"func insert(key: gpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/cacheref\/keyforeach(func:userdata:)","title":"func keyForeach(func: GHFunc?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/cacheref\/remove(value:)","title":"func remove(value: gconstpointer?)","type":"method"},{"path":"\/documentation\/glib\/cacheref\/valueforeach(func:userdata:)","title":"func valueForeach(func: GHFunc?, userData: gpointer?)","type":"method"}],"path":"\/documentation\/glib\/cacheref\/cacheprotocol-implementations","title":"CacheProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/cacheref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/cacheref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/glib\/cacheref","title":"CacheRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/checksumref\/init(_:)-33l9c","title":"init(UnsafeMutablePointer<GChecksum>)","type":"init"},{"path":"\/documentation\/glib\/checksumref\/init(_:)-4mbg1","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/checksumref\/init(_:)-5ogq8","title":"init!(UnsafeMutablePointer<GChecksum>?)","type":"init"},{"path":"\/documentation\/glib\/checksumref\/init(_:)-9zfqr","title":"init(UnsafePointer<GChecksum>)","type":"init"},{"path":"\/documentation\/glib\/checksumref\/init(_:)-f5fe","title":"init!(UnsafePointer<GChecksum>?)","type":"init"},{"path":"\/documentation\/glib\/checksumref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/checksumref\/init(checksumtype:)","title":"init(checksumType: GChecksumType)","type":"init"},{"path":"\/documentation\/glib\/checksumref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/checksumref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/checksumref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/checksumref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/checksumref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/checksumref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/checksumref\/checksum_ptr","title":"var checksum_ptr: UnsafeMutablePointer<GChecksum>!","type":"property"},{"path":"\/documentation\/glib\/checksumref\/string","title":"var string: String!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/checksumref\/copy()","title":"func copy() -> ChecksumRef!","type":"method"},{"path":"\/documentation\/glib\/checksumref\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/glib\/checksumref\/getdigest(buffer:digestlen:)","title":"func getDigest(buffer: UnsafeMutablePointer<guint8>!, digestLen: UnsafeMutablePointer<gsize>!)","type":"method"},{"path":"\/documentation\/glib\/checksumref\/getstring()","title":"func getString() -> String!","type":"method"},{"path":"\/documentation\/glib\/checksumref\/reset()","title":"func reset()","type":"method"},{"path":"\/documentation\/glib\/checksumref\/update(data:length:)","title":"func update(data: UnsafePointer<guchar>!, length: gssize)","type":"method"}],"path":"\/documentation\/glib\/checksumref\/checksumprotocol-implementations","title":"ChecksumProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/checksumref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/checksumref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/glib\/checksumref","title":"ChecksumRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/completionref\/init(_:)-1erlj","title":"init!(UnsafeMutablePointer<GCompletion>?)","type":"init"},{"path":"\/documentation\/glib\/completionref\/init(_:)-3bxru","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/completionref\/init(_:)-5vnpj","title":"init!(UnsafePointer<GCompletion>?)","type":"init"},{"path":"\/documentation\/glib\/completionref\/init(_:)-7jh9x","title":"init(UnsafePointer<GCompletion>)","type":"init"},{"path":"\/documentation\/glib\/completionref\/init(_:)-7nm3h","title":"init(UnsafeMutablePointer<GCompletion>)","type":"init"},{"path":"\/documentation\/glib\/completionref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/completionref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/completionref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/completionref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/completionref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/completionref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/completionref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/completionref\/cache","title":"var cache: ListRef!","type":"property"},{"path":"\/documentation\/glib\/completionref\/func","title":"var `func`: GCompletionFunc!","type":"property"},{"path":"\/documentation\/glib\/completionref\/items","title":"var items: ListRef!","type":"property"},{"path":"\/documentation\/glib\/completionref\/prefix","title":"var prefix: UnsafeMutablePointer<gchar>!","type":"property"},{"path":"\/documentation\/glib\/completionref\/strncmpfunc","title":"var strncmpFunc: GCompletionStrncmpFunc!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/completionref\/add(items:)","title":"func add<ListT>(items: ListT)","type":"method"},{"path":"\/documentation\/glib\/completionref\/clearitems()","title":"func clearItems()","type":"method"},{"path":"\/documentation\/glib\/completionref\/complete(prefix:newprefix:)","title":"func complete(prefix: UnsafePointer<gchar>!, newPrefix: UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!) -> ReferenceListRef<gpointer>!","type":"method"},{"path":"\/documentation\/glib\/completionref\/completeutf8(prefix:newprefix:)","title":"func completeUTF8(prefix: UnsafePointer<gchar>!, newPrefix: UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/completionref\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/glib\/completionref\/remove(items:)","title":"func remove<ListT>(items: ListT)","type":"method"},{"path":"\/documentation\/glib\/completionref\/setcompare(strncmpfunc:)","title":"func setCompare(strncmpFunc: GCompletionStrncmpFunc?)","type":"method"}],"path":"\/documentation\/glib\/completionref\/completionprotocol-implementations","title":"CompletionProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/completionref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/completionref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/glib\/completionref","title":"CompletionRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/condref\/init(_:)-3vuu1","title":"init(UnsafePointer<GCond>)","type":"init"},{"path":"\/documentation\/glib\/condref\/init(_:)-5lwo4","title":"init(UnsafeMutablePointer<GCond>)","type":"init"},{"path":"\/documentation\/glib\/condref\/init(_:)-64xk6","title":"init!(UnsafePointer<GCond>?)","type":"init"},{"path":"\/documentation\/glib\/condref\/init(_:)-858ub","title":"init!(UnsafeMutablePointer<GCond>?)","type":"init"},{"path":"\/documentation\/glib\/condref\/init(_:)-d6nf","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/condref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/condref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/condref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/condref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/condref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/condref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/condref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/condref\/broadcast()","title":"func broadcast()","type":"method"},{"path":"\/documentation\/glib\/condref\/clear()","title":"func clear()","type":"method"},{"path":"\/documentation\/glib\/condref\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/glib\/condref\/init_()","title":"func init_()","type":"method"},{"path":"\/documentation\/glib\/condref\/signal()","title":"func signal()","type":"method"},{"path":"\/documentation\/glib\/condref\/timedwait(mutex:abstime:)","title":"func timedWait<MutexT, TimeValT>(mutex: MutexT, absTime: TimeValT) -> Bool","type":"method"},{"path":"\/documentation\/glib\/condref\/wait(mutex:)","title":"func wait<MutexT>(mutex: MutexT)","type":"method"},{"path":"\/documentation\/glib\/condref\/waituntil(mutex:endtime:)","title":"func waitUntil<MutexT>(mutex: MutexT, endTime: gint64) -> Bool","type":"method"}],"path":"\/documentation\/glib\/condref\/condprotocol-implementations","title":"CondProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/condref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/condref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/glib\/condref","title":"CondRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/dataref\/init(_:)-1pzgn","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/dataref\/init(_:)-39byo","title":"init(UnsafePointer<GData>)","type":"init"},{"path":"\/documentation\/glib\/dataref\/init(_:)-4cymi","title":"init(UnsafeMutablePointer<GData>)","type":"init"},{"path":"\/documentation\/glib\/dataref\/init(_:)-7h9dt","title":"init!(UnsafeMutablePointer<GData>?)","type":"init"},{"path":"\/documentation\/glib\/dataref\/init(_:)-7u3gw","title":"init!(UnsafePointer<GData>?)","type":"init"},{"path":"\/documentation\/glib\/dataref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/dataref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/dataref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/dataref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/dataref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/dataref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/dataref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/dataref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/dataref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/glib\/dataref","title":"DataRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/dateref\/init()","title":"init()","type":"init"},{"path":"\/documentation\/glib\/dateref\/init(_:)-15l2w","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/dateref\/init(_:)-5vh9g","title":"init!(UnsafeMutablePointer<GDate>?)","type":"init"},{"path":"\/documentation\/glib\/dateref\/init(_:)-6v7fp","title":"init!(UnsafePointer<GDate>?)","type":"init"},{"path":"\/documentation\/glib\/dateref\/init(_:)-7pk3a","title":"init(UnsafeMutablePointer<GDate>)","type":"init"},{"path":"\/documentation\/glib\/dateref\/init(_:)-9375e","title":"init(UnsafePointer<GDate>)","type":"init"},{"path":"\/documentation\/glib\/dateref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/dateref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/dateref\/init(dmy:month:year:)","title":"init(dmy: GDateDay, month: GDateMonth, year: GDateYear)","type":"init"},{"path":"\/documentation\/glib\/dateref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/dateref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/dateref\/init(julian:)","title":"init(julian: guint32)","type":"init"},{"path":"\/documentation\/glib\/dateref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/dateref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/dateref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/dateref\/new(dmy:month:year:)","title":"static func new(dmy: GDateDay, month: GDateMonth, year: GDateYear) -> DateRef!","type":"method"},{"path":"\/documentation\/glib\/dateref\/new(julian:)","title":"static func new(julian: guint32) -> DateRef!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/dateref\/date_ptr","title":"var date_ptr: UnsafeMutablePointer<GDate>!","type":"property"},{"path":"\/documentation\/glib\/dateref\/day","title":"var day: GDateDay","type":"property"},{"path":"\/documentation\/glib\/dateref\/dayofyear","title":"var dayOfYear: Int","type":"property"},{"path":"\/documentation\/glib\/dateref\/dmy","title":"var dmy: guint","type":"property"},{"path":"\/documentation\/glib\/dateref\/isfirstofmonth","title":"var isFirstOfMonth: Bool","type":"property"},{"path":"\/documentation\/glib\/dateref\/islastofmonth","title":"var isLastOfMonth: Bool","type":"property"},{"path":"\/documentation\/glib\/dateref\/iso8601weekofyear","title":"var iso8601WeekOfYear: Int","type":"property"},{"path":"\/documentation\/glib\/dateref\/julian","title":"var julian: guint32","type":"property"},{"path":"\/documentation\/glib\/dateref\/juliandays","title":"var julianDays: guint","type":"property"},{"path":"\/documentation\/glib\/dateref\/mondayweekofyear","title":"var mondayWeekOfYear: Int","type":"property"},{"path":"\/documentation\/glib\/dateref\/month","title":"var month: GDateMonth","type":"property"},{"path":"\/documentation\/glib\/dateref\/sundayweekofyear","title":"var sundayWeekOfYear: Int","type":"property"},{"path":"\/documentation\/glib\/dateref\/weekday","title":"var weekday: GDateWeekday","type":"property"},{"path":"\/documentation\/glib\/dateref\/year","title":"var year: GDateYear","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/dateref\/adddays(ndays:)","title":"func addDays(nDays: Int)","type":"method"},{"path":"\/documentation\/glib\/dateref\/addmonths(nmonths:)","title":"func addMonths(nMonths: Int)","type":"method"},{"path":"\/documentation\/glib\/dateref\/addyears(nyears:)","title":"func addYears(nYears: Int)","type":"method"},{"path":"\/documentation\/glib\/dateref\/clamp(mindate:maxdate:)","title":"func clamp<DateT>(minDate: DateT, maxDate: DateT)","type":"method"},{"path":"\/documentation\/glib\/dateref\/clear(ndates:)","title":"func clear(nDates: Int)","type":"method"},{"path":"\/documentation\/glib\/dateref\/compare(rhs:)","title":"func compare<DateT>(rhs: DateT) -> Int","type":"method"},{"path":"\/documentation\/glib\/dateref\/copy()","title":"func copy() -> DateRef!","type":"method"},{"path":"\/documentation\/glib\/dateref\/datestrftime(s:slen:format:)","title":"func dateStrftime(s: UnsafeMutablePointer<gchar>!, slen: Int, format: UnsafePointer<gchar>!) -> Int","type":"method"},{"path":"\/documentation\/glib\/dateref\/daysbetween(date2:)","title":"func daysBetween<DateT>(date2: DateT) -> Int","type":"method"},{"path":"\/documentation\/glib\/dateref\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/glib\/dateref\/getday()","title":"func getDay() -> GDateDay","type":"method"},{"path":"\/documentation\/glib\/dateref\/getdayofyear()","title":"func getDayOfYear() -> Int","type":"method"},{"path":"\/documentation\/glib\/dateref\/getiso8601weekofyear()","title":"func getIso8601WeekOfYear() -> Int","type":"method"},{"path":"\/documentation\/glib\/dateref\/getjulian()","title":"func getJulian() -> guint32","type":"method"},{"path":"\/documentation\/glib\/dateref\/getmondayweekofyear()","title":"func getMondayWeekOfYear() -> Int","type":"method"},{"path":"\/documentation\/glib\/dateref\/getmonth()","title":"func getMonth() -> GDateMonth","type":"method"},{"path":"\/documentation\/glib\/dateref\/getsundayweekofyear()","title":"func getSundayWeekOfYear() -> Int","type":"method"},{"path":"\/documentation\/glib\/dateref\/getweekday()","title":"func getWeekday() -> GDateWeekday","type":"method"},{"path":"\/documentation\/glib\/dateref\/getyear()","title":"func getYear() -> GDateYear","type":"method"},{"path":"\/documentation\/glib\/dateref\/order(date2:)","title":"func order<DateT>(date2: DateT)","type":"method"},{"path":"\/documentation\/glib\/dateref\/set(day:)","title":"func set(day: GDateDay)","type":"method"},{"path":"\/documentation\/glib\/dateref\/set(month:)","title":"func set(month: GDateMonth)","type":"method"},{"path":"\/documentation\/glib\/dateref\/set(time:)","title":"func set(time: GTime)","type":"method"},{"path":"\/documentation\/glib\/dateref\/set(year:)","title":"func set(year: GDateYear)","type":"method"},{"path":"\/documentation\/glib\/dateref\/setdmy(day:month:y:)","title":"func setDmy(day: GDateDay, month: GDateMonth, y: GDateYear)","type":"method"},{"path":"\/documentation\/glib\/dateref\/setjulian(juliandate:)","title":"func setJulian(julianDate: guint32)","type":"method"},{"path":"\/documentation\/glib\/dateref\/setparse(str:)","title":"func setParse(str: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/glib\/dateref\/settimet(timet:)","title":"func setTimeT(timet: time_t)","type":"method"},{"path":"\/documentation\/glib\/dateref\/settimeval(timeval:)","title":"func setTimeVal<TimeValT>(timeval: TimeValT)","type":"method"},{"path":"\/documentation\/glib\/dateref\/strftime(s:slen:format:)","title":"func strftime(s: UnsafeMutablePointer<gchar>!, slen: Int, format: UnsafePointer<gchar>!) -> Int","type":"method"},{"path":"\/documentation\/glib\/dateref\/subtractdays(ndays:)","title":"func subtractDays(nDays: Int)","type":"method"},{"path":"\/documentation\/glib\/dateref\/subtractmonths(nmonths:)","title":"func subtractMonths(nMonths: Int)","type":"method"},{"path":"\/documentation\/glib\/dateref\/subtractyears(nyears:)","title":"func subtractYears(nYears: Int)","type":"method"},{"path":"\/documentation\/glib\/dateref\/tostruct(tm:)","title":"func toStruct(tm: UnsafeMutablePointer<tm>!)","type":"method"},{"path":"\/documentation\/glib\/dateref\/valid()","title":"func valid() -> Bool","type":"method"}],"path":"\/documentation\/glib\/dateref\/dateprotocol-implementations","title":"DateProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/dateref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/dateref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/glib\/dateref","title":"DateRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/datetimeref\/init(_:)-3g17f","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/datetimeref\/init(_:)-9ndhx","title":"init(UnsafePointer<GDateTime>)","type":"init"},{"path":"\/documentation\/glib\/datetimeref\/init(_:)-9o15x","title":"init!(UnsafeMutablePointer<GDateTime>?)","type":"init"},{"path":"\/documentation\/glib\/datetimeref\/init(_:)-j75","title":"init!(UnsafePointer<GDateTime>?)","type":"init"},{"path":"\/documentation\/glib\/datetimeref\/init(_:)-nju0","title":"init(UnsafeMutablePointer<GDateTime>)","type":"init"},{"path":"\/documentation\/glib\/datetimeref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/datetimeref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/datetimeref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/datetimeref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/datetimeref\/init(iso8601:defaulttz:)","title":"init<TimeZoneT>(iso8601: UnsafePointer<gchar>!, defaultTz: TimeZoneT?)","type":"init"},{"path":"\/documentation\/glib\/datetimeref\/init(local:month:day:hour:minute:seconds:)","title":"init(local: Int, month: Int, day: Int, hour: Int, minute: Int, seconds: Double)","type":"init"},{"path":"\/documentation\/glib\/datetimeref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/datetimeref\/init(now:)","title":"init<TimeZoneT>(now: TimeZoneT)","type":"init"},{"path":"\/documentation\/glib\/datetimeref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/datetimeref\/init(timevallocal:)","title":"init<TimeValT>(timevalLocal: TimeValT)","type":"init"},{"path":"\/documentation\/glib\/datetimeref\/init(timevalutc:)","title":"init<TimeValT>(timevalUTC: TimeValT)","type":"init"},{"path":"\/documentation\/glib\/datetimeref\/init(tz:year:month:day:hour:minute:seconds:)","title":"init<TimeZoneT>(tz: TimeZoneT, year: Int, month: Int, day: Int, hour: Int, minute: Int, seconds: Double)","type":"init"},{"path":"\/documentation\/glib\/datetimeref\/init(unixlocal:)","title":"init(unixLocal: gint64)","type":"init"},{"path":"\/documentation\/glib\/datetimeref\/init(unixlocalusec:)","title":"init(unixLocalUsec: gint64)","type":"init"},{"path":"\/documentation\/glib\/datetimeref\/init(unixutc:)","title":"init(unixUTC: gint64)","type":"init"},{"path":"\/documentation\/glib\/datetimeref\/init(unixutcusec:)","title":"init(unixUTCUsec: gint64)","type":"init"},{"path":"\/documentation\/glib\/datetimeref\/init(utc:month:day:hour:minute:seconds:)","title":"init(utc: Int, month: Int, day: Int, hour: Int, minute: Int, seconds: Double)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/datetimeref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/datetimeref\/new(local:month:day:hour:minute:seconds:)","title":"static func new(local: Int, month: Int, day: Int, hour: Int, minute: Int, seconds: Double) -> DateTimeRef!","type":"method"},{"path":"\/documentation\/glib\/datetimeref\/new(now:)","title":"static func new<TimeZoneT>(now: TimeZoneT) -> DateTimeRef!","type":"method"},{"path":"\/documentation\/glib\/datetimeref\/new(utc:month:day:hour:minute:seconds:)","title":"static func new(utc: Int, month: Int, day: Int, hour: Int, minute: Int, seconds: Double) -> DateTimeRef!","type":"method"},{"path":"\/documentation\/glib\/datetimeref\/newfrom(iso8601:defaulttz:)","title":"static func newFrom<TimeZoneT>(iso8601: UnsafePointer<gchar>!, defaultTz: TimeZoneT?) -> DateTimeRef!","type":"method"},{"path":"\/documentation\/glib\/datetimeref\/newfrom(timevallocal:)","title":"static func newFrom<TimeValT>(timevalLocal: TimeValT) -> DateTimeRef!","type":"method"},{"path":"\/documentation\/glib\/datetimeref\/newfrom(timevalutc:)","title":"static func newFrom<TimeValT>(timevalUTC: TimeValT) -> DateTimeRef!","type":"method"},{"path":"\/documentation\/glib\/datetimeref\/newfrom(unixlocal:)","title":"static func newFrom(unixLocal: gint64) -> DateTimeRef!","type":"method"},{"path":"\/documentation\/glib\/datetimeref\/newfrom(unixlocalusec:)","title":"static func newFrom(unixLocalUsec: gint64) -> DateTimeRef!","type":"method"},{"path":"\/documentation\/glib\/datetimeref\/newfrom(unixutc:)","title":"static func newFrom(unixUTC: gint64) -> DateTimeRef!","type":"method"},{"path":"\/documentation\/glib\/datetimeref\/newfrom(unixutcusec:)","title":"static func newFrom(unixUTCUsec: gint64) -> DateTimeRef!","type":"method"},{"path":"\/documentation\/glib\/datetimeref\/newnowlocal()","title":"static func newNowLocal() -> DateTimeRef!","type":"method"},{"path":"\/documentation\/glib\/datetimeref\/newnowutc()","title":"static func newNowUTC() -> DateTimeRef!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/datetimeref\/date_time_ptr","title":"var date_time_ptr: UnsafeMutablePointer<GDateTime>!","type":"property"},{"path":"\/documentation\/glib\/datetimeref\/dayofmonth","title":"var dayOfMonth: Int","type":"property"},{"path":"\/documentation\/glib\/datetimeref\/dayofweek","title":"var dayOfWeek: Int","type":"property"},{"path":"\/documentation\/glib\/datetimeref\/dayofyear","title":"var dayOfYear: Int","type":"property"},{"path":"\/documentation\/glib\/datetimeref\/hour","title":"var hour: Int","type":"property"},{"path":"\/documentation\/glib\/datetimeref\/isdaylightsavings","title":"var isDaylightSavings: Bool","type":"property"},{"path":"\/documentation\/glib\/datetimeref\/microsecond","title":"var microsecond: Int","type":"property"},{"path":"\/documentation\/glib\/datetimeref\/minute","title":"var minute: Int","type":"property"},{"path":"\/documentation\/glib\/datetimeref\/month","title":"var month: Int","type":"property"},{"path":"\/documentation\/glib\/datetimeref\/second","title":"var second: Int","type":"property"},{"path":"\/documentation\/glib\/datetimeref\/seconds","title":"var seconds: Double","type":"property"},{"path":"\/documentation\/glib\/datetimeref\/timezone","title":"var timezone: TimeZoneRef!","type":"property"},{"path":"\/documentation\/glib\/datetimeref\/timezoneabbreviation","title":"var timezoneAbbreviation: String!","type":"property"},{"path":"\/documentation\/glib\/datetimeref\/utcoffset","title":"var utcOffset: GTimeSpan","type":"property"},{"path":"\/documentation\/glib\/datetimeref\/weeknumberingyear","title":"var weekNumberingYear: Int","type":"property"},{"path":"\/documentation\/glib\/datetimeref\/weekofyear","title":"var weekOfYear: Int","type":"property"},{"path":"\/documentation\/glib\/datetimeref\/year","title":"var year: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/datetimeref\/add(days:)","title":"func add(days: Int) -> DateTimeRef!","type":"method"},{"path":"\/documentation\/glib\/datetimeref\/add(hours:)","title":"func add(hours: Int) -> DateTimeRef!","type":"method"},{"path":"\/documentation\/glib\/datetimeref\/add(minutes:)","title":"func add(minutes: Int) -> DateTimeRef!","type":"method"},{"path":"\/documentation\/glib\/datetimeref\/add(months:)","title":"func add(months: Int) -> DateTimeRef!","type":"method"},{"path":"\/documentation\/glib\/datetimeref\/add(seconds:)","title":"func add(seconds: Double) -> DateTimeRef!","type":"method"},{"path":"\/documentation\/glib\/datetimeref\/add(timespan:)","title":"func add(timespan: GTimeSpan) -> DateTimeRef!","type":"method"},{"path":"\/documentation\/glib\/datetimeref\/add(weeks:)","title":"func add(weeks: Int) -> DateTimeRef!","type":"method"},{"path":"\/documentation\/glib\/datetimeref\/add(years:)","title":"func add(years: Int) -> DateTimeRef!","type":"method"},{"path":"\/documentation\/glib\/datetimeref\/addfull(years:months:days:hours:minutes:seconds:)","title":"func addFull(years: Int, months: Int, days: Int, hours: Int, minutes: Int, seconds: Double) -> DateTimeRef!","type":"method"},{"path":"\/documentation\/glib\/datetimeref\/compare(dt2:)","title":"func compare<DateTimeT>(dt2: DateTimeT) -> Int","type":"method"},{"path":"\/documentation\/glib\/datetimeref\/difference(begin:)","title":"func difference<DateTimeT>(begin: DateTimeT) -> GTimeSpan","type":"method"},{"path":"\/documentation\/glib\/datetimeref\/equal(dt2:)","title":"func equal<DateTimeT>(dt2: DateTimeT) -> Bool","type":"method"},{"path":"\/documentation\/glib\/datetimeref\/format(format:)","title":"func format(format: UnsafePointer<gchar>!) -> String!","type":"method"},{"path":"\/documentation\/glib\/datetimeref\/formatiso8601()","title":"func formatIso8601() -> String!","type":"method"},{"path":"\/documentation\/glib\/datetimeref\/getdayofmonth()","title":"func getDayOfMonth() -> Int","type":"method"},{"path":"\/documentation\/glib\/datetimeref\/getdayofweek()","title":"func getDayOfWeek() -> Int","type":"method"},{"path":"\/documentation\/glib\/datetimeref\/getdayofyear()","title":"func getDayOfYear() -> Int","type":"method"},{"path":"\/documentation\/glib\/datetimeref\/gethour()","title":"func getHour() -> Int","type":"method"},{"path":"\/documentation\/glib\/datetimeref\/getmicrosecond()","title":"func getMicrosecond() -> Int","type":"method"},{"path":"\/documentation\/glib\/datetimeref\/getminute()","title":"func getMinute() -> Int","type":"method"},{"path":"\/documentation\/glib\/datetimeref\/getmonth()","title":"func getMonth() -> Int","type":"method"},{"path":"\/documentation\/glib\/datetimeref\/getsecond()","title":"func getSecond() -> Int","type":"method"},{"path":"\/documentation\/glib\/datetimeref\/getseconds()","title":"func getSeconds() -> Double","type":"method"},{"path":"\/documentation\/glib\/datetimeref\/gettimezone()","title":"func getTimezone() -> TimeZoneRef!","type":"method"},{"path":"\/documentation\/glib\/datetimeref\/gettimezoneabbreviation()","title":"func getTimezoneAbbreviation() -> String!","type":"method"},{"path":"\/documentation\/glib\/datetimeref\/getutcoffset()","title":"func getUTCOffset() -> GTimeSpan","type":"method"},{"path":"\/documentation\/glib\/datetimeref\/getweeknumberingyear()","title":"func getWeekNumberingYear() -> Int","type":"method"},{"path":"\/documentation\/glib\/datetimeref\/getweekofyear()","title":"func getWeekOfYear() -> Int","type":"method"},{"path":"\/documentation\/glib\/datetimeref\/getyear()","title":"func getYear() -> Int","type":"method"},{"path":"\/documentation\/glib\/datetimeref\/getymd(year:month:day:)","title":"func getYmd(year: UnsafeMutablePointer<gint>!, month: UnsafeMutablePointer<gint>!, day: UnsafeMutablePointer<gint>!)","type":"method"},{"path":"\/documentation\/glib\/datetimeref\/hash()","title":"func hash() -> Int","type":"method"},{"path":"\/documentation\/glib\/datetimeref\/ref()","title":"func ref() -> DateTimeRef!","type":"method"},{"path":"\/documentation\/glib\/datetimeref\/tolocal()","title":"func toLocal() -> DateTimeRef!","type":"method"},{"path":"\/documentation\/glib\/datetimeref\/totimeval(tv:)","title":"func toTimeval<TimeValT>(tv: TimeValT) -> Bool","type":"method"},{"path":"\/documentation\/glib\/datetimeref\/totimezone(tz:)","title":"func toTimezone<TimeZoneT>(tz: TimeZoneT) -> DateTimeRef!","type":"method"},{"path":"\/documentation\/glib\/datetimeref\/toutc()","title":"func toUTC() -> DateTimeRef!","type":"method"},{"path":"\/documentation\/glib\/datetimeref\/tounix()","title":"func toUnix() -> gint64","type":"method"},{"path":"\/documentation\/glib\/datetimeref\/tounixusec()","title":"func toUnixUsec() -> gint64","type":"method"},{"path":"\/documentation\/glib\/datetimeref\/unref()","title":"func unref()","type":"method"}],"path":"\/documentation\/glib\/datetimeref\/datetimeprotocol-implementations","title":"DateTimeProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/datetimeref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/datetimeref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/glib\/datetimeref","title":"DateTimeRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/debugkeyref\/init(_:)-1vkxm","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/debugkeyref\/init(_:)-2nxlw","title":"init(UnsafePointer<GDebugKey>)","type":"init"},{"path":"\/documentation\/glib\/debugkeyref\/init(_:)-2o6zn","title":"init!(UnsafePointer<GDebugKey>?)","type":"init"},{"path":"\/documentation\/glib\/debugkeyref\/init(_:)-7e47v","title":"init!(UnsafeMutablePointer<GDebugKey>?)","type":"init"},{"path":"\/documentation\/glib\/debugkeyref\/init(_:)-9qeh8","title":"init(UnsafeMutablePointer<GDebugKey>)","type":"init"},{"path":"\/documentation\/glib\/debugkeyref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/debugkeyref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/debugkeyref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/debugkeyref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/debugkeyref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/debugkeyref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/debugkeyref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/debugkeyref\/key","title":"var key: UnsafePointer<gchar>!","type":"property"},{"path":"\/documentation\/glib\/debugkeyref\/value","title":"var value: guint","type":"property"}],"path":"\/documentation\/glib\/debugkeyref\/debugkeyprotocol-implementations","title":"DebugKeyProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/debugkeyref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/debugkeyref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/glib\/debugkeyref","title":"DebugKeyRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/dirref\/init(_:)-39ily","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/dirref\/init(_:)-5nl0e","title":"init(UnsafeMutablePointer<GDir>)","type":"init"},{"path":"\/documentation\/glib\/dirref\/init(_:)-6cxlt","title":"init(UnsafePointer<GDir>)","type":"init"},{"path":"\/documentation\/glib\/dirref\/init(_:)-6opcs","title":"init!(UnsafePointer<GDir>?)","type":"init"},{"path":"\/documentation\/glib\/dirref\/init(_:)-87dr7","title":"init!(UnsafeMutablePointer<GDir>?)","type":"init"},{"path":"\/documentation\/glib\/dirref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/dirref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/dirref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/dirref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/dirref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/dirref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/dirref\/init(path:flags:)","title":"init(path: UnsafePointer<gchar>!, flags: Int) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/dirref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/dirref\/open(path:flags:)","title":"static func open(path: UnsafePointer<gchar>!, flags: Int) throws -> DirRef!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/dirref\/dir_ptr","title":"var dir_ptr: UnsafeMutablePointer<GDir>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/dirref\/close()","title":"func close()","type":"method"},{"path":"\/documentation\/glib\/dirref\/readname()","title":"func readName() -> String!","type":"method"},{"path":"\/documentation\/glib\/dirref\/ref()","title":"func ref() -> DirRef!","type":"method"},{"path":"\/documentation\/glib\/dirref\/rewind()","title":"func rewind()","type":"method"},{"path":"\/documentation\/glib\/dirref\/unref()","title":"func unref()","type":"method"}],"path":"\/documentation\/glib\/dirref\/dirprotocol-implementations","title":"DirProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/dirref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/dirref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/glib\/dirref","title":"DirRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/doubleieee754ref\/init(_:)-32pwr","title":"init(UnsafeMutablePointer<GDoubleIEEE754>)","type":"init"},{"path":"\/documentation\/glib\/doubleieee754ref\/init(_:)-4lyy2","title":"init!(UnsafePointer<GDoubleIEEE754>?)","type":"init"},{"path":"\/documentation\/glib\/doubleieee754ref\/init(_:)-5y5r7","title":"init(UnsafePointer<GDoubleIEEE754>)","type":"init"},{"path":"\/documentation\/glib\/doubleieee754ref\/init(_:)-9wleg","title":"init!(UnsafeMutablePointer<GDoubleIEEE754>?)","type":"init"},{"path":"\/documentation\/glib\/doubleieee754ref\/init(_:)-l8j8","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/doubleieee754ref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/doubleieee754ref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/doubleieee754ref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/doubleieee754ref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/doubleieee754ref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/doubleieee754ref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/doubleieee754ref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/doubleieee754ref\/mpn","title":"var mpn: Self.Mpn","type":"property"},{"path":"\/documentation\/glib\/doubleieee754ref\/vdouble","title":"var vDouble: gdouble","type":"property"}],"path":"\/documentation\/glib\/doubleieee754ref\/doubleieee754protocol-implementations","title":"DoubleIEEE754Protocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/doubleieee754ref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/doubleieee754ref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/glib\/doubleieee754ref","title":"DoubleIEEE754Ref","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/errorref\/init(_:)-315vs","title":"init!(UnsafePointer<GError>?)","type":"init"},{"path":"\/documentation\/glib\/errorref\/init(_:)-6mjhh","title":"init!(UnsafeMutablePointer<GError>?)","type":"init"},{"path":"\/documentation\/glib\/errorref\/init(_:)-6qvad","title":"init(UnsafeMutablePointer<GError>)","type":"init"},{"path":"\/documentation\/glib\/errorref\/init(_:)-7herm","title":"init(UnsafePointer<GError>)","type":"init"},{"path":"\/documentation\/glib\/errorref\/init(_:)-8fmnx","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/errorref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/errorref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/errorref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/errorref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/errorref\/init(literal:code:message:)","title":"init(literal: GQuark, code: Int, message: UnsafePointer<gchar>!)","type":"init"},{"path":"\/documentation\/glib\/errorref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/errorref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/errorref\/init(valist:code:format:args:)","title":"init(valist: GQuark, code: Int, format: UnsafePointer<gchar>!, args: CVaListPointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/errorref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/errorref\/new(literal:code:message:)","title":"static func new(literal: GQuark, code: Int, message: UnsafePointer<gchar>!) -> ErrorRef!","type":"method"},{"path":"\/documentation\/glib\/errorref\/new(valist:code:format:args:)","title":"static func new(valist: GQuark, code: Int, format: UnsafePointer<gchar>!, args: CVaListPointer) -> ErrorRef!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/errorref\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/glib\/errorref\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/errorref\/code","title":"var code: gint","type":"property"},{"path":"\/documentation\/glib\/errorref\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/glib\/errorref\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/glib\/errorref\/domain","title":"var domain: GQuark","type":"property"},{"path":"\/documentation\/glib\/errorref\/error_ptr","title":"var error_ptr: UnsafeMutablePointer<GError>!","type":"property"},{"path":"\/documentation\/glib\/errorref\/message","title":"var message: UnsafeMutablePointer<gchar>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/errorref\/assertionmessageerror(domain:file:line:func:expr:errordomain:errorcode:)","title":"func assertionMessageError(domain: UnsafePointer<CChar>!, file: UnsafePointer<CChar>!, line: Int, func: UnsafePointer<CChar>!, expr: UnsafePointer<CChar>!, errorDomain: GQuark, errorCode: Int)","type":"method"},{"path":"\/documentation\/glib\/errorref\/copy()","title":"func copy() -> ErrorRef!","type":"method"},{"path":"\/documentation\/glib\/errorref\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/glib\/errorref\/matches(domain:code:)","title":"func matches(domain: GQuark, code: Int) -> Bool","type":"method"},{"path":"\/documentation\/glib\/errorref\/propagateerror(dest:)","title":"func propagateError(dest: UnsafeMutablePointer<UnsafeMutablePointer<GError>?>?)","type":"method"},{"path":"\/documentation\/glib\/errorref\/variantparseerrorprintcontext(sourcestr:)","title":"func variantParseErrorPrintContext(sourceStr: UnsafePointer<gchar>!) -> String!","type":"method"}],"path":"\/documentation\/glib\/errorref\/errorprotocol-implementations","title":"ErrorProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/errorref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/errorref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/glib\/errorref","title":"ErrorRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/filesetcontentsflags\/init(_:)-1mx0u","title":"init<I>(I)","type":"init"},{"path":"\/documentation\/glib\/filesetcontentsflags\/init(_:)-v3a4","title":"init(GFileSetContentsFlags)","type":"init"},{"path":"\/documentation\/glib\/filesetcontentsflags\/init(rawvalue:)","title":"init(rawValue: UInt32)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/filesetcontentsflags\/int","title":"var int: gint","type":"property"},{"path":"\/documentation\/glib\/filesetcontentsflags\/intvalue","title":"var intValue: Int","type":"property"},{"path":"\/documentation\/glib\/filesetcontentsflags\/rawvalue","title":"var rawValue: UInt32","type":"property"},{"path":"\/documentation\/glib\/filesetcontentsflags\/value","title":"var value: GFileSetContentsFlags","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/filesetcontentsflags\/consistent","title":"static let consistent: FileSetContentsFlags","type":"property"},{"path":"\/documentation\/glib\/filesetcontentsflags\/durable","title":"static let durable: FileSetContentsFlags","type":"property"},{"path":"\/documentation\/glib\/filesetcontentsflags\/none","title":"static let none: FileSetContentsFlags","type":"property"},{"path":"\/documentation\/glib\/filesetcontentsflags\/onlyexisting","title":"static let onlyExisting: FileSetContentsFlags","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/glib\/filesetcontentsflags\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/glib\/filesetcontentsflags\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/filesetcontentsflags\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/filesetcontentsflags\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/filesetcontentsflags\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/glib\/filesetcontentsflags\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/glib\/filesetcontentsflags\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/glib\/filesetcontentsflags\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/glib\/filesetcontentsflags\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/glib\/filesetcontentsflags\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/filesetcontentsflags\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/glib\/filesetcontentsflags\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/glib\/filesetcontentsflags\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/glib\/filesetcontentsflags\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/filesetcontentsflags\/init(_:)-14qxw","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/glib\/filesetcontentsflags\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/filesetcontentsflags\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/filesetcontentsflags\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/filesetcontentsflags\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/filesetcontentsflags\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/filesetcontentsflags\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/filesetcontentsflags\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/filesetcontentsflags\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/glib\/filesetcontentsflags\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/glib\/filesetcontentsflags\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/glib\/filesetcontentsflags","title":"FileSetContentsFlags","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/filetest\/init(_:)-43rqk","title":"init(GFileTest)","type":"init"},{"path":"\/documentation\/glib\/filetest\/init(_:)-4ceos","title":"init<I>(I)","type":"init"},{"path":"\/documentation\/glib\/filetest\/init(rawvalue:)","title":"init(rawValue: UInt32)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/filetest\/int","title":"var int: gint","type":"property"},{"path":"\/documentation\/glib\/filetest\/intvalue","title":"var intValue: Int","type":"property"},{"path":"\/documentation\/glib\/filetest\/rawvalue","title":"var rawValue: UInt32","type":"property"},{"path":"\/documentation\/glib\/filetest\/value","title":"var value: GFileTest","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/filetest\/exists","title":"static let exists: FileTest","type":"property"},{"path":"\/documentation\/glib\/filetest\/isdir","title":"static let isDir: FileTest","type":"property"},{"path":"\/documentation\/glib\/filetest\/isexecutable","title":"static let isExecutable: FileTest","type":"property"},{"path":"\/documentation\/glib\/filetest\/isregular","title":"static let isRegular: FileTest","type":"property"},{"path":"\/documentation\/glib\/filetest\/issymlink","title":"static let isSymlink: FileTest","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/glib\/filetest\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/glib\/filetest\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/filetest\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/filetest\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/filetest\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/glib\/filetest\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/glib\/filetest\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/glib\/filetest\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/glib\/filetest\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/glib\/filetest\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/filetest\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/glib\/filetest\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/glib\/filetest\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/glib\/filetest\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/filetest\/init(_:)-70lt3","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/glib\/filetest\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/filetest\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/filetest\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/filetest\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/filetest\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/filetest\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/filetest\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/filetest\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/glib\/filetest\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/glib\/filetest\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/glib\/filetest","title":"FileTest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/floatieee754ref\/init(_:)-1yg47","title":"init(UnsafeMutablePointer<GFloatIEEE754>)","type":"init"},{"path":"\/documentation\/glib\/floatieee754ref\/init(_:)-3bdpz","title":"init(UnsafePointer<GFloatIEEE754>)","type":"init"},{"path":"\/documentation\/glib\/floatieee754ref\/init(_:)-553jt","title":"init!(UnsafePointer<GFloatIEEE754>?)","type":"init"},{"path":"\/documentation\/glib\/floatieee754ref\/init(_:)-609jm","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/floatieee754ref\/init(_:)-7rcaq","title":"init!(UnsafeMutablePointer<GFloatIEEE754>?)","type":"init"},{"path":"\/documentation\/glib\/floatieee754ref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/floatieee754ref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/floatieee754ref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/floatieee754ref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/floatieee754ref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/floatieee754ref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/floatieee754ref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/floatieee754ref\/mpn","title":"var mpn: Self.Mpn","type":"property"},{"path":"\/documentation\/glib\/floatieee754ref\/vfloat","title":"var vFloat: gfloat","type":"property"}],"path":"\/documentation\/glib\/floatieee754ref\/floatieee754protocol-implementations","title":"FloatIEEE754Protocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/floatieee754ref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/floatieee754ref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/glib\/floatieee754ref","title":"FloatIEEE754Ref","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/formatsizeflags\/init(_:)-64t48","title":"init<I>(I)","type":"init"},{"path":"\/documentation\/glib\/formatsizeflags\/init(_:)-c8w1","title":"init(GFormatSizeFlags)","type":"init"},{"path":"\/documentation\/glib\/formatsizeflags\/init(rawvalue:)","title":"init(rawValue: UInt32)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/formatsizeflags\/int","title":"var int: gint","type":"property"},{"path":"\/documentation\/glib\/formatsizeflags\/intvalue","title":"var intValue: Int","type":"property"},{"path":"\/documentation\/glib\/formatsizeflags\/rawvalue","title":"var rawValue: UInt32","type":"property"},{"path":"\/documentation\/glib\/formatsizeflags\/value","title":"var value: GFormatSizeFlags","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/formatsizeflags\/bits","title":"static let bits: FormatSizeFlags","type":"property"},{"path":"\/documentation\/glib\/formatsizeflags\/default","title":"static let `default`: FormatSizeFlags","type":"property"},{"path":"\/documentation\/glib\/formatsizeflags\/iecunits","title":"static let iecUnits: FormatSizeFlags","type":"property"},{"path":"\/documentation\/glib\/formatsizeflags\/longformat","title":"static let longFormat: FormatSizeFlags","type":"property"},{"path":"\/documentation\/glib\/formatsizeflags\/onlyunit","title":"static let onlyUnit: FormatSizeFlags","type":"property"},{"path":"\/documentation\/glib\/formatsizeflags\/onlyvalue","title":"static let onlyValue: FormatSizeFlags","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/glib\/formatsizeflags\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/glib\/formatsizeflags\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/formatsizeflags\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/formatsizeflags\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/formatsizeflags\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/glib\/formatsizeflags\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/glib\/formatsizeflags\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/glib\/formatsizeflags\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/glib\/formatsizeflags\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/glib\/formatsizeflags\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/formatsizeflags\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/glib\/formatsizeflags\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/glib\/formatsizeflags\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/glib\/formatsizeflags\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/formatsizeflags\/init(_:)-2anne","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/glib\/formatsizeflags\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/formatsizeflags\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/formatsizeflags\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/formatsizeflags\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/formatsizeflags\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/formatsizeflags\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/formatsizeflags\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/formatsizeflags\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/glib\/formatsizeflags\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/glib\/formatsizeflags\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/glib\/formatsizeflags","title":"FormatSizeFlags","type":"struct"},{"path":"\/documentation\/glib\/grecmutexlocker","title":"GRecMutexLocker","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/hashtableiterref\/init(_:)-23agw","title":"init!(UnsafePointer<GHashTableIter>?)","type":"init"},{"path":"\/documentation\/glib\/hashtableiterref\/init(_:)-30tj9","title":"init(UnsafeMutablePointer<GHashTableIter>)","type":"init"},{"path":"\/documentation\/glib\/hashtableiterref\/init(_:)-709m7","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/hashtableiterref\/init(_:)-7qwse","title":"init(UnsafePointer<GHashTableIter>)","type":"init"},{"path":"\/documentation\/glib\/hashtableiterref\/init(_:)-9ba7y","title":"init!(UnsafeMutablePointer<GHashTableIter>?)","type":"init"},{"path":"\/documentation\/glib\/hashtableiterref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/hashtableiterref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/hashtableiterref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/hashtableiterref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/hashtableiterref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/hashtableiterref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/hashtableiterref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/hashtableiterref\/hashtable","title":"var hashTable: HashTableRef!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/hashtableiterref\/gethashtable()","title":"func getHashTable() -> HashTableRef!","type":"method"},{"path":"\/documentation\/glib\/hashtableiterref\/init_(hashtable:)","title":"func init_<HashTableT>(hashTable: HashTableT)","type":"method"},{"path":"\/documentation\/glib\/hashtableiterref\/next(key:value:)","title":"func next(key: UnsafeMutablePointer<gpointer?>?, value: UnsafeMutablePointer<gpointer?>?) -> Bool","type":"method"},{"path":"\/documentation\/glib\/hashtableiterref\/remove()","title":"func remove()","type":"method"},{"path":"\/documentation\/glib\/hashtableiterref\/replace(value:)","title":"func replace(value: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/hashtableiterref\/steal()","title":"func steal()","type":"method"}],"path":"\/documentation\/glib\/hashtableiterref\/hashtableiterprotocol-implementations","title":"HashTableIterProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/hashtableiterref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/hashtableiterref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/glib\/hashtableiterref","title":"HashTableIterRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/hashtableref\/init(_:)-2a0o7","title":"init!(UnsafePointer<GHashTable>?)","type":"init"},{"path":"\/documentation\/glib\/hashtableref\/init(_:)-3s5w3","title":"init(UnsafePointer<GHashTable>)","type":"init"},{"path":"\/documentation\/glib\/hashtableref\/init(_:)-68wii","title":"init!(UnsafeMutablePointer<GHashTable>?)","type":"init"},{"path":"\/documentation\/glib\/hashtableref\/init(_:)-7jmn7","title":"init(UnsafeMutablePointer<GHashTable>)","type":"init"},{"path":"\/documentation\/glib\/hashtableref\/init(_:)-9idow","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/hashtableref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/hashtableref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/hashtableref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/hashtableref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/hashtableref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/hashtableref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/hashtableref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/hashtableref\/new(full:keyequalfunc:keydestroyfunc:valuedestroyfunc:)","title":"static func new(full: GHashFunc?, keyEqualFunc: GEqualFunc?, keyDestroyFunc: GDestroyNotify?, valueDestroyFunc: GDestroyNotify?) -> HashTableRef!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/hashtableref\/hash_table_ptr","title":"var hash_table_ptr: UnsafeMutablePointer<GHashTable>!","type":"property"},{"path":"\/documentation\/glib\/hashtableref\/keys","title":"var keys: ReferenceListRef<gpointer>!","type":"property"},{"path":"\/documentation\/glib\/hashtableref\/keysasptrarray","title":"var keysAsPtrArray: ReferenceArrayRef<gpointer>!","type":"property"},{"path":"\/documentation\/glib\/hashtableref\/values","title":"var values: ReferenceListRef<gpointer>!","type":"property"},{"path":"\/documentation\/glib\/hashtableref\/valuesasptrarray","title":"var valuesAsPtrArray: ReferenceArrayRef<gpointer>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/hashtableref\/add(key:)","title":"func add(key: gpointer?) -> Bool","type":"method"},{"path":"\/documentation\/glib\/hashtableref\/contains(key:)","title":"func contains(key: gconstpointer?) -> Bool","type":"method"},{"path":"\/documentation\/glib\/hashtableref\/destroy()","title":"func destroy()","type":"method"},{"path":"\/documentation\/glib\/hashtableref\/find(predicate:userdata:)","title":"func find(predicate: GHRFunc?, userData: gpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/hashtableref\/foreach(func:userdata:)","title":"func foreach(func: GHFunc?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/hashtableref\/foreachremove(func:userdata:)","title":"func foreachRemove(func: GHRFunc?, userData: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/glib\/hashtableref\/foreachsteal(func:userdata:)","title":"func foreachSteal(func: GHRFunc?, userData: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/glib\/hashtableref\/getkeys()","title":"func getKeys() -> ReferenceListRef<gpointer>!","type":"method"},{"path":"\/documentation\/glib\/hashtableref\/getkeysasarray(length:)","title":"func getKeysAsArray(length: UnsafeMutablePointer<guint>!) -> UnsafeMutablePointer<gpointer?>!","type":"method"},{"path":"\/documentation\/glib\/hashtableref\/getkeysasptrarray()","title":"func getKeysAsPtrArray() -> ReferenceArrayRef<gpointer>!","type":"method"},{"path":"\/documentation\/glib\/hashtableref\/getvalues()","title":"func getValues() -> ReferenceListRef<gpointer>!","type":"method"},{"path":"\/documentation\/glib\/hashtableref\/getvaluesasptrarray()","title":"func getValuesAsPtrArray() -> ReferenceArrayRef<gpointer>!","type":"method"},{"path":"\/documentation\/glib\/hashtableref\/hashtableadd(key:)","title":"func hashTableAdd(key: gpointer?) -> Bool","type":"method"},{"path":"\/documentation\/glib\/hashtableref\/hashtablecontains(key:)","title":"func hashTableContains(key: gconstpointer?) -> Bool","type":"method"},{"path":"\/documentation\/glib\/hashtableref\/hashtabledestroy()","title":"func hashTableDestroy()","type":"method"},{"path":"\/documentation\/glib\/hashtableref\/hashtablefind(predicate:userdata:)","title":"func hashTableFind(predicate: GHRFunc?, userData: gpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/hashtableref\/hashtableforeach(func:userdata:)","title":"func hashTableForeach(func: GHFunc?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/hashtableref\/hashtableforeachremove(func:userdata:)","title":"func hashTableForeachRemove(func: GHRFunc?, userData: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/glib\/hashtableref\/hashtableforeachsteal(func:userdata:)","title":"func hashTableForeachSteal(func: GHRFunc?, userData: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/glib\/hashtableref\/hashtablegetkeysasptrarray()","title":"func hashTableGetKeysAsPtrArray() -> ReferenceArrayRef<gpointer>!","type":"method"},{"path":"\/documentation\/glib\/hashtableref\/hashtablegetvaluesasptrarray()","title":"func hashTableGetValuesAsPtrArray() -> ReferenceArrayRef<gpointer>!","type":"method"},{"path":"\/documentation\/glib\/hashtableref\/hashtableinsert(key:value:)","title":"func hashTableInsert(key: gpointer?, value: gpointer?) -> Bool","type":"method"},{"path":"\/documentation\/glib\/hashtableref\/hashtablelookup(key:)","title":"func hashTableLookup(key: gconstpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/hashtableref\/hashtablelookupextended(lookupkey:origkey:value:)","title":"func hashTableLookupExtended(lookupKey: gconstpointer?, origKey: UnsafeMutablePointer<gpointer?>?, value: UnsafeMutablePointer<gpointer?>?) -> Bool","type":"method"},{"path":"\/documentation\/glib\/hashtableref\/hashtablenewsimilar()","title":"func hashTableNewSimilar() -> HashTableRef!","type":"method"},{"path":"\/documentation\/glib\/hashtableref\/hashtableref()","title":"func hashTableRef() -> HashTableRef!","type":"method"},{"path":"\/documentation\/glib\/hashtableref\/hashtableremove(key:)","title":"func hashTableRemove(key: gconstpointer?) -> Bool","type":"method"},{"path":"\/documentation\/glib\/hashtableref\/hashtableremoveall()","title":"func hashTableRemoveAll()","type":"method"},{"path":"\/documentation\/glib\/hashtableref\/hashtablereplace(key:value:)","title":"func hashTableReplace(key: gpointer?, value: gpointer?) -> Bool","type":"method"},{"path":"\/documentation\/glib\/hashtableref\/hashtablesize()","title":"func hashTableSize() -> Int","type":"method"},{"path":"\/documentation\/glib\/hashtableref\/hashtablesteal(key:)","title":"func hashTableSteal(key: gconstpointer?) -> Bool","type":"method"},{"path":"\/documentation\/glib\/hashtableref\/hashtablestealall()","title":"func hashTableStealAll()","type":"method"},{"path":"\/documentation\/glib\/hashtableref\/hashtablestealallkeys()","title":"func hashTableStealAllKeys() -> ReferenceArrayRef<gpointer>!","type":"method"},{"path":"\/documentation\/glib\/hashtableref\/hashtablestealallvalues()","title":"func hashTableStealAllValues() -> ReferenceArrayRef<gpointer>!","type":"method"},{"path":"\/documentation\/glib\/hashtableref\/hashtablestealextended(lookupkey:stolenkey:stolenvalue:)","title":"func hashTableStealExtended(lookupKey: gconstpointer?, stolenKey: UnsafeMutablePointer<gpointer?>?, stolenValue: UnsafeMutablePointer<gpointer?>?) -> Bool","type":"method"},{"path":"\/documentation\/glib\/hashtableref\/hashtableunref()","title":"func hashTableUnref()","type":"method"},{"path":"\/documentation\/glib\/hashtableref\/insert(key:value:)","title":"func insert(key: gpointer?, value: gpointer?) -> Bool","type":"method"},{"path":"\/documentation\/glib\/hashtableref\/lookup(key:)","title":"func lookup(key: gconstpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/hashtableref\/lookupextended(lookupkey:origkey:value:)","title":"func lookupExtended(lookupKey: gconstpointer?, origKey: UnsafeMutablePointer<gpointer?>?, value: UnsafeMutablePointer<gpointer?>?) -> Bool","type":"method"},{"path":"\/documentation\/glib\/hashtableref\/newsimilar()","title":"func newSimilar() -> HashTableRef!","type":"method"},{"path":"\/documentation\/glib\/hashtableref\/ref()","title":"func ref() -> HashTableRef!","type":"method"},{"path":"\/documentation\/glib\/hashtableref\/remove(key:)","title":"func remove(key: gconstpointer?) -> Bool","type":"method"},{"path":"\/documentation\/glib\/hashtableref\/removeall()","title":"func removeAll()","type":"method"},{"path":"\/documentation\/glib\/hashtableref\/replace(key:value:)","title":"func replace(key: gpointer?, value: gpointer?) -> Bool","type":"method"},{"path":"\/documentation\/glib\/hashtableref\/size()","title":"func size() -> Int","type":"method"},{"path":"\/documentation\/glib\/hashtableref\/steal(key:)","title":"func steal(key: gconstpointer?) -> Bool","type":"method"},{"path":"\/documentation\/glib\/hashtableref\/stealall()","title":"func stealAll()","type":"method"},{"path":"\/documentation\/glib\/hashtableref\/stealallkeys()","title":"func stealAllKeys() -> ReferenceArrayRef<gpointer>!","type":"method"},{"path":"\/documentation\/glib\/hashtableref\/stealallvalues()","title":"func stealAllValues() -> ReferenceArrayRef<gpointer>!","type":"method"},{"path":"\/documentation\/glib\/hashtableref\/stealextended(lookupkey:stolenkey:stolenvalue:)","title":"func stealExtended(lookupKey: gconstpointer?, stolenKey: UnsafeMutablePointer<gpointer?>?, stolenValue: UnsafeMutablePointer<gpointer?>?) -> Bool","type":"method"},{"path":"\/documentation\/glib\/hashtableref\/unref()","title":"func unref()","type":"method"}],"path":"\/documentation\/glib\/hashtableref\/hashtableprotocol-implementations","title":"HashTableProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/hashtableref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/hashtableref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/glib\/hashtableref","title":"HashTableRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/hmacref\/init(_:)-1pkbh","title":"init!(UnsafeMutablePointer<GHmac>?)","type":"init"},{"path":"\/documentation\/glib\/hmacref\/init(_:)-6ttmj","title":"init(UnsafePointer<GHmac>)","type":"init"},{"path":"\/documentation\/glib\/hmacref\/init(_:)-96vlm","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/hmacref\/init(_:)-9qtp7","title":"init!(UnsafePointer<GHmac>?)","type":"init"},{"path":"\/documentation\/glib\/hmacref\/init(_:)-flxi","title":"init(UnsafeMutablePointer<GHmac>)","type":"init"},{"path":"\/documentation\/glib\/hmacref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/hmacref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/hmacref\/init(digesttype:key:keylen:)","title":"init(digestType: GChecksumType, key: UnsafePointer<guchar>!, keyLen: Int)","type":"init"},{"path":"\/documentation\/glib\/hmacref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/hmacref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/hmacref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/hmacref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/hmacref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/hmacref\/hmac_ptr","title":"var hmac_ptr: UnsafeMutablePointer<GHmac>!","type":"property"},{"path":"\/documentation\/glib\/hmacref\/string","title":"var string: String!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/hmacref\/copy()","title":"func copy() -> HmacRef!","type":"method"},{"path":"\/documentation\/glib\/hmacref\/getdigest(buffer:digestlen:)","title":"func getDigest(buffer: UnsafeMutablePointer<guint8>!, digestLen: UnsafeMutablePointer<gsize>!)","type":"method"},{"path":"\/documentation\/glib\/hmacref\/getstring()","title":"func getString() -> String!","type":"method"},{"path":"\/documentation\/glib\/hmacref\/ref()","title":"func ref() -> HmacRef!","type":"method"},{"path":"\/documentation\/glib\/hmacref\/unref()","title":"func unref()","type":"method"},{"path":"\/documentation\/glib\/hmacref\/update(data:length:)","title":"func update(data: UnsafePointer<guchar>!, length: gssize)","type":"method"}],"path":"\/documentation\/glib\/hmacref\/hmacprotocol-implementations","title":"HmacProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/hmacref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/hmacref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/glib\/hmacref","title":"HmacRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/hookflagmask\/init(_:)-3vzyk","title":"init(GHookFlagMask)","type":"init"},{"path":"\/documentation\/glib\/hookflagmask\/init(_:)-ppw2","title":"init<I>(I)","type":"init"},{"path":"\/documentation\/glib\/hookflagmask\/init(rawvalue:)","title":"init(rawValue: UInt32)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/hookflagmask\/int","title":"var int: gint","type":"property"},{"path":"\/documentation\/glib\/hookflagmask\/intvalue","title":"var intValue: Int","type":"property"},{"path":"\/documentation\/glib\/hookflagmask\/rawvalue","title":"var rawValue: UInt32","type":"property"},{"path":"\/documentation\/glib\/hookflagmask\/value","title":"var value: GHookFlagMask","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/hookflagmask\/active","title":"static let active: HookFlagMask","type":"property"},{"path":"\/documentation\/glib\/hookflagmask\/incall","title":"static let inCall: HookFlagMask","type":"property"},{"path":"\/documentation\/glib\/hookflagmask\/mask","title":"static let mask: HookFlagMask","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/glib\/hookflagmask\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/glib\/hookflagmask\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/hookflagmask\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/hookflagmask\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/hookflagmask\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/glib\/hookflagmask\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/glib\/hookflagmask\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/glib\/hookflagmask\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/glib\/hookflagmask\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/glib\/hookflagmask\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/hookflagmask\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/glib\/hookflagmask\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/glib\/hookflagmask\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/glib\/hookflagmask\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/hookflagmask\/init(_:)-8tyuu","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/glib\/hookflagmask\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/hookflagmask\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/hookflagmask\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/hookflagmask\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/hookflagmask\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/hookflagmask\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/hookflagmask\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/hookflagmask\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/glib\/hookflagmask\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/glib\/hookflagmask\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/glib\/hookflagmask","title":"HookFlagMask","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/hooklistref\/init(_:)-5ga7t","title":"init!(UnsafeMutablePointer<GHookList>?)","type":"init"},{"path":"\/documentation\/glib\/hooklistref\/init(_:)-5gjbr","title":"init!(UnsafePointer<GHookList>?)","type":"init"},{"path":"\/documentation\/glib\/hooklistref\/init(_:)-5k5fy","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/hooklistref\/init(_:)-6fh8k","title":"init(UnsafePointer<GHookList>)","type":"init"},{"path":"\/documentation\/glib\/hooklistref\/init(_:)-99pri","title":"init(UnsafeMutablePointer<GHookList>)","type":"init"},{"path":"\/documentation\/glib\/hooklistref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/hooklistref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/hooklistref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/hooklistref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/hooklistref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/hooklistref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/hooklistref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/hooklistref\/dummy","title":"var dummy: (gpointer?, gpointer?)","type":"property"},{"path":"\/documentation\/glib\/hooklistref\/dummy3","title":"var dummy3: gpointer?","type":"property"},{"path":"\/documentation\/glib\/hooklistref\/finalizehook","title":"var finalizeHook: GHookFinalizeFunc!","type":"property"},{"path":"\/documentation\/glib\/hooklistref\/hooksize","title":"var hookSize: guint","type":"property"},{"path":"\/documentation\/glib\/hooklistref\/hooks","title":"var hooks: HookRef!","type":"property"},{"path":"\/documentation\/glib\/hooklistref\/issetup","title":"var isSetup: guint","type":"property"},{"path":"\/documentation\/glib\/hooklistref\/seqid","title":"var seqID: gulong","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/hooklistref\/clear()","title":"func clear()","type":"method"},{"path":"\/documentation\/glib\/hooklistref\/hookdestroy(hookid:)","title":"func hookDestroy(hookID: Int) -> Bool","type":"method"},{"path":"\/documentation\/glib\/hooklistref\/hookdestroylink(hook:)","title":"func hookDestroyLink<HookT>(hook: HookT)","type":"method"},{"path":"\/documentation\/glib\/hooklistref\/hookfree(hook:)","title":"func hookFree<HookT>(hook: HookT)","type":"method"},{"path":"\/documentation\/glib\/hooklistref\/hookinsertbefore(sibling:hook:)","title":"func hookInsertBefore<HookT>(sibling: HookT?, hook: HookT)","type":"method"},{"path":"\/documentation\/glib\/hooklistref\/hookinsertsorted(hook:func:)","title":"func hookInsertSorted<HookT>(hook: HookT, func: GHookCompareFunc?)","type":"method"},{"path":"\/documentation\/glib\/hooklistref\/hookprepend(hook:)","title":"func hookPrepend<HookT>(hook: HookT)","type":"method"},{"path":"\/documentation\/glib\/hooklistref\/hookunref(hook:)","title":"func hookUnref<HookT>(hook: HookT)","type":"method"},{"path":"\/documentation\/glib\/hooklistref\/init_(hooksize:)","title":"func init_(hookSize: Int)","type":"method"},{"path":"\/documentation\/glib\/hooklistref\/invoke(mayrecurse:)","title":"func invoke(mayRecurse: Bool)","type":"method"},{"path":"\/documentation\/glib\/hooklistref\/invokecheck(mayrecurse:)","title":"func invokeCheck(mayRecurse: Bool)","type":"method"},{"path":"\/documentation\/glib\/hooklistref\/marshal(mayrecurse:marshaller:marshaldata:)","title":"func marshal(mayRecurse: Bool, marshaller: GHookMarshaller?, marshalData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/hooklistref\/marshalcheck(mayrecurse:marshaller:marshaldata:)","title":"func marshalCheck(mayRecurse: Bool, marshaller: GHookCheckMarshaller?, marshalData: gpointer?)","type":"method"}],"path":"\/documentation\/glib\/hooklistref\/hooklistprotocol-implementations","title":"HookListProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/hooklistref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/hooklistref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/glib\/hooklistref","title":"HookListRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/hookref\/init(_:)-2bs2s","title":"init!(UnsafeMutablePointer<GHook>?)","type":"init"},{"path":"\/documentation\/glib\/hookref\/init(_:)-2ksbi","title":"init(UnsafeMutablePointer<GHook>)","type":"init"},{"path":"\/documentation\/glib\/hookref\/init(_:)-3u7wk","title":"init!(UnsafePointer<GHook>?)","type":"init"},{"path":"\/documentation\/glib\/hookref\/init(_:)-4ww75","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/hookref\/init(_:)-wkg1","title":"init(UnsafePointer<GHook>)","type":"init"},{"path":"\/documentation\/glib\/hookref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/hookref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/hookref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/hookref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/hookref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/hookref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/hookref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/hookref\/alloc(hooklist:)","title":"static func alloc<HookListT>(hookList: HookListT) -> HookRef!","type":"method"},{"path":"\/documentation\/glib\/hookref\/find(hooklist:needvalids:func:data:)","title":"static func find<HookListT>(hookList: HookListT, needValids: Bool, func: GHookFindFunc?, data: gpointer?) -> HookRef!","type":"method"},{"path":"\/documentation\/glib\/hookref\/finddata(hooklist:needvalids:data:)","title":"static func findData<HookListT>(hookList: HookListT, needValids: Bool, data: gpointer?) -> HookRef!","type":"method"},{"path":"\/documentation\/glib\/hookref\/findfunc(hooklist:needvalids:func:)","title":"static func findFunc<HookListT>(hookList: HookListT, needValids: Bool, func: gpointer?) -> HookRef!","type":"method"},{"path":"\/documentation\/glib\/hookref\/findfuncdata(hooklist:needvalids:func:data:)","title":"static func findFuncData<HookListT>(hookList: HookListT, needValids: Bool, func: gpointer!, data: gpointer?) -> HookRef!","type":"method"},{"path":"\/documentation\/glib\/hookref\/firstvalid(hooklist:maybeincall:)","title":"static func firstValid<HookListT>(hookList: HookListT, mayBeInCall: Bool) -> HookRef!","type":"method"},{"path":"\/documentation\/glib\/hookref\/get(hooklist:hookid:)","title":"static func get<HookListT>(hookList: HookListT, hookID: Int) -> HookRef!","type":"method"},{"path":"\/documentation\/glib\/hookref\/nextvalid(hooklist:hook:maybeincall:)","title":"static func nextValid<HookListT, HookT>(hookList: HookListT, hook: HookT, mayBeInCall: Bool) -> HookRef!","type":"method"},{"path":"\/documentation\/glib\/hookref\/ref(hooklist:hook:)","title":"static func ref<HookListT, HookT>(hookList: HookListT, hook: HookT) -> HookRef!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/hookref\/data","title":"var data: gpointer?","type":"property"},{"path":"\/documentation\/glib\/hookref\/destroy","title":"var destroy: GDestroyNotify!","type":"property"},{"path":"\/documentation\/glib\/hookref\/flags","title":"var flags: guint","type":"property"},{"path":"\/documentation\/glib\/hookref\/func","title":"var `func`: gpointer?","type":"property"},{"path":"\/documentation\/glib\/hookref\/hookid","title":"var hookID: gulong","type":"property"},{"path":"\/documentation\/glib\/hookref\/next","title":"var next: HookRef!","type":"property"},{"path":"\/documentation\/glib\/hookref\/prev","title":"var prev: HookRef!","type":"property"},{"path":"\/documentation\/glib\/hookref\/refcount","title":"var refCount: guint","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/hookref\/compareids(sibling:)","title":"func compareIDs<HookT>(sibling: HookT) -> Int","type":"method"},{"path":"\/documentation\/glib\/hookref\/destroylink(hooklist:)","title":"func destroyLink<HookListT>(hookList: HookListT)","type":"method"},{"path":"\/documentation\/glib\/hookref\/free(hooklist:)","title":"func free<HookListT>(hookList: HookListT)","type":"method"},{"path":"\/documentation\/glib\/hookref\/hookdestroylink(hooklist:)","title":"func hookDestroyLink<HookListT>(hookList: HookListT)","type":"method"},{"path":"\/documentation\/glib\/hookref\/hookfree(hooklist:)","title":"func hookFree<HookListT>(hookList: HookListT)","type":"method"},{"path":"\/documentation\/glib\/hookref\/hookinsertbefore(hooklist:hook:)","title":"func hookInsertBefore<HookListT, HookT>(hookList: HookListT, hook: HookT)","type":"method"},{"path":"\/documentation\/glib\/hookref\/hookinsertsorted(hooklist:func:)","title":"func hookInsertSorted<HookListT>(hookList: HookListT, func: GHookCompareFunc?)","type":"method"},{"path":"\/documentation\/glib\/hookref\/hookprepend(hooklist:)","title":"func hookPrepend<HookListT>(hookList: HookListT)","type":"method"},{"path":"\/documentation\/glib\/hookref\/hookunref(hooklist:)","title":"func hookUnref<HookListT>(hookList: HookListT)","type":"method"},{"path":"\/documentation\/glib\/hookref\/insertbefore(hooklist:hook:)","title":"func insertBefore<HookListT, HookT>(hookList: HookListT, hook: HookT)","type":"method"},{"path":"\/documentation\/glib\/hookref\/insertsorted(hooklist:func:)","title":"func insertSorted<HookListT>(hookList: HookListT, func: GHookCompareFunc?)","type":"method"},{"path":"\/documentation\/glib\/hookref\/nextvalid(hooklist:maybeincall:)","title":"func nextValid<HookListT>(hookList: HookListT, mayBeInCall: Bool) -> HookRef!","type":"method"},{"path":"\/documentation\/glib\/hookref\/prepend(hooklist:)","title":"func prepend<HookListT>(hookList: HookListT)","type":"method"},{"path":"\/documentation\/glib\/hookref\/ref(hooklist:)","title":"func ref<HookListT>(hookList: HookListT) -> HookRef!","type":"method"},{"path":"\/documentation\/glib\/hookref\/unref(hooklist:)","title":"func unref<HookListT>(hookList: HookListT)","type":"method"}],"path":"\/documentation\/glib\/hookref\/hookprotocol-implementations","title":"HookProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/hookref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/hookref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/glib\/hookref","title":"HookRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/iconvref\/init(_:)-3h3gg","title":"init(UnsafePointer<GIConv>)","type":"init"},{"path":"\/documentation\/glib\/iconvref\/init(_:)-3whru","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/iconvref\/init(_:)-4fogl","title":"init!(UnsafeMutablePointer<GIConv>?)","type":"init"},{"path":"\/documentation\/glib\/iconvref\/init(_:)-5j8mr","title":"init(UnsafeMutablePointer<GIConv>)","type":"init"},{"path":"\/documentation\/glib\/iconvref\/init(_:)-8jc95","title":"init!(UnsafePointer<GIConv>?)","type":"init"},{"path":"\/documentation\/glib\/iconvref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/iconvref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/iconvref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/iconvref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/iconvref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/iconvref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/iconvref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/iconvref\/close()","title":"func close() -> Int","type":"method"}],"path":"\/documentation\/glib\/iconvref\/iconvprotocol-implementations","title":"IConvProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/iconvref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/iconvref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/glib\/iconvref","title":"IConvRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/iochannelref\/init(_:)-1gk9e","title":"init(UnsafeMutablePointer<GIOChannel>)","type":"init"},{"path":"\/documentation\/glib\/iochannelref\/init(_:)-5zd2z","title":"init(UnsafePointer<GIOChannel>)","type":"init"},{"path":"\/documentation\/glib\/iochannelref\/init(_:)-6dqka","title":"init!(UnsafePointer<GIOChannel>?)","type":"init"},{"path":"\/documentation\/glib\/iochannelref\/init(_:)-9nny2","title":"init!(UnsafeMutablePointer<GIOChannel>?)","type":"init"},{"path":"\/documentation\/glib\/iochannelref\/init(_:)-c1bf","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/iochannelref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/iochannelref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/iochannelref\/init(file:mode:)","title":"init(file: UnsafePointer<gchar>!, mode: UnsafePointer<gchar>!) throws","type":"init"},{"path":"\/documentation\/glib\/iochannelref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/iochannelref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/iochannelref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/iochannelref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/iochannelref\/init(unix:)","title":"init(unix: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/iochannelref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/iochannelref\/new(file:mode:)","title":"static func new(file: UnsafePointer<gchar>!, mode: UnsafePointer<gchar>!) throws -> IOChannelRef!","type":"method"},{"path":"\/documentation\/glib\/iochannelref\/unixnew(unix:)","title":"static func unixNew(unix: Int) -> IOChannelRef!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/iochannelref\/buffercondition","title":"var bufferCondition: IOCondition","type":"property"},{"path":"\/documentation\/glib\/iochannelref\/buffersize","title":"var bufferSize: Int","type":"property"},{"path":"\/documentation\/glib\/iochannelref\/buffered","title":"var buffered: Bool","type":"property"},{"path":"\/documentation\/glib\/iochannelref\/closeonunref","title":"var closeOnUnref: Bool","type":"property"},{"path":"\/documentation\/glib\/iochannelref\/encoding","title":"var encoding: String!","type":"property"},{"path":"\/documentation\/glib\/iochannelref\/flags","title":"var flags: IOFlags","type":"property"},{"path":"\/documentation\/glib\/iochannelref\/io_channel_ptr","title":"var io_channel_ptr: UnsafeMutablePointer<GIOChannel>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/iochannelref\/close()","title":"func close()","type":"method"},{"path":"\/documentation\/glib\/iochannelref\/flush()","title":"func flush() throws -> GIOStatus","type":"method"},{"path":"\/documentation\/glib\/iochannelref\/getbuffercondition()","title":"func getBufferCondition() -> IOCondition","type":"method"},{"path":"\/documentation\/glib\/iochannelref\/getbuffersize()","title":"func getBufferSize() -> Int","type":"method"},{"path":"\/documentation\/glib\/iochannelref\/getbuffered()","title":"func getBuffered() -> Bool","type":"method"},{"path":"\/documentation\/glib\/iochannelref\/getcloseonunref()","title":"func getCloseOnUnref() -> Bool","type":"method"},{"path":"\/documentation\/glib\/iochannelref\/getencoding()","title":"func getEncoding() -> String!","type":"method"},{"path":"\/documentation\/glib\/iochannelref\/getflags()","title":"func getFlags() -> IOFlags","type":"method"},{"path":"\/documentation\/glib\/iochannelref\/getlineterm(length:)","title":"func getLineTerm(length: UnsafeMutablePointer<gint>!) -> String!","type":"method"},{"path":"\/documentation\/glib\/iochannelref\/init_()","title":"func init_()","type":"method"},{"path":"\/documentation\/glib\/iochannelref\/ioaddwatch(condition:func:userdata:)","title":"func ioAddWatch(condition: IOCondition, func: GIOFunc?, userData: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/glib\/iochannelref\/ioaddwatchfull(priority:condition:func:userdata:notify:)","title":"func ioAddWatchFull(priority: Int, condition: IOCondition, func: GIOFunc?, userData: gpointer?, notify: GDestroyNotify?) -> Int","type":"method"},{"path":"\/documentation\/glib\/iochannelref\/iocreatewatch(condition:)","title":"func ioCreateWatch(condition: IOCondition) -> SourceRef!","type":"method"},{"path":"\/documentation\/glib\/iochannelref\/read(buf:count:bytesread:)","title":"func read(buf: UnsafeMutablePointer<gchar>!, count: Int, bytesRead: UnsafeMutablePointer<gsize>!) -> GIOError","type":"method"},{"path":"\/documentation\/glib\/iochannelref\/readchars(buf:count:bytesread:)","title":"func readChars(buf: UnsafeMutablePointer<gchar>!, count: Int, bytesRead: UnsafeMutablePointer<gsize>!) throws -> GIOStatus","type":"method"},{"path":"\/documentation\/glib\/iochannelref\/readline(strreturn:length:terminatorpos:)","title":"func readLine(strReturn: UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!, length: UnsafeMutablePointer<gsize>!, terminatorPos: UnsafeMutablePointer<gsize>!) throws -> GIOStatus","type":"method"},{"path":"\/documentation\/glib\/iochannelref\/readlinestring(buffer:terminatorpos:)","title":"func readLineString<StringTypeT>(buffer: StringTypeT, terminatorPos: UnsafeMutablePointer<gsize>?) throws -> GIOStatus","type":"method"},{"path":"\/documentation\/glib\/iochannelref\/readtoend(strreturn:length:)","title":"func readToEnd(strReturn: UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!, length: UnsafeMutablePointer<gsize>!) throws -> GIOStatus","type":"method"},{"path":"\/documentation\/glib\/iochannelref\/readunichar(thechar:)","title":"func readUnichar(thechar: UnsafeMutablePointer<gunichar>!) throws -> GIOStatus","type":"method"},{"path":"\/documentation\/glib\/iochannelref\/ref()","title":"func ref() -> IOChannelRef!","type":"method"},{"path":"\/documentation\/glib\/iochannelref\/seek(offset:type:)","title":"func seek(offset: gint64, type: GSeekType) -> GIOError","type":"method"},{"path":"\/documentation\/glib\/iochannelref\/seekposition(offset:type:)","title":"func seekPosition(offset: gint64, type: GSeekType) throws -> GIOStatus","type":"method"},{"path":"\/documentation\/glib\/iochannelref\/set(buffered:)","title":"func set(buffered: Bool)","type":"method"},{"path":"\/documentation\/glib\/iochannelref\/set(encoding:)","title":"func set(encoding: UnsafePointer<gchar>?) throws -> GIOStatus","type":"method"},{"path":"\/documentation\/glib\/iochannelref\/set(flags:)","title":"func set(flags: IOFlags) throws -> GIOStatus","type":"method"},{"path":"\/documentation\/glib\/iochannelref\/set(lineterm:length:)","title":"func set(lineTerm: UnsafePointer<gchar>?, length: Int)","type":"method"},{"path":"\/documentation\/glib\/iochannelref\/setbuffer(size:)","title":"func setBuffer(size: Int)","type":"method"},{"path":"\/documentation\/glib\/iochannelref\/setcloseonunref(doclose:)","title":"func setCloseOnUnref(doClose: Bool)","type":"method"},{"path":"\/documentation\/glib\/iochannelref\/shutdown(flush:)","title":"func shutdown(flush: Bool) throws -> GIOStatus","type":"method"},{"path":"\/documentation\/glib\/iochannelref\/unixgetfd()","title":"func unixGetFd() -> Int","type":"method"},{"path":"\/documentation\/glib\/iochannelref\/unref()","title":"func unref()","type":"method"},{"path":"\/documentation\/glib\/iochannelref\/write(buf:count:byteswritten:)","title":"func write(buf: UnsafePointer<gchar>!, count: Int, bytesWritten: UnsafeMutablePointer<gsize>!) -> GIOError","type":"method"},{"path":"\/documentation\/glib\/iochannelref\/writechars(buf:count:byteswritten:)","title":"func writeChars(buf: UnsafePointer<gchar>!, count: gssize, bytesWritten: UnsafeMutablePointer<gsize>!) throws -> GIOStatus","type":"method"},{"path":"\/documentation\/glib\/iochannelref\/writeunichar(thechar:)","title":"func writeUnichar(thechar: gunichar) throws -> GIOStatus","type":"method"}],"path":"\/documentation\/glib\/iochannelref\/iochannelprotocol-implementations","title":"IOChannelProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/iochannelref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/iochannelref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/glib\/iochannelref","title":"IOChannelRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/iocondition\/init(_:)-5yi1h","title":"init<I>(I)","type":"init"},{"path":"\/documentation\/glib\/iocondition\/init(_:)-6k1pd","title":"init(GIOCondition)","type":"init"},{"path":"\/documentation\/glib\/iocondition\/init(rawvalue:)","title":"init(rawValue: UInt32)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/iocondition\/int","title":"var int: gint","type":"property"},{"path":"\/documentation\/glib\/iocondition\/intvalue","title":"var intValue: Int","type":"property"},{"path":"\/documentation\/glib\/iocondition\/rawvalue","title":"var rawValue: UInt32","type":"property"},{"path":"\/documentation\/glib\/iocondition\/value","title":"var value: GIOCondition","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/iocondition\/err","title":"static let err: IOCondition","type":"property"},{"path":"\/documentation\/glib\/iocondition\/hup","title":"static let hup: IOCondition","type":"property"},{"path":"\/documentation\/glib\/iocondition\/in","title":"static let `in`: IOCondition","type":"property"},{"path":"\/documentation\/glib\/iocondition\/nval","title":"static let nval: IOCondition","type":"property"},{"path":"\/documentation\/glib\/iocondition\/out","title":"static let out: IOCondition","type":"property"},{"path":"\/documentation\/glib\/iocondition\/pri","title":"static let pri: IOCondition","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/glib\/iocondition\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/glib\/iocondition\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/iocondition\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/iocondition\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/iocondition\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/glib\/iocondition\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/glib\/iocondition\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/glib\/iocondition\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/glib\/iocondition\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/glib\/iocondition\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/iocondition\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/glib\/iocondition\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/glib\/iocondition\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/glib\/iocondition\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/iocondition\/init(_:)-124jb","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/glib\/iocondition\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/iocondition\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/iocondition\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/iocondition\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/iocondition\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/iocondition\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/iocondition\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/iocondition\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/glib\/iocondition\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/glib\/iocondition\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/glib\/iocondition","title":"IOCondition","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/ioflags\/init(_:)-4kimx","title":"init<I>(I)","type":"init"},{"path":"\/documentation\/glib\/ioflags\/init(_:)-zck0","title":"init(GIOFlags)","type":"init"},{"path":"\/documentation\/glib\/ioflags\/init(rawvalue:)","title":"init(rawValue: UInt32)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/ioflags\/int","title":"var int: gint","type":"property"},{"path":"\/documentation\/glib\/ioflags\/intvalue","title":"var intValue: Int","type":"property"},{"path":"\/documentation\/glib\/ioflags\/rawvalue","title":"var rawValue: UInt32","type":"property"},{"path":"\/documentation\/glib\/ioflags\/value","title":"var value: GIOFlags","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/ioflags\/append","title":"static let append: IOFlags","type":"property"},{"path":"\/documentation\/glib\/ioflags\/getmask","title":"static let getMask: IOFlags","type":"property"},{"path":"\/documentation\/glib\/ioflags\/isreadable","title":"static let isReadable: IOFlags","type":"property"},{"path":"\/documentation\/glib\/ioflags\/isseekable","title":"static let isSeekable: IOFlags","type":"property"},{"path":"\/documentation\/glib\/ioflags\/iswritable","title":"static let isWritable: IOFlags","type":"property"},{"path":"\/documentation\/glib\/ioflags\/iswriteable","title":"static let isWriteable: IOFlags","type":"property"},{"path":"\/documentation\/glib\/ioflags\/mask","title":"static let mask: IOFlags","type":"property"},{"path":"\/documentation\/glib\/ioflags\/nonblock","title":"static let nonblock: IOFlags","type":"property"},{"path":"\/documentation\/glib\/ioflags\/none","title":"static let none: IOFlags","type":"property"},{"path":"\/documentation\/glib\/ioflags\/setmask","title":"static let setMask: IOFlags","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/glib\/ioflags\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/glib\/ioflags\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/ioflags\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/ioflags\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/ioflags\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/glib\/ioflags\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/glib\/ioflags\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/glib\/ioflags\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/glib\/ioflags\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/glib\/ioflags\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/ioflags\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/glib\/ioflags\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/glib\/ioflags\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/glib\/ioflags\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/ioflags\/init(_:)-xqq6","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/glib\/ioflags\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/ioflags\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/ioflags\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/ioflags\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/ioflags\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/ioflags\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/ioflags\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/ioflags\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/glib\/ioflags\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/glib\/ioflags\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/glib\/ioflags","title":"IOFlags","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/iofuncsref\/init(_:)-1rvu3","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/iofuncsref\/init(_:)-67cwk","title":"init!(UnsafeMutablePointer<GIOFuncs>?)","type":"init"},{"path":"\/documentation\/glib\/iofuncsref\/init(_:)-7h3k5","title":"init(UnsafePointer<GIOFuncs>)","type":"init"},{"path":"\/documentation\/glib\/iofuncsref\/init(_:)-8vaj9","title":"init!(UnsafePointer<GIOFuncs>?)","type":"init"},{"path":"\/documentation\/glib\/iofuncsref\/init(_:)-91juh","title":"init(UnsafeMutablePointer<GIOFuncs>)","type":"init"},{"path":"\/documentation\/glib\/iofuncsref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/iofuncsref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/iofuncsref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/iofuncsref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/iofuncsref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/iofuncsref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/iofuncsref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/iofuncsref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/iofuncsref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/glib\/iofuncsref","title":"IOFuncsRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/keyfileflags\/init(_:)-7y888","title":"init(GKeyFileFlags)","type":"init"},{"path":"\/documentation\/glib\/keyfileflags\/init(_:)-8jrc0","title":"init<I>(I)","type":"init"},{"path":"\/documentation\/glib\/keyfileflags\/init(rawvalue:)","title":"init(rawValue: UInt32)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/keyfileflags\/int","title":"var int: gint","type":"property"},{"path":"\/documentation\/glib\/keyfileflags\/intvalue","title":"var intValue: Int","type":"property"},{"path":"\/documentation\/glib\/keyfileflags\/rawvalue","title":"var rawValue: UInt32","type":"property"},{"path":"\/documentation\/glib\/keyfileflags\/value","title":"var value: GKeyFileFlags","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/keyfileflags\/keepcomments","title":"static let keepComments: KeyFileFlags","type":"property"},{"path":"\/documentation\/glib\/keyfileflags\/keeptranslations","title":"static let keepTranslations: KeyFileFlags","type":"property"},{"path":"\/documentation\/glib\/keyfileflags\/none","title":"static let none: KeyFileFlags","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/glib\/keyfileflags\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/glib\/keyfileflags\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/keyfileflags\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/keyfileflags\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/keyfileflags\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/glib\/keyfileflags\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/glib\/keyfileflags\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/glib\/keyfileflags\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/glib\/keyfileflags\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/glib\/keyfileflags\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/keyfileflags\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/glib\/keyfileflags\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/glib\/keyfileflags\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/glib\/keyfileflags\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/keyfileflags\/init(_:)-5mr0o","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/glib\/keyfileflags\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/keyfileflags\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/keyfileflags\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/keyfileflags\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/keyfileflags\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/keyfileflags\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/keyfileflags\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/keyfileflags\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/glib\/keyfileflags\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/glib\/keyfileflags\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/glib\/keyfileflags","title":"KeyFileFlags","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/keyfileref\/init()","title":"init()","type":"init"},{"path":"\/documentation\/glib\/keyfileref\/init(_:)-5cs5o","title":"init(UnsafePointer<GKeyFile>)","type":"init"},{"path":"\/documentation\/glib\/keyfileref\/init(_:)-766bl","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/keyfileref\/init(_:)-776w8","title":"init!(UnsafePointer<GKeyFile>?)","type":"init"},{"path":"\/documentation\/glib\/keyfileref\/init(_:)-7qdi8","title":"init(UnsafeMutablePointer<GKeyFile>)","type":"init"},{"path":"\/documentation\/glib\/keyfileref\/init(_:)-935ll","title":"init!(UnsafeMutablePointer<GKeyFile>?)","type":"init"},{"path":"\/documentation\/glib\/keyfileref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/keyfileref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/keyfileref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/keyfileref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/keyfileref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/keyfileref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/keyfileref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/keyfileref\/key_file_ptr","title":"var key_file_ptr: UnsafeMutablePointer<GKeyFile>!","type":"property"},{"path":"\/documentation\/glib\/keyfileref\/startgroup","title":"var startGroup: String!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/keyfileref\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/glib\/keyfileref\/getboolean(groupname:key:)","title":"func getBoolean(groupName: UnsafePointer<gchar>!, key: UnsafePointer<gchar>!) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/keyfileref\/getbooleanlist(groupname:key:length:)","title":"func getBooleanList(groupName: UnsafePointer<gchar>!, key: UnsafePointer<gchar>!, length: UnsafeMutablePointer<gsize>!) throws -> UnsafeMutablePointer<gboolean>!","type":"method"},{"path":"\/documentation\/glib\/keyfileref\/getcomment(groupname:key:)","title":"func getComment(groupName: UnsafePointer<gchar>?, key: UnsafePointer<gchar>?) throws -> String!","type":"method"},{"path":"\/documentation\/glib\/keyfileref\/getdouble(groupname:key:)","title":"func getDouble(groupName: UnsafePointer<gchar>!, key: UnsafePointer<gchar>!) throws -> Double","type":"method"},{"path":"\/documentation\/glib\/keyfileref\/getdoublelist(groupname:key:length:)","title":"func getDoubleList(groupName: UnsafePointer<gchar>!, key: UnsafePointer<gchar>!, length: UnsafeMutablePointer<gsize>!) throws -> UnsafeMutablePointer<gdouble>!","type":"method"},{"path":"\/documentation\/glib\/keyfileref\/getgroups(length:)","title":"func getGroups(length: UnsafeMutablePointer<gsize>!) -> UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!","type":"method"},{"path":"\/documentation\/glib\/keyfileref\/getint64(groupname:key:)","title":"func getInt64(groupName: UnsafePointer<gchar>!, key: UnsafePointer<gchar>!) throws -> gint64","type":"method"},{"path":"\/documentation\/glib\/keyfileref\/getinteger(groupname:key:)","title":"func getInteger(groupName: UnsafePointer<gchar>!, key: UnsafePointer<gchar>!) throws -> Int","type":"method"},{"path":"\/documentation\/glib\/keyfileref\/getintegerlist(groupname:key:length:)","title":"func getIntegerList(groupName: UnsafePointer<gchar>!, key: UnsafePointer<gchar>!, length: UnsafeMutablePointer<gsize>!) throws -> UnsafeMutablePointer<gint>!","type":"method"},{"path":"\/documentation\/glib\/keyfileref\/getkeys(groupname:length:)","title":"func getKeys(groupName: UnsafePointer<gchar>!, length: UnsafeMutablePointer<gsize>!) throws -> UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!","type":"method"},{"path":"\/documentation\/glib\/keyfileref\/getlocaleforkey(groupname:key:locale:)","title":"func getLocaleForKey(groupName: UnsafePointer<gchar>!, key: UnsafePointer<gchar>!, locale: UnsafePointer<gchar>?) -> String!","type":"method"},{"path":"\/documentation\/glib\/keyfileref\/getlocalestring(groupname:key:locale:)","title":"func getLocaleString(groupName: UnsafePointer<gchar>!, key: UnsafePointer<gchar>!, locale: UnsafePointer<gchar>?) throws -> String!","type":"method"},{"path":"\/documentation\/glib\/keyfileref\/getlocalestringlist(groupname:key:locale:length:)","title":"func getLocaleStringList(groupName: UnsafePointer<gchar>!, key: UnsafePointer<gchar>!, locale: UnsafePointer<gchar>?, length: UnsafeMutablePointer<gsize>!) throws -> UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!","type":"method"},{"path":"\/documentation\/glib\/keyfileref\/getstartgroup()","title":"func getStartGroup() -> String!","type":"method"},{"path":"\/documentation\/glib\/keyfileref\/getstring(groupname:key:)","title":"func getString(groupName: UnsafePointer<gchar>!, key: UnsafePointer<gchar>!) throws -> String!","type":"method"},{"path":"\/documentation\/glib\/keyfileref\/getstringlist(groupname:key:length:)","title":"func getStringList(groupName: UnsafePointer<gchar>!, key: UnsafePointer<gchar>!, length: UnsafeMutablePointer<gsize>!) throws -> UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!","type":"method"},{"path":"\/documentation\/glib\/keyfileref\/getuint64(groupname:key:)","title":"func getUint64(groupName: UnsafePointer<gchar>!, key: UnsafePointer<gchar>!) throws -> guint64","type":"method"},{"path":"\/documentation\/glib\/keyfileref\/getvalue(groupname:key:)","title":"func getValue(groupName: UnsafePointer<gchar>!, key: UnsafePointer<gchar>!) throws -> String!","type":"method"},{"path":"\/documentation\/glib\/keyfileref\/hasgroup(groupname:)","title":"func hasGroup(groupName: UnsafePointer<gchar>!) -> Bool","type":"method"},{"path":"\/documentation\/glib\/keyfileref\/haskey(groupname:key:)","title":"func hasKey(groupName: UnsafePointer<gchar>!, key: UnsafePointer<gchar>!) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/keyfileref\/loadfrom(bytes:flags:)","title":"func loadFrom<BytesT>(bytes: BytesT, flags: KeyFileFlags) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/keyfileref\/loadfrom(data:length:flags:)","title":"func loadFrom(data: UnsafePointer<gchar>!, length: Int, flags: KeyFileFlags) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/keyfileref\/loadfrom(file:flags:)","title":"func loadFrom(file: UnsafePointer<gchar>!, flags: KeyFileFlags) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/keyfileref\/loadfromdatadirs(file:fullpath:flags:)","title":"func loadFromDataDirs(file: UnsafePointer<gchar>!, fullPath: UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!, flags: KeyFileFlags) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/keyfileref\/loadfromdirs(file:searchdirs:fullpath:flags:)","title":"func loadFromDirs(file: UnsafePointer<gchar>!, searchDirs: UnsafeMutablePointer<UnsafePointer<gchar>?>!, fullPath: UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!, flags: KeyFileFlags) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/keyfileref\/ref()","title":"func ref() -> KeyFileRef!","type":"method"},{"path":"\/documentation\/glib\/keyfileref\/removecomment(groupname:key:)","title":"func removeComment(groupName: UnsafePointer<gchar>?, key: UnsafePointer<gchar>?) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/keyfileref\/removegroup(groupname:)","title":"func removeGroup(groupName: UnsafePointer<gchar>!) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/keyfileref\/removekey(groupname:key:)","title":"func removeKey(groupName: UnsafePointer<gchar>!, key: UnsafePointer<gchar>!) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/keyfileref\/savetofile(filename:)","title":"func saveToFile(filename: UnsafePointer<gchar>!) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/keyfileref\/setboolean(groupname:key:value:)","title":"func setBoolean(groupName: UnsafePointer<gchar>!, key: UnsafePointer<gchar>!, value: Bool)","type":"method"},{"path":"\/documentation\/glib\/keyfileref\/setbooleanlist(groupname:key:list:length:)","title":"func setBooleanList(groupName: UnsafePointer<gchar>!, key: UnsafePointer<gchar>!, list: UnsafeMutablePointer<gboolean>!, length: Int)","type":"method"},{"path":"\/documentation\/glib\/keyfileref\/setcomment(groupname:key:comment:)","title":"func setComment(groupName: UnsafePointer<gchar>?, key: UnsafePointer<gchar>?, comment: UnsafePointer<gchar>!) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/keyfileref\/setdouble(groupname:key:value:)","title":"func setDouble(groupName: UnsafePointer<gchar>!, key: UnsafePointer<gchar>!, value: Double)","type":"method"},{"path":"\/documentation\/glib\/keyfileref\/setdoublelist(groupname:key:list:length:)","title":"func setDoubleList(groupName: UnsafePointer<gchar>!, key: UnsafePointer<gchar>!, list: UnsafeMutablePointer<gdouble>!, length: Int)","type":"method"},{"path":"\/documentation\/glib\/keyfileref\/setint64(groupname:key:value:)","title":"func setInt64(groupName: UnsafePointer<gchar>!, key: UnsafePointer<gchar>!, value: gint64)","type":"method"},{"path":"\/documentation\/glib\/keyfileref\/setinteger(groupname:key:value:)","title":"func setInteger(groupName: UnsafePointer<gchar>!, key: UnsafePointer<gchar>!, value: Int)","type":"method"},{"path":"\/documentation\/glib\/keyfileref\/setintegerlist(groupname:key:list:length:)","title":"func setIntegerList(groupName: UnsafePointer<gchar>!, key: UnsafePointer<gchar>!, list: UnsafeMutablePointer<gint>!, length: Int)","type":"method"},{"path":"\/documentation\/glib\/keyfileref\/setlist(separator:)","title":"func setList(separator: gchar)","type":"method"},{"path":"\/documentation\/glib\/keyfileref\/setlocalestring(groupname:key:locale:string:)","title":"func setLocaleString(groupName: UnsafePointer<gchar>!, key: UnsafePointer<gchar>!, locale: UnsafePointer<gchar>!, string: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/glib\/keyfileref\/setlocalestringlist(groupname:key:locale:list:length:)","title":"func setLocaleStringList(groupName: UnsafePointer<gchar>!, key: UnsafePointer<gchar>!, locale: UnsafePointer<gchar>!, list: UnsafePointer<UnsafePointer<gchar>?>!, length: Int)","type":"method"},{"path":"\/documentation\/glib\/keyfileref\/setstring(groupname:key:string:)","title":"func setString(groupName: UnsafePointer<gchar>!, key: UnsafePointer<gchar>!, string: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/glib\/keyfileref\/setstringlist(groupname:key:list:length:)","title":"func setStringList(groupName: UnsafePointer<gchar>!, key: UnsafePointer<gchar>!, list: UnsafePointer<UnsafePointer<gchar>?>!, length: Int)","type":"method"},{"path":"\/documentation\/glib\/keyfileref\/setuint64(groupname:key:value:)","title":"func setUint64(groupName: UnsafePointer<gchar>!, key: UnsafePointer<gchar>!, value: guint64)","type":"method"},{"path":"\/documentation\/glib\/keyfileref\/setvalue(groupname:key:value:)","title":"func setValue(groupName: UnsafePointer<gchar>!, key: UnsafePointer<gchar>!, value: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/glib\/keyfileref\/todata(length:)","title":"func toData(length: UnsafeMutablePointer<gsize>!) throws -> String!","type":"method"},{"path":"\/documentation\/glib\/keyfileref\/unref()","title":"func unref()","type":"method"}],"path":"\/documentation\/glib\/keyfileref\/keyfileprotocol-implementations","title":"KeyFileProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/keyfileref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/keyfileref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/glib\/keyfileref","title":"KeyFileRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/listref\/init(_:)-3xzbm","title":"init(UnsafePointer<GList>)","type":"init"},{"path":"\/documentation\/glib\/listref\/init(_:)-4sjmb","title":"init!(UnsafeMutablePointer<GList>?)","type":"init"},{"path":"\/documentation\/glib\/listref\/init(_:)-714ke","title":"init(UnsafeMutablePointer<GList>)","type":"init"},{"path":"\/documentation\/glib\/listref\/init(_:)-8ec5b","title":"init!(UnsafePointer<GList>?)","type":"init"},{"path":"\/documentation\/glib\/listref\/init(_:)-wuym","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/listref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/listref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/listref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/listref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/listref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/listref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/listref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/listref\/alloc()","title":"static func alloc() -> ListRef!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/listref\/data","title":"var data: gpointer?","type":"property"},{"path":"\/documentation\/glib\/listref\/next","title":"var next: ListRef!","type":"property"},{"path":"\/documentation\/glib\/listref\/prev","title":"var prev: ListRef!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/listref\/append(data:)","title":"func append(data: gpointer?) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/listref\/concat(list2:)","title":"func concat<ListT>(list2: ListT) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/listref\/copy()","title":"func copy() -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/listref\/copydeep(func:userdata:)","title":"func copyDeep(func: GCopyFunc?, userData: gpointer?) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/listref\/delete(link:)","title":"func delete<ListT>(link: ListT) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/listref\/find(data:)","title":"func find(data: gconstpointer?) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/listref\/findcustom(data:func:)","title":"func findCustom(data: gconstpointer?, func: GCompareFunc?) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/listref\/first()","title":"func first() -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/listref\/foreach(func:userdata:)","title":"func foreach(func: GFunc?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/listref\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/glib\/listref\/free1()","title":"func free1()","type":"method"},{"path":"\/documentation\/glib\/listref\/freefull(freefunc:)","title":"func freeFull(freeFunc: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/glib\/listref\/index(data:)","title":"func index(data: gconstpointer?) -> Int","type":"method"},{"path":"\/documentation\/glib\/listref\/insert(data:position:)","title":"func insert(data: gpointer?, position: Int) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/listref\/insertbefore(sibling:data:)","title":"func insertBefore<ListT>(sibling: ListT, data: gpointer?) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/listref\/insertbeforelink(sibling:link:)","title":"func insertBeforeLink<ListT>(sibling: ListT?, link: ListT) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/listref\/insertsorted(data:func:)","title":"func insertSorted(data: gpointer?, func: GCompareFunc?) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/listref\/insertsortedwith(data:func:userdata:)","title":"func insertSortedWith(data: gpointer?, func: GCompareDataFunc?, userData: gpointer?) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/listref\/last()","title":"func last() -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/listref\/length()","title":"func length() -> Int","type":"method"},{"path":"\/documentation\/glib\/listref\/nth(n:)","title":"func nth(n: Int) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/listref\/nthdata(n:)","title":"func nthData(n: Int) -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/listref\/nthprev(n:)","title":"func nthPrev(n: Int) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/listref\/position(llink:)","title":"func position<ListT>(llink: ListT) -> Int","type":"method"},{"path":"\/documentation\/glib\/listref\/prepend(data:)","title":"func prepend(data: gpointer?) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/listref\/remove(data:)","title":"func remove(data: gconstpointer?) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/listref\/removeall(data:)","title":"func removeAll(data: gconstpointer?) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/listref\/removelink(llink:)","title":"func removeLink<ListT>(llink: ListT) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/listref\/reverse()","title":"func reverse() -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/listref\/sort(comparefunc:)","title":"func sort(compareFunc: GCompareFunc?) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/listref\/sortwithdata(comparefunc:userdata:)","title":"func sortWithData(compareFunc: GCompareDataFunc?, userData: gpointer?) -> ListRef!","type":"method"}],"path":"\/documentation\/glib\/listref\/listprotocol-implementations","title":"ListProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/listref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/listref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/glib\/listref","title":"ListRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/logfieldref\/init(_:)-1aid3","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/logfieldref\/init(_:)-2hbjl","title":"init!(UnsafeMutablePointer<GLogField>?)","type":"init"},{"path":"\/documentation\/glib\/logfieldref\/init(_:)-2ssr1","title":"init(UnsafePointer<GLogField>)","type":"init"},{"path":"\/documentation\/glib\/logfieldref\/init(_:)-5pgqa","title":"init!(UnsafePointer<GLogField>?)","type":"init"},{"path":"\/documentation\/glib\/logfieldref\/init(_:)-7smrt","title":"init(UnsafeMutablePointer<GLogField>)","type":"init"},{"path":"\/documentation\/glib\/logfieldref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/logfieldref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/logfieldref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/logfieldref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/logfieldref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/logfieldref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/logfieldref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/logfieldref\/key","title":"var key: UnsafePointer<gchar>!","type":"property"},{"path":"\/documentation\/glib\/logfieldref\/length","title":"var length: gssize","type":"property"},{"path":"\/documentation\/glib\/logfieldref\/value","title":"var value: gconstpointer?","type":"property"}],"path":"\/documentation\/glib\/logfieldref\/logfieldprotocol-implementations","title":"LogFieldProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/logfieldref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/logfieldref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/glib\/logfieldref","title":"LogFieldRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/loglevelflags\/init(_:)-1ip92","title":"init(GLogLevelFlags)","type":"init"},{"path":"\/documentation\/glib\/loglevelflags\/init(_:)-94nh2","title":"init<I>(I)","type":"init"},{"path":"\/documentation\/glib\/loglevelflags\/init(rawvalue:)","title":"init(rawValue: UInt32)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/loglevelflags\/int","title":"var int: gint","type":"property"},{"path":"\/documentation\/glib\/loglevelflags\/intvalue","title":"var intValue: Int","type":"property"},{"path":"\/documentation\/glib\/loglevelflags\/prioritystring","title":"var priorityString: UnsafePointer<CChar>","type":"property"},{"path":"\/documentation\/glib\/loglevelflags\/rawvalue","title":"var rawValue: UInt32","type":"property"},{"path":"\/documentation\/glib\/loglevelflags\/value","title":"var value: GLogLevelFlags","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/loglevelflags\/critical","title":"static let critical: LogLevelFlags","type":"property"},{"path":"\/documentation\/glib\/loglevelflags\/debug","title":"static let debug: LogLevelFlags","type":"property"},{"path":"\/documentation\/glib\/loglevelflags\/error","title":"static let error: LogLevelFlags","type":"property"},{"path":"\/documentation\/glib\/loglevelflags\/flagfatal","title":"static let flagFatal: LogLevelFlags","type":"property"},{"path":"\/documentation\/glib\/loglevelflags\/flagrecursion","title":"static let flagRecursion: LogLevelFlags","type":"property"},{"path":"\/documentation\/glib\/loglevelflags\/info","title":"static let info: LogLevelFlags","type":"property"},{"path":"\/documentation\/glib\/loglevelflags\/levelcritical","title":"static let levelCritical: LogLevelFlags","type":"property"},{"path":"\/documentation\/glib\/loglevelflags\/leveldebug","title":"static let levelDebug: LogLevelFlags","type":"property"},{"path":"\/documentation\/glib\/loglevelflags\/levelerror","title":"static let levelError: LogLevelFlags","type":"property"},{"path":"\/documentation\/glib\/loglevelflags\/levelinfo","title":"static let levelInfo: LogLevelFlags","type":"property"},{"path":"\/documentation\/glib\/loglevelflags\/levelmask","title":"static let levelMask: LogLevelFlags","type":"property"},{"path":"\/documentation\/glib\/loglevelflags\/levelmessage","title":"static let levelMessage: LogLevelFlags","type":"property"},{"path":"\/documentation\/glib\/loglevelflags\/levelwarning","title":"static let levelWarning: LogLevelFlags","type":"property"},{"path":"\/documentation\/glib\/loglevelflags\/message","title":"static let message: LogLevelFlags","type":"property"},{"path":"\/documentation\/glib\/loglevelflags\/warning","title":"static let warning: LogLevelFlags","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/glib\/loglevelflags\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/glib\/loglevelflags\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/loglevelflags\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/loglevelflags\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/loglevelflags\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/glib\/loglevelflags\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/glib\/loglevelflags\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/glib\/loglevelflags\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/glib\/loglevelflags\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/glib\/loglevelflags\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/loglevelflags\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/glib\/loglevelflags\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/glib\/loglevelflags\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/glib\/loglevelflags\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/loglevelflags\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/loglevelflags\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/glib\/loglevelflags\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/loglevelflags\/init(_:)-952qf","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/glib\/loglevelflags\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/loglevelflags\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/loglevelflags\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/loglevelflags\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/loglevelflags\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/loglevelflags\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/loglevelflags\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/loglevelflags\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/glib\/loglevelflags\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/glib\/loglevelflags\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/glib\/loglevelflags","title":"LogLevelFlags","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/maincontextflags\/init(_:)-8eht4","title":"init(GMainContextFlags)","type":"init"},{"path":"\/documentation\/glib\/maincontextflags\/init(_:)-9jkol","title":"init<I>(I)","type":"init"},{"path":"\/documentation\/glib\/maincontextflags\/init(rawvalue:)","title":"init(rawValue: UInt32)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/maincontextflags\/int","title":"var int: gint","type":"property"},{"path":"\/documentation\/glib\/maincontextflags\/intvalue","title":"var intValue: Int","type":"property"},{"path":"\/documentation\/glib\/maincontextflags\/rawvalue","title":"var rawValue: UInt32","type":"property"},{"path":"\/documentation\/glib\/maincontextflags\/value","title":"var value: GMainContextFlags","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/maincontextflags\/none","title":"static let none: MainContextFlags","type":"property"},{"path":"\/documentation\/glib\/maincontextflags\/ownerlesspolling","title":"static let ownerlessPolling: MainContextFlags","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/glib\/maincontextflags\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/glib\/maincontextflags\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/maincontextflags\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/maincontextflags\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/maincontextflags\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/glib\/maincontextflags\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/glib\/maincontextflags\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/glib\/maincontextflags\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/glib\/maincontextflags\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/glib\/maincontextflags\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/maincontextflags\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/glib\/maincontextflags\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/glib\/maincontextflags\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/glib\/maincontextflags\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/maincontextflags\/init(_:)-7uqk9","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/glib\/maincontextflags\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/maincontextflags\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/maincontextflags\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/maincontextflags\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/maincontextflags\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/maincontextflags\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/maincontextflags\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/maincontextflags\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/glib\/maincontextflags\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/glib\/maincontextflags\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/glib\/maincontextflags","title":"MainContextFlags","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/maincontextref\/init()","title":"init()","type":"init"},{"path":"\/documentation\/glib\/maincontextref\/init(_:)-1n0nn","title":"init(UnsafeMutablePointer<GMainContext>)","type":"init"},{"path":"\/documentation\/glib\/maincontextref\/init(_:)-2vlbm","title":"init(UnsafePointer<GMainContext>)","type":"init"},{"path":"\/documentation\/glib\/maincontextref\/init(_:)-5vaos","title":"init!(UnsafePointer<GMainContext>?)","type":"init"},{"path":"\/documentation\/glib\/maincontextref\/init(_:)-7p4a9","title":"init!(UnsafeMutablePointer<GMainContext>?)","type":"init"},{"path":"\/documentation\/glib\/maincontextref\/init(_:)-8inek","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/maincontextref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/maincontextref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/maincontextref\/init(flags:)","title":"init(flags: MainContextFlags)","type":"init"},{"path":"\/documentation\/glib\/maincontextref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/maincontextref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/maincontextref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/maincontextref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/maincontextref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/maincontextref\/default","title":"static var `default`: MainContextRef","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/maincontextref\/defaultcontext()","title":"static func defaultContext() -> MainContextRef","type":"method"},{"path":"\/documentation\/glib\/maincontextref\/default_()","title":"static func default_() -> MainContextRef!","type":"method"},{"path":"\/documentation\/glib\/maincontextref\/getthreaddefault()","title":"static func getThreadDefault() -> MainContextRef!","type":"method"},{"path":"\/documentation\/glib\/maincontextref\/newwith(flags:)","title":"static func newWith(flags: MainContextFlags) -> MainContextRef!","type":"method"},{"path":"\/documentation\/glib\/maincontextref\/refthreaddefault()","title":"static func refThreadDefault() -> MainContextRef!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/maincontextref\/isowner","title":"var isOwner: Bool","type":"property"},{"path":"\/documentation\/glib\/maincontextref\/main_context_ptr","title":"var main_context_ptr: UnsafeMutablePointer<GMainContext>!","type":"property"},{"path":"\/documentation\/glib\/maincontextref\/pollfunc","title":"var pollFunc: GPollFunc!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/maincontextref\/acquire()","title":"func acquire() -> Bool","type":"method"},{"path":"\/documentation\/glib\/maincontextref\/addpoll(fd:priority:)","title":"func addPoll<PollFDT>(fd: PollFDT, priority: Int)","type":"method"},{"path":"\/documentation\/glib\/maincontextref\/check(maxpriority:fds:nfds:)","title":"func check(maxPriority: Int, fds: UnsafeMutablePointer<GPollFD>!, nFds: Int) -> Bool","type":"method"},{"path":"\/documentation\/glib\/maincontextref\/dispatch()","title":"func dispatch()","type":"method"},{"path":"\/documentation\/glib\/maincontextref\/findsourceby(userdata:)","title":"func findSourceBy(userData: gpointer?) -> SourceRef!","type":"method"},{"path":"\/documentation\/glib\/maincontextref\/findsourcebyfuncsuserdata(funcs:userdata:)","title":"func findSourceByFuncsUserData<SourceFuncsT>(funcs: SourceFuncsT, userData: gpointer?) -> SourceRef!","type":"method"},{"path":"\/documentation\/glib\/maincontextref\/findsourcebyid(sourceid:)","title":"func findSourceByID(sourceID: Int) -> SourceRef!","type":"method"},{"path":"\/documentation\/glib\/maincontextref\/getpollfunc()","title":"func getPollFunc() -> GPollFunc!","type":"method"},{"path":"\/documentation\/glib\/maincontextref\/invoke(function:data:)","title":"func invoke(function: GSourceFunc?, data: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/maincontextref\/invokefull(priority:function:data:notify:)","title":"func invokeFull(priority: Int, function: GSourceFunc?, data: gpointer?, notify: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/glib\/maincontextref\/iteration(mayblock:)","title":"func iteration(mayBlock: Bool) -> Bool","type":"method"},{"path":"\/documentation\/glib\/maincontextref\/pending()","title":"func pending() -> Bool","type":"method"},{"path":"\/documentation\/glib\/maincontextref\/popthreaddefault()","title":"func popThreadDefault()","type":"method"},{"path":"\/documentation\/glib\/maincontextref\/prepare(priority:)","title":"func prepare(priority: UnsafeMutablePointer<gint>!) -> Bool","type":"method"},{"path":"\/documentation\/glib\/maincontextref\/pushthreaddefault()","title":"func pushThreadDefault()","type":"method"},{"path":"\/documentation\/glib\/maincontextref\/query(maxpriority:timeout:fds:nfds:)","title":"func query(maxPriority: Int, timeout: UnsafeMutablePointer<gint>!, fds: UnsafeMutablePointer<GPollFD>!, nFds: Int) -> Int","type":"method"},{"path":"\/documentation\/glib\/maincontextref\/ref()","title":"func ref() -> MainContextRef!","type":"method"},{"path":"\/documentation\/glib\/maincontextref\/release()","title":"func release()","type":"method"},{"path":"\/documentation\/glib\/maincontextref\/removepoll(fd:)","title":"func removePoll<PollFDT>(fd: PollFDT)","type":"method"},{"path":"\/documentation\/glib\/maincontextref\/setpollfunc(func:)","title":"func setPollFunc(func: GPollFunc?)","type":"method"},{"path":"\/documentation\/glib\/maincontextref\/unref()","title":"func unref()","type":"method"},{"path":"\/documentation\/glib\/maincontextref\/wait(cond:mutex:)","title":"func wait<CondT, MutexT>(cond: CondT, mutex: MutexT) -> Bool","type":"method"},{"path":"\/documentation\/glib\/maincontextref\/wakeup()","title":"func wakeup()","type":"method"}],"path":"\/documentation\/glib\/maincontextref\/maincontextprotocol-implementations","title":"MainContextProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/maincontextref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/maincontextref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/glib\/maincontextref","title":"MainContextRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/mainloopref\/init()","title":"init()","type":"init"},{"path":"\/documentation\/glib\/mainloopref\/init(_:)-20sid","title":"init(UnsafeMutablePointer<GMainLoop>)","type":"init"},{"path":"\/documentation\/glib\/mainloopref\/init(_:)-3mv86","title":"init(UnsafePointer<GMainLoop>)","type":"init"},{"path":"\/documentation\/glib\/mainloopref\/init(_:)-8d4xx","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/mainloopref\/init(_:)-8t75c","title":"init!(UnsafeMutablePointer<GMainLoop>?)","type":"init"},{"path":"\/documentation\/glib\/mainloopref\/init(_:)-9noo7","title":"init!(UnsafePointer<GMainLoop>?)","type":"init"},{"path":"\/documentation\/glib\/mainloopref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/mainloopref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/mainloopref\/init(context:isrunning:)","title":"init<MainContextT>(context: MainContextT?, isRunning: Bool)","type":"init"},{"path":"\/documentation\/glib\/mainloopref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/mainloopref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/mainloopref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/mainloopref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/mainloopref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/mainloopref\/context","title":"var context: MainContextRef!","type":"property"},{"path":"\/documentation\/glib\/mainloopref\/isrunning","title":"var isRunning: Bool","type":"property"},{"path":"\/documentation\/glib\/mainloopref\/main_loop_ptr","title":"var main_loop_ptr: UnsafeMutablePointer<GMainLoop>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/mainloopref\/getcontext()","title":"func getContext() -> MainContextRef!","type":"method"},{"path":"\/documentation\/glib\/mainloopref\/quit()","title":"func quit()","type":"method"},{"path":"\/documentation\/glib\/mainloopref\/ref()","title":"func ref() -> MainLoopRef!","type":"method"},{"path":"\/documentation\/glib\/mainloopref\/run()","title":"func run()","type":"method"},{"path":"\/documentation\/glib\/mainloopref\/unref()","title":"func unref()","type":"method"}],"path":"\/documentation\/glib\/mainloopref\/mainloopprotocol-implementations","title":"MainLoopProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/mainloopref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/mainloopref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/glib\/mainloopref","title":"MainLoopRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/mappedfileref\/init(_:)-28h2b","title":"init!(UnsafePointer<GMappedFile>?)","type":"init"},{"path":"\/documentation\/glib\/mappedfileref\/init(_:)-3320h","title":"init(UnsafeMutablePointer<GMappedFile>)","type":"init"},{"path":"\/documentation\/glib\/mappedfileref\/init(_:)-5zlxt","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/mappedfileref\/init(_:)-6e6pg","title":"init(UnsafePointer<GMappedFile>)","type":"init"},{"path":"\/documentation\/glib\/mappedfileref\/init(_:)-82o6c","title":"init!(UnsafeMutablePointer<GMappedFile>?)","type":"init"},{"path":"\/documentation\/glib\/mappedfileref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/mappedfileref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/mappedfileref\/init(fd:writable:)","title":"init(fd: Int, writable: Bool) throws","type":"init"},{"path":"\/documentation\/glib\/mappedfileref\/init(filename:writable:)","title":"init(filename: UnsafePointer<gchar>!, writable: Bool) throws","type":"init"},{"path":"\/documentation\/glib\/mappedfileref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/mappedfileref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/mappedfileref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/mappedfileref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/mappedfileref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/mappedfileref\/newfrom(fd:writable:)","title":"static func newFrom(fd: Int, writable: Bool) throws -> MappedFileRef!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/mappedfileref\/bytes","title":"var bytes: BytesRef!","type":"property"},{"path":"\/documentation\/glib\/mappedfileref\/contents","title":"var contents: String!","type":"property"},{"path":"\/documentation\/glib\/mappedfileref\/length","title":"var length: Int","type":"property"},{"path":"\/documentation\/glib\/mappedfileref\/mapped_file_ptr","title":"var mapped_file_ptr: UnsafeMutablePointer<GMappedFile>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/mappedfileref\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/glib\/mappedfileref\/getbytes()","title":"func getBytes() -> BytesRef!","type":"method"},{"path":"\/documentation\/glib\/mappedfileref\/getcontents()","title":"func getContents() -> String!","type":"method"},{"path":"\/documentation\/glib\/mappedfileref\/getlength()","title":"func getLength() -> Int","type":"method"},{"path":"\/documentation\/glib\/mappedfileref\/ref()","title":"func ref() -> MappedFileRef!","type":"method"},{"path":"\/documentation\/glib\/mappedfileref\/unref()","title":"func unref()","type":"method"}],"path":"\/documentation\/glib\/mappedfileref\/mappedfileprotocol-implementations","title":"MappedFileProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/mappedfileref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/mappedfileref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/glib\/mappedfileref","title":"MappedFileRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/markupcollecttype\/init(_:)-4b3se","title":"init(GMarkupCollectType)","type":"init"},{"path":"\/documentation\/glib\/markupcollecttype\/init(_:)-742g5","title":"init<I>(I)","type":"init"},{"path":"\/documentation\/glib\/markupcollecttype\/init(rawvalue:)","title":"init(rawValue: UInt32)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/markupcollecttype\/int","title":"var int: gint","type":"property"},{"path":"\/documentation\/glib\/markupcollecttype\/intvalue","title":"var intValue: Int","type":"property"},{"path":"\/documentation\/glib\/markupcollecttype\/rawvalue","title":"var rawValue: UInt32","type":"property"},{"path":"\/documentation\/glib\/markupcollecttype\/value","title":"var value: GMarkupCollectType","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/markupcollecttype\/boolean","title":"static let boolean: MarkupCollectType","type":"property"},{"path":"\/documentation\/glib\/markupcollecttype\/invalid","title":"static let invalid: MarkupCollectType","type":"property"},{"path":"\/documentation\/glib\/markupcollecttype\/optional","title":"static let optional: MarkupCollectType","type":"property"},{"path":"\/documentation\/glib\/markupcollecttype\/strdup","title":"static let strdup: MarkupCollectType","type":"property"},{"path":"\/documentation\/glib\/markupcollecttype\/string","title":"static let string: MarkupCollectType","type":"property"},{"path":"\/documentation\/glib\/markupcollecttype\/tristate","title":"static let tristate: MarkupCollectType","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/glib\/markupcollecttype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/glib\/markupcollecttype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/markupcollecttype\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/markupcollecttype\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/markupcollecttype\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/glib\/markupcollecttype\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/glib\/markupcollecttype\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/glib\/markupcollecttype\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/glib\/markupcollecttype\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/glib\/markupcollecttype\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/markupcollecttype\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/glib\/markupcollecttype\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/glib\/markupcollecttype\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/glib\/markupcollecttype\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/markupcollecttype\/init(_:)-6tkk9","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/glib\/markupcollecttype\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/markupcollecttype\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/markupcollecttype\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/markupcollecttype\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/markupcollecttype\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/markupcollecttype\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/markupcollecttype\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/markupcollecttype\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/glib\/markupcollecttype\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/glib\/markupcollecttype\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/glib\/markupcollecttype","title":"MarkupCollectType","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/markupparsecontextref\/init(_:)-100jf","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/markupparsecontextref\/init(_:)-35wa1","title":"init(UnsafePointer<GMarkupParseContext>)","type":"init"},{"path":"\/documentation\/glib\/markupparsecontextref\/init(_:)-3q6pe","title":"init(UnsafeMutablePointer<GMarkupParseContext>)","type":"init"},{"path":"\/documentation\/glib\/markupparsecontextref\/init(_:)-l2v6","title":"init!(UnsafeMutablePointer<GMarkupParseContext>?)","type":"init"},{"path":"\/documentation\/glib\/markupparsecontextref\/init(_:)-wro1","title":"init!(UnsafePointer<GMarkupParseContext>?)","type":"init"},{"path":"\/documentation\/glib\/markupparsecontextref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/markupparsecontextref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/markupparsecontextref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/markupparsecontextref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/markupparsecontextref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/markupparsecontextref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/markupparsecontextref\/init(parser:flags:userdata:userdatadnotify:)","title":"init<MarkupParserT>(parser: MarkupParserT, flags: MarkupParseFlags, userData: gpointer?, userDataDnotify: GDestroyNotify?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/markupparsecontextref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/markupparsecontextref\/element","title":"var element: String!","type":"property"},{"path":"\/documentation\/glib\/markupparsecontextref\/elementstack","title":"var elementStack: SListRef!","type":"property"},{"path":"\/documentation\/glib\/markupparsecontextref\/markup_parse_context_ptr","title":"var markup_parse_context_ptr: UnsafeMutablePointer<GMarkupParseContext>!","type":"property"},{"path":"\/documentation\/glib\/markupparsecontextref\/userdata","title":"var userData: gpointer?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/markupparsecontextref\/endparse()","title":"func endParse() throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/markupparsecontextref\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/glib\/markupparsecontextref\/getelement()","title":"func getElement() -> String!","type":"method"},{"path":"\/documentation\/glib\/markupparsecontextref\/getelementstack()","title":"func getElementStack() -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/markupparsecontextref\/getposition(linenumber:charnumber:)","title":"func getPosition(lineNumber: UnsafeMutablePointer<gint>!, charNumber: UnsafeMutablePointer<gint>!)","type":"method"},{"path":"\/documentation\/glib\/markupparsecontextref\/getuserdata()","title":"func getUserData() -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/markupparsecontextref\/parse(text:textlen:)","title":"func parse(text: UnsafePointer<gchar>!, textLen: gssize) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/markupparsecontextref\/pop()","title":"func pop() -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/markupparsecontextref\/push(parser:userdata:)","title":"func push<MarkupParserT>(parser: MarkupParserT, userData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/markupparsecontextref\/ref()","title":"func ref() -> MarkupParseContextRef!","type":"method"},{"path":"\/documentation\/glib\/markupparsecontextref\/unref()","title":"func unref()","type":"method"}],"path":"\/documentation\/glib\/markupparsecontextref\/markupparsecontextprotocol-implementations","title":"MarkupParseContextProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/markupparsecontextref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/markupparsecontextref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/glib\/markupparsecontextref","title":"MarkupParseContextRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/markupparseflags\/init(_:)-50ed2","title":"init(GMarkupParseFlags)","type":"init"},{"path":"\/documentation\/glib\/markupparseflags\/init(_:)-8vu24","title":"init<I>(I)","type":"init"},{"path":"\/documentation\/glib\/markupparseflags\/init(rawvalue:)","title":"init(rawValue: UInt32)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/markupparseflags\/int","title":"var int: gint","type":"property"},{"path":"\/documentation\/glib\/markupparseflags\/intvalue","title":"var intValue: Int","type":"property"},{"path":"\/documentation\/glib\/markupparseflags\/rawvalue","title":"var rawValue: UInt32","type":"property"},{"path":"\/documentation\/glib\/markupparseflags\/value","title":"var value: GMarkupParseFlags","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/markupparseflags\/defaultflags","title":"static let defaultFlags: MarkupParseFlags","type":"property"},{"path":"\/documentation\/glib\/markupparseflags\/donotusethisunsupportedflag","title":"static let doNotUseThisUnsupportedFlag: MarkupParseFlags","type":"property"},{"path":"\/documentation\/glib\/markupparseflags\/ignorequalified","title":"static let ignoreQualified: MarkupParseFlags","type":"property"},{"path":"\/documentation\/glib\/markupparseflags\/prefixerrorposition","title":"static let prefixErrorPosition: MarkupParseFlags","type":"property"},{"path":"\/documentation\/glib\/markupparseflags\/treatcdataastext","title":"static let treatCdataAsText: MarkupParseFlags","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/glib\/markupparseflags\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/glib\/markupparseflags\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/markupparseflags\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/markupparseflags\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/markupparseflags\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/glib\/markupparseflags\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/glib\/markupparseflags\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/glib\/markupparseflags\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/glib\/markupparseflags\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/glib\/markupparseflags\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/markupparseflags\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/glib\/markupparseflags\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/glib\/markupparseflags\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/glib\/markupparseflags\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/markupparseflags\/init(_:)-45vps","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/glib\/markupparseflags\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/markupparseflags\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/markupparseflags\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/markupparseflags\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/markupparseflags\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/markupparseflags\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/markupparseflags\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/markupparseflags\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/glib\/markupparseflags\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/glib\/markupparseflags\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/glib\/markupparseflags","title":"MarkupParseFlags","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/markupparserref\/init(_:)-1svcz","title":"init(UnsafePointer<GMarkupParser>)","type":"init"},{"path":"\/documentation\/glib\/markupparserref\/init(_:)-3oxen","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/markupparserref\/init(_:)-6x064","title":"init!(UnsafeMutablePointer<GMarkupParser>?)","type":"init"},{"path":"\/documentation\/glib\/markupparserref\/init(_:)-8c4tu","title":"init(UnsafeMutablePointer<GMarkupParser>)","type":"init"},{"path":"\/documentation\/glib\/markupparserref\/init(_:)-99kgr","title":"init!(UnsafePointer<GMarkupParser>?)","type":"init"},{"path":"\/documentation\/glib\/markupparserref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/markupparserref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/markupparserref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/markupparserref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/markupparserref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/markupparserref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/markupparserref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/markupparserref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/markupparserref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/glib\/markupparserref","title":"MarkupParserRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/matchinforef\/init(_:)-1aidl","title":"init(UnsafePointer<GMatchInfo>)","type":"init"},{"path":"\/documentation\/glib\/matchinforef\/init(_:)-25vpx","title":"init!(UnsafeMutablePointer<GMatchInfo>?)","type":"init"},{"path":"\/documentation\/glib\/matchinforef\/init(_:)-3ofkp","title":"init(UnsafeMutablePointer<GMatchInfo>)","type":"init"},{"path":"\/documentation\/glib\/matchinforef\/init(_:)-8ig0b","title":"init!(UnsafePointer<GMatchInfo>?)","type":"init"},{"path":"\/documentation\/glib\/matchinforef\/init(_:)-925mx","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/matchinforef\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/matchinforef\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/matchinforef\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/matchinforef\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/matchinforef\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/matchinforef\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/matchinforef\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/matchinforef\/ispartialmatch","title":"var isPartialMatch: Bool","type":"property"},{"path":"\/documentation\/glib\/matchinforef\/matchcount","title":"var matchCount: Int","type":"property"},{"path":"\/documentation\/glib\/matchinforef\/match_info_ptr","title":"var match_info_ptr: UnsafeMutablePointer<GMatchInfo>!","type":"property"},{"path":"\/documentation\/glib\/matchinforef\/regex","title":"var regex: RegexRef!","type":"property"},{"path":"\/documentation\/glib\/matchinforef\/string","title":"var string: String!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/matchinforef\/expandreferences(stringtoexpand:)","title":"func expandReferences(stringToExpand: UnsafePointer<gchar>!) throws -> String!","type":"method"},{"path":"\/documentation\/glib\/matchinforef\/fetch(matchnum:)","title":"func fetch(matchNum: Int) -> String!","type":"method"},{"path":"\/documentation\/glib\/matchinforef\/fetchall()","title":"func fetchAll() -> UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!","type":"method"},{"path":"\/documentation\/glib\/matchinforef\/fetchnamed(name:)","title":"func fetchNamed(name: UnsafePointer<gchar>!) -> String!","type":"method"},{"path":"\/documentation\/glib\/matchinforef\/fetchnamedpos(name:startpos:endpos:)","title":"func fetchNamedPos(name: UnsafePointer<gchar>!, startPos: UnsafeMutablePointer<gint>!, endPos: UnsafeMutablePointer<gint>!) -> Bool","type":"method"},{"path":"\/documentation\/glib\/matchinforef\/fetchpos(matchnum:startpos:endpos:)","title":"func fetchPos(matchNum: Int, startPos: UnsafeMutablePointer<gint>!, endPos: UnsafeMutablePointer<gint>!) -> Bool","type":"method"},{"path":"\/documentation\/glib\/matchinforef\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/glib\/matchinforef\/getmatchcount()","title":"func getMatchCount() -> Int","type":"method"},{"path":"\/documentation\/glib\/matchinforef\/getregex()","title":"func getRegex() -> RegexRef!","type":"method"},{"path":"\/documentation\/glib\/matchinforef\/getstring()","title":"func getString() -> String!","type":"method"},{"path":"\/documentation\/glib\/matchinforef\/matches()","title":"func matches() -> Bool","type":"method"},{"path":"\/documentation\/glib\/matchinforef\/next()","title":"func next() throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/matchinforef\/ref()","title":"func ref() -> MatchInfoRef!","type":"method"},{"path":"\/documentation\/glib\/matchinforef\/unref()","title":"func unref()","type":"method"}],"path":"\/documentation\/glib\/matchinforef\/matchinfoprotocol-implementations","title":"MatchInfoProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/matchinforef\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/matchinforef\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/glib\/matchinforef","title":"MatchInfoRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/memchunkref\/init(_:)-20fnj","title":"init(UnsafePointer<GMemChunk>)","type":"init"},{"path":"\/documentation\/glib\/memchunkref\/init(_:)-2yl9i","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/memchunkref\/init(_:)-4wqjl","title":"init!(UnsafeMutablePointer<GMemChunk>?)","type":"init"},{"path":"\/documentation\/glib\/memchunkref\/init(_:)-57tia","title":"init(UnsafeMutablePointer<GMemChunk>)","type":"init"},{"path":"\/documentation\/glib\/memchunkref\/init(_:)-8edar","title":"init!(UnsafePointer<GMemChunk>?)","type":"init"},{"path":"\/documentation\/glib\/memchunkref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/memchunkref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/memchunkref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/memchunkref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/memchunkref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/memchunkref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/memchunkref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/memchunkref\/alloc()","title":"func alloc() -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/memchunkref\/alloc0()","title":"func alloc0() -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/memchunkref\/clean()","title":"func clean()","type":"method"},{"path":"\/documentation\/glib\/memchunkref\/destroy()","title":"func destroy()","type":"method"},{"path":"\/documentation\/glib\/memchunkref\/free(mem:)","title":"func free(mem: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/memchunkref\/print()","title":"func print()","type":"method"},{"path":"\/documentation\/glib\/memchunkref\/reset()","title":"func reset()","type":"method"}],"path":"\/documentation\/glib\/memchunkref\/memchunkprotocol-implementations","title":"MemChunkProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/memchunkref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/memchunkref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/glib\/memchunkref","title":"MemChunkRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/memvtableref\/init(_:)-1wo17","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/memvtableref\/init(_:)-3bi8q","title":"init(UnsafePointer<GMemVTable>)","type":"init"},{"path":"\/documentation\/glib\/memvtableref\/init(_:)-3wyeq","title":"init!(UnsafeMutablePointer<GMemVTable>?)","type":"init"},{"path":"\/documentation\/glib\/memvtableref\/init(_:)-42f1j","title":"init!(UnsafePointer<GMemVTable>?)","type":"init"},{"path":"\/documentation\/glib\/memvtableref\/init(_:)-6s9a","title":"init(UnsafeMutablePointer<GMemVTable>)","type":"init"},{"path":"\/documentation\/glib\/memvtableref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/memvtableref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/memvtableref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/memvtableref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/memvtableref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/memvtableref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/memvtableref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/memvtableref\/memsetvtable()","title":"func memSetVtable()","type":"method"}],"path":"\/documentation\/glib\/memvtableref\/memvtableprotocol-implementations","title":"MemVTableProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/memvtableref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/memvtableref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/glib\/memvtableref","title":"MemVTableRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/mutexref\/init(_:)-1lz4u","title":"init(UnsafeMutablePointer<GMutex>)","type":"init"},{"path":"\/documentation\/glib\/mutexref\/init(_:)-39dgq","title":"init(UnsafePointer<GMutex>)","type":"init"},{"path":"\/documentation\/glib\/mutexref\/init(_:)-4ul4a","title":"init!(UnsafePointer<GMutex>?)","type":"init"},{"path":"\/documentation\/glib\/mutexref\/init(_:)-7e86y","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/mutexref\/init(_:)-97x4o","title":"init!(UnsafeMutablePointer<GMutex>?)","type":"init"},{"path":"\/documentation\/glib\/mutexref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/mutexref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/mutexref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/mutexref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/mutexref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/mutexref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/mutexref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/mutexref\/clear()","title":"func clear()","type":"method"},{"path":"\/documentation\/glib\/mutexref\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/glib\/mutexref\/init_()","title":"func init_()","type":"method"},{"path":"\/documentation\/glib\/mutexref\/lock()","title":"func lock()","type":"method"},{"path":"\/documentation\/glib\/mutexref\/trylock()","title":"func trylock() -> Bool","type":"method"},{"path":"\/documentation\/glib\/mutexref\/unlock()","title":"func unlock()","type":"method"}],"path":"\/documentation\/glib\/mutexref\/mutexprotocol-implementations","title":"MutexProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/mutexref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/mutexref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/glib\/mutexref","title":"MutexRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/noderef\/init(_:)-47lhz","title":"init!(UnsafeMutablePointer<GNode>?)","type":"init"},{"path":"\/documentation\/glib\/noderef\/init(_:)-8i2v9","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/noderef\/init(_:)-8ng4x","title":"init!(UnsafePointer<GNode>?)","type":"init"},{"path":"\/documentation\/glib\/noderef\/init(_:)-9e06f","title":"init(UnsafeMutablePointer<GNode>)","type":"init"},{"path":"\/documentation\/glib\/noderef\/init(_:)-9q0fk","title":"init(UnsafePointer<GNode>)","type":"init"},{"path":"\/documentation\/glib\/noderef\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/noderef\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/noderef\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/noderef\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/noderef\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/noderef\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/noderef\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/noderef\/children","title":"var children: NodeRef!","type":"property"},{"path":"\/documentation\/glib\/noderef\/data","title":"var data: gpointer?","type":"property"},{"path":"\/documentation\/glib\/noderef\/next","title":"var next: NodeRef!","type":"property"},{"path":"\/documentation\/glib\/noderef\/parent","title":"var parent: NodeRef!","type":"property"},{"path":"\/documentation\/glib\/noderef\/prev","title":"var prev: NodeRef!","type":"property"},{"path":"\/documentation\/glib\/noderef\/root","title":"var root: NodeRef!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/noderef\/childindex(data:)","title":"func childIndex(data: gpointer?) -> Int","type":"method"},{"path":"\/documentation\/glib\/noderef\/childposition(child:)","title":"func childPosition<NodeT>(child: NodeT) -> Int","type":"method"},{"path":"\/documentation\/glib\/noderef\/childrenforeach(flags:func:data:)","title":"func childrenForeach(flags: TraverseFlags, func: GNodeForeachFunc?, data: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/noderef\/copy()","title":"func copy() -> NodeRef!","type":"method"},{"path":"\/documentation\/glib\/noderef\/copydeep(copyfunc:data:)","title":"func copyDeep(copyFunc: GCopyFunc?, data: gpointer?) -> NodeRef!","type":"method"},{"path":"\/documentation\/glib\/noderef\/depth()","title":"func depth() -> Int","type":"method"},{"path":"\/documentation\/glib\/noderef\/destroy()","title":"func destroy()","type":"method"},{"path":"\/documentation\/glib\/noderef\/find(order:flags:data:)","title":"func find(order: GTraverseType, flags: TraverseFlags, data: gpointer?) -> NodeRef!","type":"method"},{"path":"\/documentation\/glib\/noderef\/findchild(flags:data:)","title":"func findChild(flags: TraverseFlags, data: gpointer?) -> NodeRef!","type":"method"},{"path":"\/documentation\/glib\/noderef\/firstsibling()","title":"func firstSibling() -> NodeRef!","type":"method"},{"path":"\/documentation\/glib\/noderef\/getroot()","title":"func getRoot() -> NodeRef!","type":"method"},{"path":"\/documentation\/glib\/noderef\/insert(position:node:)","title":"func insert<NodeT>(position: Int, node: NodeT) -> NodeRef!","type":"method"},{"path":"\/documentation\/glib\/noderef\/insertafter(sibling:node:)","title":"func insertAfter<NodeT>(sibling: NodeT, node: NodeT) -> NodeRef!","type":"method"},{"path":"\/documentation\/glib\/noderef\/insertbefore(sibling:node:)","title":"func insertBefore<NodeT>(sibling: NodeT, node: NodeT) -> NodeRef!","type":"method"},{"path":"\/documentation\/glib\/noderef\/isancestor(descendant:)","title":"func isAncestor<NodeT>(descendant: NodeT) -> Bool","type":"method"},{"path":"\/documentation\/glib\/noderef\/lastchild()","title":"func lastChild() -> NodeRef!","type":"method"},{"path":"\/documentation\/glib\/noderef\/lastsibling()","title":"func lastSibling() -> NodeRef!","type":"method"},{"path":"\/documentation\/glib\/noderef\/maxheight()","title":"func maxHeight() -> Int","type":"method"},{"path":"\/documentation\/glib\/noderef\/nchildren()","title":"func nChildren() -> Int","type":"method"},{"path":"\/documentation\/glib\/noderef\/nnodes(flags:)","title":"func nNodes(flags: TraverseFlags) -> Int","type":"method"},{"path":"\/documentation\/glib\/noderef\/nthchild(n:)","title":"func nthChild(n: Int) -> NodeRef!","type":"method"},{"path":"\/documentation\/glib\/noderef\/prepend(node:)","title":"func prepend<NodeT>(node: NodeT) -> NodeRef!","type":"method"},{"path":"\/documentation\/glib\/noderef\/reversechildren()","title":"func reverseChildren()","type":"method"},{"path":"\/documentation\/glib\/noderef\/traverse(order:flags:maxdepth:func:data:)","title":"func traverse(order: GTraverseType, flags: TraverseFlags, maxDepth: Int, func: GNodeTraverseFunc?, data: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/noderef\/unlink()","title":"func unlink()","type":"method"}],"path":"\/documentation\/glib\/noderef\/nodeprotocol-implementations","title":"NodeProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/noderef\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/noderef\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/glib\/noderef","title":"NodeRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/onceref\/init(_:)-62uab","title":"init(UnsafeMutablePointer<GOnce>)","type":"init"},{"path":"\/documentation\/glib\/onceref\/init(_:)-77yat","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/onceref\/init(_:)-8ge90","title":"init(UnsafePointer<GOnce>)","type":"init"},{"path":"\/documentation\/glib\/onceref\/init(_:)-8ii97","title":"init!(UnsafePointer<GOnce>?)","type":"init"},{"path":"\/documentation\/glib\/onceref\/init(_:)-8ivct","title":"init!(UnsafeMutablePointer<GOnce>?)","type":"init"},{"path":"\/documentation\/glib\/onceref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/onceref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/onceref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/onceref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/onceref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/onceref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/onceref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/onceref\/retval","title":"var retval: gpointer?","type":"property"},{"path":"\/documentation\/glib\/onceref\/status","title":"var status: GOnceStatus","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/onceref\/impl(func:arg:)","title":"func impl(func: GThreadFunc?, arg: gpointer?) -> gpointer?","type":"method"}],"path":"\/documentation\/glib\/onceref\/onceprotocol-implementations","title":"OnceProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/onceref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/onceref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/glib\/onceref","title":"OnceRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/optioncontextref\/init(_:)-1m7rs","title":"init(UnsafeMutablePointer<GOptionContext>)","type":"init"},{"path":"\/documentation\/glib\/optioncontextref\/init(_:)-3rmpk","title":"init(UnsafePointer<GOptionContext>)","type":"init"},{"path":"\/documentation\/glib\/optioncontextref\/init(_:)-5fkgn","title":"init!(UnsafePointer<GOptionContext>?)","type":"init"},{"path":"\/documentation\/glib\/optioncontextref\/init(_:)-8d8ch","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/optioncontextref\/init(_:)-8ryok","title":"init!(UnsafeMutablePointer<GOptionContext>?)","type":"init"},{"path":"\/documentation\/glib\/optioncontextref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/optioncontextref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/optioncontextref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/optioncontextref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/optioncontextref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/optioncontextref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/optioncontextref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/optioncontextref\/description","title":"var description: String!","type":"property"},{"path":"\/documentation\/glib\/optioncontextref\/helpenabled","title":"var helpEnabled: Bool","type":"property"},{"path":"\/documentation\/glib\/optioncontextref\/ignoreunknownoptions","title":"var ignoreUnknownOptions: Bool","type":"property"},{"path":"\/documentation\/glib\/optioncontextref\/maingroup","title":"var mainGroup: OptionGroupRef!","type":"property"},{"path":"\/documentation\/glib\/optioncontextref\/strictposix","title":"var strictPosix: Bool","type":"property"},{"path":"\/documentation\/glib\/optioncontextref\/summary","title":"var summary: String!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/optioncontextref\/add(group:)","title":"func add<OptionGroupT>(group: OptionGroupT)","type":"method"},{"path":"\/documentation\/glib\/optioncontextref\/addmain(entries:translationdomain:)","title":"func addMain(entries: UnsafePointer<GOptionEntry>!, translationDomain: UnsafePointer<gchar>?)","type":"method"},{"path":"\/documentation\/glib\/optioncontextref\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/glib\/optioncontextref\/getdescription()","title":"func getDescription() -> String!","type":"method"},{"path":"\/documentation\/glib\/optioncontextref\/gethelp(mainhelp:group:)","title":"func getHelp(mainHelp: Bool, group: OptionGroupRef?) -> String!","type":"method"},{"path":"\/documentation\/glib\/optioncontextref\/gethelpenabled()","title":"func getHelpEnabled() -> Bool","type":"method"},{"path":"\/documentation\/glib\/optioncontextref\/getignoreunknownoptions()","title":"func getIgnoreUnknownOptions() -> Bool","type":"method"},{"path":"\/documentation\/glib\/optioncontextref\/getmaingroup()","title":"func getMainGroup() -> OptionGroupRef!","type":"method"},{"path":"\/documentation\/glib\/optioncontextref\/getstrictposix()","title":"func getStrictPosix() -> Bool","type":"method"},{"path":"\/documentation\/glib\/optioncontextref\/getsummary()","title":"func getSummary() -> String!","type":"method"},{"path":"\/documentation\/glib\/optioncontextref\/parse(argc:argv:)","title":"func parse(argc: UnsafeMutablePointer<gint>!, argv: UnsafeMutablePointer<UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>?>!) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/optioncontextref\/parsestrv(arguments:)","title":"func parseStrv(arguments: UnsafeMutablePointer<UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>?>!) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/optioncontextref\/set(description:)","title":"func set(description: UnsafePointer<gchar>?)","type":"method"},{"path":"\/documentation\/glib\/optioncontextref\/set(helpenabled:)","title":"func set(helpEnabled: Bool)","type":"method"},{"path":"\/documentation\/glib\/optioncontextref\/set(strictposix:)","title":"func set(strictPosix: Bool)","type":"method"},{"path":"\/documentation\/glib\/optioncontextref\/set(summary:)","title":"func set(summary: UnsafePointer<gchar>?)","type":"method"},{"path":"\/documentation\/glib\/optioncontextref\/setignoreunknownoptions(ignoreunknown:)","title":"func setIgnoreUnknownOptions(ignoreUnknown: Bool)","type":"method"},{"path":"\/documentation\/glib\/optioncontextref\/setmain(group:)","title":"func setMain<OptionGroupT>(group: OptionGroupT)","type":"method"},{"path":"\/documentation\/glib\/optioncontextref\/settranslatefunc(func:data:destroynotify:)","title":"func setTranslateFunc(func: GTranslateFunc?, data: gpointer?, destroyNotify: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/glib\/optioncontextref\/settranslation(domain:)","title":"func setTranslation(domain: UnsafePointer<gchar>!)","type":"method"}],"path":"\/documentation\/glib\/optioncontextref\/optioncontextprotocol-implementations","title":"OptionContextProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/optioncontextref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/optioncontextref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/glib\/optioncontextref","title":"OptionContextRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/optionentryref\/init(_:)-2hfiw","title":"init(UnsafeMutablePointer<GOptionEntry>)","type":"init"},{"path":"\/documentation\/glib\/optionentryref\/init(_:)-31pt6","title":"init(UnsafePointer<GOptionEntry>)","type":"init"},{"path":"\/documentation\/glib\/optionentryref\/init(_:)-4ot6j","title":"init!(UnsafePointer<GOptionEntry>?)","type":"init"},{"path":"\/documentation\/glib\/optionentryref\/init(_:)-63dmx","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/optionentryref\/init(_:)-6ymjh","title":"init!(UnsafeMutablePointer<GOptionEntry>?)","type":"init"},{"path":"\/documentation\/glib\/optionentryref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/optionentryref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/optionentryref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/optionentryref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/optionentryref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/optionentryref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/optionentryref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/optionentryref\/arg","title":"var arg: GOptionArg","type":"property"},{"path":"\/documentation\/glib\/optionentryref\/argdata","title":"var argData: gpointer?","type":"property"},{"path":"\/documentation\/glib\/optionentryref\/argdescription","title":"var argDescription: UnsafePointer<gchar>!","type":"property"},{"path":"\/documentation\/glib\/optionentryref\/description","title":"var description: UnsafePointer<gchar>!","type":"property"},{"path":"\/documentation\/glib\/optionentryref\/flags","title":"var flags: gint","type":"property"},{"path":"\/documentation\/glib\/optionentryref\/longname","title":"var longName: UnsafePointer<gchar>!","type":"property"},{"path":"\/documentation\/glib\/optionentryref\/shortname","title":"var shortName: gchar","type":"property"}],"path":"\/documentation\/glib\/optionentryref\/optionentryprotocol-implementations","title":"OptionEntryProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/optionentryref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/optionentryref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/glib\/optionentryref","title":"OptionEntryRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/optionflags\/init(_:)-2yv79","title":"init<I>(I)","type":"init"},{"path":"\/documentation\/glib\/optionflags\/init(_:)-5ng99","title":"init(GOptionFlags)","type":"init"},{"path":"\/documentation\/glib\/optionflags\/init(rawvalue:)","title":"init(rawValue: UInt32)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/optionflags\/int","title":"var int: gint","type":"property"},{"path":"\/documentation\/glib\/optionflags\/intvalue","title":"var intValue: Int","type":"property"},{"path":"\/documentation\/glib\/optionflags\/rawvalue","title":"var rawValue: UInt32","type":"property"},{"path":"\/documentation\/glib\/optionflags\/value","title":"var value: GOptionFlags","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/optionflags\/filename","title":"static let filename: OptionFlags","type":"property"},{"path":"\/documentation\/glib\/optionflags\/hidden","title":"static let hidden: OptionFlags","type":"property"},{"path":"\/documentation\/glib\/optionflags\/inmain","title":"static let inMain: OptionFlags","type":"property"},{"path":"\/documentation\/glib\/optionflags\/noarg","title":"static let noArg: OptionFlags","type":"property"},{"path":"\/documentation\/glib\/optionflags\/noalias","title":"static let noalias: OptionFlags","type":"property"},{"path":"\/documentation\/glib\/optionflags\/none","title":"static let none: OptionFlags","type":"property"},{"path":"\/documentation\/glib\/optionflags\/optionalarg","title":"static let optionalArg: OptionFlags","type":"property"},{"path":"\/documentation\/glib\/optionflags\/reverse","title":"static let reverse: OptionFlags","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/glib\/optionflags\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/glib\/optionflags\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/optionflags\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/optionflags\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/optionflags\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/glib\/optionflags\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/glib\/optionflags\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/glib\/optionflags\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/glib\/optionflags\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/glib\/optionflags\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/optionflags\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/glib\/optionflags\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/glib\/optionflags\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/glib\/optionflags\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/optionflags\/init(_:)-198zi","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/glib\/optionflags\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/optionflags\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/optionflags\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/optionflags\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/optionflags\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/optionflags\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/optionflags\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/optionflags\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/glib\/optionflags\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/glib\/optionflags\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/glib\/optionflags","title":"OptionFlags","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/optiongroupref\/init(_:)-4wacj","title":"init(UnsafeMutablePointer<GOptionGroup>)","type":"init"},{"path":"\/documentation\/glib\/optiongroupref\/init(_:)-5zr38","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/optiongroupref\/init(_:)-6spjx","title":"init(UnsafePointer<GOptionGroup>)","type":"init"},{"path":"\/documentation\/glib\/optiongroupref\/init(_:)-7u1on","title":"init!(UnsafeMutablePointer<GOptionGroup>?)","type":"init"},{"path":"\/documentation\/glib\/optiongroupref\/init(_:)-9ajj0","title":"init!(UnsafePointer<GOptionGroup>?)","type":"init"},{"path":"\/documentation\/glib\/optiongroupref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/optiongroupref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/optiongroupref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/optiongroupref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/optiongroupref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/optiongroupref\/init(name:description:helpdescription:userdata:destroy:)","title":"init(name: UnsafePointer<gchar>!, description: UnsafePointer<gchar>!, helpDescription: UnsafePointer<gchar>!, userData: gpointer?, destroy: GDestroyNotify?)","type":"init"},{"path":"\/documentation\/glib\/optiongroupref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/optiongroupref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/optiongroupref\/option_group_ptr","title":"var option_group_ptr: UnsafeMutablePointer<GOptionGroup>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/optiongroupref\/add(entries:)","title":"func add(entries: UnsafePointer<GOptionEntry>!)","type":"method"},{"path":"\/documentation\/glib\/optiongroupref\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/glib\/optiongroupref\/ref()","title":"func ref() -> OptionGroupRef!","type":"method"},{"path":"\/documentation\/glib\/optiongroupref\/seterrorhook(errorfunc:)","title":"func setErrorHook(errorFunc: GOptionErrorFunc?)","type":"method"},{"path":"\/documentation\/glib\/optiongroupref\/setparsehooks(preparsefunc:postparsefunc:)","title":"func setParseHooks(preParseFunc: GOptionParseFunc?, postParseFunc: GOptionParseFunc?)","type":"method"},{"path":"\/documentation\/glib\/optiongroupref\/settranslatefunc(func:data:destroynotify:)","title":"func setTranslateFunc(func: GTranslateFunc?, data: gpointer?, destroyNotify: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/glib\/optiongroupref\/settranslation(domain:)","title":"func setTranslation(domain: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/glib\/optiongroupref\/unref()","title":"func unref()","type":"method"}],"path":"\/documentation\/glib\/optiongroupref\/optiongroupprotocol-implementations","title":"OptionGroupProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/optiongroupref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/optiongroupref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/glib\/optiongroupref","title":"OptionGroupRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/pathbufref\/init(_:)-3q2jn","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/pathbufref\/init(_:)-79wrj","title":"init!(UnsafeMutablePointer<GPathBuf>?)","type":"init"},{"path":"\/documentation\/glib\/pathbufref\/init(_:)-7qoz3","title":"init(UnsafePointer<GPathBuf>)","type":"init"},{"path":"\/documentation\/glib\/pathbufref\/init(_:)-915ls","title":"init(UnsafeMutablePointer<GPathBuf>)","type":"init"},{"path":"\/documentation\/glib\/pathbufref\/init(_:)-9p4g0","title":"init!(UnsafePointer<GPathBuf>?)","type":"init"},{"path":"\/documentation\/glib\/pathbufref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/pathbufref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/pathbufref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/pathbufref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/pathbufref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/pathbufref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/pathbufref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/pathbufref\/newfrom(path:)","title":"static func newFrom(path: UnsafePointer<CChar>?) -> PathBufRef!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/pathbufref\/clear()","title":"func clear()","type":"method"},{"path":"\/documentation\/glib\/pathbufref\/cleartopath()","title":"func clearToPath() -> String!","type":"method"},{"path":"\/documentation\/glib\/pathbufref\/copy()","title":"func copy() -> PathBufRef!","type":"method"},{"path":"\/documentation\/glib\/pathbufref\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/glib\/pathbufref\/freetopath()","title":"func freeToPath() -> String!","type":"method"},{"path":"\/documentation\/glib\/pathbufref\/initfrom(path:)","title":"func initFrom(path: UnsafePointer<CChar>?) -> PathBufRef!","type":"method"},{"path":"\/documentation\/glib\/pathbufref\/init_()","title":"func init_() -> PathBufRef!","type":"method"},{"path":"\/documentation\/glib\/pathbufref\/pop()","title":"func pop() -> Bool","type":"method"},{"path":"\/documentation\/glib\/pathbufref\/push(path:)","title":"func push(path: UnsafePointer<CChar>!) -> PathBufRef!","type":"method"},{"path":"\/documentation\/glib\/pathbufref\/setextension(extension:)","title":"func setExtension(extension: UnsafePointer<CChar>?) -> Bool","type":"method"},{"path":"\/documentation\/glib\/pathbufref\/setfilename(filename:)","title":"func setFilename(fileName: UnsafePointer<CChar>!) -> Bool","type":"method"},{"path":"\/documentation\/glib\/pathbufref\/topath()","title":"func toPath() -> String!","type":"method"}],"path":"\/documentation\/glib\/pathbufref\/pathbufprotocol-implementations","title":"PathBufProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/pathbufref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/pathbufref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/glib\/pathbufref","title":"PathBufRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/patternspecref\/init(_:)-23j0e","title":"init!(UnsafeMutablePointer<GPatternSpec>?)","type":"init"},{"path":"\/documentation\/glib\/patternspecref\/init(_:)-2nucr","title":"init(UnsafeMutablePointer<GPatternSpec>)","type":"init"},{"path":"\/documentation\/glib\/patternspecref\/init(_:)-94hcj","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/patternspecref\/init(_:)-94moh","title":"init(UnsafePointer<GPatternSpec>)","type":"init"},{"path":"\/documentation\/glib\/patternspecref\/init(_:)-9kb79","title":"init!(UnsafePointer<GPatternSpec>?)","type":"init"},{"path":"\/documentation\/glib\/patternspecref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/patternspecref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/patternspecref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/patternspecref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/patternspecref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/patternspecref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/patternspecref\/init(pattern:)","title":"init(pattern: UnsafePointer<gchar>!)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/patternspecref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/patternspecref\/pattern_spec_ptr","title":"var pattern_spec_ptr: UnsafeMutablePointer<GPatternSpec>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/patternspecref\/copy()","title":"func copy() -> PatternSpecRef!","type":"method"},{"path":"\/documentation\/glib\/patternspecref\/equal(pspec2:)","title":"func equal<PatternSpecT>(pspec2: PatternSpecT) -> Bool","type":"method"},{"path":"\/documentation\/glib\/patternspecref\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/glib\/patternspecref\/match(string:)","title":"func match(string: UnsafePointer<gchar>!) -> Bool","type":"method"},{"path":"\/documentation\/glib\/patternspecref\/match(stringlength:string:stringreversed:)","title":"func match(stringLength: Int, string: UnsafePointer<gchar>!, stringReversed: UnsafePointer<gchar>?) -> Bool","type":"method"},{"path":"\/documentation\/glib\/patternspecref\/patternmatch(string:)","title":"func patternMatch(string: UnsafePointer<gchar>!) -> Bool","type":"method"},{"path":"\/documentation\/glib\/patternspecref\/patternmatch(stringlength:string:stringreversed:)","title":"func patternMatch(stringLength: Int, string: UnsafePointer<gchar>!, stringReversed: UnsafePointer<gchar>?) -> Bool","type":"method"}],"path":"\/documentation\/glib\/patternspecref\/patternspecprotocol-implementations","title":"PatternSpecProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/patternspecref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/patternspecref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/glib\/patternspecref","title":"PatternSpecRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/pollfdref\/init(_:)-348z6","title":"init(UnsafeMutablePointer<GPollFD>)","type":"init"},{"path":"\/documentation\/glib\/pollfdref\/init(_:)-7cz3b","title":"init!(UnsafePointer<GPollFD>?)","type":"init"},{"path":"\/documentation\/glib\/pollfdref\/init(_:)-8lmwx","title":"init(UnsafePointer<GPollFD>)","type":"init"},{"path":"\/documentation\/glib\/pollfdref\/init(_:)-9bp73","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/pollfdref\/init(_:)-9k5qp","title":"init!(UnsafeMutablePointer<GPollFD>?)","type":"init"},{"path":"\/documentation\/glib\/pollfdref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/pollfdref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/pollfdref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/pollfdref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/pollfdref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/pollfdref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/pollfdref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/pollfdref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/pollfdref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/pollfdref\/events","title":"var events: gushort","type":"property"},{"path":"\/documentation\/glib\/pollfdref\/fd","title":"var fd: gint","type":"property"},{"path":"\/documentation\/glib\/pollfdref\/pollfd_ptr","title":"var pollfd_ptr: UnsafeMutablePointer<GPollFD>!","type":"property"},{"path":"\/documentation\/glib\/pollfdref\/revents","title":"var revents: gushort","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/pollfdref\/poll(nfds:timeout:)","title":"func poll(nfds: Int, timeout: Int) -> Int","type":"method"}],"path":"\/documentation\/glib\/pollfdref\/pollfdprotocol-implementations","title":"PollFDProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/pollfdref","title":"PollFDRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/privateref\/init(_:)-1147i","title":"init(UnsafePointer<GPrivate>)","type":"init"},{"path":"\/documentation\/glib\/privateref\/init(_:)-4xgai","title":"init!(UnsafeMutablePointer<GPrivate>?)","type":"init"},{"path":"\/documentation\/glib\/privateref\/init(_:)-70wev","title":"init!(UnsafePointer<GPrivate>?)","type":"init"},{"path":"\/documentation\/glib\/privateref\/init(_:)-7fzwk","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/privateref\/init(_:)-asqe","title":"init(UnsafeMutablePointer<GPrivate>)","type":"init"},{"path":"\/documentation\/glib\/privateref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/privateref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/privateref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/privateref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/privateref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/privateref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/privateref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/privateref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/privateref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/privateref\/get()","title":"func get() -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/privateref\/replace(value:)","title":"func replace(value: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/privateref\/set(value:)","title":"func set(value: gpointer?)","type":"method"}],"path":"\/documentation\/glib\/privateref\/privateprotocol-implementations","title":"PrivateProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/privateref","title":"PrivateRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/ptrarrayref\/init(_:)-14isj","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/ptrarrayref\/init(_:)-48s8r","title":"init(UnsafeMutablePointer<GPtrArray>)","type":"init"},{"path":"\/documentation\/glib\/ptrarrayref\/init(_:)-5jcby","title":"init(UnsafePointer<GPtrArray>)","type":"init"},{"path":"\/documentation\/glib\/ptrarrayref\/init(_:)-7h393","title":"init!(UnsafePointer<GPtrArray>?)","type":"init"},{"path":"\/documentation\/glib\/ptrarrayref\/init(_:)-7hvid","title":"init!(UnsafeMutablePointer<GPtrArray>?)","type":"init"},{"path":"\/documentation\/glib\/ptrarrayref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/ptrarrayref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/ptrarrayref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/ptrarrayref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/ptrarrayref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/ptrarrayref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/ptrarrayref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/ptrarrayref\/new(full:elementfreefunc:)","title":"static func new(full: Int, elementFreeFunc: GDestroyNotify?) -> PtrArrayRef!","type":"method"},{"path":"\/documentation\/glib\/ptrarrayref\/new(take:len:elementfreefunc:)","title":"static func new(take: UnsafeMutablePointer<gpointer?>!, len: Int, elementFreeFunc: GDestroyNotify?) -> PtrArrayRef!","type":"method"},{"path":"\/documentation\/glib\/ptrarrayref\/newfrom(array:len:copyfunc:copyfuncuserdata:elementfreefunc:)","title":"static func newFrom(array: UnsafeMutablePointer<gpointer?>!, len: Int, copyFunc: GCopyFunc?, copyFuncUserData: gpointer?, elementFreeFunc: GDestroyNotify?) -> PtrArrayRef!","type":"method"},{"path":"\/documentation\/glib\/ptrarrayref\/newfrom(nullterminatedarray:copyfunc:copyfuncuserdata:elementfreefunc:)","title":"static func newFrom(nullTerminatedArray: UnsafeMutablePointer<gpointer?>!, copyFunc: GCopyFunc?, copyFuncUserData: gpointer?, elementFreeFunc: GDestroyNotify?) -> PtrArrayRef!","type":"method"},{"path":"\/documentation\/glib\/ptrarrayref\/newnullterminated(null_terminated:elementfreefunc:nullterminated:)","title":"static func newNullTerminated(null_terminated: Int, elementFreeFunc: GDestroyNotify?, nullTerminated: Bool) -> PtrArrayRef!","type":"method"},{"path":"\/documentation\/glib\/ptrarrayref\/newtakenullterminated(take_null_terminated:elementfreefunc:)","title":"static func newTakeNullTerminated(take_null_terminated: UnsafeMutablePointer<gpointer?>!, elementFreeFunc: GDestroyNotify?) -> PtrArrayRef!","type":"method"},{"path":"\/documentation\/glib\/ptrarrayref\/newwith(freefunc:)","title":"static func newWith(freeFunc: GDestroyNotify?) -> PtrArrayRef!","type":"method"},{"path":"\/documentation\/glib\/ptrarrayref\/sizednew(sized:)","title":"static func sizedNew(sized: Int) -> PtrArrayRef!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/ptrarrayref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/ptrarrayref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/ptrarrayref\/isnullterminated","title":"var isNullTerminated: Bool","type":"property"},{"path":"\/documentation\/glib\/ptrarrayref\/len","title":"var len: guint","type":"property"},{"path":"\/documentation\/glib\/ptrarrayref\/pdata","title":"var pdata: UnsafeMutablePointer<gpointer?>!","type":"property"},{"path":"\/documentation\/glib\/ptrarrayref\/ptr_array_ptr","title":"var ptr_array_ptr: UnsafeMutablePointer<GPtrArray>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/ptrarrayref\/add(data:)","title":"func add(data: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/ptrarrayref\/copy(func:userdata:)","title":"func copy(func: GCopyFunc?, userData: gpointer?) -> PtrArrayRef!","type":"method"},{"path":"\/documentation\/glib\/ptrarrayref\/extend(array:func:userdata:)","title":"func extend<PtrArrayT>(array: PtrArrayT, func: GCopyFunc?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/ptrarrayref\/extendandsteal(array:)","title":"func extendAndSteal<PtrArrayT>(array: PtrArrayT)","type":"method"},{"path":"\/documentation\/glib\/ptrarrayref\/find(needle:index:)","title":"func find(needle: gconstpointer?, index: UnsafeMutablePointer<guint>!) -> Bool","type":"method"},{"path":"\/documentation\/glib\/ptrarrayref\/findwithequalfunc(needle:equalfunc:index:)","title":"func findWithEqualFunc(needle: gconstpointer?, equalFunc: GEqualFunc?, index: UnsafeMutablePointer<guint>!) -> Bool","type":"method"},{"path":"\/documentation\/glib\/ptrarrayref\/foreach(func:userdata:)","title":"func foreach(func: GFunc?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/ptrarrayref\/free(freeseg:)","title":"func free(freeSeg: Bool) -> UnsafeMutablePointer<gpointer?>?","type":"method"},{"path":"\/documentation\/glib\/ptrarrayref\/insert(index:data:)","title":"func insert(index: Int, data: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/ptrarrayref\/ptrarrayfind(needle:index:)","title":"func ptrArrayFind(needle: gconstpointer?, index: UnsafeMutablePointer<guint>!) -> Bool","type":"method"},{"path":"\/documentation\/glib\/ptrarrayref\/ptrarrayfindwithequalfunc(needle:equalfunc:index:)","title":"func ptrArrayFindWithEqualFunc(needle: gconstpointer?, equalFunc: GEqualFunc?, index: UnsafeMutablePointer<guint>!) -> Bool","type":"method"},{"path":"\/documentation\/glib\/ptrarrayref\/ref()","title":"func ref() -> PtrArrayRef!","type":"method"},{"path":"\/documentation\/glib\/ptrarrayref\/remove(data:)","title":"func remove(data: gpointer?) -> Bool","type":"method"},{"path":"\/documentation\/glib\/ptrarrayref\/remove(index:)","title":"func remove(index: Int) -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/ptrarrayref\/removefast(data:)","title":"func removeFast(data: gpointer?) -> Bool","type":"method"},{"path":"\/documentation\/glib\/ptrarrayref\/removeindexfast(index:)","title":"func removeIndexFast(index: Int) -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/ptrarrayref\/removerange(index:length:)","title":"func removeRange(index: Int, length: Int) -> PtrArrayRef!","type":"method"},{"path":"\/documentation\/glib\/ptrarrayref\/setfreefunc(elementfreefunc:)","title":"func setFreeFunc(elementFreeFunc: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/glib\/ptrarrayref\/setsize(length:)","title":"func setSize(length: Int)","type":"method"},{"path":"\/documentation\/glib\/ptrarrayref\/sort(comparefunc:)","title":"func sort(compareFunc: GCompareFunc?)","type":"method"},{"path":"\/documentation\/glib\/ptrarrayref\/sortvalues(comparefunc:)","title":"func sortValues(compareFunc: GCompareFunc?)","type":"method"},{"path":"\/documentation\/glib\/ptrarrayref\/sortvalueswithdata(comparefunc:userdata:)","title":"func sortValuesWithData(compareFunc: GCompareDataFunc?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/ptrarrayref\/sortwithdata(comparefunc:userdata:)","title":"func sortWithData(compareFunc: GCompareDataFunc?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/ptrarrayref\/steal(index:)","title":"func steal(index: Int) -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/ptrarrayref\/steal(len:)","title":"func steal(len: UnsafeMutablePointer<gsize>!) -> UnsafeMutablePointer<gpointer?>?","type":"method"},{"path":"\/documentation\/glib\/ptrarrayref\/stealindexfast(index:)","title":"func stealIndexFast(index: Int) -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/ptrarrayref\/unref()","title":"func unref()","type":"method"}],"path":"\/documentation\/glib\/ptrarrayref\/ptrarrayprotocol-implementations","title":"PtrArrayProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/ptrarrayref","title":"PtrArrayRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/queueref\/init(_:)-1k66g","title":"init!(UnsafePointer<GQueue>?)","type":"init"},{"path":"\/documentation\/glib\/queueref\/init(_:)-6f5ms","title":"init!(UnsafeMutablePointer<GQueue>?)","type":"init"},{"path":"\/documentation\/glib\/queueref\/init(_:)-8fdrx","title":"init(UnsafeMutablePointer<GQueue>)","type":"init"},{"path":"\/documentation\/glib\/queueref\/init(_:)-9tym6","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/queueref\/init(_:)-ojvy","title":"init(UnsafePointer<GQueue>)","type":"init"},{"path":"\/documentation\/glib\/queueref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/queueref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/queueref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/queueref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/queueref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/queueref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/queueref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/queueref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/queueref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/queueref\/head","title":"var head: ListRef!","type":"property"},{"path":"\/documentation\/glib\/queueref\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/glib\/queueref\/length","title":"var length: Int","type":"property"},{"path":"\/documentation\/glib\/queueref\/tail","title":"var tail: ListRef!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/queueref\/clear()","title":"func clear()","type":"method"},{"path":"\/documentation\/glib\/queueref\/clearfull(freefunc:)","title":"func clearFull(freeFunc: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/glib\/queueref\/copy()","title":"func copy() -> QueueRef!","type":"method"},{"path":"\/documentation\/glib\/queueref\/delete(link:)","title":"func delete<ListT>(link: ListT)","type":"method"},{"path":"\/documentation\/glib\/queueref\/find(data:)","title":"func find(data: gconstpointer?) -> ReferenceListRef<gpointer>!","type":"method"},{"path":"\/documentation\/glib\/queueref\/findcustom(data:func:)","title":"func findCustom(data: gconstpointer?, func: GCompareFunc?) -> ReferenceListRef<gpointer>!","type":"method"},{"path":"\/documentation\/glib\/queueref\/foreach(func:userdata:)","title":"func foreach(func: GFunc?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/queueref\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/glib\/queueref\/freefull(freefunc:)","title":"func freeFull(freeFunc: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/glib\/queueref\/getlength()","title":"func getLength() -> Int","type":"method"},{"path":"\/documentation\/glib\/queueref\/index(data:)","title":"func index(data: gconstpointer?) -> Int","type":"method"},{"path":"\/documentation\/glib\/queueref\/init_()","title":"func init_()","type":"method"},{"path":"\/documentation\/glib\/queueref\/insertafter(sibling:data:)","title":"func insertAfter(sibling: ListRef?, data: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/queueref\/insertafterlink(sibling:link:)","title":"func insertAfterLink<ListT>(sibling: ListT?, link: ListT)","type":"method"},{"path":"\/documentation\/glib\/queueref\/insertbefore(sibling:data:)","title":"func insertBefore(sibling: ListRef?, data: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/queueref\/insertbeforelink(sibling:link:)","title":"func insertBeforeLink<ListT>(sibling: ListT?, link: ListT)","type":"method"},{"path":"\/documentation\/glib\/queueref\/insertsorted(data:func:userdata:)","title":"func insertSorted(data: gpointer?, func: GCompareDataFunc?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/queueref\/linkindex(link:)","title":"func linkIndex<ListT>(link: ListT) -> Int","type":"method"},{"path":"\/documentation\/glib\/queueref\/peekhead()","title":"func peekHead() -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/queueref\/peekheadlink()","title":"func peekHeadLink() -> ReferenceListRef<gpointer>!","type":"method"},{"path":"\/documentation\/glib\/queueref\/peeknth(n:)","title":"func peekNth(n: Int) -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/queueref\/peeknthlink(n:)","title":"func peekNthLink(n: Int) -> ReferenceListRef<gpointer>!","type":"method"},{"path":"\/documentation\/glib\/queueref\/peektail()","title":"func peekTail() -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/queueref\/peektaillink()","title":"func peekTailLink() -> ReferenceListRef<gpointer>!","type":"method"},{"path":"\/documentation\/glib\/queueref\/pophead()","title":"func popHead() -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/queueref\/popheadlink()","title":"func popHeadLink() -> ReferenceListRef<gpointer>!","type":"method"},{"path":"\/documentation\/glib\/queueref\/popnth(n:)","title":"func popNth(n: Int) -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/queueref\/popnthlink(n:)","title":"func popNthLink(n: Int) -> ReferenceListRef<gpointer>!","type":"method"},{"path":"\/documentation\/glib\/queueref\/poptail()","title":"func popTail() -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/queueref\/poptaillink()","title":"func popTailLink() -> ReferenceListRef<gpointer>!","type":"method"},{"path":"\/documentation\/glib\/queueref\/pushhead(data:)","title":"func pushHead(data: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/queueref\/pushhead(link:)","title":"func pushHead<ListT>(link: ListT)","type":"method"},{"path":"\/documentation\/glib\/queueref\/pushnth(data:n:)","title":"func pushNth(data: gpointer?, n: Int)","type":"method"},{"path":"\/documentation\/glib\/queueref\/pushnthlink(n:link:)","title":"func pushNthLink<ListT>(n: Int, link: ListT)","type":"method"},{"path":"\/documentation\/glib\/queueref\/pushtail(data:)","title":"func pushTail(data: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/queueref\/pushtail(link:)","title":"func pushTail<ListT>(link: ListT)","type":"method"},{"path":"\/documentation\/glib\/queueref\/remove(data:)","title":"func remove(data: gconstpointer?) -> Bool","type":"method"},{"path":"\/documentation\/glib\/queueref\/removeall(data:)","title":"func removeAll(data: gconstpointer?) -> Int","type":"method"},{"path":"\/documentation\/glib\/queueref\/reverse()","title":"func reverse()","type":"method"},{"path":"\/documentation\/glib\/queueref\/sort(comparefunc:userdata:)","title":"func sort(compareFunc: GCompareDataFunc?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/queueref\/unlink(link:)","title":"func unlink<ListT>(link: ListT)","type":"method"}],"path":"\/documentation\/glib\/queueref\/queueprotocol-implementations","title":"QueueProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/queueref","title":"QueueRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/rwlockref\/init(_:)-3kjfl","title":"init!(UnsafeMutablePointer<GRWLock>?)","type":"init"},{"path":"\/documentation\/glib\/rwlockref\/init(_:)-4ny6y","title":"init(UnsafeMutablePointer<GRWLock>)","type":"init"},{"path":"\/documentation\/glib\/rwlockref\/init(_:)-6up5f","title":"init!(UnsafePointer<GRWLock>?)","type":"init"},{"path":"\/documentation\/glib\/rwlockref\/init(_:)-8ofb","title":"init(UnsafePointer<GRWLock>)","type":"init"},{"path":"\/documentation\/glib\/rwlockref\/init(_:)-8tf2d","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/rwlockref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/rwlockref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/rwlockref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/rwlockref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/rwlockref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/rwlockref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/rwlockref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/rwlockref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/rwlockref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/rwlockref\/clear()","title":"func clear()","type":"method"},{"path":"\/documentation\/glib\/rwlockref\/init_()","title":"func init_()","type":"method"},{"path":"\/documentation\/glib\/rwlockref\/readerlock()","title":"func readerLock()","type":"method"},{"path":"\/documentation\/glib\/rwlockref\/readertrylock()","title":"func readerTrylock() -> Bool","type":"method"},{"path":"\/documentation\/glib\/rwlockref\/readerunlock()","title":"func readerUnlock()","type":"method"},{"path":"\/documentation\/glib\/rwlockref\/writerlock()","title":"func writerLock()","type":"method"},{"path":"\/documentation\/glib\/rwlockref\/writertrylock()","title":"func writerTrylock() -> Bool","type":"method"},{"path":"\/documentation\/glib\/rwlockref\/writerunlock()","title":"func writerUnlock()","type":"method"}],"path":"\/documentation\/glib\/rwlockref\/rwlockprotocol-implementations","title":"RWLockProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/rwlockref","title":"RWLockRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/randref\/init()","title":"init()","type":"init"},{"path":"\/documentation\/glib\/randref\/init(_:)-20nci","title":"init(UnsafeMutablePointer<GRand>)","type":"init"},{"path":"\/documentation\/glib\/randref\/init(_:)-2252e","title":"init(UnsafePointer<GRand>)","type":"init"},{"path":"\/documentation\/glib\/randref\/init(_:)-5u56m","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/randref\/init(_:)-7zvbf","title":"init!(UnsafePointer<GRand>?)","type":"init"},{"path":"\/documentation\/glib\/randref\/init(_:)-8ugee","title":"init!(UnsafeMutablePointer<GRand>?)","type":"init"},{"path":"\/documentation\/glib\/randref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/randref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/randref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/randref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/randref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/randref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/randref\/init(seed:)","title":"init(seed: guint32)","type":"init"},{"path":"\/documentation\/glib\/randref\/init(seedarray:seedlength:)","title":"init(seedArray: UnsafePointer<guint32>!, seedLength: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/randref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/randref\/newwith(seed:)","title":"static func newWith(seed: guint32) -> RandRef!","type":"method"},{"path":"\/documentation\/glib\/randref\/newwith(seedarray:seedlength:)","title":"static func newWith(seedArray: UnsafePointer<guint32>!, seedLength: Int) -> RandRef!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/randref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/randref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/randref\/rand_ptr","title":"var rand_ptr: UnsafeMutablePointer<GRand>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/randref\/cdouble()","title":"func CDouble() -> Double","type":"method"},{"path":"\/documentation\/glib\/randref\/cint()","title":"func CInt() -> guint32","type":"method"},{"path":"\/documentation\/glib\/randref\/copy()","title":"func copy() -> RandRef!","type":"method"},{"path":"\/documentation\/glib\/randref\/doublerange(begin:end:)","title":"func doubleRange(begin: Double, end: Double) -> Double","type":"method"},{"path":"\/documentation\/glib\/randref\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/glib\/randref\/intrange(begin:end:)","title":"func intRange(begin: gint32, end: gint32) -> gint32","type":"method"},{"path":"\/documentation\/glib\/randref\/set(seed:)","title":"func set(seed: guint32)","type":"method"},{"path":"\/documentation\/glib\/randref\/setseedarray(seed:seedlength:)","title":"func setSeedArray(seed: UnsafePointer<guint32>!, seedLength: Int)","type":"method"}],"path":"\/documentation\/glib\/randref\/randprotocol-implementations","title":"RandProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/randref","title":"RandRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/recmutexref\/init(_:)-24uz6","title":"init!(UnsafePointer<GRecMutex>?)","type":"init"},{"path":"\/documentation\/glib\/recmutexref\/init(_:)-7atx2","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/recmutexref\/init(_:)-7sxgv","title":"init(UnsafePointer<GRecMutex>)","type":"init"},{"path":"\/documentation\/glib\/recmutexref\/init(_:)-8gb8q","title":"init!(UnsafeMutablePointer<GRecMutex>?)","type":"init"},{"path":"\/documentation\/glib\/recmutexref\/init(_:)-97mim","title":"init(UnsafeMutablePointer<GRecMutex>)","type":"init"},{"path":"\/documentation\/glib\/recmutexref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/recmutexref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/recmutexref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/recmutexref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/recmutexref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/recmutexref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/recmutexref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/recmutexref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/recmutexref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/recmutexref\/clear()","title":"func clear()","type":"method"},{"path":"\/documentation\/glib\/recmutexref\/init_()","title":"func init_()","type":"method"},{"path":"\/documentation\/glib\/recmutexref\/lock()","title":"func lock()","type":"method"},{"path":"\/documentation\/glib\/recmutexref\/trylock()","title":"func trylock() -> Bool","type":"method"},{"path":"\/documentation\/glib\/recmutexref\/unlock()","title":"func unlock()","type":"method"}],"path":"\/documentation\/glib\/recmutexref\/recmutexprotocol-implementations","title":"RecMutexProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/recmutexref","title":"RecMutexRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/refarrayref\/init(_:)-3o3hn","title":"init!(UnsafePointer<GPtrArray>?)","type":"init"},{"path":"\/documentation\/glib\/refarrayref\/init(_:)-6itlm","title":"init!(UnsafeMutablePointer<GPtrArray>?)","type":"init"},{"path":"\/documentation\/glib\/refarrayref\/init(_:)-8cjnm","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/refarrayref\/init(_:)-91d8x","title":"init(UnsafeMutablePointer<GPtrArray>)","type":"init"},{"path":"\/documentation\/glib\/refarrayref\/init(_:)-9lgf7","title":"init(UnsafePointer<GPtrArray>)","type":"init"},{"path":"\/documentation\/glib\/refarrayref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/refarrayref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/refarrayref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/refarrayref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/refarrayref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/refarrayref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/refarrayref\/ptr","title":"var ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/refarrayref\/last","title":"var last: Self.Element?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/refarrayref\/difference(from:)","title":"func difference<C>(from: C) -> CollectionDifference<Self.Element>","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/difference(from:by:)","title":"func difference<C>(from: C, by: (C.Element, Self.Element) -> Bool) -> CollectionDifference<Self.Element>","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/droplast(_:)","title":"func dropLast(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/firstrange(of:)-13frn","title":"func firstRange<C>(of: C) -> Range<Self.Index>?","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/formindex(before:)","title":"func formIndex(before: inout Self.Index)","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/joined(separator:)-7p95","title":"func joined(separator: String) -> String","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/last(where:)","title":"func last(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/lastindex(of:)","title":"func lastIndex(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/lastindex(where:)","title":"func lastIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/reversed()","title":"func reversed() -> ReversedCollection<Self>","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/suffix(_:)","title":"func suffix(Int) -> Self.SubSequence","type":"method"}],"path":"\/documentation\/glib\/refarrayref\/bidirectionalcollection-implementations","title":"BidirectionalCollection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/refarrayref\/first","title":"var first: Self.Element?","type":"property"},{"path":"\/documentation\/glib\/refarrayref\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/glib\/refarrayref\/underestimatedcount","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/refarrayref\/contains(_:)-fplb","title":"func contains<C>(C) -> Bool","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/dropfirst(_:)","title":"func dropFirst(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/firstindex(of:)","title":"func firstIndex(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/firstindex(where:)","title":"func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/firstrange(of:)-1bok6","title":"func firstRange<C>(of: C) -> Range<Self.Index>?","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/formindex(_:offsetby:)","title":"func formIndex(inout Self.Index, offsetBy: Int)","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/formindex(_:offsetby:limitedby:)","title":"func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/formindex(after:)","title":"func formIndex(after: inout Self.Index)","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/index(of:)","title":"func index(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/makeiterator()","title":"func makeIterator() -> IndexingIterator<Self>","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/map(_:)-8z9bs","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/prefix(_:)","title":"func prefix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/prefix(through:)","title":"func prefix(through: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/prefix(upto:)","title":"func prefix(upTo: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/randomelement()","title":"func randomElement() -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/randomelement(using:)","title":"func randomElement<T>(using: inout T) -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/ranges(of:)","title":"func ranges<C>(of: C) -> [Range<Self.Index>]","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/split(separator:maxsplits:omittingemptysubsequences:)-4mw89","title":"func split<C>(separator: C, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/split(separator:maxsplits:omittingemptysubsequences:)-wzvs","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/suffix(from:)","title":"func suffix(from: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/trimmingprefix(_:)","title":"func trimmingPrefix<Prefix>(Prefix) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/trimmingprefix(while:)","title":"func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"}],"path":"\/documentation\/glib\/refarrayref\/collection-implementations","title":"Collection Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/refarrayref\/partition(by:)-498n5","title":"func partition(by: (Self.Element) throws -> Bool) rethrows -> Self.Index","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/partition(by:)-7adof","title":"func partition(by: (Self.Element) throws -> Bool) rethrows -> Self.Index","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/reverse()","title":"func reverse()","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/shuffle()","title":"func shuffle()","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/shuffle(using:)","title":"func shuffle<T>(using: inout T)","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/sort()","title":"func sort()","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/sort(by:)","title":"func sort(by: (Self.Element, Self.Element) throws -> Bool) rethrows","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/sort(using:)-795bg","title":"func sort<Comparator>(using: Comparator)","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/sort(using:)-9kmn9","title":"func sort<S, Comparator>(using: S)","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/swapat(_:_:)","title":"func swapAt(Self.Index, Self.Index)","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/withcontiguousmutablestorageifavailable(_:)","title":"func withContiguousMutableStorageIfAvailable<R>((inout UnsafeMutableBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"}],"path":"\/documentation\/glib\/refarrayref\/mutablecollection-implementations","title":"MutableCollection Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/refarrayref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/refarrayref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/refarrayref\/isnullterminated","title":"var isNullTerminated: Bool","type":"property"},{"path":"\/documentation\/glib\/refarrayref\/len","title":"var len: guint","type":"property"},{"path":"\/documentation\/glib\/refarrayref\/pdata","title":"var pdata: UnsafeMutablePointer<gpointer?>!","type":"property"},{"path":"\/documentation\/glib\/refarrayref\/ptr_array_ptr","title":"var ptr_array_ptr: UnsafeMutablePointer<GPtrArray>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/refarrayref\/add(data:)","title":"func add(data: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/copy(func:userdata:)","title":"func copy(func: GCopyFunc?, userData: gpointer?) -> PtrArrayRef!","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/extend(array:func:userdata:)","title":"func extend<PtrArrayT>(array: PtrArrayT, func: GCopyFunc?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/extendandsteal(array:)","title":"func extendAndSteal<PtrArrayT>(array: PtrArrayT)","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/find(needle:index:)","title":"func find(needle: gconstpointer?, index: UnsafeMutablePointer<guint>!) -> Bool","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/findwithequalfunc(needle:equalfunc:index:)","title":"func findWithEqualFunc(needle: gconstpointer?, equalFunc: GEqualFunc?, index: UnsafeMutablePointer<guint>!) -> Bool","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/foreach(func:userdata:)","title":"func foreach(func: GFunc?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/free(freeseg:)","title":"func free(freeSeg: Bool) -> UnsafeMutablePointer<gpointer?>?","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/insert(index:data:)","title":"func insert(index: Int, data: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/ptrarrayfind(needle:index:)","title":"func ptrArrayFind(needle: gconstpointer?, index: UnsafeMutablePointer<guint>!) -> Bool","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/ptrarrayfindwithequalfunc(needle:equalfunc:index:)","title":"func ptrArrayFindWithEqualFunc(needle: gconstpointer?, equalFunc: GEqualFunc?, index: UnsafeMutablePointer<guint>!) -> Bool","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/ref()","title":"func ref() -> PtrArrayRef!","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/remove(data:)","title":"func remove(data: gpointer?) -> Bool","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/remove(index:)","title":"func remove(index: Int) -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/removefast(data:)","title":"func removeFast(data: gpointer?) -> Bool","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/removeindexfast(index:)","title":"func removeIndexFast(index: Int) -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/removerange(index:length:)","title":"func removeRange(index: Int, length: Int) -> PtrArrayRef!","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/setfreefunc(elementfreefunc:)","title":"func setFreeFunc(elementFreeFunc: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/setsize(length:)","title":"func setSize(length: Int)","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/sort(comparefunc:)","title":"func sort(compareFunc: GCompareFunc?)","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/sortvalues(comparefunc:)","title":"func sortValues(compareFunc: GCompareFunc?)","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/sortvalueswithdata(comparefunc:userdata:)","title":"func sortValuesWithData(compareFunc: GCompareDataFunc?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/sortwithdata(comparefunc:userdata:)","title":"func sortWithData(compareFunc: GCompareDataFunc?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/steal(index:)","title":"func steal(index: Int) -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/steal(len:)","title":"func steal(len: UnsafeMutablePointer<gsize>!) -> UnsafeMutablePointer<gpointer?>?","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/stealindexfast(index:)","title":"func stealIndexFast(index: Int) -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/unref()","title":"func unref()","type":"method"}],"path":"\/documentation\/glib\/refarrayref\/ptrarrayprotocol-implementations","title":"PtrArrayProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/refarrayref\/index(_:offsetby:limitedby:)","title":"func index(Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?","type":"method"}],"path":"\/documentation\/glib\/refarrayref\/randomaccesscollection-implementations","title":"RandomAccessCollection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/refarrayref\/count","title":"var count: Int","type":"property"},{"path":"\/documentation\/glib\/refarrayref\/endindex","title":"var endIndex: Int","type":"property"},{"path":"\/documentation\/glib\/refarrayref\/startindex","title":"var startIndex: Int","type":"property"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/glib\/refarrayref\/subscript(_:)","title":"subscript(Int) -> Self.Element","type":"subscript"}],"path":"\/documentation\/glib\/refarrayref\/refarrayprotocol-implementations","title":"RefArrayProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/refarrayref\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"path":"\/documentation\/glib\/refarrayref\/publisher","title":"var publisher: Publishers.Sequence<Self, Never>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/refarrayref\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/compactmap(_:)","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/compare(_:_:)","title":"func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/contains(_:)-9aid6","title":"func contains(Self.Element) -> Bool","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/filter(_:)-46cio","title":"func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/filter(_:)-9dqbe","title":"func filter(Predicate<Self.Element>) throws -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/flatmap(_:)-1jkq7","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/flatmap(_:)-8lru6","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/formatted()","title":"func formatted() -> String","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/formatted(_:)","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/joined()","title":"func joined() -> FlattenSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/joined(separator:)-3dd6m","title":"func joined(separator: String) -> String","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/joined(separator:)-45lr7","title":"func joined<Separator>(separator: Separator) -> JoinedSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/lexicographicallyprecedes(_:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/map(_:)-7plk5","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/max()","title":"func max() -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/min()","title":"func min() -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/sorted()","title":"func sorted() -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/sorted(using:)-1c3yd","title":"func sorted<Comparator>(using: Comparator) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/sorted(using:)-9ma0j","title":"func sorted<S, Comparator>(using: S) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/split(separator:maxsplits:omittingemptysubsequences:)-2ou43","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/refarrayref\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"}],"path":"\/documentation\/glib\/refarrayref\/sequence-implementations","title":"Sequence Implementations","type":"symbol"}],"path":"\/documentation\/glib\/refarrayref","title":"RefArrayRef","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/reflistiterator\/list","title":"var list: UnsafeMutablePointer<GList>?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/reflistiterator\/next()","title":"func next() -> Element?","type":"method"}],"path":"\/documentation\/glib\/reflistiterator","title":"RefListIterator","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/reflistref\/init(_:)-2ytmj","title":"init!(UnsafePointer<GList>?)","type":"init"},{"path":"\/documentation\/glib\/reflistref\/init(_:)-3u1c1","title":"init!(UnsafeMutablePointer<GList>?)","type":"init"},{"path":"\/documentation\/glib\/reflistref\/init(_:)-95ho9","title":"init(UnsafePointer<GList>)","type":"init"},{"path":"\/documentation\/glib\/reflistref\/init(_:)-9x50j","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/reflistref\/init(_:)-9yji0","title":"init(UnsafeMutablePointer<GList>)","type":"init"},{"path":"\/documentation\/glib\/reflistref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/reflistref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/reflistref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/reflistref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/reflistref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/reflistref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/reflistref\/ptr","title":"var ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/reflistref\/data","title":"var data: gpointer?","type":"property"},{"path":"\/documentation\/glib\/reflistref\/next","title":"var next: ListRef!","type":"property"},{"path":"\/documentation\/glib\/reflistref\/prev","title":"var prev: ListRef!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/reflistref\/append(data:)","title":"func append(data: gpointer?) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/reflistref\/concat(list2:)","title":"func concat<ListT>(list2: ListT) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/reflistref\/copy()","title":"func copy() -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/reflistref\/copydeep(func:userdata:)","title":"func copyDeep(func: GCopyFunc?, userData: gpointer?) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/reflistref\/delete(link:)","title":"func delete<ListT>(link: ListT) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/reflistref\/find(data:)","title":"func find(data: gconstpointer?) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/reflistref\/findcustom(data:func:)","title":"func findCustom(data: gconstpointer?, func: GCompareFunc?) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/reflistref\/first()","title":"func first() -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/reflistref\/foreach(func:userdata:)","title":"func foreach(func: GFunc?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/reflistref\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/glib\/reflistref\/free1()","title":"func free1()","type":"method"},{"path":"\/documentation\/glib\/reflistref\/freefull(freefunc:)","title":"func freeFull(freeFunc: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/glib\/reflistref\/index(data:)","title":"func index(data: gconstpointer?) -> Int","type":"method"},{"path":"\/documentation\/glib\/reflistref\/insert(data:position:)","title":"func insert(data: gpointer?, position: Int) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/reflistref\/insertbefore(sibling:data:)","title":"func insertBefore<ListT>(sibling: ListT, data: gpointer?) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/reflistref\/insertbeforelink(sibling:link:)","title":"func insertBeforeLink<ListT>(sibling: ListT?, link: ListT) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/reflistref\/insertsorted(data:func:)","title":"func insertSorted(data: gpointer?, func: GCompareFunc?) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/reflistref\/insertsortedwith(data:func:userdata:)","title":"func insertSortedWith(data: gpointer?, func: GCompareDataFunc?, userData: gpointer?) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/reflistref\/last()","title":"func last() -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/reflistref\/length()","title":"func length() -> Int","type":"method"},{"path":"\/documentation\/glib\/reflistref\/nth(n:)","title":"func nth(n: Int) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/reflistref\/nthdata(n:)","title":"func nthData(n: Int) -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/reflistref\/nthprev(n:)","title":"func nthPrev(n: Int) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/reflistref\/position(llink:)","title":"func position<ListT>(llink: ListT) -> Int","type":"method"},{"path":"\/documentation\/glib\/reflistref\/prepend(data:)","title":"func prepend(data: gpointer?) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/reflistref\/remove(data:)","title":"func remove(data: gconstpointer?) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/reflistref\/removeall(data:)","title":"func removeAll(data: gconstpointer?) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/reflistref\/removelink(llink:)","title":"func removeLink<ListT>(llink: ListT) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/reflistref\/reverse()","title":"func reverse() -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/reflistref\/sort(comparefunc:)","title":"func sort(compareFunc: GCompareFunc?) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/reflistref\/sortwithdata(comparefunc:userdata:)","title":"func sortWithData(compareFunc: GCompareDataFunc?, userData: gpointer?) -> ListRef!","type":"method"}],"path":"\/documentation\/glib\/reflistref\/listprotocol-implementations","title":"ListProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/reflistref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/reflistref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/reflistref\/element","title":"var element: Self.Element!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/reflistref\/makeiterator()","title":"func makeIterator() -> RefListIterator<Self.Element>","type":"method"}],"path":"\/documentation\/glib\/reflistref\/reflistprotocol-implementations","title":"RefListProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/reflistref\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"path":"\/documentation\/glib\/reflistref\/publisher","title":"var publisher: Publishers.Sequence<Self, Never>","type":"property"},{"path":"\/documentation\/glib\/reflistref\/underestimatedcount","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/reflistref\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/reflistref\/compactmap(_:)","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/glib\/reflistref\/compare(_:_:)","title":"func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult","type":"method"},{"path":"\/documentation\/glib\/reflistref\/contains(_:)","title":"func contains(Self.Element) -> Bool","type":"method"},{"path":"\/documentation\/glib\/reflistref\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/reflistref\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> DropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/reflistref\/dropfirst(_:)","title":"func dropFirst(Int) -> DropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/reflistref\/droplast(_:)","title":"func dropLast(Int) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/reflistref\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/glib\/reflistref\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/reflistref\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/reflistref\/filter(_:)-516fu","title":"func filter(Predicate<Self.Element>) throws -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/reflistref\/filter(_:)-5q0yn","title":"func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/reflistref\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/reflistref\/flatmap(_:)-5gdjw","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/glib\/reflistref\/flatmap(_:)-60vkv","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/glib\/reflistref\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/glib\/reflistref\/formatted()","title":"func formatted() -> String","type":"method"},{"path":"\/documentation\/glib\/reflistref\/formatted(_:)","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/glib\/reflistref\/joined()","title":"func joined() -> FlattenSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/reflistref\/joined(separator:)-2xx4d","title":"func joined<Separator>(separator: Separator) -> JoinedSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/reflistref\/joined(separator:)-3x84r","title":"func joined(separator: String) -> String","type":"method"},{"path":"\/documentation\/glib\/reflistref\/lexicographicallyprecedes(_:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/glib\/reflistref\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/reflistref\/map(_:)","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/glib\/reflistref\/max()","title":"func max() -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/reflistref\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/reflistref\/min()","title":"func min() -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/reflistref\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/reflistref\/prefix(_:)","title":"func prefix(Int) -> PrefixSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/reflistref\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/reflistref\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/glib\/reflistref\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/glib\/reflistref\/reversed()","title":"func reversed() -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/reflistref\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/reflistref\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/reflistref\/sorted()","title":"func sorted() -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/reflistref\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/reflistref\/sorted(using:)-1ge7p","title":"func sorted<Comparator>(using: Comparator) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/reflistref\/sorted(using:)-732y5","title":"func sorted<S, Comparator>(using: S) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/reflistref\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/glib\/reflistref\/split(separator:maxsplits:omittingemptysubsequences:)","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/glib\/reflistref\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/glib\/reflistref\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/reflistref\/suffix(_:)","title":"func suffix(Int) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/reflistref\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"}],"path":"\/documentation\/glib\/reflistref\/sequence-implementations","title":"Sequence Implementations","type":"symbol"}],"path":"\/documentation\/glib\/reflistref","title":"RefListRef","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/refslistiterator\/list","title":"var list: UnsafeMutablePointer<GSList>?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/refslistiterator\/next()","title":"func next() -> Element?","type":"method"}],"path":"\/documentation\/glib\/refslistiterator","title":"RefSListIterator","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/refslistref\/init(_:)-1rjun","title":"init!(UnsafeMutablePointer<GSList>?)","type":"init"},{"path":"\/documentation\/glib\/refslistref\/init(_:)-2taf5","title":"init(UnsafeMutablePointer<GSList>)","type":"init"},{"path":"\/documentation\/glib\/refslistref\/init(_:)-516v1","title":"init(UnsafePointer<GSList>)","type":"init"},{"path":"\/documentation\/glib\/refslistref\/init(_:)-5b1qj","title":"init!(UnsafePointer<GSList>?)","type":"init"},{"path":"\/documentation\/glib\/refslistref\/init(_:)-79s3l","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/refslistref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/refslistref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/refslistref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/refslistref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/refslistref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/refslistref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/refslistref\/ptr","title":"var ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/refslistref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/refslistref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/refslistref\/element","title":"var element: Self.Element!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/refslistref\/makeiterator()","title":"func makeIterator() -> RefSListIterator<Self.Element>","type":"method"}],"path":"\/documentation\/glib\/refslistref\/refslistprotocol-implementations","title":"RefSListProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/refslistref\/data","title":"var data: gpointer?","type":"property"},{"path":"\/documentation\/glib\/refslistref\/next","title":"var next: SListRef!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/refslistref\/append(data:)","title":"func append(data: gpointer?) -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/refslistref\/concat(list2:)","title":"func concat<SListT>(list2: SListT) -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/refslistref\/copy()","title":"func copy() -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/refslistref\/copydeep(func:userdata:)","title":"func copyDeep(func: GCopyFunc?, userData: gpointer?) -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/refslistref\/delete(link:)","title":"func delete<SListT>(link: SListT) -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/refslistref\/find(data:)","title":"func find(data: gconstpointer?) -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/refslistref\/findcustom(data:func:)","title":"func findCustom(data: gconstpointer?, func: GCompareFunc?) -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/refslistref\/foreach(func:userdata:)","title":"func foreach(func: GFunc?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/refslistref\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/glib\/refslistref\/free1()","title":"func free1()","type":"method"},{"path":"\/documentation\/glib\/refslistref\/freefull(freefunc:)","title":"func freeFull(freeFunc: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/glib\/refslistref\/index(data:)","title":"func index(data: gconstpointer?) -> Int","type":"method"},{"path":"\/documentation\/glib\/refslistref\/insert(data:position:)","title":"func insert(data: gpointer?, position: Int) -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/refslistref\/insertbefore(sibling:data:)","title":"func insertBefore<SListT>(sibling: SListT, data: gpointer?) -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/refslistref\/insertsorted(data:func:)","title":"func insertSorted(data: gpointer?, func: GCompareFunc?) -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/refslistref\/insertsortedwith(data:func:userdata:)","title":"func insertSortedWith(data: gpointer?, func: GCompareDataFunc?, userData: gpointer?) -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/refslistref\/last()","title":"func last() -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/refslistref\/length()","title":"func length() -> Int","type":"method"},{"path":"\/documentation\/glib\/refslistref\/nth(n:)","title":"func nth(n: Int) -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/refslistref\/nthdata(n:)","title":"func nthData(n: Int) -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/refslistref\/position(llink:)","title":"func position<SListT>(llink: SListT) -> Int","type":"method"},{"path":"\/documentation\/glib\/refslistref\/prepend(data:)","title":"func prepend(data: gpointer?) -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/refslistref\/remove(data:)","title":"func remove(data: gconstpointer?) -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/refslistref\/remove(link:)","title":"func remove<SListT>(link: SListT) -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/refslistref\/removeall(data:)","title":"func removeAll(data: gconstpointer?) -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/refslistref\/reverse()","title":"func reverse() -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/refslistref\/sort(comparefunc:)","title":"func sort(compareFunc: GCompareFunc?) -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/refslistref\/sortwithdata(comparefunc:userdata:)","title":"func sortWithData(compareFunc: GCompareDataFunc?, userData: gpointer?) -> SListRef!","type":"method"}],"path":"\/documentation\/glib\/refslistref\/slistprotocol-implementations","title":"SListProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/refslistref\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"path":"\/documentation\/glib\/refslistref\/publisher","title":"var publisher: Publishers.Sequence<Self, Never>","type":"property"},{"path":"\/documentation\/glib\/refslistref\/underestimatedcount","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/refslistref\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/refslistref\/compactmap(_:)","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/glib\/refslistref\/compare(_:_:)","title":"func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult","type":"method"},{"path":"\/documentation\/glib\/refslistref\/contains(_:)","title":"func contains(Self.Element) -> Bool","type":"method"},{"path":"\/documentation\/glib\/refslistref\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/refslistref\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> DropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/refslistref\/dropfirst(_:)","title":"func dropFirst(Int) -> DropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/refslistref\/droplast(_:)","title":"func dropLast(Int) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/refslistref\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/glib\/refslistref\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/refslistref\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/refslistref\/filter(_:)-76h36","title":"func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/refslistref\/filter(_:)-92ac7","title":"func filter(Predicate<Self.Element>) throws -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/refslistref\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/refslistref\/flatmap(_:)-3m2wa","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/glib\/refslistref\/flatmap(_:)-ekr8","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/glib\/refslistref\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/glib\/refslistref\/formatted()","title":"func formatted() -> String","type":"method"},{"path":"\/documentation\/glib\/refslistref\/formatted(_:)","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/glib\/refslistref\/joined()","title":"func joined() -> FlattenSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/refslistref\/joined(separator:)-2hmzf","title":"func joined(separator: String) -> String","type":"method"},{"path":"\/documentation\/glib\/refslistref\/joined(separator:)-ikse","title":"func joined<Separator>(separator: Separator) -> JoinedSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/refslistref\/lexicographicallyprecedes(_:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/glib\/refslistref\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/refslistref\/map(_:)","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/glib\/refslistref\/max()","title":"func max() -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/refslistref\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/refslistref\/min()","title":"func min() -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/refslistref\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/refslistref\/prefix(_:)","title":"func prefix(Int) -> PrefixSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/refslistref\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/refslistref\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/glib\/refslistref\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/glib\/refslistref\/reversed()","title":"func reversed() -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/refslistref\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/refslistref\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/refslistref\/sorted()","title":"func sorted() -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/refslistref\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/refslistref\/sorted(using:)-415fd","title":"func sorted<Comparator>(using: Comparator) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/refslistref\/sorted(using:)-5myj8","title":"func sorted<S, Comparator>(using: S) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/refslistref\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/glib\/refslistref\/split(separator:maxsplits:omittingemptysubsequences:)","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/glib\/refslistref\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/glib\/refslistref\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/refslistref\/suffix(_:)","title":"func suffix(Int) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/refslistref\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"}],"path":"\/documentation\/glib\/refslistref\/sequence-implementations","title":"Sequence Implementations","type":"symbol"}],"path":"\/documentation\/glib\/refslistref","title":"RefSListRef","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/refsequenceiterator\/iterator","title":"var iterator: SequenceIterRef?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/refsequenceiterator\/next()","title":"func next() -> Element?","type":"method"}],"path":"\/documentation\/glib\/refsequenceiterator","title":"RefSequenceIterator","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/refsequenceref\/init(_:)-1qoho","title":"init!(UnsafePointer<GSequence>?)","type":"init"},{"path":"\/documentation\/glib\/refsequenceref\/init(_:)-32wa","title":"init!(UnsafeMutablePointer<GSequence>?)","type":"init"},{"path":"\/documentation\/glib\/refsequenceref\/init(_:)-4tolc","title":"init(UnsafePointer<GSequence>)","type":"init"},{"path":"\/documentation\/glib\/refsequenceref\/init(_:)-6c7ty","title":"init(UnsafeMutablePointer<GSequence>)","type":"init"},{"path":"\/documentation\/glib\/refsequenceref\/init(_:)-9vbe7","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/refsequenceref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/refsequenceref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/refsequenceref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/refsequenceref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/refsequenceref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/refsequenceref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/refsequenceref\/ptr","title":"var ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/refsequenceref\/makeiterator()","title":"func makeIterator() -> RefSequenceIterator<Element>","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/refsequenceref\/last","title":"var last: Self.Element?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/refsequenceref\/difference(from:)","title":"func difference<C>(from: C) -> CollectionDifference<Self.Element>","type":"method"},{"path":"\/documentation\/glib\/refsequenceref\/difference(from:by:)","title":"func difference<C>(from: C, by: (C.Element, Self.Element) -> Bool) -> CollectionDifference<Self.Element>","type":"method"},{"path":"\/documentation\/glib\/refsequenceref\/distance(from:to:)","title":"func distance(from: Self.Index, to: Self.Index) -> Int","type":"method"},{"path":"\/documentation\/glib\/refsequenceref\/droplast(_:)","title":"func dropLast(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/refsequenceref\/firstrange(of:)-59fw3","title":"func firstRange<C>(of: C) -> Range<Self.Index>?","type":"method"},{"path":"\/documentation\/glib\/refsequenceref\/formindex(before:)","title":"func formIndex(before: inout Self.Index)","type":"method"},{"path":"\/documentation\/glib\/refsequenceref\/index(_:offsetby:limitedby:)","title":"func index(Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?","type":"method"},{"path":"\/documentation\/glib\/refsequenceref\/joined(separator:)-ufgr","title":"func joined(separator: String) -> String","type":"method"},{"path":"\/documentation\/glib\/refsequenceref\/last(where:)","title":"func last(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/refsequenceref\/lastindex(of:)","title":"func lastIndex(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/glib\/refsequenceref\/lastindex(where:)","title":"func lastIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/glib\/refsequenceref\/reversed()","title":"func reversed() -> ReversedCollection<Self>","type":"method"},{"path":"\/documentation\/glib\/refsequenceref\/suffix(_:)","title":"func suffix(Int) -> Self.SubSequence","type":"method"}],"path":"\/documentation\/glib\/refsequenceref\/bidirectionalcollection-implementations","title":"BidirectionalCollection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/refsequenceref\/first","title":"var first: Self.Element?","type":"property"},{"path":"\/documentation\/glib\/refsequenceref\/indices","title":"var indices: DefaultIndices<Self>","type":"property"},{"path":"\/documentation\/glib\/refsequenceref\/underestimatedcount","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/refsequenceref\/contains(_:)-2s4r5","title":"func contains<C>(C) -> Bool","type":"method"},{"path":"\/documentation\/glib\/refsequenceref\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/refsequenceref\/dropfirst(_:)","title":"func dropFirst(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/refsequenceref\/firstindex(of:)","title":"func firstIndex(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/glib\/refsequenceref\/firstindex(where:)","title":"func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/glib\/refsequenceref\/firstrange(of:)-ndb","title":"func firstRange<C>(of: C) -> Range<Self.Index>?","type":"method"},{"path":"\/documentation\/glib\/refsequenceref\/formindex(_:offsetby:)","title":"func formIndex(inout Self.Index, offsetBy: Int)","type":"method"},{"path":"\/documentation\/glib\/refsequenceref\/formindex(_:offsetby:limitedby:)","title":"func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool","type":"method"},{"path":"\/documentation\/glib\/refsequenceref\/formindex(after:)","title":"func formIndex(after: inout Self.Index)","type":"method"},{"path":"\/documentation\/glib\/refsequenceref\/index(of:)","title":"func index(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/glib\/refsequenceref\/map(_:)-59yzc","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/glib\/refsequenceref\/prefix(_:)","title":"func prefix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/refsequenceref\/prefix(through:)","title":"func prefix(through: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/refsequenceref\/prefix(upto:)","title":"func prefix(upTo: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/refsequenceref\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/refsequenceref\/randomelement()","title":"func randomElement() -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/refsequenceref\/randomelement(using:)","title":"func randomElement<T>(using: inout T) -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/refsequenceref\/ranges(of:)","title":"func ranges<C>(of: C) -> [Range<Self.Index>]","type":"method"},{"path":"\/documentation\/glib\/refsequenceref\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/glib\/refsequenceref\/split(separator:maxsplits:omittingemptysubsequences:)-3imjk","title":"func split<C>(separator: C, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/glib\/refsequenceref\/split(separator:maxsplits:omittingemptysubsequences:)-9b45g","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/glib\/refsequenceref\/suffix(from:)","title":"func suffix(from: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/refsequenceref\/trimmingprefix(_:)","title":"func trimmingPrefix<Prefix>(Prefix) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/refsequenceref\/trimmingprefix(while:)","title":"func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"}],"path":"\/documentation\/glib\/refsequenceref\/collection-implementations","title":"Collection Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/refsequenceref\/partition(by:)-6ah2i","title":"func partition(by: (Self.Element) throws -> Bool) rethrows -> Self.Index","type":"method"},{"path":"\/documentation\/glib\/refsequenceref\/partition(by:)-6uxp9","title":"func partition(by: (Self.Element) throws -> Bool) rethrows -> Self.Index","type":"method"},{"path":"\/documentation\/glib\/refsequenceref\/reverse()","title":"func reverse()","type":"method"},{"path":"\/documentation\/glib\/refsequenceref\/swapat(_:_:)","title":"func swapAt(Self.Index, Self.Index)","type":"method"},{"path":"\/documentation\/glib\/refsequenceref\/withcontiguousmutablestorageifavailable(_:)","title":"func withContiguousMutableStorageIfAvailable<R>((inout UnsafeMutableBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"}],"path":"\/documentation\/glib\/refsequenceref\/mutablecollection-implementations","title":"MutableCollection Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/refsequenceref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/refsequenceref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/refsequenceref\/count","title":"var count: Int","type":"property"},{"path":"\/documentation\/glib\/refsequenceref\/endindex","title":"var endIndex: SequenceIterRef","type":"property"},{"path":"\/documentation\/glib\/refsequenceref\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/glib\/refsequenceref\/startindex","title":"var startIndex: SequenceIterRef","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/refsequenceref\/index(_:offsetby:)","title":"func index(SequenceIterRef, offsetBy: Int) -> SequenceIterRef","type":"method"},{"path":"\/documentation\/glib\/refsequenceref\/index(after:)","title":"func index(after: SequenceIterRef) -> SequenceIterRef","type":"method"},{"path":"\/documentation\/glib\/refsequenceref\/index(before:)","title":"func index(before: SequenceIterRef) -> SequenceIterRef","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/glib\/refsequenceref\/subscript(_:)","title":"subscript(SequenceIterRef) -> Self.Element","type":"subscript"}],"path":"\/documentation\/glib\/refsequenceref\/refsequenceprotocol-implementations","title":"RefSequenceProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/refsequenceref\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"path":"\/documentation\/glib\/refsequenceref\/publisher","title":"var publisher: Publishers.Sequence<Self, Never>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/refsequenceref\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/refsequenceref\/compactmap(_:)","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/glib\/refsequenceref\/compare(_:_:)","title":"func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult","type":"method"},{"path":"\/documentation\/glib\/refsequenceref\/contains(_:)-5m91c","title":"func contains(Self.Element) -> Bool","type":"method"},{"path":"\/documentation\/glib\/refsequenceref\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/refsequenceref\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/glib\/refsequenceref\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/refsequenceref\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/refsequenceref\/filter(_:)-1ft5w","title":"func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/refsequenceref\/filter(_:)-7ytb4","title":"func filter(Predicate<Self.Element>) throws -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/refsequenceref\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/refsequenceref\/flatmap(_:)-984t4","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/glib\/refsequenceref\/flatmap(_:)-aj6h","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/glib\/refsequenceref\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/glib\/refsequenceref\/formatted()","title":"func formatted() -> String","type":"method"},{"path":"\/documentation\/glib\/refsequenceref\/formatted(_:)","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/glib\/refsequenceref\/joined()","title":"func joined() -> FlattenSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/refsequenceref\/joined(separator:)-20pka","title":"func joined(separator: String) -> String","type":"method"},{"path":"\/documentation\/glib\/refsequenceref\/joined(separator:)-5r1mn","title":"func joined<Separator>(separator: Separator) -> JoinedSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/refsequenceref\/lexicographicallyprecedes(_:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/glib\/refsequenceref\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/refsequenceref\/map(_:)-hku8","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/glib\/refsequenceref\/max()","title":"func max() -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/refsequenceref\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/refsequenceref\/min()","title":"func min() -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/refsequenceref\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/refsequenceref\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/glib\/refsequenceref\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/glib\/refsequenceref\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/refsequenceref\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/refsequenceref\/sorted()","title":"func sorted() -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/refsequenceref\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/refsequenceref\/sorted(using:)-2ik88","title":"func sorted<S, Comparator>(using: S) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/refsequenceref\/sorted(using:)-8uz2a","title":"func sorted<Comparator>(using: Comparator) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/refsequenceref\/split(separator:maxsplits:omittingemptysubsequences:)-v9v","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/glib\/refsequenceref\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/glib\/refsequenceref\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/refsequenceref\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"}],"path":"\/documentation\/glib\/refsequenceref\/sequence-implementations","title":"Sequence Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/refsequenceref\/beginiter","title":"var beginIter: SequenceIterRef!","type":"property"},{"path":"\/documentation\/glib\/refsequenceref\/enditer","title":"var endIter: SequenceIterRef!","type":"property"},{"path":"\/documentation\/glib\/refsequenceref\/length","title":"var length: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/refsequenceref\/append(data:)","title":"func append(data: gpointer?) -> SequenceIterRef!","type":"method"},{"path":"\/documentation\/glib\/refsequenceref\/foreach(func:userdata:)","title":"func foreach(func: GFunc?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/refsequenceref\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/glib\/refsequenceref\/getbeginiter()","title":"func getBeginIter() -> SequenceIterRef!","type":"method"},{"path":"\/documentation\/glib\/refsequenceref\/getenditer()","title":"func getEndIter() -> SequenceIterRef!","type":"method"},{"path":"\/documentation\/glib\/refsequenceref\/getiterat(pos:)","title":"func getIterAt(pos: Int) -> SequenceIterRef!","type":"method"},{"path":"\/documentation\/glib\/refsequenceref\/getlength()","title":"func getLength() -> Int","type":"method"},{"path":"\/documentation\/glib\/refsequenceref\/insertsorted(data:cmpfunc:cmpdata:)","title":"func insertSorted(data: gpointer?, cmpFunc: GCompareDataFunc?, cmpData: gpointer?) -> SequenceIterRef!","type":"method"},{"path":"\/documentation\/glib\/refsequenceref\/insertsortediter(data:itercmp:cmpdata:)","title":"func insertSortedIter(data: gpointer?, iterCmp: GSequenceIterCompareFunc?, cmpData: gpointer?) -> SequenceIterRef!","type":"method"},{"path":"\/documentation\/glib\/refsequenceref\/lookup(data:cmpfunc:cmpdata:)","title":"func lookup(data: gpointer?, cmpFunc: GCompareDataFunc?, cmpData: gpointer?) -> SequenceIterRef!","type":"method"},{"path":"\/documentation\/glib\/refsequenceref\/lookupiter(data:itercmp:cmpdata:)","title":"func lookupIter(data: gpointer?, iterCmp: GSequenceIterCompareFunc?, cmpData: gpointer?) -> SequenceIterRef!","type":"method"},{"path":"\/documentation\/glib\/refsequenceref\/prepend(data:)","title":"func prepend(data: gpointer?) -> SequenceIterRef!","type":"method"},{"path":"\/documentation\/glib\/refsequenceref\/search(data:cmpfunc:cmpdata:)","title":"func search(data: gpointer?, cmpFunc: GCompareDataFunc?, cmpData: gpointer?) -> SequenceIterRef!","type":"method"},{"path":"\/documentation\/glib\/refsequenceref\/searchiter(data:itercmp:cmpdata:)","title":"func searchIter(data: gpointer?, iterCmp: GSequenceIterCompareFunc?, cmpData: gpointer?) -> SequenceIterRef!","type":"method"},{"path":"\/documentation\/glib\/refsequenceref\/sort(cmpfunc:cmpdata:)","title":"func sort(cmpFunc: GCompareDataFunc?, cmpData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/refsequenceref\/sortiter(cmpfunc:cmpdata:)","title":"func sortIter(cmpFunc: GSequenceIterCompareFunc?, cmpData: gpointer?)","type":"method"}],"path":"\/documentation\/glib\/refsequenceref\/sequenceprotocol-implementations","title":"SequenceProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/refsequenceref","title":"RefSequenceRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/referencearrayref\/init(_:)-1y6yf","title":"init(UnsafeMutablePointer<GPtrArray>)","type":"init"},{"path":"\/documentation\/glib\/referencearrayref\/init(_:)-2j5fn","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/referencearrayref\/init(_:)-2l9zo","title":"init(UnsafePointer<GPtrArray>)","type":"init"},{"path":"\/documentation\/glib\/referencearrayref\/init(_:)-48oym","title":"init!(UnsafePointer<GPtrArray>?)","type":"init"},{"path":"\/documentation\/glib\/referencearrayref\/init(_:)-89gcc","title":"init!(UnsafeMutablePointer<GPtrArray>?)","type":"init"},{"path":"\/documentation\/glib\/referencearrayref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/referencearrayref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/referencearrayref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/referencearrayref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/referencearrayref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/referencearrayref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/referencearrayref\/ptr","title":"var ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/referencearrayref\/last","title":"var last: Self.Element?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/referencearrayref\/difference(from:)","title":"func difference<C>(from: C) -> CollectionDifference<Self.Element>","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/difference(from:by:)","title":"func difference<C>(from: C, by: (C.Element, Self.Element) -> Bool) -> CollectionDifference<Self.Element>","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/droplast(_:)","title":"func dropLast(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/firstrange(of:)-8ijg","title":"func firstRange<C>(of: C) -> Range<Self.Index>?","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/formindex(before:)","title":"func formIndex(before: inout Self.Index)","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/joined(separator:)-6aaqg","title":"func joined(separator: String) -> String","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/last(where:)","title":"func last(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/lastindex(of:)","title":"func lastIndex(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/lastindex(where:)","title":"func lastIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/reversed()","title":"func reversed() -> ReversedCollection<Self>","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/suffix(_:)","title":"func suffix(Int) -> Self.SubSequence","type":"method"}],"path":"\/documentation\/glib\/referencearrayref\/bidirectionalcollection-implementations","title":"BidirectionalCollection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/referencearrayref\/first","title":"var first: Self.Element?","type":"property"},{"path":"\/documentation\/glib\/referencearrayref\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/glib\/referencearrayref\/underestimatedcount","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/referencearrayref\/contains(_:)-45mtk","title":"func contains<C>(C) -> Bool","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/dropfirst(_:)","title":"func dropFirst(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/firstindex(of:)","title":"func firstIndex(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/firstindex(where:)","title":"func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/firstrange(of:)-9oz3v","title":"func firstRange<C>(of: C) -> Range<Self.Index>?","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/formindex(_:offsetby:)","title":"func formIndex(inout Self.Index, offsetBy: Int)","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/formindex(_:offsetby:limitedby:)","title":"func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/formindex(after:)","title":"func formIndex(after: inout Self.Index)","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/index(of:)","title":"func index(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/makeiterator()","title":"func makeIterator() -> IndexingIterator<Self>","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/map(_:)-5o0o2","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/prefix(_:)","title":"func prefix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/prefix(through:)","title":"func prefix(through: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/prefix(upto:)","title":"func prefix(upTo: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/randomelement()","title":"func randomElement() -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/randomelement(using:)","title":"func randomElement<T>(using: inout T) -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/ranges(of:)","title":"func ranges<C>(of: C) -> [Range<Self.Index>]","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/split(separator:maxsplits:omittingemptysubsequences:)-96xxa","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/split(separator:maxsplits:omittingemptysubsequences:)-9ksp3","title":"func split<C>(separator: C, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/suffix(from:)","title":"func suffix(from: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/trimmingprefix(_:)","title":"func trimmingPrefix<Prefix>(Prefix) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/trimmingprefix(while:)","title":"func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"}],"path":"\/documentation\/glib\/referencearrayref\/collection-implementations","title":"Collection Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/referencearrayref\/partition(by:)-5z73d","title":"func partition(by: (Self.Element) throws -> Bool) rethrows -> Self.Index","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/partition(by:)-8tpny","title":"func partition(by: (Self.Element) throws -> Bool) rethrows -> Self.Index","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/reverse()","title":"func reverse()","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/shuffle()","title":"func shuffle()","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/shuffle(using:)","title":"func shuffle<T>(using: inout T)","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/sort()","title":"func sort()","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/sort(by:)","title":"func sort(by: (Self.Element, Self.Element) throws -> Bool) rethrows","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/sort(using:)-2n96t","title":"func sort<S, Comparator>(using: S)","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/sort(using:)-ogkg","title":"func sort<Comparator>(using: Comparator)","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/swapat(_:_:)","title":"func swapAt(Self.Index, Self.Index)","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/withcontiguousmutablestorageifavailable(_:)","title":"func withContiguousMutableStorageIfAvailable<R>((inout UnsafeMutableBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"}],"path":"\/documentation\/glib\/referencearrayref\/mutablecollection-implementations","title":"MutableCollection Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/referencearrayref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/referencearrayref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/referencearrayref\/isnullterminated","title":"var isNullTerminated: Bool","type":"property"},{"path":"\/documentation\/glib\/referencearrayref\/len","title":"var len: guint","type":"property"},{"path":"\/documentation\/glib\/referencearrayref\/pdata","title":"var pdata: UnsafeMutablePointer<gpointer?>!","type":"property"},{"path":"\/documentation\/glib\/referencearrayref\/ptr_array_ptr","title":"var ptr_array_ptr: UnsafeMutablePointer<GPtrArray>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/referencearrayref\/add(data:)","title":"func add(data: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/copy(func:userdata:)","title":"func copy(func: GCopyFunc?, userData: gpointer?) -> PtrArrayRef!","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/extend(array:func:userdata:)","title":"func extend<PtrArrayT>(array: PtrArrayT, func: GCopyFunc?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/extendandsteal(array:)","title":"func extendAndSteal<PtrArrayT>(array: PtrArrayT)","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/find(needle:index:)","title":"func find(needle: gconstpointer?, index: UnsafeMutablePointer<guint>!) -> Bool","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/findwithequalfunc(needle:equalfunc:index:)","title":"func findWithEqualFunc(needle: gconstpointer?, equalFunc: GEqualFunc?, index: UnsafeMutablePointer<guint>!) -> Bool","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/foreach(func:userdata:)","title":"func foreach(func: GFunc?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/free(freeseg:)","title":"func free(freeSeg: Bool) -> UnsafeMutablePointer<gpointer?>?","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/insert(index:data:)","title":"func insert(index: Int, data: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/ptrarrayfind(needle:index:)","title":"func ptrArrayFind(needle: gconstpointer?, index: UnsafeMutablePointer<guint>!) -> Bool","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/ptrarrayfindwithequalfunc(needle:equalfunc:index:)","title":"func ptrArrayFindWithEqualFunc(needle: gconstpointer?, equalFunc: GEqualFunc?, index: UnsafeMutablePointer<guint>!) -> Bool","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/ref()","title":"func ref() -> PtrArrayRef!","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/remove(data:)","title":"func remove(data: gpointer?) -> Bool","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/remove(index:)","title":"func remove(index: Int) -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/removefast(data:)","title":"func removeFast(data: gpointer?) -> Bool","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/removeindexfast(index:)","title":"func removeIndexFast(index: Int) -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/removerange(index:length:)","title":"func removeRange(index: Int, length: Int) -> PtrArrayRef!","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/setfreefunc(elementfreefunc:)","title":"func setFreeFunc(elementFreeFunc: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/setsize(length:)","title":"func setSize(length: Int)","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/sort(comparefunc:)","title":"func sort(compareFunc: GCompareFunc?)","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/sortvalues(comparefunc:)","title":"func sortValues(compareFunc: GCompareFunc?)","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/sortvalueswithdata(comparefunc:userdata:)","title":"func sortValuesWithData(compareFunc: GCompareDataFunc?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/sortwithdata(comparefunc:userdata:)","title":"func sortWithData(compareFunc: GCompareDataFunc?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/steal(index:)","title":"func steal(index: Int) -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/steal(len:)","title":"func steal(len: UnsafeMutablePointer<gsize>!) -> UnsafeMutablePointer<gpointer?>?","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/stealindexfast(index:)","title":"func stealIndexFast(index: Int) -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/unref()","title":"func unref()","type":"method"}],"path":"\/documentation\/glib\/referencearrayref\/ptrarrayprotocol-implementations","title":"PtrArrayProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/referencearrayref\/index(_:offsetby:limitedby:)","title":"func index(Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?","type":"method"}],"path":"\/documentation\/glib\/referencearrayref\/randomaccesscollection-implementations","title":"RandomAccessCollection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/referencearrayref\/count","title":"var count: Int","type":"property"},{"path":"\/documentation\/glib\/referencearrayref\/endindex","title":"var endIndex: Int","type":"property"},{"path":"\/documentation\/glib\/referencearrayref\/startindex","title":"var startIndex: Int","type":"property"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/glib\/referencearrayref\/subscript(_:)","title":"subscript(Int) -> Self.Element","type":"subscript"}],"path":"\/documentation\/glib\/referencearrayref\/referencearrayprotocol-implementations","title":"ReferenceArrayProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/referencearrayref\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"path":"\/documentation\/glib\/referencearrayref\/publisher","title":"var publisher: Publishers.Sequence<Self, Never>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/referencearrayref\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/compactmap(_:)","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/compare(_:_:)","title":"func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/contains(_:)-8y2f7","title":"func contains(Self.Element) -> Bool","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/filter(_:)-4wyhv","title":"func filter(Predicate<Self.Element>) throws -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/filter(_:)-8egk4","title":"func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/flatmap(_:)-736nu","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/flatmap(_:)-7d77","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/formatted()","title":"func formatted() -> String","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/formatted(_:)","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/joined()","title":"func joined() -> FlattenSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/joined(separator:)-5llct","title":"func joined(separator: String) -> String","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/joined(separator:)-932w5","title":"func joined<Separator>(separator: Separator) -> JoinedSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/lexicographicallyprecedes(_:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/map(_:)-7x53c","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/max()","title":"func max() -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/min()","title":"func min() -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/sorted()","title":"func sorted() -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/sorted(using:)-7gmu9","title":"func sorted<Comparator>(using: Comparator) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/sorted(using:)-86163","title":"func sorted<S, Comparator>(using: S) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/split(separator:maxsplits:omittingemptysubsequences:)-7cy0j","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/referencearrayref\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"}],"path":"\/documentation\/glib\/referencearrayref\/sequence-implementations","title":"Sequence Implementations","type":"symbol"}],"path":"\/documentation\/glib\/referencearrayref","title":"ReferenceArrayRef","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/referencelistiterator\/list","title":"var list: UnsafeMutablePointer<GList>?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/referencelistiterator\/next()","title":"func next() -> Element?","type":"method"}],"path":"\/documentation\/glib\/referencelistiterator","title":"ReferenceListIterator","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/referencelistref\/init(_:)-2m0bu","title":"init(UnsafePointer<GList>)","type":"init"},{"path":"\/documentation\/glib\/referencelistref\/init(_:)-3dnzf","title":"init!(UnsafeMutablePointer<GList>?)","type":"init"},{"path":"\/documentation\/glib\/referencelistref\/init(_:)-3j0ws","title":"init(UnsafeMutablePointer<GList>)","type":"init"},{"path":"\/documentation\/glib\/referencelistref\/init(_:)-8ycem","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/referencelistref\/init(_:)-quib","title":"init!(UnsafePointer<GList>?)","type":"init"},{"path":"\/documentation\/glib\/referencelistref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/referencelistref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/referencelistref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/referencelistref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/referencelistref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/referencelistref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/referencelistref\/ptr","title":"var ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/referencelistref\/data","title":"var data: gpointer?","type":"property"},{"path":"\/documentation\/glib\/referencelistref\/next","title":"var next: ListRef!","type":"property"},{"path":"\/documentation\/glib\/referencelistref\/prev","title":"var prev: ListRef!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/referencelistref\/append(data:)","title":"func append(data: gpointer?) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/referencelistref\/concat(list2:)","title":"func concat<ListT>(list2: ListT) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/referencelistref\/copy()","title":"func copy() -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/referencelistref\/copydeep(func:userdata:)","title":"func copyDeep(func: GCopyFunc?, userData: gpointer?) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/referencelistref\/delete(link:)","title":"func delete<ListT>(link: ListT) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/referencelistref\/find(data:)","title":"func find(data: gconstpointer?) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/referencelistref\/findcustom(data:func:)","title":"func findCustom(data: gconstpointer?, func: GCompareFunc?) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/referencelistref\/first()","title":"func first() -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/referencelistref\/foreach(func:userdata:)","title":"func foreach(func: GFunc?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/referencelistref\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/glib\/referencelistref\/free1()","title":"func free1()","type":"method"},{"path":"\/documentation\/glib\/referencelistref\/freefull(freefunc:)","title":"func freeFull(freeFunc: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/glib\/referencelistref\/index(data:)","title":"func index(data: gconstpointer?) -> Int","type":"method"},{"path":"\/documentation\/glib\/referencelistref\/insert(data:position:)","title":"func insert(data: gpointer?, position: Int) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/referencelistref\/insertbefore(sibling:data:)","title":"func insertBefore<ListT>(sibling: ListT, data: gpointer?) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/referencelistref\/insertbeforelink(sibling:link:)","title":"func insertBeforeLink<ListT>(sibling: ListT?, link: ListT) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/referencelistref\/insertsorted(data:func:)","title":"func insertSorted(data: gpointer?, func: GCompareFunc?) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/referencelistref\/insertsortedwith(data:func:userdata:)","title":"func insertSortedWith(data: gpointer?, func: GCompareDataFunc?, userData: gpointer?) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/referencelistref\/last()","title":"func last() -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/referencelistref\/length()","title":"func length() -> Int","type":"method"},{"path":"\/documentation\/glib\/referencelistref\/nth(n:)","title":"func nth(n: Int) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/referencelistref\/nthdata(n:)","title":"func nthData(n: Int) -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/referencelistref\/nthprev(n:)","title":"func nthPrev(n: Int) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/referencelistref\/position(llink:)","title":"func position<ListT>(llink: ListT) -> Int","type":"method"},{"path":"\/documentation\/glib\/referencelistref\/prepend(data:)","title":"func prepend(data: gpointer?) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/referencelistref\/remove(data:)","title":"func remove(data: gconstpointer?) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/referencelistref\/removeall(data:)","title":"func removeAll(data: gconstpointer?) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/referencelistref\/removelink(llink:)","title":"func removeLink<ListT>(llink: ListT) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/referencelistref\/reverse()","title":"func reverse() -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/referencelistref\/sort(comparefunc:)","title":"func sort(compareFunc: GCompareFunc?) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/referencelistref\/sortwithdata(comparefunc:userdata:)","title":"func sortWithData(compareFunc: GCompareDataFunc?, userData: gpointer?) -> ListRef!","type":"method"}],"path":"\/documentation\/glib\/referencelistref\/listprotocol-implementations","title":"ListProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/referencelistref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/referencelistref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/referencelistref\/element","title":"var element: Self.Element!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/referencelistref\/makeiterator()","title":"func makeIterator() -> ReferenceListIterator<Self.Element>","type":"method"}],"path":"\/documentation\/glib\/referencelistref\/referencelistprotocol-implementations","title":"ReferenceListProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/referencelistref\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"path":"\/documentation\/glib\/referencelistref\/publisher","title":"var publisher: Publishers.Sequence<Self, Never>","type":"property"},{"path":"\/documentation\/glib\/referencelistref\/underestimatedcount","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/referencelistref\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/referencelistref\/compactmap(_:)","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/glib\/referencelistref\/compare(_:_:)","title":"func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult","type":"method"},{"path":"\/documentation\/glib\/referencelistref\/contains(_:)","title":"func contains(Self.Element) -> Bool","type":"method"},{"path":"\/documentation\/glib\/referencelistref\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/referencelistref\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> DropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/referencelistref\/dropfirst(_:)","title":"func dropFirst(Int) -> DropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/referencelistref\/droplast(_:)","title":"func dropLast(Int) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/referencelistref\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/glib\/referencelistref\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/referencelistref\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/referencelistref\/filter(_:)-1dgr0","title":"func filter(Predicate<Self.Element>) throws -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/referencelistref\/filter(_:)-9xy7m","title":"func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/referencelistref\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/referencelistref\/flatmap(_:)-4zbsc","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/glib\/referencelistref\/flatmap(_:)-bn3a","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/glib\/referencelistref\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/glib\/referencelistref\/formatted()","title":"func formatted() -> String","type":"method"},{"path":"\/documentation\/glib\/referencelistref\/formatted(_:)","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/glib\/referencelistref\/joined()","title":"func joined() -> FlattenSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/referencelistref\/joined(separator:)-3wiu9","title":"func joined<Separator>(separator: Separator) -> JoinedSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/referencelistref\/joined(separator:)-6uuva","title":"func joined(separator: String) -> String","type":"method"},{"path":"\/documentation\/glib\/referencelistref\/lexicographicallyprecedes(_:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/glib\/referencelistref\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/referencelistref\/map(_:)","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/glib\/referencelistref\/max()","title":"func max() -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/referencelistref\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/referencelistref\/min()","title":"func min() -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/referencelistref\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/referencelistref\/prefix(_:)","title":"func prefix(Int) -> PrefixSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/referencelistref\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/referencelistref\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/glib\/referencelistref\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/glib\/referencelistref\/reversed()","title":"func reversed() -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/referencelistref\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/referencelistref\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/referencelistref\/sorted()","title":"func sorted() -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/referencelistref\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/referencelistref\/sorted(using:)-20cac","title":"func sorted<Comparator>(using: Comparator) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/referencelistref\/sorted(using:)-3yj34","title":"func sorted<S, Comparator>(using: S) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/referencelistref\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/glib\/referencelistref\/split(separator:maxsplits:omittingemptysubsequences:)","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/glib\/referencelistref\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/glib\/referencelistref\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/referencelistref\/suffix(_:)","title":"func suffix(Int) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/referencelistref\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"}],"path":"\/documentation\/glib\/referencelistref\/sequence-implementations","title":"Sequence Implementations","type":"symbol"}],"path":"\/documentation\/glib\/referencelistref","title":"ReferenceListRef","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/referenceslistiterator\/list","title":"var list: UnsafeMutablePointer<GSList>?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/referenceslistiterator\/next()","title":"func next() -> Element?","type":"method"}],"path":"\/documentation\/glib\/referenceslistiterator","title":"ReferenceSListIterator","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/referenceslistref\/init(_:)-14ot4","title":"init!(UnsafePointer<GSList>?)","type":"init"},{"path":"\/documentation\/glib\/referenceslistref\/init(_:)-43hqt","title":"init!(UnsafeMutablePointer<GSList>?)","type":"init"},{"path":"\/documentation\/glib\/referenceslistref\/init(_:)-43x1p","title":"init(UnsafeMutablePointer<GSList>)","type":"init"},{"path":"\/documentation\/glib\/referenceslistref\/init(_:)-4ik8n","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/referenceslistref\/init(_:)-8e1dg","title":"init(UnsafePointer<GSList>)","type":"init"},{"path":"\/documentation\/glib\/referenceslistref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/referenceslistref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/referenceslistref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/referenceslistref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/referenceslistref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/referenceslistref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/referenceslistref\/ptr","title":"var ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/referenceslistref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/referenceslistref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/referenceslistref\/element","title":"var element: Self.Element!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/referenceslistref\/makeiterator()","title":"func makeIterator() -> ReferenceSListIterator<Self.Element>","type":"method"}],"path":"\/documentation\/glib\/referenceslistref\/referenceslistprotocol-implementations","title":"ReferenceSListProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/referenceslistref\/data","title":"var data: gpointer?","type":"property"},{"path":"\/documentation\/glib\/referenceslistref\/next","title":"var next: SListRef!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/referenceslistref\/append(data:)","title":"func append(data: gpointer?) -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/referenceslistref\/concat(list2:)","title":"func concat<SListT>(list2: SListT) -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/referenceslistref\/copy()","title":"func copy() -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/referenceslistref\/copydeep(func:userdata:)","title":"func copyDeep(func: GCopyFunc?, userData: gpointer?) -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/referenceslistref\/delete(link:)","title":"func delete<SListT>(link: SListT) -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/referenceslistref\/find(data:)","title":"func find(data: gconstpointer?) -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/referenceslistref\/findcustom(data:func:)","title":"func findCustom(data: gconstpointer?, func: GCompareFunc?) -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/referenceslistref\/foreach(func:userdata:)","title":"func foreach(func: GFunc?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/referenceslistref\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/glib\/referenceslistref\/free1()","title":"func free1()","type":"method"},{"path":"\/documentation\/glib\/referenceslistref\/freefull(freefunc:)","title":"func freeFull(freeFunc: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/glib\/referenceslistref\/index(data:)","title":"func index(data: gconstpointer?) -> Int","type":"method"},{"path":"\/documentation\/glib\/referenceslistref\/insert(data:position:)","title":"func insert(data: gpointer?, position: Int) -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/referenceslistref\/insertbefore(sibling:data:)","title":"func insertBefore<SListT>(sibling: SListT, data: gpointer?) -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/referenceslistref\/insertsorted(data:func:)","title":"func insertSorted(data: gpointer?, func: GCompareFunc?) -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/referenceslistref\/insertsortedwith(data:func:userdata:)","title":"func insertSortedWith(data: gpointer?, func: GCompareDataFunc?, userData: gpointer?) -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/referenceslistref\/last()","title":"func last() -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/referenceslistref\/length()","title":"func length() -> Int","type":"method"},{"path":"\/documentation\/glib\/referenceslistref\/nth(n:)","title":"func nth(n: Int) -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/referenceslistref\/nthdata(n:)","title":"func nthData(n: Int) -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/referenceslistref\/position(llink:)","title":"func position<SListT>(llink: SListT) -> Int","type":"method"},{"path":"\/documentation\/glib\/referenceslistref\/prepend(data:)","title":"func prepend(data: gpointer?) -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/referenceslistref\/remove(data:)","title":"func remove(data: gconstpointer?) -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/referenceslistref\/remove(link:)","title":"func remove<SListT>(link: SListT) -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/referenceslistref\/removeall(data:)","title":"func removeAll(data: gconstpointer?) -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/referenceslistref\/reverse()","title":"func reverse() -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/referenceslistref\/sort(comparefunc:)","title":"func sort(compareFunc: GCompareFunc?) -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/referenceslistref\/sortwithdata(comparefunc:userdata:)","title":"func sortWithData(compareFunc: GCompareDataFunc?, userData: gpointer?) -> SListRef!","type":"method"}],"path":"\/documentation\/glib\/referenceslistref\/slistprotocol-implementations","title":"SListProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/referenceslistref\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"path":"\/documentation\/glib\/referenceslistref\/publisher","title":"var publisher: Publishers.Sequence<Self, Never>","type":"property"},{"path":"\/documentation\/glib\/referenceslistref\/underestimatedcount","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/referenceslistref\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/referenceslistref\/compactmap(_:)","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/glib\/referenceslistref\/compare(_:_:)","title":"func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult","type":"method"},{"path":"\/documentation\/glib\/referenceslistref\/contains(_:)","title":"func contains(Self.Element) -> Bool","type":"method"},{"path":"\/documentation\/glib\/referenceslistref\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/referenceslistref\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> DropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/referenceslistref\/dropfirst(_:)","title":"func dropFirst(Int) -> DropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/referenceslistref\/droplast(_:)","title":"func dropLast(Int) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/referenceslistref\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/glib\/referenceslistref\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/referenceslistref\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/referenceslistref\/filter(_:)-67tbv","title":"func filter(Predicate<Self.Element>) throws -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/referenceslistref\/filter(_:)-g4hw","title":"func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/referenceslistref\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/referenceslistref\/flatmap(_:)-1pw5e","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/glib\/referenceslistref\/flatmap(_:)-2hbe3","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/glib\/referenceslistref\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/glib\/referenceslistref\/formatted()","title":"func formatted() -> String","type":"method"},{"path":"\/documentation\/glib\/referenceslistref\/formatted(_:)","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/glib\/referenceslistref\/joined()","title":"func joined() -> FlattenSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/referenceslistref\/joined(separator:)-3ypbo","title":"func joined<Separator>(separator: Separator) -> JoinedSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/referenceslistref\/joined(separator:)-4zgpt","title":"func joined(separator: String) -> String","type":"method"},{"path":"\/documentation\/glib\/referenceslistref\/lexicographicallyprecedes(_:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/glib\/referenceslistref\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/referenceslistref\/map(_:)","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/glib\/referenceslistref\/max()","title":"func max() -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/referenceslistref\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/referenceslistref\/min()","title":"func min() -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/referenceslistref\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/referenceslistref\/prefix(_:)","title":"func prefix(Int) -> PrefixSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/referenceslistref\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/referenceslistref\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/glib\/referenceslistref\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/glib\/referenceslistref\/reversed()","title":"func reversed() -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/referenceslistref\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/referenceslistref\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/referenceslistref\/sorted()","title":"func sorted() -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/referenceslistref\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/referenceslistref\/sorted(using:)-9p06v","title":"func sorted<Comparator>(using: Comparator) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/referenceslistref\/sorted(using:)-z1q","title":"func sorted<S, Comparator>(using: S) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/referenceslistref\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/glib\/referenceslistref\/split(separator:maxsplits:omittingemptysubsequences:)","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/glib\/referenceslistref\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/glib\/referenceslistref\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/referenceslistref\/suffix(_:)","title":"func suffix(Int) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/referenceslistref\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"}],"path":"\/documentation\/glib\/referenceslistref\/sequence-implementations","title":"Sequence Implementations","type":"symbol"}],"path":"\/documentation\/glib\/referenceslistref","title":"ReferenceSListRef","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/referencesequenceiterator\/iterator","title":"var iterator: SequenceIterRef?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/referencesequenceiterator\/next()","title":"func next() -> Element?","type":"method"}],"path":"\/documentation\/glib\/referencesequenceiterator","title":"ReferenceSequenceIterator","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/referencesequenceref\/init(_:)-12op","title":"init(UnsafePointer<GSequence>)","type":"init"},{"path":"\/documentation\/glib\/referencesequenceref\/init(_:)-173i7","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/referencesequenceref\/init(_:)-1dxzu","title":"init!(UnsafeMutablePointer<GSequence>?)","type":"init"},{"path":"\/documentation\/glib\/referencesequenceref\/init(_:)-6yiup","title":"init(UnsafeMutablePointer<GSequence>)","type":"init"},{"path":"\/documentation\/glib\/referencesequenceref\/init(_:)-7tkji","title":"init!(UnsafePointer<GSequence>?)","type":"init"},{"path":"\/documentation\/glib\/referencesequenceref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/referencesequenceref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/referencesequenceref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/referencesequenceref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/referencesequenceref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/referencesequenceref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/referencesequenceref\/ptr","title":"var ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/referencesequenceref\/makeiterator()","title":"func makeIterator() -> ReferenceSequenceIterator<Element>","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/referencesequenceref\/last","title":"var last: Self.Element?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/referencesequenceref\/difference(from:)","title":"func difference<C>(from: C) -> CollectionDifference<Self.Element>","type":"method"},{"path":"\/documentation\/glib\/referencesequenceref\/difference(from:by:)","title":"func difference<C>(from: C, by: (C.Element, Self.Element) -> Bool) -> CollectionDifference<Self.Element>","type":"method"},{"path":"\/documentation\/glib\/referencesequenceref\/distance(from:to:)","title":"func distance(from: Self.Index, to: Self.Index) -> Int","type":"method"},{"path":"\/documentation\/glib\/referencesequenceref\/droplast(_:)","title":"func dropLast(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/referencesequenceref\/firstrange(of:)-5z6mm","title":"func firstRange<C>(of: C) -> Range<Self.Index>?","type":"method"},{"path":"\/documentation\/glib\/referencesequenceref\/formindex(before:)","title":"func formIndex(before: inout Self.Index)","type":"method"},{"path":"\/documentation\/glib\/referencesequenceref\/index(_:offsetby:limitedby:)","title":"func index(Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?","type":"method"},{"path":"\/documentation\/glib\/referencesequenceref\/joined(separator:)-6m5mz","title":"func joined(separator: String) -> String","type":"method"},{"path":"\/documentation\/glib\/referencesequenceref\/last(where:)","title":"func last(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/referencesequenceref\/lastindex(of:)","title":"func lastIndex(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/glib\/referencesequenceref\/lastindex(where:)","title":"func lastIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/glib\/referencesequenceref\/reversed()","title":"func reversed() -> ReversedCollection<Self>","type":"method"},{"path":"\/documentation\/glib\/referencesequenceref\/suffix(_:)","title":"func suffix(Int) -> Self.SubSequence","type":"method"}],"path":"\/documentation\/glib\/referencesequenceref\/bidirectionalcollection-implementations","title":"BidirectionalCollection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/referencesequenceref\/first","title":"var first: Self.Element?","type":"property"},{"path":"\/documentation\/glib\/referencesequenceref\/indices","title":"var indices: DefaultIndices<Self>","type":"property"},{"path":"\/documentation\/glib\/referencesequenceref\/underestimatedcount","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/referencesequenceref\/contains(_:)-78z0y","title":"func contains<C>(C) -> Bool","type":"method"},{"path":"\/documentation\/glib\/referencesequenceref\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/referencesequenceref\/dropfirst(_:)","title":"func dropFirst(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/referencesequenceref\/firstindex(of:)","title":"func firstIndex(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/glib\/referencesequenceref\/firstindex(where:)","title":"func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/glib\/referencesequenceref\/firstrange(of:)-3islg","title":"func firstRange<C>(of: C) -> Range<Self.Index>?","type":"method"},{"path":"\/documentation\/glib\/referencesequenceref\/formindex(_:offsetby:)","title":"func formIndex(inout Self.Index, offsetBy: Int)","type":"method"},{"path":"\/documentation\/glib\/referencesequenceref\/formindex(_:offsetby:limitedby:)","title":"func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool","type":"method"},{"path":"\/documentation\/glib\/referencesequenceref\/formindex(after:)","title":"func formIndex(after: inout Self.Index)","type":"method"},{"path":"\/documentation\/glib\/referencesequenceref\/index(of:)","title":"func index(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/glib\/referencesequenceref\/map(_:)-9an29","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/glib\/referencesequenceref\/prefix(_:)","title":"func prefix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/referencesequenceref\/prefix(through:)","title":"func prefix(through: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/referencesequenceref\/prefix(upto:)","title":"func prefix(upTo: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/referencesequenceref\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/referencesequenceref\/randomelement()","title":"func randomElement() -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/referencesequenceref\/randomelement(using:)","title":"func randomElement<T>(using: inout T) -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/referencesequenceref\/ranges(of:)","title":"func ranges<C>(of: C) -> [Range<Self.Index>]","type":"method"},{"path":"\/documentation\/glib\/referencesequenceref\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/glib\/referencesequenceref\/split(separator:maxsplits:omittingemptysubsequences:)-3cvks","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/glib\/referencesequenceref\/split(separator:maxsplits:omittingemptysubsequences:)-67v3i","title":"func split<C>(separator: C, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/glib\/referencesequenceref\/suffix(from:)","title":"func suffix(from: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/referencesequenceref\/trimmingprefix(_:)","title":"func trimmingPrefix<Prefix>(Prefix) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/referencesequenceref\/trimmingprefix(while:)","title":"func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"}],"path":"\/documentation\/glib\/referencesequenceref\/collection-implementations","title":"Collection Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/referencesequenceref\/partition(by:)-1ztg7","title":"func partition(by: (Self.Element) throws -> Bool) rethrows -> Self.Index","type":"method"},{"path":"\/documentation\/glib\/referencesequenceref\/partition(by:)-3ulhj","title":"func partition(by: (Self.Element) throws -> Bool) rethrows -> Self.Index","type":"method"},{"path":"\/documentation\/glib\/referencesequenceref\/reverse()","title":"func reverse()","type":"method"},{"path":"\/documentation\/glib\/referencesequenceref\/swapat(_:_:)","title":"func swapAt(Self.Index, Self.Index)","type":"method"},{"path":"\/documentation\/glib\/referencesequenceref\/withcontiguousmutablestorageifavailable(_:)","title":"func withContiguousMutableStorageIfAvailable<R>((inout UnsafeMutableBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"}],"path":"\/documentation\/glib\/referencesequenceref\/mutablecollection-implementations","title":"MutableCollection Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/referencesequenceref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/referencesequenceref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/referencesequenceref\/count","title":"var count: Int","type":"property"},{"path":"\/documentation\/glib\/referencesequenceref\/endindex","title":"var endIndex: SequenceIterRef","type":"property"},{"path":"\/documentation\/glib\/referencesequenceref\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/glib\/referencesequenceref\/startindex","title":"var startIndex: SequenceIterRef","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/referencesequenceref\/index(_:offsetby:)","title":"func index(SequenceIterRef, offsetBy: Int) -> SequenceIterRef","type":"method"},{"path":"\/documentation\/glib\/referencesequenceref\/index(after:)","title":"func index(after: SequenceIterRef) -> SequenceIterRef","type":"method"},{"path":"\/documentation\/glib\/referencesequenceref\/index(before:)","title":"func index(before: SequenceIterRef) -> SequenceIterRef","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/glib\/referencesequenceref\/subscript(_:)","title":"subscript(SequenceIterRef) -> Self.Element","type":"subscript"}],"path":"\/documentation\/glib\/referencesequenceref\/referencesequenceprotocol-implementations","title":"ReferenceSequenceProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/referencesequenceref\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"path":"\/documentation\/glib\/referencesequenceref\/publisher","title":"var publisher: Publishers.Sequence<Self, Never>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/referencesequenceref\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/referencesequenceref\/compactmap(_:)","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/glib\/referencesequenceref\/compare(_:_:)","title":"func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult","type":"method"},{"path":"\/documentation\/glib\/referencesequenceref\/contains(_:)-1bh8v","title":"func contains(Self.Element) -> Bool","type":"method"},{"path":"\/documentation\/glib\/referencesequenceref\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/referencesequenceref\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/glib\/referencesequenceref\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/referencesequenceref\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/referencesequenceref\/filter(_:)-3rzty","title":"func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/referencesequenceref\/filter(_:)-5jf30","title":"func filter(Predicate<Self.Element>) throws -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/referencesequenceref\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/referencesequenceref\/flatmap(_:)-33df0","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/glib\/referencesequenceref\/flatmap(_:)-8nnsc","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/glib\/referencesequenceref\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/glib\/referencesequenceref\/formatted()","title":"func formatted() -> String","type":"method"},{"path":"\/documentation\/glib\/referencesequenceref\/formatted(_:)","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/glib\/referencesequenceref\/joined()","title":"func joined() -> FlattenSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/referencesequenceref\/joined(separator:)-1qb6g","title":"func joined(separator: String) -> String","type":"method"},{"path":"\/documentation\/glib\/referencesequenceref\/joined(separator:)-96010","title":"func joined<Separator>(separator: Separator) -> JoinedSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/referencesequenceref\/lexicographicallyprecedes(_:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/glib\/referencesequenceref\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/referencesequenceref\/map(_:)-43p9q","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/glib\/referencesequenceref\/max()","title":"func max() -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/referencesequenceref\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/referencesequenceref\/min()","title":"func min() -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/referencesequenceref\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/referencesequenceref\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/glib\/referencesequenceref\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/glib\/referencesequenceref\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/referencesequenceref\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/referencesequenceref\/sorted()","title":"func sorted() -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/referencesequenceref\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/referencesequenceref\/sorted(using:)-2zkk9","title":"func sorted<Comparator>(using: Comparator) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/referencesequenceref\/sorted(using:)-645i3","title":"func sorted<S, Comparator>(using: S) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/referencesequenceref\/split(separator:maxsplits:omittingemptysubsequences:)-7w7qe","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/glib\/referencesequenceref\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/glib\/referencesequenceref\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/referencesequenceref\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"}],"path":"\/documentation\/glib\/referencesequenceref\/sequence-implementations","title":"Sequence Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/referencesequenceref\/beginiter","title":"var beginIter: SequenceIterRef!","type":"property"},{"path":"\/documentation\/glib\/referencesequenceref\/enditer","title":"var endIter: SequenceIterRef!","type":"property"},{"path":"\/documentation\/glib\/referencesequenceref\/length","title":"var length: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/referencesequenceref\/append(data:)","title":"func append(data: gpointer?) -> SequenceIterRef!","type":"method"},{"path":"\/documentation\/glib\/referencesequenceref\/foreach(func:userdata:)","title":"func foreach(func: GFunc?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/referencesequenceref\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/glib\/referencesequenceref\/getbeginiter()","title":"func getBeginIter() -> SequenceIterRef!","type":"method"},{"path":"\/documentation\/glib\/referencesequenceref\/getenditer()","title":"func getEndIter() -> SequenceIterRef!","type":"method"},{"path":"\/documentation\/glib\/referencesequenceref\/getiterat(pos:)","title":"func getIterAt(pos: Int) -> SequenceIterRef!","type":"method"},{"path":"\/documentation\/glib\/referencesequenceref\/getlength()","title":"func getLength() -> Int","type":"method"},{"path":"\/documentation\/glib\/referencesequenceref\/insertsorted(data:cmpfunc:cmpdata:)","title":"func insertSorted(data: gpointer?, cmpFunc: GCompareDataFunc?, cmpData: gpointer?) -> SequenceIterRef!","type":"method"},{"path":"\/documentation\/glib\/referencesequenceref\/insertsortediter(data:itercmp:cmpdata:)","title":"func insertSortedIter(data: gpointer?, iterCmp: GSequenceIterCompareFunc?, cmpData: gpointer?) -> SequenceIterRef!","type":"method"},{"path":"\/documentation\/glib\/referencesequenceref\/lookup(data:cmpfunc:cmpdata:)","title":"func lookup(data: gpointer?, cmpFunc: GCompareDataFunc?, cmpData: gpointer?) -> SequenceIterRef!","type":"method"},{"path":"\/documentation\/glib\/referencesequenceref\/lookupiter(data:itercmp:cmpdata:)","title":"func lookupIter(data: gpointer?, iterCmp: GSequenceIterCompareFunc?, cmpData: gpointer?) -> SequenceIterRef!","type":"method"},{"path":"\/documentation\/glib\/referencesequenceref\/prepend(data:)","title":"func prepend(data: gpointer?) -> SequenceIterRef!","type":"method"},{"path":"\/documentation\/glib\/referencesequenceref\/search(data:cmpfunc:cmpdata:)","title":"func search(data: gpointer?, cmpFunc: GCompareDataFunc?, cmpData: gpointer?) -> SequenceIterRef!","type":"method"},{"path":"\/documentation\/glib\/referencesequenceref\/searchiter(data:itercmp:cmpdata:)","title":"func searchIter(data: gpointer?, iterCmp: GSequenceIterCompareFunc?, cmpData: gpointer?) -> SequenceIterRef!","type":"method"},{"path":"\/documentation\/glib\/referencesequenceref\/sort(cmpfunc:cmpdata:)","title":"func sort(cmpFunc: GCompareDataFunc?, cmpData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/referencesequenceref\/sortiter(cmpfunc:cmpdata:)","title":"func sortIter(cmpFunc: GSequenceIterCompareFunc?, cmpData: gpointer?)","type":"method"}],"path":"\/documentation\/glib\/referencesequenceref\/sequenceprotocol-implementations","title":"SequenceProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/referencesequenceref","title":"ReferenceSequenceRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/regexcompileflags\/init(_:)-3bkk4","title":"init<I>(I)","type":"init"},{"path":"\/documentation\/glib\/regexcompileflags\/init(_:)-iemw","title":"init(GRegexCompileFlags)","type":"init"},{"path":"\/documentation\/glib\/regexcompileflags\/init(rawvalue:)","title":"init(rawValue: UInt32)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/regexcompileflags\/int","title":"var int: gint","type":"property"},{"path":"\/documentation\/glib\/regexcompileflags\/intvalue","title":"var intValue: Int","type":"property"},{"path":"\/documentation\/glib\/regexcompileflags\/rawvalue","title":"var rawValue: UInt32","type":"property"},{"path":"\/documentation\/glib\/regexcompileflags\/value","title":"var value: GRegexCompileFlags","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/regexcompileflags\/anchored","title":"static let anchored: RegexCompileFlags","type":"property"},{"path":"\/documentation\/glib\/regexcompileflags\/bsranycrlf","title":"static let bsrAnycrlf: RegexCompileFlags","type":"property"},{"path":"\/documentation\/glib\/regexcompileflags\/caseless","title":"static let caseless: RegexCompileFlags","type":"property"},{"path":"\/documentation\/glib\/regexcompileflags\/default","title":"static let `default`: RegexCompileFlags","type":"property"},{"path":"\/documentation\/glib\/regexcompileflags\/dollarendonly","title":"static let dollarEndonly: RegexCompileFlags","type":"property"},{"path":"\/documentation\/glib\/regexcompileflags\/dotall","title":"static let dotall: RegexCompileFlags","type":"property"},{"path":"\/documentation\/glib\/regexcompileflags\/dupnames","title":"static let dupnames: RegexCompileFlags","type":"property"},{"path":"\/documentation\/glib\/regexcompileflags\/extended","title":"static let extended: RegexCompileFlags","type":"property"},{"path":"\/documentation\/glib\/regexcompileflags\/firstline","title":"static let firstline: RegexCompileFlags","type":"property"},{"path":"\/documentation\/glib\/regexcompileflags\/javascriptcompat","title":"static let javascriptCompat: RegexCompileFlags","type":"property"},{"path":"\/documentation\/glib\/regexcompileflags\/multiline","title":"static let multiline: RegexCompileFlags","type":"property"},{"path":"\/documentation\/glib\/regexcompileflags\/newlineanycrlf","title":"static let newlineAnycrlf: RegexCompileFlags","type":"property"},{"path":"\/documentation\/glib\/regexcompileflags\/newlinecr","title":"static let newlineCr: RegexCompileFlags","type":"property"},{"path":"\/documentation\/glib\/regexcompileflags\/newlinecrlf","title":"static let newlineCrlf: RegexCompileFlags","type":"property"},{"path":"\/documentation\/glib\/regexcompileflags\/newlinelf","title":"static let newlineLf: RegexCompileFlags","type":"property"},{"path":"\/documentation\/glib\/regexcompileflags\/noautocapture","title":"static let noAutoCapture: RegexCompileFlags","type":"property"},{"path":"\/documentation\/glib\/regexcompileflags\/optimize","title":"static let optimize: RegexCompileFlags","type":"property"},{"path":"\/documentation\/glib\/regexcompileflags\/raw","title":"static let raw: RegexCompileFlags","type":"property"},{"path":"\/documentation\/glib\/regexcompileflags\/ungreedy","title":"static let ungreedy: RegexCompileFlags","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/glib\/regexcompileflags\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/glib\/regexcompileflags\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/regexcompileflags\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/regexcompileflags\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/regexcompileflags\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/glib\/regexcompileflags\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/glib\/regexcompileflags\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/glib\/regexcompileflags\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/glib\/regexcompileflags\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/glib\/regexcompileflags\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/regexcompileflags\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/glib\/regexcompileflags\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/glib\/regexcompileflags\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/glib\/regexcompileflags\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/regexcompileflags\/init(_:)-5impp","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/glib\/regexcompileflags\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/regexcompileflags\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/regexcompileflags\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/regexcompileflags\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/regexcompileflags\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/regexcompileflags\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/regexcompileflags\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/regexcompileflags\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/glib\/regexcompileflags\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/glib\/regexcompileflags\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/glib\/regexcompileflags","title":"RegexCompileFlags","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/regexmatchflags\/init(_:)-2fms3","title":"init(GRegexMatchFlags)","type":"init"},{"path":"\/documentation\/glib\/regexmatchflags\/init(_:)-6l205","title":"init<I>(I)","type":"init"},{"path":"\/documentation\/glib\/regexmatchflags\/init(rawvalue:)","title":"init(rawValue: UInt32)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/regexmatchflags\/int","title":"var int: gint","type":"property"},{"path":"\/documentation\/glib\/regexmatchflags\/intvalue","title":"var intValue: Int","type":"property"},{"path":"\/documentation\/glib\/regexmatchflags\/rawvalue","title":"var rawValue: UInt32","type":"property"},{"path":"\/documentation\/glib\/regexmatchflags\/value","title":"var value: GRegexMatchFlags","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/regexmatchflags\/anchored","title":"static let anchored: RegexMatchFlags","type":"property"},{"path":"\/documentation\/glib\/regexmatchflags\/bsrany","title":"static let bsrAny: RegexMatchFlags","type":"property"},{"path":"\/documentation\/glib\/regexmatchflags\/bsranycrlf","title":"static let bsrAnycrlf: RegexMatchFlags","type":"property"},{"path":"\/documentation\/glib\/regexmatchflags\/default","title":"static let `default`: RegexMatchFlags","type":"property"},{"path":"\/documentation\/glib\/regexmatchflags\/newlineany","title":"static let newlineAny: RegexMatchFlags","type":"property"},{"path":"\/documentation\/glib\/regexmatchflags\/newlineanycrlf","title":"static let newlineAnycrlf: RegexMatchFlags","type":"property"},{"path":"\/documentation\/glib\/regexmatchflags\/newlinecr","title":"static let newlineCr: RegexMatchFlags","type":"property"},{"path":"\/documentation\/glib\/regexmatchflags\/newlinecrlf","title":"static let newlineCrlf: RegexMatchFlags","type":"property"},{"path":"\/documentation\/glib\/regexmatchflags\/newlinelf","title":"static let newlineLf: RegexMatchFlags","type":"property"},{"path":"\/documentation\/glib\/regexmatchflags\/notbol","title":"static let notbol: RegexMatchFlags","type":"property"},{"path":"\/documentation\/glib\/regexmatchflags\/notempty","title":"static let notempty: RegexMatchFlags","type":"property"},{"path":"\/documentation\/glib\/regexmatchflags\/notemptyatstart","title":"static let notemptyAtstart: RegexMatchFlags","type":"property"},{"path":"\/documentation\/glib\/regexmatchflags\/noteol","title":"static let noteol: RegexMatchFlags","type":"property"},{"path":"\/documentation\/glib\/regexmatchflags\/partial","title":"static let partial: RegexMatchFlags","type":"property"},{"path":"\/documentation\/glib\/regexmatchflags\/partialhard","title":"static let partialHard: RegexMatchFlags","type":"property"},{"path":"\/documentation\/glib\/regexmatchflags\/partialsoft","title":"static let partialSoft: RegexMatchFlags","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/glib\/regexmatchflags\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/glib\/regexmatchflags\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/regexmatchflags\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/regexmatchflags\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/regexmatchflags\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/glib\/regexmatchflags\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/glib\/regexmatchflags\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/glib\/regexmatchflags\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/glib\/regexmatchflags\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/glib\/regexmatchflags\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/regexmatchflags\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/glib\/regexmatchflags\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/glib\/regexmatchflags\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/glib\/regexmatchflags\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/regexmatchflags\/init(_:)-124uq","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/glib\/regexmatchflags\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/regexmatchflags\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/regexmatchflags\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/regexmatchflags\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/regexmatchflags\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/regexmatchflags\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/regexmatchflags\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/regexmatchflags\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/glib\/regexmatchflags\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/glib\/regexmatchflags\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/glib\/regexmatchflags","title":"RegexMatchFlags","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/regexref\/init(_:)-1hgnb","title":"init!(UnsafePointer<GRegex>?)","type":"init"},{"path":"\/documentation\/glib\/regexref\/init(_:)-1vppv","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/regexref\/init(_:)-2yoe7","title":"init(UnsafeMutablePointer<GRegex>)","type":"init"},{"path":"\/documentation\/glib\/regexref\/init(_:)-51y4h","title":"init!(UnsafeMutablePointer<GRegex>?)","type":"init"},{"path":"\/documentation\/glib\/regexref\/init(_:)-7dujh","title":"init(UnsafePointer<GRegex>)","type":"init"},{"path":"\/documentation\/glib\/regexref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/regexref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/regexref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/regexref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/regexref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/regexref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/regexref\/init(pattern:compileoptions:matchoptions:)","title":"init(pattern: UnsafePointer<gchar>!, compileOptions: RegexCompileFlags, matchOptions: RegexMatchFlags) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/regexref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/regexref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/regexref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/regexref\/capturecount","title":"var captureCount: Int","type":"property"},{"path":"\/documentation\/glib\/regexref\/compileflags","title":"var compileFlags: RegexCompileFlags","type":"property"},{"path":"\/documentation\/glib\/regexref\/hascrorlf","title":"var hasCrOrLf: Bool","type":"property"},{"path":"\/documentation\/glib\/regexref\/matchflags","title":"var matchFlags: RegexMatchFlags","type":"property"},{"path":"\/documentation\/glib\/regexref\/maxbackref","title":"var maxBackref: Int","type":"property"},{"path":"\/documentation\/glib\/regexref\/maxlookbehind","title":"var maxLookbehind: Int","type":"property"},{"path":"\/documentation\/glib\/regexref\/pattern","title":"var pattern: String!","type":"property"},{"path":"\/documentation\/glib\/regexref\/regex_ptr","title":"var regex_ptr: UnsafeMutablePointer<GRegex>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/regexref\/getcapturecount()","title":"func getCaptureCount() -> Int","type":"method"},{"path":"\/documentation\/glib\/regexref\/getcompileflags()","title":"func getCompileFlags() -> RegexCompileFlags","type":"method"},{"path":"\/documentation\/glib\/regexref\/gethascrorlf()","title":"func getHasCrOrLf() -> Bool","type":"method"},{"path":"\/documentation\/glib\/regexref\/getmatchflags()","title":"func getMatchFlags() -> RegexMatchFlags","type":"method"},{"path":"\/documentation\/glib\/regexref\/getmaxbackref()","title":"func getMaxBackref() -> Int","type":"method"},{"path":"\/documentation\/glib\/regexref\/getmaxlookbehind()","title":"func getMaxLookbehind() -> Int","type":"method"},{"path":"\/documentation\/glib\/regexref\/getpattern()","title":"func getPattern() -> String!","type":"method"},{"path":"\/documentation\/glib\/regexref\/getstringnumber(name:)","title":"func getStringNumber(name: UnsafePointer<gchar>!) -> Int","type":"method"},{"path":"\/documentation\/glib\/regexref\/match(string:matchoptions:matchinfo:)","title":"func match(string: UnsafePointer<gchar>!, matchOptions: RegexMatchFlags, matchInfo: UnsafeMutablePointer<UnsafeMutablePointer<GMatchInfo>?>!) -> Bool","type":"method"},{"path":"\/documentation\/glib\/regexref\/matchall(string:matchoptions:matchinfo:)","title":"func matchAll(string: UnsafePointer<gchar>!, matchOptions: RegexMatchFlags, matchInfo: UnsafeMutablePointer<UnsafeMutablePointer<GMatchInfo>?>!) -> Bool","type":"method"},{"path":"\/documentation\/glib\/regexref\/matchallfull(string:stringlen:startposition:matchoptions:matchinfo:)","title":"func matchAllFull(string: UnsafePointer<gchar>!, stringLen: gssize, startPosition: Int, matchOptions: RegexMatchFlags, matchInfo: UnsafeMutablePointer<UnsafeMutablePointer<GMatchInfo>?>!) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/regexref\/matchfull(string:stringlen:startposition:matchoptions:matchinfo:)","title":"func matchFull(string: UnsafePointer<gchar>!, stringLen: gssize, startPosition: Int, matchOptions: RegexMatchFlags, matchInfo: UnsafeMutablePointer<UnsafeMutablePointer<GMatchInfo>?>!) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/regexref\/ref()","title":"func ref() -> RegexRef!","type":"method"},{"path":"\/documentation\/glib\/regexref\/replace(string:stringlen:startposition:replacement:matchoptions:)","title":"func replace(string: UnsafePointer<gchar>!, stringLen: gssize, startPosition: Int, replacement: UnsafePointer<gchar>!, matchOptions: RegexMatchFlags) throws -> String!","type":"method"},{"path":"\/documentation\/glib\/regexref\/replaceeval(string:stringlen:startposition:matchoptions:eval:userdata:)","title":"func replaceEval(string: UnsafePointer<gchar>!, stringLen: gssize, startPosition: Int, matchOptions: RegexMatchFlags, eval: GRegexEvalCallback?, userData: gpointer?) throws -> String!","type":"method"},{"path":"\/documentation\/glib\/regexref\/replaceliteral(string:stringlen:startposition:replacement:matchoptions:)","title":"func replaceLiteral(string: UnsafePointer<gchar>!, stringLen: gssize, startPosition: Int, replacement: UnsafePointer<gchar>!, matchOptions: RegexMatchFlags) throws -> String!","type":"method"},{"path":"\/documentation\/glib\/regexref\/split(string:matchoptions:)","title":"func split(string: UnsafePointer<gchar>!, matchOptions: RegexMatchFlags) -> UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!","type":"method"},{"path":"\/documentation\/glib\/regexref\/splitfull(string:stringlen:startposition:matchoptions:maxtokens:)","title":"func splitFull(string: UnsafePointer<gchar>!, stringLen: gssize, startPosition: Int, matchOptions: RegexMatchFlags, maxTokens: Int) throws -> UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!","type":"method"},{"path":"\/documentation\/glib\/regexref\/unref()","title":"func unref()","type":"method"}],"path":"\/documentation\/glib\/regexref\/regexprotocol-implementations","title":"RegexProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/regexref","title":"RegexRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/relationref\/init(_:)-2jk2d","title":"init!(UnsafeMutablePointer<GRelation>?)","type":"init"},{"path":"\/documentation\/glib\/relationref\/init(_:)-5ljad","title":"init(UnsafeMutablePointer<GRelation>)","type":"init"},{"path":"\/documentation\/glib\/relationref\/init(_:)-6gu2d","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/relationref\/init(_:)-9ej7s","title":"init(UnsafePointer<GRelation>)","type":"init"},{"path":"\/documentation\/glib\/relationref\/init(_:)-zu22","title":"init!(UnsafePointer<GRelation>?)","type":"init"},{"path":"\/documentation\/glib\/relationref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/relationref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/relationref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/relationref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/relationref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/relationref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/relationref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/relationref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/relationref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/relationref\/count(key:field:)","title":"func count(key: gconstpointer?, field: Int) -> Int","type":"method"},{"path":"\/documentation\/glib\/relationref\/delete(key:field:)","title":"func delete(key: gconstpointer?, field: Int) -> Int","type":"method"},{"path":"\/documentation\/glib\/relationref\/destroy()","title":"func destroy()","type":"method"},{"path":"\/documentation\/glib\/relationref\/index(field:hashfunc:keyequalfunc:)","title":"func index(field: Int, hashFunc: GHashFunc?, keyEqualFunc: GEqualFunc?)","type":"method"},{"path":"\/documentation\/glib\/relationref\/print()","title":"func print()","type":"method"},{"path":"\/documentation\/glib\/relationref\/select(key:field:)","title":"func select(key: gconstpointer?, field: Int) -> TuplesRef!","type":"method"}],"path":"\/documentation\/glib\/relationref\/relationprotocol-implementations","title":"RelationProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/relationref","title":"RelationRef","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/slistiterator\/list","title":"var list: UnsafeMutablePointer<GSList>?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/slistiterator\/next()","title":"func next() -> Element?","type":"method"}],"path":"\/documentation\/glib\/slistiterator","title":"SListIterator","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/slistref\/init(_:)-4739h","title":"init!(UnsafeMutablePointer<GSList>?)","type":"init"},{"path":"\/documentation\/glib\/slistref\/init(_:)-55al2","title":"init(UnsafeMutablePointer<GSList>)","type":"init"},{"path":"\/documentation\/glib\/slistref\/init(_:)-5s07r","title":"init(UnsafePointer<GSList>)","type":"init"},{"path":"\/documentation\/glib\/slistref\/init(_:)-6ixsw","title":"init!(UnsafePointer<GSList>?)","type":"init"},{"path":"\/documentation\/glib\/slistref\/init(_:)-6j4xh","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/slistref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/slistref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/slistref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/slistref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/slistref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/slistref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/slistref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/slistref\/alloc()","title":"static func alloc() -> SListRef!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/slistref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/slistref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/slistref\/data","title":"var data: gpointer?","type":"property"},{"path":"\/documentation\/glib\/slistref\/next","title":"var next: SListRef!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/slistref\/append(data:)","title":"func append(data: gpointer?) -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/slistref\/concat(list2:)","title":"func concat<SListT>(list2: SListT) -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/slistref\/copy()","title":"func copy() -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/slistref\/copydeep(func:userdata:)","title":"func copyDeep(func: GCopyFunc?, userData: gpointer?) -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/slistref\/delete(link:)","title":"func delete<SListT>(link: SListT) -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/slistref\/find(data:)","title":"func find(data: gconstpointer?) -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/slistref\/findcustom(data:func:)","title":"func findCustom(data: gconstpointer?, func: GCompareFunc?) -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/slistref\/foreach(func:userdata:)","title":"func foreach(func: GFunc?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/slistref\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/glib\/slistref\/free1()","title":"func free1()","type":"method"},{"path":"\/documentation\/glib\/slistref\/freefull(freefunc:)","title":"func freeFull(freeFunc: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/glib\/slistref\/index(data:)","title":"func index(data: gconstpointer?) -> Int","type":"method"},{"path":"\/documentation\/glib\/slistref\/insert(data:position:)","title":"func insert(data: gpointer?, position: Int) -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/slistref\/insertbefore(sibling:data:)","title":"func insertBefore<SListT>(sibling: SListT, data: gpointer?) -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/slistref\/insertsorted(data:func:)","title":"func insertSorted(data: gpointer?, func: GCompareFunc?) -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/slistref\/insertsortedwith(data:func:userdata:)","title":"func insertSortedWith(data: gpointer?, func: GCompareDataFunc?, userData: gpointer?) -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/slistref\/last()","title":"func last() -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/slistref\/length()","title":"func length() -> Int","type":"method"},{"path":"\/documentation\/glib\/slistref\/nth(n:)","title":"func nth(n: Int) -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/slistref\/nthdata(n:)","title":"func nthData(n: Int) -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/slistref\/position(llink:)","title":"func position<SListT>(llink: SListT) -> Int","type":"method"},{"path":"\/documentation\/glib\/slistref\/prepend(data:)","title":"func prepend(data: gpointer?) -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/slistref\/remove(data:)","title":"func remove(data: gconstpointer?) -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/slistref\/remove(link:)","title":"func remove<SListT>(link: SListT) -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/slistref\/removeall(data:)","title":"func removeAll(data: gconstpointer?) -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/slistref\/reverse()","title":"func reverse() -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/slistref\/sort(comparefunc:)","title":"func sort(compareFunc: GCompareFunc?) -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/slistref\/sortwithdata(comparefunc:userdata:)","title":"func sortWithData(compareFunc: GCompareDataFunc?, userData: gpointer?) -> SListRef!","type":"method"}],"path":"\/documentation\/glib\/slistref\/slistprotocol-implementations","title":"SListProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/slistref","title":"SListRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/scannerconfigref\/init(_:)-1vezz","title":"init!(UnsafePointer<GScannerConfig>?)","type":"init"},{"path":"\/documentation\/glib\/scannerconfigref\/init(_:)-60djo","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/scannerconfigref\/init(_:)-60qpu","title":"init(UnsafePointer<GScannerConfig>)","type":"init"},{"path":"\/documentation\/glib\/scannerconfigref\/init(_:)-7vcck","title":"init(UnsafeMutablePointer<GScannerConfig>)","type":"init"},{"path":"\/documentation\/glib\/scannerconfigref\/init(_:)-7wong","title":"init!(UnsafeMutablePointer<GScannerConfig>?)","type":"init"},{"path":"\/documentation\/glib\/scannerconfigref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/scannerconfigref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/scannerconfigref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/scannerconfigref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/scannerconfigref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/scannerconfigref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/scannerconfigref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/scannerconfigref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/scannerconfigref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/scannerconfigref\/casesensitive","title":"var caseSensitive: guint","type":"property"},{"path":"\/documentation\/glib\/scannerconfigref\/char2token","title":"var char2Token: guint","type":"property"},{"path":"\/documentation\/glib\/scannerconfigref\/cpaircommentsingle","title":"var cpairCommentSingle: UnsafeMutablePointer<gchar>!","type":"property"},{"path":"\/documentation\/glib\/scannerconfigref\/csetidentifierfirst","title":"var csetIDentifierFirst: UnsafeMutablePointer<gchar>!","type":"property"},{"path":"\/documentation\/glib\/scannerconfigref\/csetidentifiernth","title":"var csetIDentifierNth: UnsafeMutablePointer<gchar>!","type":"property"},{"path":"\/documentation\/glib\/scannerconfigref\/csetskipcharacters","title":"var csetSkipCharacters: UnsafeMutablePointer<gchar>!","type":"property"},{"path":"\/documentation\/glib\/scannerconfigref\/identifier2string","title":"var identifier2String: guint","type":"property"},{"path":"\/documentation\/glib\/scannerconfigref\/int2float","title":"var int2Float: guint","type":"property"},{"path":"\/documentation\/glib\/scannerconfigref\/numbers2int","title":"var numbers2Int: guint","type":"property"},{"path":"\/documentation\/glib\/scannerconfigref\/scanbinary","title":"var scanBinary: guint","type":"property"},{"path":"\/documentation\/glib\/scannerconfigref\/scancommentmulti","title":"var scanCommentMulti: guint","type":"property"},{"path":"\/documentation\/glib\/scannerconfigref\/scanfloat","title":"var scanFloat: guint","type":"property"},{"path":"\/documentation\/glib\/scannerconfigref\/scanhex","title":"var scanHex: guint","type":"property"},{"path":"\/documentation\/glib\/scannerconfigref\/scanhexdollar","title":"var scanHexDollar: guint","type":"property"},{"path":"\/documentation\/glib\/scannerconfigref\/scanidentifier","title":"var scanIDentifier: guint","type":"property"},{"path":"\/documentation\/glib\/scannerconfigref\/scanidentifier1char","title":"var scanIDentifier1char: guint","type":"property"},{"path":"\/documentation\/glib\/scannerconfigref\/scanidentifiernull","title":"var scanIDentifierNULL: guint","type":"property"},{"path":"\/documentation\/glib\/scannerconfigref\/scanoctal","title":"var scanOctal: guint","type":"property"},{"path":"\/documentation\/glib\/scannerconfigref\/scanstringdq","title":"var scanStringDq: guint","type":"property"},{"path":"\/documentation\/glib\/scannerconfigref\/scanstringsq","title":"var scanStringSq: guint","type":"property"},{"path":"\/documentation\/glib\/scannerconfigref\/scansymbols","title":"var scanSymbols: guint","type":"property"},{"path":"\/documentation\/glib\/scannerconfigref\/scope0fallback","title":"var scope0Fallback: guint","type":"property"},{"path":"\/documentation\/glib\/scannerconfigref\/skipcommentmulti","title":"var skipCommentMulti: guint","type":"property"},{"path":"\/documentation\/glib\/scannerconfigref\/skipcommentsingle","title":"var skipCommentSingle: guint","type":"property"},{"path":"\/documentation\/glib\/scannerconfigref\/storeint64","title":"var storeInt64: guint","type":"property"},{"path":"\/documentation\/glib\/scannerconfigref\/symbol2token","title":"var symbol2Token: guint","type":"property"}],"path":"\/documentation\/glib\/scannerconfigref\/scannerconfigprotocol-implementations","title":"ScannerConfigProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/scannerconfigref","title":"ScannerConfigRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/scannerref\/init(_:)-1rv2b","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/scannerref\/init(_:)-3zp13","title":"init(UnsafeMutablePointer<GScanner>)","type":"init"},{"path":"\/documentation\/glib\/scannerref\/init(_:)-5uk5j","title":"init!(UnsafeMutablePointer<GScanner>?)","type":"init"},{"path":"\/documentation\/glib\/scannerref\/init(_:)-72kko","title":"init(UnsafePointer<GScanner>)","type":"init"},{"path":"\/documentation\/glib\/scannerref\/init(_:)-9erkx","title":"init!(UnsafePointer<GScanner>?)","type":"init"},{"path":"\/documentation\/glib\/scannerref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/scannerref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/scannerref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/scannerref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/scannerref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/scannerref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/scannerref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/scannerref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/scannerref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/scannerref\/config","title":"var config: ScannerConfigRef!","type":"property"},{"path":"\/documentation\/glib\/scannerref\/inputname","title":"var inputName: UnsafePointer<gchar>!","type":"property"},{"path":"\/documentation\/glib\/scannerref\/line","title":"var line: guint","type":"property"},{"path":"\/documentation\/glib\/scannerref\/maxparseerrors","title":"var maxParseErrors: guint","type":"property"},{"path":"\/documentation\/glib\/scannerref\/msghandler","title":"var msgHandler: GScannerMsgFunc!","type":"property"},{"path":"\/documentation\/glib\/scannerref\/nextline","title":"var nextLine: guint","type":"property"},{"path":"\/documentation\/glib\/scannerref\/nextposition","title":"var nextPosition: guint","type":"property"},{"path":"\/documentation\/glib\/scannerref\/nexttoken","title":"var nextToken: GTokenType","type":"property"},{"path":"\/documentation\/glib\/scannerref\/nextvalue","title":"var nextValue: GTokenValue","type":"property"},{"path":"\/documentation\/glib\/scannerref\/parseerrors","title":"var parseErrors: guint","type":"property"},{"path":"\/documentation\/glib\/scannerref\/position","title":"var position: guint","type":"property"},{"path":"\/documentation\/glib\/scannerref\/qdata","title":"var qdata: DataRef!","type":"property"},{"path":"\/documentation\/glib\/scannerref\/token","title":"var token: GTokenType","type":"property"},{"path":"\/documentation\/glib\/scannerref\/userdata","title":"var userData: gpointer?","type":"property"},{"path":"\/documentation\/glib\/scannerref\/value","title":"var value: GTokenValue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/scannerref\/curline()","title":"func curLine() -> Int","type":"method"},{"path":"\/documentation\/glib\/scannerref\/curposition()","title":"func curPosition() -> Int","type":"method"},{"path":"\/documentation\/glib\/scannerref\/curtoken()","title":"func curToken() -> GTokenType","type":"method"},{"path":"\/documentation\/glib\/scannerref\/curvalue()","title":"func curValue() -> GTokenValue","type":"method"},{"path":"\/documentation\/glib\/scannerref\/destroy()","title":"func destroy()","type":"method"},{"path":"\/documentation\/glib\/scannerref\/eof()","title":"func eof() -> Bool","type":"method"},{"path":"\/documentation\/glib\/scannerref\/getnexttoken()","title":"func getNextToken() -> GTokenType","type":"method"},{"path":"\/documentation\/glib\/scannerref\/input(text:textlen:)","title":"func input(text: UnsafePointer<gchar>!, textLen: Int)","type":"method"},{"path":"\/documentation\/glib\/scannerref\/inputfile(inputfd:)","title":"func inputFile(inputFd: Int)","type":"method"},{"path":"\/documentation\/glib\/scannerref\/lookup(symbol:)","title":"func lookup(symbol: UnsafePointer<gchar>!) -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/scannerref\/peeknexttoken()","title":"func peekNextToken() -> GTokenType","type":"method"},{"path":"\/documentation\/glib\/scannerref\/scopeaddsymbol(scopeid:symbol:value:)","title":"func scopeAddSymbol(scopeID: Int, symbol: UnsafePointer<gchar>!, value: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/scannerref\/scopeforeachsymbol(scopeid:func:userdata:)","title":"func scopeForeachSymbol(scopeID: Int, func: GHFunc?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/scannerref\/scopelookupsymbol(scopeid:symbol:)","title":"func scopeLookupSymbol(scopeID: Int, symbol: UnsafePointer<gchar>!) -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/scannerref\/scoperemovesymbol(scopeid:symbol:)","title":"func scopeRemoveSymbol(scopeID: Int, symbol: UnsafePointer<gchar>!)","type":"method"},{"path":"\/documentation\/glib\/scannerref\/setscope(scopeid:)","title":"func setScope(scopeID: Int) -> Int","type":"method"},{"path":"\/documentation\/glib\/scannerref\/syncfileoffset()","title":"func syncFileOffset()","type":"method"},{"path":"\/documentation\/glib\/scannerref\/unexptoken(expectedtoken:identifierspec:symbolspec:symbolname:message:iserror:)","title":"func unexpToken(expectedToken: GTokenType, identifierSpec: UnsafePointer<gchar>!, symbolSpec: UnsafePointer<gchar>!, symbolName: UnsafePointer<gchar>!, message: UnsafePointer<gchar>!, isError: Int)","type":"method"}],"path":"\/documentation\/glib\/scannerref\/scannerprotocol-implementations","title":"ScannerProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/scannerref","title":"ScannerRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/sequenceiterref\/init(_:)-3b7xy","title":"init!(UnsafeMutablePointer<GSequenceIter>?)","type":"init"},{"path":"\/documentation\/glib\/sequenceiterref\/init(_:)-6sru1","title":"init(UnsafePointer<GSequenceIter>)","type":"init"},{"path":"\/documentation\/glib\/sequenceiterref\/init(_:)-7kijv","title":"init(UnsafeMutablePointer<GSequenceIter>)","type":"init"},{"path":"\/documentation\/glib\/sequenceiterref\/init(_:)-7p8e7","title":"init!(UnsafePointer<GSequenceIter>?)","type":"init"},{"path":"\/documentation\/glib\/sequenceiterref\/init(_:)-qh4s","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/sequenceiterref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/sequenceiterref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/sequenceiterref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/sequenceiterref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/sequenceiterref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/sequenceiterref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/sequenceiterref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/glib\/sequenceiterref\/'...(_:)-7gy7i","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/glib\/sequenceiterref\/'...(_:)-8dxc3","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/glib\/sequenceiterref\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/glib\/sequenceiterref\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/glib\/sequenceiterref\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/glib\/sequenceiterref\/_(_:_:)-2dh3l","title":"static func < (SequenceIterRef, SequenceIterRef) -> Bool","type":"op"},{"path":"\/documentation\/glib\/sequenceiterref\/_(_:_:)-zn1m","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/glib\/sequenceiterref\/_=(_:_:)-7feu","title":"static func >= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/glib\/sequenceiterref\/_=(_:_:)-85156","title":"static func <= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/glib\/sequenceiterref\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/glib\/sequenceiterref\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/glib\/sequenceiterref\/==(_:_:)","title":"static func == (SequenceIterRef, SequenceIterRef) -> Bool","type":"op"}],"path":"\/documentation\/glib\/sequenceiterref\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/sequenceiterref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/sequenceiterref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/sequenceiterref\/isbegin","title":"var isBegin: Bool","type":"property"},{"path":"\/documentation\/glib\/sequenceiterref\/isend","title":"var isEnd: Bool","type":"property"},{"path":"\/documentation\/glib\/sequenceiterref\/position","title":"var position: Int","type":"property"},{"path":"\/documentation\/glib\/sequenceiterref\/sequence","title":"var sequence: SequenceRef!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/sequenceiterref\/compare(b:)","title":"func compare<SequenceIterT>(b: SequenceIterT) -> Int","type":"method"},{"path":"\/documentation\/glib\/sequenceiterref\/getposition()","title":"func getPosition() -> Int","type":"method"},{"path":"\/documentation\/glib\/sequenceiterref\/getsequence()","title":"func getSequence() -> SequenceRef!","type":"method"},{"path":"\/documentation\/glib\/sequenceiterref\/move(delta:)","title":"func move(delta: Int) -> SequenceIterRef!","type":"method"},{"path":"\/documentation\/glib\/sequenceiterref\/next()","title":"func next() -> SequenceIterRef!","type":"method"},{"path":"\/documentation\/glib\/sequenceiterref\/prev()","title":"func prev() -> SequenceIterRef!","type":"method"},{"path":"\/documentation\/glib\/sequenceiterref\/sequenceforeachrange(end:func:userdata:)","title":"func sequenceForeachRange<SequenceIterT>(end: SequenceIterT, func: GFunc?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/sequenceiterref\/sequenceget()","title":"func sequenceGet() -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/sequenceiterref\/sequenceinsertbefore(data:)","title":"func sequenceInsertBefore(data: gpointer?) -> SequenceIterRef!","type":"method"},{"path":"\/documentation\/glib\/sequenceiterref\/sequencemove(dest:)","title":"func sequenceMove<SequenceIterT>(dest: SequenceIterT)","type":"method"},{"path":"\/documentation\/glib\/sequenceiterref\/sequencemoverange(begin:end:)","title":"func sequenceMoveRange<SequenceIterT>(begin: SequenceIterT, end: SequenceIterT)","type":"method"},{"path":"\/documentation\/glib\/sequenceiterref\/sequencerangegetmidpoint(end:)","title":"func sequenceRangeGetMidpoint<SequenceIterT>(end: SequenceIterT) -> SequenceIterRef!","type":"method"},{"path":"\/documentation\/glib\/sequenceiterref\/sequenceremove()","title":"func sequenceRemove()","type":"method"},{"path":"\/documentation\/glib\/sequenceiterref\/sequenceremoverange(end:)","title":"func sequenceRemoveRange<SequenceIterT>(end: SequenceIterT)","type":"method"},{"path":"\/documentation\/glib\/sequenceiterref\/sequenceset(data:)","title":"func sequenceSet(data: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/sequenceiterref\/sequencesortchanged(cmpfunc:cmpdata:)","title":"func sequenceSortChanged(cmpFunc: GCompareDataFunc?, cmpData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/sequenceiterref\/sequencesortchangediter(itercmp:cmpdata:)","title":"func sequenceSortChangedIter(iterCmp: GSequenceIterCompareFunc?, cmpData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/sequenceiterref\/sequenceswap(b:)","title":"func sequenceSwap<SequenceIterT>(b: SequenceIterT)","type":"method"}],"path":"\/documentation\/glib\/sequenceiterref\/sequenceiterprotocol-implementations","title":"SequenceIterProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/sequenceiterref","title":"SequenceIterRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/sequenceref\/init(_:)-47u5h","title":"init(UnsafeMutablePointer<GSequence>)","type":"init"},{"path":"\/documentation\/glib\/sequenceref\/init(_:)-6ej4u","title":"init!(UnsafePointer<GSequence>?)","type":"init"},{"path":"\/documentation\/glib\/sequenceref\/init(_:)-8sz9d","title":"init(UnsafePointer<GSequence>)","type":"init"},{"path":"\/documentation\/glib\/sequenceref\/init(_:)-8xvlf","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/sequenceref\/init(_:)-9i35z","title":"init!(UnsafeMutablePointer<GSequence>?)","type":"init"},{"path":"\/documentation\/glib\/sequenceref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/sequenceref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/sequenceref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/sequenceref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/sequenceref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/sequenceref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/sequenceref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/sequenceref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/sequenceref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/sequenceref\/beginiter","title":"var beginIter: SequenceIterRef!","type":"property"},{"path":"\/documentation\/glib\/sequenceref\/enditer","title":"var endIter: SequenceIterRef!","type":"property"},{"path":"\/documentation\/glib\/sequenceref\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/glib\/sequenceref\/length","title":"var length: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/sequenceref\/append(data:)","title":"func append(data: gpointer?) -> SequenceIterRef!","type":"method"},{"path":"\/documentation\/glib\/sequenceref\/foreach(func:userdata:)","title":"func foreach(func: GFunc?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/sequenceref\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/glib\/sequenceref\/getbeginiter()","title":"func getBeginIter() -> SequenceIterRef!","type":"method"},{"path":"\/documentation\/glib\/sequenceref\/getenditer()","title":"func getEndIter() -> SequenceIterRef!","type":"method"},{"path":"\/documentation\/glib\/sequenceref\/getiterat(pos:)","title":"func getIterAt(pos: Int) -> SequenceIterRef!","type":"method"},{"path":"\/documentation\/glib\/sequenceref\/getlength()","title":"func getLength() -> Int","type":"method"},{"path":"\/documentation\/glib\/sequenceref\/insertsorted(data:cmpfunc:cmpdata:)","title":"func insertSorted(data: gpointer?, cmpFunc: GCompareDataFunc?, cmpData: gpointer?) -> SequenceIterRef!","type":"method"},{"path":"\/documentation\/glib\/sequenceref\/insertsortediter(data:itercmp:cmpdata:)","title":"func insertSortedIter(data: gpointer?, iterCmp: GSequenceIterCompareFunc?, cmpData: gpointer?) -> SequenceIterRef!","type":"method"},{"path":"\/documentation\/glib\/sequenceref\/lookup(data:cmpfunc:cmpdata:)","title":"func lookup(data: gpointer?, cmpFunc: GCompareDataFunc?, cmpData: gpointer?) -> SequenceIterRef!","type":"method"},{"path":"\/documentation\/glib\/sequenceref\/lookupiter(data:itercmp:cmpdata:)","title":"func lookupIter(data: gpointer?, iterCmp: GSequenceIterCompareFunc?, cmpData: gpointer?) -> SequenceIterRef!","type":"method"},{"path":"\/documentation\/glib\/sequenceref\/prepend(data:)","title":"func prepend(data: gpointer?) -> SequenceIterRef!","type":"method"},{"path":"\/documentation\/glib\/sequenceref\/search(data:cmpfunc:cmpdata:)","title":"func search(data: gpointer?, cmpFunc: GCompareDataFunc?, cmpData: gpointer?) -> SequenceIterRef!","type":"method"},{"path":"\/documentation\/glib\/sequenceref\/searchiter(data:itercmp:cmpdata:)","title":"func searchIter(data: gpointer?, iterCmp: GSequenceIterCompareFunc?, cmpData: gpointer?) -> SequenceIterRef!","type":"method"},{"path":"\/documentation\/glib\/sequenceref\/sort(cmpfunc:cmpdata:)","title":"func sort(cmpFunc: GCompareDataFunc?, cmpData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/sequenceref\/sortiter(cmpfunc:cmpdata:)","title":"func sortIter(cmpFunc: GSequenceIterCompareFunc?, cmpData: gpointer?)","type":"method"}],"path":"\/documentation\/glib\/sequenceref\/sequenceprotocol-implementations","title":"SequenceProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/sequenceref","title":"SequenceRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/sourcecallbackfuncsref\/init(_:)-21dq","title":"init(UnsafePointer<GSourceCallbackFuncs>)","type":"init"},{"path":"\/documentation\/glib\/sourcecallbackfuncsref\/init(_:)-679wh","title":"init(UnsafeMutablePointer<GSourceCallbackFuncs>)","type":"init"},{"path":"\/documentation\/glib\/sourcecallbackfuncsref\/init(_:)-6sjg1","title":"init!(UnsafeMutablePointer<GSourceCallbackFuncs>?)","type":"init"},{"path":"\/documentation\/glib\/sourcecallbackfuncsref\/init(_:)-71c3g","title":"init!(UnsafePointer<GSourceCallbackFuncs>?)","type":"init"},{"path":"\/documentation\/glib\/sourcecallbackfuncsref\/init(_:)-7le5b","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/sourcecallbackfuncsref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/sourcecallbackfuncsref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/sourcecallbackfuncsref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/sourcecallbackfuncsref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/sourcecallbackfuncsref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/sourcecallbackfuncsref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/sourcecallbackfuncsref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/sourcecallbackfuncsref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/sourcecallbackfuncsref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/glib\/sourcecallbackfuncsref","title":"SourceCallbackFuncsRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/sourcefuncsref\/init(_:)-1il83","title":"init!(UnsafePointer<GSourceFuncs>?)","type":"init"},{"path":"\/documentation\/glib\/sourcefuncsref\/init(_:)-5idr3","title":"init!(UnsafeMutablePointer<GSourceFuncs>?)","type":"init"},{"path":"\/documentation\/glib\/sourcefuncsref\/init(_:)-891i5","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/sourcefuncsref\/init(_:)-937im","title":"init(UnsafeMutablePointer<GSourceFuncs>)","type":"init"},{"path":"\/documentation\/glib\/sourcefuncsref\/init(_:)-9qm49","title":"init(UnsafePointer<GSourceFuncs>)","type":"init"},{"path":"\/documentation\/glib\/sourcefuncsref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/sourcefuncsref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/sourcefuncsref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/sourcefuncsref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/sourcefuncsref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/sourcefuncsref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/sourcefuncsref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/sourcefuncsref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/sourcefuncsref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/sourcefuncsref\/check","title":"var check: GSourceFuncsCheckFunc!","type":"property"},{"path":"\/documentation\/glib\/sourcefuncsref\/dispatch","title":"var dispatch: GSourceFuncsDispatchFunc!","type":"property"},{"path":"\/documentation\/glib\/sourcefuncsref\/finalize","title":"var finalize: GSourceFuncsFinalizeFunc!","type":"property"},{"path":"\/documentation\/glib\/sourcefuncsref\/prepare","title":"var prepare: GSourceFuncsPrepareFunc!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/sourcefuncsref\/sourceremovebyfuncs(userdata:)","title":"func sourceRemoveByFuncs(userData: gpointer?) -> Bool","type":"method"}],"path":"\/documentation\/glib\/sourcefuncsref\/sourcefuncsprotocol-implementations","title":"SourceFuncsProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/sourcefuncsref","title":"SourceFuncsRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/sourceprivateref\/init(_:)-13rxk","title":"init!(UnsafeMutablePointer<GSourcePrivate>?)","type":"init"},{"path":"\/documentation\/glib\/sourceprivateref\/init(_:)-1nkhs","title":"init(UnsafeMutablePointer<GSourcePrivate>)","type":"init"},{"path":"\/documentation\/glib\/sourceprivateref\/init(_:)-3qp3j","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/sourceprivateref\/init(_:)-3s2vi","title":"init(UnsafePointer<GSourcePrivate>)","type":"init"},{"path":"\/documentation\/glib\/sourceprivateref\/init(_:)-4elc2","title":"init!(UnsafePointer<GSourcePrivate>?)","type":"init"},{"path":"\/documentation\/glib\/sourceprivateref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/sourceprivateref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/sourceprivateref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/sourceprivateref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/sourceprivateref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/sourceprivateref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/sourceprivateref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/sourceprivateref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/sourceprivateref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/glib\/sourceprivateref","title":"SourcePrivateRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/sourceref\/init(_:)-1bj1r","title":"init(UnsafeMutablePointer<GSource>)","type":"init"},{"path":"\/documentation\/glib\/sourceref\/init(_:)-2qied","title":"init(UnsafePointer<GSource>)","type":"init"},{"path":"\/documentation\/glib\/sourceref\/init(_:)-3g4pw","title":"init!(UnsafeMutablePointer<GSource>?)","type":"init"},{"path":"\/documentation\/glib\/sourceref\/init(_:)-70j7u","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/sourceref\/init(_:)-8o426","title":"init!(UnsafePointer<GSource>?)","type":"init"},{"path":"\/documentation\/glib\/sourceref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/sourceref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/sourceref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/sourceref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/sourceref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/sourceref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/sourceref\/init(sourcefuncs:structsize:)","title":"init<SourceFuncsT>(sourceFuncs: SourceFuncsT, structSize: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/sourceref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/sourceref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/sourceref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/sourceref\/canrecurse","title":"var canRecurse: Bool","type":"property"},{"path":"\/documentation\/glib\/sourceref\/context","title":"var context: MainContextRef!","type":"property"},{"path":"\/documentation\/glib\/sourceref\/id","title":"var id: Int","type":"property"},{"path":"\/documentation\/glib\/sourceref\/isdestroyed","title":"var isDestroyed: Bool","type":"property"},{"path":"\/documentation\/glib\/sourceref\/name","title":"var name: String!","type":"property"},{"path":"\/documentation\/glib\/sourceref\/priority","title":"var priority: Int","type":"property"},{"path":"\/documentation\/glib\/sourceref\/readytime","title":"var readyTime: gint64","type":"property"},{"path":"\/documentation\/glib\/sourceref\/source_ptr","title":"var source_ptr: UnsafeMutablePointer<GSource>!","type":"property"},{"path":"\/documentation\/glib\/sourceref\/time","title":"var time: gint64","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/sourceref\/add(childsource:)","title":"func add<SourceT>(childSource: SourceT)","type":"method"},{"path":"\/documentation\/glib\/sourceref\/addpoll(fd:)","title":"func addPoll<PollFDT>(fd: PollFDT)","type":"method"},{"path":"\/documentation\/glib\/sourceref\/addunix(fd:events:)","title":"func addUnix(fd: Int, events: IOCondition) -> gpointer!","type":"method"},{"path":"\/documentation\/glib\/sourceref\/attach(context:)","title":"func attach(context: MainContextRef?) -> Int","type":"method"},{"path":"\/documentation\/glib\/sourceref\/destroy()","title":"func destroy()","type":"method"},{"path":"\/documentation\/glib\/sourceref\/getcanrecurse()","title":"func getCanRecurse() -> Bool","type":"method"},{"path":"\/documentation\/glib\/sourceref\/getcontext()","title":"func getContext() -> MainContextRef!","type":"method"},{"path":"\/documentation\/glib\/sourceref\/getcurrenttime(timeval:)","title":"func getCurrentTime<TimeValT>(timeval: TimeValT)","type":"method"},{"path":"\/documentation\/glib\/sourceref\/getid()","title":"func getID() -> Int","type":"method"},{"path":"\/documentation\/glib\/sourceref\/getname()","title":"func getName() -> String!","type":"method"},{"path":"\/documentation\/glib\/sourceref\/getpriority()","title":"func getPriority() -> Int","type":"method"},{"path":"\/documentation\/glib\/sourceref\/getreadytime()","title":"func getReadyTime() -> gint64","type":"method"},{"path":"\/documentation\/glib\/sourceref\/gettime()","title":"func getTime() -> gint64","type":"method"},{"path":"\/documentation\/glib\/sourceref\/modifyunixfd(tag:newevents:)","title":"func modifyUnixFd(tag: gpointer!, newEvents: IOCondition)","type":"method"},{"path":"\/documentation\/glib\/sourceref\/queryunixfd(tag:)","title":"func queryUnixFd(tag: gpointer!) -> IOCondition","type":"method"},{"path":"\/documentation\/glib\/sourceref\/ref()","title":"func ref() -> SourceRef!","type":"method"},{"path":"\/documentation\/glib\/sourceref\/remove(childsource:)","title":"func remove<SourceT>(childSource: SourceT)","type":"method"},{"path":"\/documentation\/glib\/sourceref\/removepoll(fd:)","title":"func removePoll<PollFDT>(fd: PollFDT)","type":"method"},{"path":"\/documentation\/glib\/sourceref\/removeunixfd(tag:)","title":"func removeUnixFd(tag: gpointer!)","type":"method"},{"path":"\/documentation\/glib\/sourceref\/set(canrecurse:)","title":"func set(canRecurse: Bool)","type":"method"},{"path":"\/documentation\/glib\/sourceref\/set(funcs:)","title":"func set<SourceFuncsT>(funcs: SourceFuncsT)","type":"method"},{"path":"\/documentation\/glib\/sourceref\/set(name:)","title":"func set(name: UnsafePointer<CChar>!)","type":"method"},{"path":"\/documentation\/glib\/sourceref\/set(priority:)","title":"func set(priority: Int)","type":"method"},{"path":"\/documentation\/glib\/sourceref\/set(readytime:)","title":"func set(readyTime: gint64)","type":"method"},{"path":"\/documentation\/glib\/sourceref\/setcallback(func:data:notify:)","title":"func setCallback(func: GSourceFunc?, data: gpointer?, notify: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/glib\/sourceref\/setcallbackindirect(callbackdata:callbackfuncs:)","title":"func setCallbackIndirect<SourceCallbackFuncsT>(callbackData: gpointer?, callbackFuncs: SourceCallbackFuncsT)","type":"method"},{"path":"\/documentation\/glib\/sourceref\/setdisposefunction(dispose:)","title":"func setDisposeFunction(dispose: GSourceDisposeFunc?)","type":"method"},{"path":"\/documentation\/glib\/sourceref\/setstatic(name:)","title":"func setStatic(name: UnsafePointer<CChar>!)","type":"method"},{"path":"\/documentation\/glib\/sourceref\/unref()","title":"func unref()","type":"method"}],"path":"\/documentation\/glib\/sourceref\/sourceprotocol-implementations","title":"SourceProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/sourceref","title":"SourceRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/spawnflags\/init(_:)-4ht23","title":"init<I>(I)","type":"init"},{"path":"\/documentation\/glib\/spawnflags\/init(_:)-8etd5","title":"init(GSpawnFlags)","type":"init"},{"path":"\/documentation\/glib\/spawnflags\/init(rawvalue:)","title":"init(rawValue: UInt32)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/spawnflags\/int","title":"var int: gint","type":"property"},{"path":"\/documentation\/glib\/spawnflags\/intvalue","title":"var intValue: Int","type":"property"},{"path":"\/documentation\/glib\/spawnflags\/rawvalue","title":"var rawValue: UInt32","type":"property"},{"path":"\/documentation\/glib\/spawnflags\/value","title":"var value: GSpawnFlags","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/spawnflags\/childinheritsstderr","title":"static let childInheritsStderr: SpawnFlags","type":"property"},{"path":"\/documentation\/glib\/spawnflags\/childinheritsstdin","title":"static let childInheritsStdin: SpawnFlags","type":"property"},{"path":"\/documentation\/glib\/spawnflags\/childinheritsstdout","title":"static let childInheritsStdout: SpawnFlags","type":"property"},{"path":"\/documentation\/glib\/spawnflags\/cloexecpipes","title":"static let cloexecPipes: SpawnFlags","type":"property"},{"path":"\/documentation\/glib\/spawnflags\/default","title":"static let `default`: SpawnFlags","type":"property"},{"path":"\/documentation\/glib\/spawnflags\/donotreapchild","title":"static let doNotReapChild: SpawnFlags","type":"property"},{"path":"\/documentation\/glib\/spawnflags\/fileandargvzero","title":"static let fileAndArgvZero: SpawnFlags","type":"property"},{"path":"\/documentation\/glib\/spawnflags\/leavedescriptorsopen","title":"static let leaveDescriptorsOpen: SpawnFlags","type":"property"},{"path":"\/documentation\/glib\/spawnflags\/searchpath","title":"static let searchPath: SpawnFlags","type":"property"},{"path":"\/documentation\/glib\/spawnflags\/searchpathfromenvp","title":"static let searchPathFromEnvp: SpawnFlags","type":"property"},{"path":"\/documentation\/glib\/spawnflags\/stderrtodevnull","title":"static let stderrToDevNull: SpawnFlags","type":"property"},{"path":"\/documentation\/glib\/spawnflags\/stdinfromdevnull","title":"static let stdinFromDevNull: SpawnFlags","type":"property"},{"path":"\/documentation\/glib\/spawnflags\/stdouttodevnull","title":"static let stdoutToDevNull: SpawnFlags","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/glib\/spawnflags\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/glib\/spawnflags\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/spawnflags\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/spawnflags\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/spawnflags\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/glib\/spawnflags\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/glib\/spawnflags\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/glib\/spawnflags\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/glib\/spawnflags\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/glib\/spawnflags\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/spawnflags\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/glib\/spawnflags\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/glib\/spawnflags\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/glib\/spawnflags\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/spawnflags\/init(_:)-3vnkh","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/glib\/spawnflags\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/spawnflags\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/spawnflags\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/spawnflags\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/spawnflags\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/spawnflags\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/spawnflags\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/spawnflags\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/glib\/spawnflags\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/glib\/spawnflags\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/glib\/spawnflags","title":"SpawnFlags","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/statbufref\/init(_:)-2h7w1","title":"init!(UnsafePointer<GStatBuf>?)","type":"init"},{"path":"\/documentation\/glib\/statbufref\/init(_:)-3tqes","title":"init!(UnsafeMutablePointer<GStatBuf>?)","type":"init"},{"path":"\/documentation\/glib\/statbufref\/init(_:)-3ydjc","title":"init(UnsafeMutablePointer<GStatBuf>)","type":"init"},{"path":"\/documentation\/glib\/statbufref\/init(_:)-5qj96","title":"init(UnsafePointer<GStatBuf>)","type":"init"},{"path":"\/documentation\/glib\/statbufref\/init(_:)-8i4r6","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/statbufref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/statbufref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/statbufref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/statbufref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/statbufref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/statbufref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/statbufref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/statbufref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/statbufref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/statbufref\/lstat(filename:)","title":"func lstat(filename: UnsafePointer<gchar>!) -> Int","type":"method"},{"path":"\/documentation\/glib\/statbufref\/stat(filename:)","title":"func stat(filename: UnsafePointer<gchar>!) -> Int","type":"method"}],"path":"\/documentation\/glib\/statbufref\/statbufprotocol-implementations","title":"StatBufProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/statbufref","title":"StatBufRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/staticmutexref\/init(_:)-1udyo","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/staticmutexref\/init(_:)-2xtcf","title":"init(UnsafePointer<GStaticMutex>)","type":"init"},{"path":"\/documentation\/glib\/staticmutexref\/init(_:)-7fh5d","title":"init!(UnsafePointer<GStaticMutex>?)","type":"init"},{"path":"\/documentation\/glib\/staticmutexref\/init(_:)-8whsh","title":"init!(UnsafeMutablePointer<GStaticMutex>?)","type":"init"},{"path":"\/documentation\/glib\/staticmutexref\/init(_:)-98jdd","title":"init(UnsafeMutablePointer<GStaticMutex>)","type":"init"},{"path":"\/documentation\/glib\/staticmutexref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/staticmutexref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/staticmutexref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/staticmutexref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/staticmutexref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/staticmutexref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/staticmutexref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/staticmutexref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/staticmutexref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/staticmutexref\/mutex","title":"var mutex: MutexRef!","type":"property"},{"path":"\/documentation\/glib\/staticmutexref\/muteximpl","title":"var mutexImpl: MutexRef!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/staticmutexref\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/glib\/staticmutexref\/getmuteximpl()","title":"func getMutexImpl() -> MutexRef!","type":"method"},{"path":"\/documentation\/glib\/staticmutexref\/init_()","title":"func init_()","type":"method"}],"path":"\/documentation\/glib\/staticmutexref\/staticmutexprotocol-implementations","title":"StaticMutexProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/staticmutexref","title":"StaticMutexRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/staticprivateref\/init(_:)-35svh","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/staticprivateref\/init(_:)-5mkge","title":"init!(UnsafeMutablePointer<GStaticPrivate>?)","type":"init"},{"path":"\/documentation\/glib\/staticprivateref\/init(_:)-71pw3","title":"init(UnsafePointer<GStaticPrivate>)","type":"init"},{"path":"\/documentation\/glib\/staticprivateref\/init(_:)-7w17k","title":"init!(UnsafePointer<GStaticPrivate>?)","type":"init"},{"path":"\/documentation\/glib\/staticprivateref\/init(_:)-awrw","title":"init(UnsafeMutablePointer<GStaticPrivate>)","type":"init"},{"path":"\/documentation\/glib\/staticprivateref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/staticprivateref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/staticprivateref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/staticprivateref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/staticprivateref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/staticprivateref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/staticprivateref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/staticprivateref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/staticprivateref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/staticprivateref\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/glib\/staticprivateref\/get()","title":"func get() -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/staticprivateref\/init_()","title":"func init_()","type":"method"},{"path":"\/documentation\/glib\/staticprivateref\/set(data:notify:)","title":"func set(data: gpointer?, notify: GDestroyNotify?)","type":"method"}],"path":"\/documentation\/glib\/staticprivateref\/staticprivateprotocol-implementations","title":"StaticPrivateProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/staticprivateref","title":"StaticPrivateRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/staticrwlockref\/init(_:)-10mti","title":"init(UnsafeMutablePointer<GStaticRWLock>)","type":"init"},{"path":"\/documentation\/glib\/staticrwlockref\/init(_:)-37bn","title":"init(UnsafePointer<GStaticRWLock>)","type":"init"},{"path":"\/documentation\/glib\/staticrwlockref\/init(_:)-3nxea","title":"init!(UnsafePointer<GStaticRWLock>?)","type":"init"},{"path":"\/documentation\/glib\/staticrwlockref\/init(_:)-56q6n","title":"init!(UnsafeMutablePointer<GStaticRWLock>?)","type":"init"},{"path":"\/documentation\/glib\/staticrwlockref\/init(_:)-qfhc","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/staticrwlockref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/staticrwlockref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/staticrwlockref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/staticrwlockref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/staticrwlockref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/staticrwlockref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/staticrwlockref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/staticrwlockref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/staticrwlockref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/staticrwlockref\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/glib\/staticrwlockref\/init_()","title":"func init_()","type":"method"},{"path":"\/documentation\/glib\/staticrwlockref\/readerlock()","title":"func readerLock()","type":"method"},{"path":"\/documentation\/glib\/staticrwlockref\/readertrylock()","title":"func readerTrylock() -> Bool","type":"method"},{"path":"\/documentation\/glib\/staticrwlockref\/readerunlock()","title":"func readerUnlock()","type":"method"},{"path":"\/documentation\/glib\/staticrwlockref\/writerlock()","title":"func writerLock()","type":"method"},{"path":"\/documentation\/glib\/staticrwlockref\/writertrylock()","title":"func writerTrylock() -> Bool","type":"method"},{"path":"\/documentation\/glib\/staticrwlockref\/writerunlock()","title":"func writerUnlock()","type":"method"}],"path":"\/documentation\/glib\/staticrwlockref\/staticrwlockprotocol-implementations","title":"StaticRWLockProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/staticrwlockref","title":"StaticRWLockRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/staticrecmutexref\/init(_:)-1ve40","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/staticrecmutexref\/init(_:)-2i01a","title":"init(UnsafeMutablePointer<GStaticRecMutex>)","type":"init"},{"path":"\/documentation\/glib\/staticrecmutexref\/init(_:)-4kkom","title":"init!(UnsafePointer<GStaticRecMutex>?)","type":"init"},{"path":"\/documentation\/glib\/staticrecmutexref\/init(_:)-57hw0","title":"init(UnsafePointer<GStaticRecMutex>)","type":"init"},{"path":"\/documentation\/glib\/staticrecmutexref\/init(_:)-8sd4d","title":"init!(UnsafeMutablePointer<GStaticRecMutex>?)","type":"init"},{"path":"\/documentation\/glib\/staticrecmutexref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/staticrecmutexref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/staticrecmutexref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/staticrecmutexref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/staticrecmutexref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/staticrecmutexref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/staticrecmutexref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/staticrecmutexref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/staticrecmutexref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/staticrecmutexref\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/glib\/staticrecmutexref\/init_()","title":"func init_()","type":"method"},{"path":"\/documentation\/glib\/staticrecmutexref\/lock()","title":"func lock()","type":"method"},{"path":"\/documentation\/glib\/staticrecmutexref\/lockfull(depth:)","title":"func lockFull(depth: Int)","type":"method"},{"path":"\/documentation\/glib\/staticrecmutexref\/trylock()","title":"func trylock() -> Bool","type":"method"},{"path":"\/documentation\/glib\/staticrecmutexref\/unlock()","title":"func unlock()","type":"method"},{"path":"\/documentation\/glib\/staticrecmutexref\/unlockfull()","title":"func unlockFull() -> Int","type":"method"}],"path":"\/documentation\/glib\/staticrecmutexref\/staticrecmutexprotocol-implementations","title":"StaticRecMutexProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/staticrecmutexref","title":"StaticRecMutexRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/stringchunkref\/init(_:)-2b1td","title":"init!(UnsafeMutablePointer<GStringChunk>?)","type":"init"},{"path":"\/documentation\/glib\/stringchunkref\/init(_:)-3hmw3","title":"init(UnsafePointer<GStringChunk>)","type":"init"},{"path":"\/documentation\/glib\/stringchunkref\/init(_:)-47idj","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/stringchunkref\/init(_:)-7mrrb","title":"init(UnsafeMutablePointer<GStringChunk>)","type":"init"},{"path":"\/documentation\/glib\/stringchunkref\/init(_:)-7w9mc","title":"init!(UnsafePointer<GStringChunk>?)","type":"init"},{"path":"\/documentation\/glib\/stringchunkref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/stringchunkref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/stringchunkref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/stringchunkref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/stringchunkref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/stringchunkref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/stringchunkref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/stringchunkref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/stringchunkref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/stringchunkref\/clear()","title":"func clear()","type":"method"},{"path":"\/documentation\/glib\/stringchunkref\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/glib\/stringchunkref\/insert(string:)","title":"func insert(string: UnsafePointer<gchar>!) -> String!","type":"method"},{"path":"\/documentation\/glib\/stringchunkref\/insertconst(string:)","title":"func insertConst(string: UnsafePointer<gchar>!) -> String!","type":"method"},{"path":"\/documentation\/glib\/stringchunkref\/insertlen(string:len:)","title":"func insertLen(string: UnsafePointer<gchar>!, len: gssize) -> String!","type":"method"}],"path":"\/documentation\/glib\/stringchunkref\/stringchunkprotocol-implementations","title":"StringChunkProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/stringchunkref","title":"StringChunkRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/stringref\/init(_:)-1pbjp","title":"init!(UnsafePointer<GString>?)","type":"init"},{"path":"\/documentation\/glib\/stringref\/init(_:)-2o263","title":"init!(UnsafeMutablePointer<GString>?)","type":"init"},{"path":"\/documentation\/glib\/stringref\/init(_:)-3912m","title":"init(String)","type":"init"},{"path":"\/documentation\/glib\/stringref\/init(_:)-3ubvq","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/stringref\/init(_:)-79g9y","title":"init(UnsafeMutablePointer<GString>)","type":"init"},{"path":"\/documentation\/glib\/stringref\/init(_:)-9tc42","title":"init(UnsafePointer<GString>)","type":"init"},{"path":"\/documentation\/glib\/stringref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/stringref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/stringref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/stringref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/stringref\/init(init:)","title":"init(init: UnsafePointer<gchar>?)","type":"init"},{"path":"\/documentation\/glib\/stringref\/init(len:len:)","title":"init(len: UnsafePointer<gchar>!, len: gssize)","type":"init"},{"path":"\/documentation\/glib\/stringref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/stringref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/stringref\/init(sized:)","title":"init(sized: Int)","type":"init"},{"path":"\/documentation\/glib\/stringref\/init(take:)","title":"init(take: UnsafeMutablePointer<gchar>?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/stringref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/stringref\/new(len:len:)","title":"static func new(len: UnsafePointer<gchar>!, len: gssize) -> StringRef!","type":"method"},{"path":"\/documentation\/glib\/stringref\/new(take:)","title":"static func new(take: UnsafeMutablePointer<gchar>?) -> StringRef!","type":"method"},{"path":"\/documentation\/glib\/stringref\/sizednew(sized:)","title":"static func sizedNew(sized: Int) -> StringRef!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/stringref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/stringref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/stringref\/allocatedlen","title":"var allocatedLen: gsize","type":"property"},{"path":"\/documentation\/glib\/stringref\/gstring_ptr","title":"var gstring_ptr: UnsafeMutablePointer<GString>!","type":"property"},{"path":"\/documentation\/glib\/stringref\/len","title":"var len: gsize","type":"property"},{"path":"\/documentation\/glib\/stringref\/str","title":"var str: UnsafeMutablePointer<gchar>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/stringref\/append(c:)","title":"func append(c: gchar) -> StringRef!","type":"method"},{"path":"\/documentation\/glib\/stringref\/append(val:)","title":"func append(val: UnsafePointer<gchar>!) -> StringRef!","type":"method"},{"path":"\/documentation\/glib\/stringref\/appendlen(val:len:)","title":"func appendLen(val: UnsafePointer<gchar>!, len: gssize) -> StringRef!","type":"method"},{"path":"\/documentation\/glib\/stringref\/appenduriescaped(unescaped:reservedcharsallowed:allowutf8:)","title":"func appendURIEscaped(unescaped: UnsafePointer<gchar>!, reservedCharsAllowed: UnsafePointer<gchar>!, allowUTF8: Bool) -> StringRef!","type":"method"},{"path":"\/documentation\/glib\/stringref\/appendunichar(wc:)","title":"func appendUnichar(wc: gunichar) -> StringRef!","type":"method"},{"path":"\/documentation\/glib\/stringref\/appendvprintf(format:args:)","title":"func appendVprintf(format: UnsafePointer<gchar>!, args: CVaListPointer)","type":"method"},{"path":"\/documentation\/glib\/stringref\/asciidown()","title":"func asciiDown() -> StringRef!","type":"method"},{"path":"\/documentation\/glib\/stringref\/asciiup()","title":"func asciiUp() -> StringRef!","type":"method"},{"path":"\/documentation\/glib\/stringref\/assign(rval:)","title":"func assign(rval: UnsafePointer<gchar>!) -> StringRef!","type":"method"},{"path":"\/documentation\/glib\/stringref\/down()","title":"func down() -> StringRef!","type":"method"},{"path":"\/documentation\/glib\/stringref\/equal(v2:)","title":"func equal<StringTypeT>(v2: StringTypeT) -> Bool","type":"method"},{"path":"\/documentation\/glib\/stringref\/erase(pos:len:)","title":"func erase(pos: gssize, len: gssize) -> StringRef!","type":"method"},{"path":"\/documentation\/glib\/stringref\/free(freesegment:)","title":"func free(freeSegment: Bool) -> String!","type":"method"},{"path":"\/documentation\/glib\/stringref\/freeandsteal()","title":"func freeAndSteal() -> String!","type":"method"},{"path":"\/documentation\/glib\/stringref\/freetobytes()","title":"func freeToBytes() -> BytesRef!","type":"method"},{"path":"\/documentation\/glib\/stringref\/hash()","title":"func hash() -> Int","type":"method"},{"path":"\/documentation\/glib\/stringref\/insert(pos:val:)","title":"func insert(pos: gssize, val: UnsafePointer<gchar>!) -> StringRef!","type":"method"},{"path":"\/documentation\/glib\/stringref\/insertc(pos:c:)","title":"func insertC(pos: gssize, c: gchar) -> StringRef!","type":"method"},{"path":"\/documentation\/glib\/stringref\/insertlen(pos:val:len:)","title":"func insertLen(pos: gssize, val: UnsafePointer<gchar>!, len: gssize) -> StringRef!","type":"method"},{"path":"\/documentation\/glib\/stringref\/insertunichar(pos:wc:)","title":"func insertUnichar(pos: gssize, wc: gunichar) -> StringRef!","type":"method"},{"path":"\/documentation\/glib\/stringref\/overwrite(pos:val:)","title":"func overwrite(pos: Int, val: UnsafePointer<gchar>!) -> StringRef!","type":"method"},{"path":"\/documentation\/glib\/stringref\/overwritelen(pos:val:len:)","title":"func overwriteLen(pos: Int, val: UnsafePointer<gchar>!, len: gssize) -> StringRef!","type":"method"},{"path":"\/documentation\/glib\/stringref\/prepend(c:)","title":"func prepend(c: gchar) -> StringRef!","type":"method"},{"path":"\/documentation\/glib\/stringref\/prepend(val:)","title":"func prepend(val: UnsafePointer<gchar>!) -> StringRef!","type":"method"},{"path":"\/documentation\/glib\/stringref\/prependlen(val:len:)","title":"func prependLen(val: UnsafePointer<gchar>!, len: gssize) -> StringRef!","type":"method"},{"path":"\/documentation\/glib\/stringref\/prependunichar(wc:)","title":"func prependUnichar(wc: gunichar) -> StringRef!","type":"method"},{"path":"\/documentation\/glib\/stringref\/replace(find:replace:limit:)","title":"func replace(find: UnsafePointer<gchar>!, replace: UnsafePointer<gchar>!, limit: Int) -> Int","type":"method"},{"path":"\/documentation\/glib\/stringref\/setsize(len:)","title":"func setSize(len: Int) -> StringRef!","type":"method"},{"path":"\/documentation\/glib\/stringref\/truncate(len:)","title":"func truncate(len: Int) -> StringRef!","type":"method"},{"path":"\/documentation\/glib\/stringref\/up()","title":"func up() -> StringRef!","type":"method"},{"path":"\/documentation\/glib\/stringref\/vprintf(format:args:)","title":"func vprintf(format: UnsafePointer<gchar>!, args: CVaListPointer)","type":"method"}],"path":"\/documentation\/glib\/stringref\/stringprotocol-implementations","title":"StringProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/stringref","title":"StringRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/strvbuilderref\/init()","title":"init()","type":"init"},{"path":"\/documentation\/glib\/strvbuilderref\/init(_:)-1kjtq","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/strvbuilderref\/init(_:)-4887a","title":"init!(UnsafeMutablePointer<GStrvBuilder>?)","type":"init"},{"path":"\/documentation\/glib\/strvbuilderref\/init(_:)-5qlkx","title":"init(UnsafeMutablePointer<GStrvBuilder>)","type":"init"},{"path":"\/documentation\/glib\/strvbuilderref\/init(_:)-7md2h","title":"init!(UnsafePointer<GStrvBuilder>?)","type":"init"},{"path":"\/documentation\/glib\/strvbuilderref\/init(_:)-seaj","title":"init(UnsafePointer<GStrvBuilder>)","type":"init"},{"path":"\/documentation\/glib\/strvbuilderref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/strvbuilderref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/strvbuilderref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/strvbuilderref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/strvbuilderref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/strvbuilderref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/strvbuilderref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/strvbuilderref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/strvbuilderref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/strvbuilderref\/strv_builder_ptr","title":"var strv_builder_ptr: UnsafeMutablePointer<GStrvBuilder>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/strvbuilderref\/add(value:)","title":"func add(value: UnsafePointer<CChar>!)","type":"method"},{"path":"\/documentation\/glib\/strvbuilderref\/addv(value:)","title":"func addv(value: UnsafeMutablePointer<UnsafePointer<CChar>?>!)","type":"method"},{"path":"\/documentation\/glib\/strvbuilderref\/end()","title":"func end() -> GStrv!","type":"method"},{"path":"\/documentation\/glib\/strvbuilderref\/ref()","title":"func ref() -> StrvBuilderRef!","type":"method"},{"path":"\/documentation\/glib\/strvbuilderref\/take(value:)","title":"func take(value: UnsafeMutablePointer<CChar>!)","type":"method"},{"path":"\/documentation\/glib\/strvbuilderref\/unref()","title":"func unref()","type":"method"},{"path":"\/documentation\/glib\/strvbuilderref\/unreftostrv()","title":"func unrefToStrv() -> GStrv!","type":"method"}],"path":"\/documentation\/glib\/strvbuilderref\/strvbuilderprotocol-implementations","title":"StrvBuilderProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/strvbuilderref","title":"StrvBuilderRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/testcaseref\/init(_:)-2gu5p","title":"init(UnsafeMutablePointer<GTestCase>)","type":"init"},{"path":"\/documentation\/glib\/testcaseref\/init(_:)-580ya","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/testcaseref\/init(_:)-5q50i","title":"init(UnsafePointer<GTestCase>)","type":"init"},{"path":"\/documentation\/glib\/testcaseref\/init(_:)-8vv8","title":"init!(UnsafePointer<GTestCase>?)","type":"init"},{"path":"\/documentation\/glib\/testcaseref\/init(_:)-97m8x","title":"init!(UnsafeMutablePointer<GTestCase>?)","type":"init"},{"path":"\/documentation\/glib\/testcaseref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/testcaseref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/testcaseref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/testcaseref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/testcaseref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/testcaseref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/testcaseref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/testcaseref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/testcaseref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/testcaseref\/free()","title":"func free()","type":"method"}],"path":"\/documentation\/glib\/testcaseref\/testcaseprotocol-implementations","title":"TestCaseProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/testcaseref","title":"TestCaseRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/testconfigref\/init(_:)-1mvu9","title":"init(UnsafeMutablePointer<GTestConfig>)","type":"init"},{"path":"\/documentation\/glib\/testconfigref\/init(_:)-4usv2","title":"init!(UnsafeMutablePointer<GTestConfig>?)","type":"init"},{"path":"\/documentation\/glib\/testconfigref\/init(_:)-86rpt","title":"init(UnsafePointer<GTestConfig>)","type":"init"},{"path":"\/documentation\/glib\/testconfigref\/init(_:)-adp2","title":"init!(UnsafePointer<GTestConfig>?)","type":"init"},{"path":"\/documentation\/glib\/testconfigref\/init(_:)-ts95","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/testconfigref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/testconfigref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/testconfigref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/testconfigref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/testconfigref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/testconfigref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/testconfigref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/testconfigref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/testconfigref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/testconfigref\/testinitialized","title":"var testInitialized: gboolean","type":"property"},{"path":"\/documentation\/glib\/testconfigref\/testperf","title":"var testPerf: gboolean","type":"property"},{"path":"\/documentation\/glib\/testconfigref\/testquick","title":"var testQuick: gboolean","type":"property"},{"path":"\/documentation\/glib\/testconfigref\/testquiet","title":"var testQuiet: gboolean","type":"property"},{"path":"\/documentation\/glib\/testconfigref\/testundefined","title":"var testUndefined: gboolean","type":"property"},{"path":"\/documentation\/glib\/testconfigref\/testverbose","title":"var testVerbose: gboolean","type":"property"}],"path":"\/documentation\/glib\/testconfigref\/testconfigprotocol-implementations","title":"TestConfigProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/testconfigref","title":"TestConfigRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/testlogbufferref\/init(_:)-1fhso","title":"init!(UnsafePointer<GTestLogBuffer>?)","type":"init"},{"path":"\/documentation\/glib\/testlogbufferref\/init(_:)-76vei","title":"init(UnsafePointer<GTestLogBuffer>)","type":"init"},{"path":"\/documentation\/glib\/testlogbufferref\/init(_:)-7r66g","title":"init!(UnsafeMutablePointer<GTestLogBuffer>?)","type":"init"},{"path":"\/documentation\/glib\/testlogbufferref\/init(_:)-9p89a","title":"init(UnsafeMutablePointer<GTestLogBuffer>)","type":"init"},{"path":"\/documentation\/glib\/testlogbufferref\/init(_:)-cwi7","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/testlogbufferref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/testlogbufferref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/testlogbufferref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/testlogbufferref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/testlogbufferref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/testlogbufferref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/testlogbufferref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/testlogbufferref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/testlogbufferref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/testlogbufferref\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/glib\/testlogbufferref\/pop()","title":"func pop() -> TestLogMsgRef!","type":"method"},{"path":"\/documentation\/glib\/testlogbufferref\/push(nbytes:bytes:)","title":"func push(nBytes: Int, bytes: UnsafePointer<guint8>!)","type":"method"}],"path":"\/documentation\/glib\/testlogbufferref\/testlogbufferprotocol-implementations","title":"TestLogBufferProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/testlogbufferref","title":"TestLogBufferRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/testlogmsgref\/init(_:)-12a0p","title":"init(UnsafeMutablePointer<GTestLogMsg>)","type":"init"},{"path":"\/documentation\/glib\/testlogmsgref\/init(_:)-2cqmo","title":"init!(UnsafePointer<GTestLogMsg>?)","type":"init"},{"path":"\/documentation\/glib\/testlogmsgref\/init(_:)-69zvx","title":"init!(UnsafeMutablePointer<GTestLogMsg>?)","type":"init"},{"path":"\/documentation\/glib\/testlogmsgref\/init(_:)-79qw2","title":"init(UnsafePointer<GTestLogMsg>)","type":"init"},{"path":"\/documentation\/glib\/testlogmsgref\/init(_:)-k0ir","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/testlogmsgref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/testlogmsgref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/testlogmsgref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/testlogmsgref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/testlogmsgref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/testlogmsgref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/testlogmsgref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/testlogmsgref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/testlogmsgref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/testlogmsgref\/logtype","title":"var logType: GTestLogType","type":"property"},{"path":"\/documentation\/glib\/testlogmsgref\/nnums","title":"var nNums: guint","type":"property"},{"path":"\/documentation\/glib\/testlogmsgref\/nstrings","title":"var nStrings: guint","type":"property"},{"path":"\/documentation\/glib\/testlogmsgref\/nums","title":"var nums: UnsafeMutablePointer<CLongDouble>!","type":"property"},{"path":"\/documentation\/glib\/testlogmsgref\/strings","title":"var strings: UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/testlogmsgref\/free()","title":"func free()","type":"method"}],"path":"\/documentation\/glib\/testlogmsgref\/testlogmsgprotocol-implementations","title":"TestLogMsgProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/testlogmsgref","title":"TestLogMsgRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/testsubprocessflags\/init(_:)-4457j","title":"init<I>(I)","type":"init"},{"path":"\/documentation\/glib\/testsubprocessflags\/init(_:)-79xiv","title":"init(GTestSubprocessFlags)","type":"init"},{"path":"\/documentation\/glib\/testsubprocessflags\/init(rawvalue:)","title":"init(rawValue: UInt32)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/testsubprocessflags\/int","title":"var int: gint","type":"property"},{"path":"\/documentation\/glib\/testsubprocessflags\/intvalue","title":"var intValue: Int","type":"property"},{"path":"\/documentation\/glib\/testsubprocessflags\/rawvalue","title":"var rawValue: UInt32","type":"property"},{"path":"\/documentation\/glib\/testsubprocessflags\/value","title":"var value: GTestSubprocessFlags","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/testsubprocessflags\/default","title":"static let `default`: TestSubprocessFlags","type":"property"},{"path":"\/documentation\/glib\/testsubprocessflags\/inheritstderr","title":"static let inheritStderr: TestSubprocessFlags","type":"property"},{"path":"\/documentation\/glib\/testsubprocessflags\/inheritstdin","title":"static let inheritStdin: TestSubprocessFlags","type":"property"},{"path":"\/documentation\/glib\/testsubprocessflags\/inheritstdout","title":"static let inheritStdout: TestSubprocessFlags","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/glib\/testsubprocessflags\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/glib\/testsubprocessflags\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/testsubprocessflags\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/testsubprocessflags\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/testsubprocessflags\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/glib\/testsubprocessflags\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/glib\/testsubprocessflags\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/glib\/testsubprocessflags\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/glib\/testsubprocessflags\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/glib\/testsubprocessflags\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/testsubprocessflags\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/glib\/testsubprocessflags\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/glib\/testsubprocessflags\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/glib\/testsubprocessflags\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/testsubprocessflags\/init(_:)-9s0fq","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/glib\/testsubprocessflags\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/testsubprocessflags\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/testsubprocessflags\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/testsubprocessflags\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/testsubprocessflags\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/testsubprocessflags\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/testsubprocessflags\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/testsubprocessflags\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/glib\/testsubprocessflags\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/glib\/testsubprocessflags\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/glib\/testsubprocessflags","title":"TestSubprocessFlags","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/testsuiteref\/init(_:)-4utw0","title":"init!(UnsafeMutablePointer<GTestSuite>?)","type":"init"},{"path":"\/documentation\/glib\/testsuiteref\/init(_:)-4vur0","title":"init(UnsafePointer<GTestSuite>)","type":"init"},{"path":"\/documentation\/glib\/testsuiteref\/init(_:)-51euj","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/testsuiteref\/init(_:)-60t3b","title":"init(UnsafeMutablePointer<GTestSuite>)","type":"init"},{"path":"\/documentation\/glib\/testsuiteref\/init(_:)-ajmf","title":"init!(UnsafePointer<GTestSuite>?)","type":"init"},{"path":"\/documentation\/glib\/testsuiteref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/testsuiteref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/testsuiteref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/testsuiteref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/testsuiteref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/testsuiteref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/testsuiteref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/testsuiteref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/testsuiteref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/testsuiteref\/add(testcase:)","title":"func add<TestCaseT>(testCase: TestCaseT)","type":"method"},{"path":"\/documentation\/glib\/testsuiteref\/addsuite(nestedsuite:)","title":"func addSuite<TestSuiteT>(nestedsuite: TestSuiteT)","type":"method"},{"path":"\/documentation\/glib\/testsuiteref\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/glib\/testsuiteref\/testrunsuite()","title":"func testRunSuite() -> Int","type":"method"}],"path":"\/documentation\/glib\/testsuiteref\/testsuiteprotocol-implementations","title":"TestSuiteProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/testsuiteref","title":"TestSuiteRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/testtrapflags\/init(_:)-9wmnz","title":"init<I>(I)","type":"init"},{"path":"\/documentation\/glib\/testtrapflags\/init(_:)-zwjh","title":"init(GTestTrapFlags)","type":"init"},{"path":"\/documentation\/glib\/testtrapflags\/init(rawvalue:)","title":"init(rawValue: UInt32)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/testtrapflags\/int","title":"var int: gint","type":"property"},{"path":"\/documentation\/glib\/testtrapflags\/intvalue","title":"var intValue: Int","type":"property"},{"path":"\/documentation\/glib\/testtrapflags\/rawvalue","title":"var rawValue: UInt32","type":"property"},{"path":"\/documentation\/glib\/testtrapflags\/value","title":"var value: GTestTrapFlags","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/testtrapflags\/default","title":"static let `default`: TestTrapFlags","type":"property"},{"path":"\/documentation\/glib\/testtrapflags\/inheritstdin","title":"static let inheritStdin: TestTrapFlags","type":"property"},{"path":"\/documentation\/glib\/testtrapflags\/silencestderr","title":"static let silenceStderr: TestTrapFlags","type":"property"},{"path":"\/documentation\/glib\/testtrapflags\/silencestdout","title":"static let silenceStdout: TestTrapFlags","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/glib\/testtrapflags\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/glib\/testtrapflags\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/testtrapflags\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/testtrapflags\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/testtrapflags\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/glib\/testtrapflags\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/glib\/testtrapflags\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/glib\/testtrapflags\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/glib\/testtrapflags\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/glib\/testtrapflags\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/testtrapflags\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/glib\/testtrapflags\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/glib\/testtrapflags\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/glib\/testtrapflags\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/testtrapflags\/init(_:)-63y1i","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/glib\/testtrapflags\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/testtrapflags\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/testtrapflags\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/testtrapflags\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/testtrapflags\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/testtrapflags\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/testtrapflags\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/testtrapflags\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/glib\/testtrapflags\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/glib\/testtrapflags\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/glib\/testtrapflags","title":"TestTrapFlags","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/threadfunctionsref\/init(_:)-10gbb","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/threadfunctionsref\/init(_:)-57uzx","title":"init!(UnsafePointer<GThreadFunctions>?)","type":"init"},{"path":"\/documentation\/glib\/threadfunctionsref\/init(_:)-5sul8","title":"init(UnsafePointer<GThreadFunctions>)","type":"init"},{"path":"\/documentation\/glib\/threadfunctionsref\/init(_:)-83ove","title":"init!(UnsafeMutablePointer<GThreadFunctions>?)","type":"init"},{"path":"\/documentation\/glib\/threadfunctionsref\/init(_:)-93r96","title":"init(UnsafeMutablePointer<GThreadFunctions>)","type":"init"},{"path":"\/documentation\/glib\/threadfunctionsref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/threadfunctionsref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/threadfunctionsref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/threadfunctionsref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/threadfunctionsref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/threadfunctionsref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/threadfunctionsref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/threadfunctionsref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/threadfunctionsref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"}],"path":"\/documentation\/glib\/threadfunctionsref","title":"ThreadFunctionsRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/threadpoolref\/init(_:)-23tja","title":"init(UnsafeMutablePointer<GThreadPool>)","type":"init"},{"path":"\/documentation\/glib\/threadpoolref\/init(_:)-34spm","title":"init(UnsafePointer<GThreadPool>)","type":"init"},{"path":"\/documentation\/glib\/threadpoolref\/init(_:)-5mqz7","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/threadpoolref\/init(_:)-92aql","title":"init!(UnsafeMutablePointer<GThreadPool>?)","type":"init"},{"path":"\/documentation\/glib\/threadpoolref\/init(_:)-eq03","title":"init!(UnsafePointer<GThreadPool>?)","type":"init"},{"path":"\/documentation\/glib\/threadpoolref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/threadpoolref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/threadpoolref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/threadpoolref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/threadpoolref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/threadpoolref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/threadpoolref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/threadpoolref\/new(full:userdata:itemfreefunc:maxthreads:exclusive:)","title":"static func new(full: GFunc?, userData: gpointer?, itemFreeFunc: GDestroyNotify?, maxThreads: Int, exclusive: Bool) throws -> ThreadPoolRef!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/threadpoolref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/threadpoolref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/threadpoolref\/exclusive","title":"var exclusive: gboolean","type":"property"},{"path":"\/documentation\/glib\/threadpoolref\/func","title":"var `func`: GFunc!","type":"property"},{"path":"\/documentation\/glib\/threadpoolref\/maxthreads","title":"var maxThreads: Int","type":"property"},{"path":"\/documentation\/glib\/threadpoolref\/numthreads","title":"var numThreads: Int","type":"property"},{"path":"\/documentation\/glib\/threadpoolref\/userdata","title":"var userData: gpointer?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/threadpoolref\/free(immediate:wait:)","title":"func free(immediate: Bool, wait: Bool)","type":"method"},{"path":"\/documentation\/glib\/threadpoolref\/getmaxthreads()","title":"func getMaxThreads() -> Int","type":"method"},{"path":"\/documentation\/glib\/threadpoolref\/getnumthreads()","title":"func getNumThreads() -> Int","type":"method"},{"path":"\/documentation\/glib\/threadpoolref\/movetofront(data:)","title":"func moveToFront(data: gpointer?) -> Bool","type":"method"},{"path":"\/documentation\/glib\/threadpoolref\/push(data:)","title":"func push(data: gpointer?) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/threadpoolref\/set(maxthreads:)","title":"func set(maxThreads: Int) throws -> Bool","type":"method"},{"path":"\/documentation\/glib\/threadpoolref\/setsortfunction(func:userdata:)","title":"func setSortFunction(func: GCompareDataFunc?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/threadpoolref\/unprocessed()","title":"func unprocessed() -> Int","type":"method"}],"path":"\/documentation\/glib\/threadpoolref\/threadpoolprotocol-implementations","title":"ThreadPoolProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/threadpoolref","title":"ThreadPoolRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/threadref\/init(_:)-10qca","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/threadref\/init(_:)-5fvvl","title":"init(UnsafeMutablePointer<GThread>)","type":"init"},{"path":"\/documentation\/glib\/threadref\/init(_:)-7za0v","title":"init(UnsafePointer<GThread>)","type":"init"},{"path":"\/documentation\/glib\/threadref\/init(_:)-83zhs","title":"init!(UnsafeMutablePointer<GThread>?)","type":"init"},{"path":"\/documentation\/glib\/threadref\/init(_:)-861fu","title":"init!(UnsafePointer<GThread>?)","type":"init"},{"path":"\/documentation\/glib\/threadref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/threadref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/threadref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/threadref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/threadref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/threadref\/init(name:func:data:)","title":"init(name: UnsafePointer<gchar>?, func: GThreadFunc?, data: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/threadref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/threadref\/init(try_:func:data:)","title":"init(try_: UnsafePointer<gchar>?, func: GThreadFunc?, data: gpointer?) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/threadref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/threadref\/create(func:data:joinable:)","title":"static func create(func: GThreadFunc?, data: gpointer?, joinable: Bool) throws -> ThreadRef!","type":"method"},{"path":"\/documentation\/glib\/threadref\/createfull(func:data:stacksize:joinable:bound:priority:)","title":"static func createFull(func: GThreadFunc?, data: gpointer?, stackSize: Int, joinable: Bool, bound: Bool, priority: GThreadPriority) throws -> ThreadRef!","type":"method"},{"path":"\/documentation\/glib\/threadref\/self_()","title":"static func self_() -> ThreadRef!","type":"method"},{"path":"\/documentation\/glib\/threadref\/trynew(try_:func:data:)","title":"static func tryNew(try_: UnsafePointer<gchar>?, func: GThreadFunc?, data: gpointer?) throws -> ThreadRef!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/threadref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/threadref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/threadref\/thread_ptr","title":"var thread_ptr: UnsafeMutablePointer<GThread>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/threadref\/join()","title":"func join() -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/threadref\/ref()","title":"func ref() -> ThreadRef!","type":"method"},{"path":"\/documentation\/glib\/threadref\/set(priority:)","title":"func set(priority: GThreadPriority)","type":"method"},{"path":"\/documentation\/glib\/threadref\/unref()","title":"func unref()","type":"method"}],"path":"\/documentation\/glib\/threadref\/threadprotocol-implementations","title":"ThreadProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/threadref","title":"ThreadRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/timevalref\/init(_:)-2zigd","title":"init!(UnsafeMutablePointer<GTimeVal>?)","type":"init"},{"path":"\/documentation\/glib\/timevalref\/init(_:)-7eqcd","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/timevalref\/init(_:)-8spc","title":"init(UnsafePointer<GTimeVal>)","type":"init"},{"path":"\/documentation\/glib\/timevalref\/init(_:)-9dwpz","title":"init(UnsafeMutablePointer<GTimeVal>)","type":"init"},{"path":"\/documentation\/glib\/timevalref\/init(_:)-9phwi","title":"init!(UnsafePointer<GTimeVal>?)","type":"init"},{"path":"\/documentation\/glib\/timevalref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/timevalref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/timevalref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/timevalref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/timevalref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/timevalref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/timevalref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/timevalref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/timevalref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/timevalref\/tvsec","title":"var tvSec: glong","type":"property"},{"path":"\/documentation\/glib\/timevalref\/tvusec","title":"var tvUsec: glong","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/timevalref\/add(microseconds:)","title":"func add(microseconds: Int)","type":"method"},{"path":"\/documentation\/glib\/timevalref\/fromiso8601(isodate:)","title":"func fromIso8601(isoDate: UnsafePointer<gchar>!) -> Bool","type":"method"},{"path":"\/documentation\/glib\/timevalref\/getcurrenttime()","title":"func getCurrentTime()","type":"method"},{"path":"\/documentation\/glib\/timevalref\/timevalfromiso8601(isodate:)","title":"func timeValFromIso8601(isoDate: UnsafePointer<gchar>!) -> Bool","type":"method"},{"path":"\/documentation\/glib\/timevalref\/toiso8601()","title":"func toIso8601() -> String!","type":"method"}],"path":"\/documentation\/glib\/timevalref\/timevalprotocol-implementations","title":"TimeValProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/timevalref","title":"TimeValRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/timezoneref\/init(_:)-3wi4a","title":"init(UnsafeMutablePointer<GTimeZone>)","type":"init"},{"path":"\/documentation\/glib\/timezoneref\/init(_:)-5j2y","title":"init!(UnsafePointer<GTimeZone>?)","type":"init"},{"path":"\/documentation\/glib\/timezoneref\/init(_:)-7gvn1","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/timezoneref\/init(_:)-8j5ou","title":"init(UnsafePointer<GTimeZone>)","type":"init"},{"path":"\/documentation\/glib\/timezoneref\/init(_:)-8m404","title":"init!(UnsafeMutablePointer<GTimeZone>?)","type":"init"},{"path":"\/documentation\/glib\/timezoneref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/timezoneref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/timezoneref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/timezoneref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/timezoneref\/init(identifier:)","title":"init(identifier: UnsafePointer<gchar>?)","type":"init"},{"path":"\/documentation\/glib\/timezoneref\/init(identifierorutc:)","title":"init(identifierOrUtc: UnsafePointer<gchar>?)","type":"init"},{"path":"\/documentation\/glib\/timezoneref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/timezoneref\/init(offset:)","title":"init(offset: gint32)","type":"init"},{"path":"\/documentation\/glib\/timezoneref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/timezoneref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/timezoneref\/new(identifier:)","title":"static func new(identifier: UnsafePointer<gchar>?) -> TimeZoneRef!","type":"method"},{"path":"\/documentation\/glib\/timezoneref\/new(offset:)","title":"static func new(offset: gint32) -> TimeZoneRef!","type":"method"},{"path":"\/documentation\/glib\/timezoneref\/newlocal()","title":"static func newLocal() -> TimeZoneRef!","type":"method"},{"path":"\/documentation\/glib\/timezoneref\/newutc()","title":"static func newUTC() -> TimeZoneRef!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/timezoneref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/timezoneref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/timezoneref\/identifier","title":"var identifier: String!","type":"property"},{"path":"\/documentation\/glib\/timezoneref\/time_zone_ptr","title":"var time_zone_ptr: UnsafeMutablePointer<GTimeZone>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/timezoneref\/adjusttime(type:time:)","title":"func adjustTime(type: GTimeType, time: UnsafeMutablePointer<gint64>!) -> Int","type":"method"},{"path":"\/documentation\/glib\/timezoneref\/findinterval(type:time:)","title":"func findInterval(type: GTimeType, time: gint64) -> Int","type":"method"},{"path":"\/documentation\/glib\/timezoneref\/getabbreviation(interval:)","title":"func getAbbreviation(interval: Int) -> String!","type":"method"},{"path":"\/documentation\/glib\/timezoneref\/getidentifier()","title":"func getIDentifier() -> String!","type":"method"},{"path":"\/documentation\/glib\/timezoneref\/getoffset(interval:)","title":"func getOffset(interval: Int) -> gint32","type":"method"},{"path":"\/documentation\/glib\/timezoneref\/isdst(interval:)","title":"func isDst(interval: Int) -> Bool","type":"method"},{"path":"\/documentation\/glib\/timezoneref\/ref()","title":"func ref() -> TimeZoneRef!","type":"method"},{"path":"\/documentation\/glib\/timezoneref\/unref()","title":"func unref()","type":"method"}],"path":"\/documentation\/glib\/timezoneref\/timezoneprotocol-implementations","title":"TimeZoneProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/timezoneref","title":"TimeZoneRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/timerref\/init(_:)-1rg84","title":"init(UnsafePointer<GTimer>)","type":"init"},{"path":"\/documentation\/glib\/timerref\/init(_:)-1tdf3","title":"init(UnsafeMutablePointer<GTimer>)","type":"init"},{"path":"\/documentation\/glib\/timerref\/init(_:)-4qn2t","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/timerref\/init(_:)-6705y","title":"init!(UnsafeMutablePointer<GTimer>?)","type":"init"},{"path":"\/documentation\/glib\/timerref\/init(_:)-7h95p","title":"init!(UnsafePointer<GTimer>?)","type":"init"},{"path":"\/documentation\/glib\/timerref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/timerref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/timerref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/timerref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/timerref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/timerref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/timerref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/timerref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/timerref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/timerref\/isactive","title":"var isActive: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/timerref\/continue_()","title":"func continue_()","type":"method"},{"path":"\/documentation\/glib\/timerref\/destroy()","title":"func destroy()","type":"method"},{"path":"\/documentation\/glib\/timerref\/elapsed(microseconds:)","title":"func elapsed(microseconds: UnsafeMutablePointer<gulong>!) -> Double","type":"method"},{"path":"\/documentation\/glib\/timerref\/reset()","title":"func reset()","type":"method"},{"path":"\/documentation\/glib\/timerref\/start()","title":"func start()","type":"method"},{"path":"\/documentation\/glib\/timerref\/stop()","title":"func stop()","type":"method"}],"path":"\/documentation\/glib\/timerref\/timerprotocol-implementations","title":"TimerProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/timerref","title":"TimerRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/tokenvalueref\/init(_:)-2grg1","title":"init!(UnsafeMutablePointer<GTokenValue>?)","type":"init"},{"path":"\/documentation\/glib\/tokenvalueref\/init(_:)-36mj2","title":"init!(UnsafePointer<GTokenValue>?)","type":"init"},{"path":"\/documentation\/glib\/tokenvalueref\/init(_:)-5zute","title":"init(UnsafeMutablePointer<GTokenValue>)","type":"init"},{"path":"\/documentation\/glib\/tokenvalueref\/init(_:)-62com","title":"init(UnsafePointer<GTokenValue>)","type":"init"},{"path":"\/documentation\/glib\/tokenvalueref\/init(_:)-7vxdp","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/tokenvalueref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/tokenvalueref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/tokenvalueref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/tokenvalueref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/tokenvalueref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/tokenvalueref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/tokenvalueref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/tokenvalueref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/tokenvalueref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/tokenvalueref\/vbinary","title":"var vBinary: gulong","type":"property"},{"path":"\/documentation\/glib\/tokenvalueref\/vchar","title":"var vChar: guchar","type":"property"},{"path":"\/documentation\/glib\/tokenvalueref\/vcomment","title":"var vComment: UnsafeMutablePointer<gchar>!","type":"property"},{"path":"\/documentation\/glib\/tokenvalueref\/verror","title":"var vError: guint","type":"property"},{"path":"\/documentation\/glib\/tokenvalueref\/vfloat","title":"var vFloat: gdouble","type":"property"},{"path":"\/documentation\/glib\/tokenvalueref\/vhex","title":"var vHex: gulong","type":"property"},{"path":"\/documentation\/glib\/tokenvalueref\/videntifier","title":"var vIDentifier: UnsafeMutablePointer<gchar>!","type":"property"},{"path":"\/documentation\/glib\/tokenvalueref\/vint","title":"var vInt: gulong","type":"property"},{"path":"\/documentation\/glib\/tokenvalueref\/vint64","title":"var vInt64: guint64","type":"property"},{"path":"\/documentation\/glib\/tokenvalueref\/voctal","title":"var vOctal: gulong","type":"property"},{"path":"\/documentation\/glib\/tokenvalueref\/vstring","title":"var vString: UnsafeMutablePointer<gchar>!","type":"property"},{"path":"\/documentation\/glib\/tokenvalueref\/vsymbol","title":"var vSymbol: gpointer?","type":"property"}],"path":"\/documentation\/glib\/tokenvalueref\/tokenvalueprotocol-implementations","title":"TokenValueProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/tokenvalueref","title":"TokenValueRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/trashstackref\/init(_:)-3f12w","title":"init!(UnsafeMutablePointer<GTrashStack>?)","type":"init"},{"path":"\/documentation\/glib\/trashstackref\/init(_:)-5s4fg","title":"init(UnsafeMutablePointer<GTrashStack>)","type":"init"},{"path":"\/documentation\/glib\/trashstackref\/init(_:)-945px","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/trashstackref\/init(_:)-9omnc","title":"init(UnsafePointer<GTrashStack>)","type":"init"},{"path":"\/documentation\/glib\/trashstackref\/init(_:)-sdqv","title":"init!(UnsafePointer<GTrashStack>?)","type":"init"},{"path":"\/documentation\/glib\/trashstackref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/trashstackref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/trashstackref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/trashstackref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/trashstackref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/trashstackref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/trashstackref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/trashstackref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/trashstackref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/trashstackref\/next","title":"var next: TrashStackRef!","type":"property"}],"path":"\/documentation\/glib\/trashstackref\/trashstackprotocol-implementations","title":"TrashStackProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/trashstackref","title":"TrashStackRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/traverseflags\/init(_:)-48qm9","title":"init(GTraverseFlags)","type":"init"},{"path":"\/documentation\/glib\/traverseflags\/init(_:)-5d9lz","title":"init<I>(I)","type":"init"},{"path":"\/documentation\/glib\/traverseflags\/init(rawvalue:)","title":"init(rawValue: UInt32)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/traverseflags\/int","title":"var int: gint","type":"property"},{"path":"\/documentation\/glib\/traverseflags\/intvalue","title":"var intValue: Int","type":"property"},{"path":"\/documentation\/glib\/traverseflags\/rawvalue","title":"var rawValue: UInt32","type":"property"},{"path":"\/documentation\/glib\/traverseflags\/value","title":"var value: GTraverseFlags","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/traverseflags\/all","title":"static let all: TraverseFlags","type":"property"},{"path":"\/documentation\/glib\/traverseflags\/leafs","title":"static let leafs: TraverseFlags","type":"property"},{"path":"\/documentation\/glib\/traverseflags\/leaves","title":"static let leaves: TraverseFlags","type":"property"},{"path":"\/documentation\/glib\/traverseflags\/mask","title":"static let mask: TraverseFlags","type":"property"},{"path":"\/documentation\/glib\/traverseflags\/nonleafs","title":"static let nonLeafs: TraverseFlags","type":"property"},{"path":"\/documentation\/glib\/traverseflags\/nonleaves","title":"static let nonLeaves: TraverseFlags","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/glib\/traverseflags\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/glib\/traverseflags\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/traverseflags\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/traverseflags\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/traverseflags\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/glib\/traverseflags\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/glib\/traverseflags\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/glib\/traverseflags\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/glib\/traverseflags\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/glib\/traverseflags\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/traverseflags\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/glib\/traverseflags\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/glib\/traverseflags\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/glib\/traverseflags\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/traverseflags\/init(_:)-5o6hx","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/glib\/traverseflags\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/traverseflags\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/traverseflags\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/traverseflags\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/traverseflags\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/traverseflags\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/traverseflags\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/traverseflags\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/glib\/traverseflags\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/glib\/traverseflags\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/glib\/traverseflags","title":"TraverseFlags","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/treenoderef\/init(_:)-4mnoq","title":"init(UnsafePointer<GTreeNode>)","type":"init"},{"path":"\/documentation\/glib\/treenoderef\/init(_:)-5kaxq","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/treenoderef\/init(_:)-94tp8","title":"init!(UnsafePointer<GTreeNode>?)","type":"init"},{"path":"\/documentation\/glib\/treenoderef\/init(_:)-9sdr0","title":"init(UnsafeMutablePointer<GTreeNode>)","type":"init"},{"path":"\/documentation\/glib\/treenoderef\/init(_:)-hnxk","title":"init!(UnsafeMutablePointer<GTreeNode>?)","type":"init"},{"path":"\/documentation\/glib\/treenoderef\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/treenoderef\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/treenoderef\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/treenoderef\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/treenoderef\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/treenoderef\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/treenoderef\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/treenoderef\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/treenoderef\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/treenoderef\/key()","title":"func key() -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/treenoderef\/next()","title":"func next() -> TreeNodeRef!","type":"method"},{"path":"\/documentation\/glib\/treenoderef\/previous()","title":"func previous() -> TreeNodeRef!","type":"method"},{"path":"\/documentation\/glib\/treenoderef\/value()","title":"func value() -> gpointer?","type":"method"}],"path":"\/documentation\/glib\/treenoderef\/treenodeprotocol-implementations","title":"TreeNodeProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/treenoderef","title":"TreeNodeRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/treeref\/init(_:)-2v2m1","title":"init(UnsafeMutablePointer<GTree>)","type":"init"},{"path":"\/documentation\/glib\/treeref\/init(_:)-5bnhj","title":"init!(UnsafePointer<GTree>?)","type":"init"},{"path":"\/documentation\/glib\/treeref\/init(_:)-7spqz","title":"init(UnsafePointer<GTree>)","type":"init"},{"path":"\/documentation\/glib\/treeref\/init(_:)-7tgv0","title":"init!(UnsafeMutablePointer<GTree>?)","type":"init"},{"path":"\/documentation\/glib\/treeref\/init(_:)-8hm59","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/treeref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/treeref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/treeref\/init(data:keycomparedata:)","title":"init(data: GCompareDataFunc?, keyCompareData: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/treeref\/init(full:keycomparedata:keydestroyfunc:valuedestroyfunc:)","title":"init(full: GCompareDataFunc?, keyCompareData: gpointer?, keyDestroyFunc: GDestroyNotify?, valueDestroyFunc: GDestroyNotify?)","type":"init"},{"path":"\/documentation\/glib\/treeref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/treeref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/treeref\/init(keycomparefunc:)","title":"init(keyCompareFunc: GCompareFunc?)","type":"init"},{"path":"\/documentation\/glib\/treeref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/treeref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/treeref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/treeref\/new(full:keycomparedata:keydestroyfunc:valuedestroyfunc:)","title":"static func new(full: GCompareDataFunc?, keyCompareData: gpointer?, keyDestroyFunc: GDestroyNotify?, valueDestroyFunc: GDestroyNotify?) -> TreeRef!","type":"method"},{"path":"\/documentation\/glib\/treeref\/newwith(data:keycomparedata:)","title":"static func newWith(data: GCompareDataFunc?, keyCompareData: gpointer?) -> TreeRef!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/treeref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/treeref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/treeref\/tree_ptr","title":"var tree_ptr: UnsafeMutablePointer<GTree>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/treeref\/destroy()","title":"func destroy()","type":"method"},{"path":"\/documentation\/glib\/treeref\/foreach(func:userdata:)","title":"func foreach(func: GTraverseFunc?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/treeref\/foreachnode(func:userdata:)","title":"func foreachNode(func: GTraverseNodeFunc?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/treeref\/height()","title":"func height() -> Int","type":"method"},{"path":"\/documentation\/glib\/treeref\/insert(key:value:)","title":"func insert(key: gpointer?, value: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/treeref\/insertnode(key:value:)","title":"func insertNode(key: gpointer?, value: gpointer?) -> TreeNodeRef!","type":"method"},{"path":"\/documentation\/glib\/treeref\/lookup(key:)","title":"func lookup(key: gconstpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/treeref\/lookupextended(lookupkey:origkey:value:)","title":"func lookupExtended(lookupKey: gconstpointer?, origKey: UnsafeMutablePointer<gpointer?>?, value: UnsafeMutablePointer<gpointer?>?) -> Bool","type":"method"},{"path":"\/documentation\/glib\/treeref\/lookupnode(key:)","title":"func lookupNode(key: gconstpointer?) -> TreeNodeRef!","type":"method"},{"path":"\/documentation\/glib\/treeref\/lowerbound(key:)","title":"func lowerBound(key: gconstpointer?) -> TreeNodeRef!","type":"method"},{"path":"\/documentation\/glib\/treeref\/nnodes()","title":"func nnodes() -> Int","type":"method"},{"path":"\/documentation\/glib\/treeref\/nodefirst()","title":"func nodeFirst() -> TreeNodeRef!","type":"method"},{"path":"\/documentation\/glib\/treeref\/nodelast()","title":"func nodeLast() -> TreeNodeRef!","type":"method"},{"path":"\/documentation\/glib\/treeref\/ref()","title":"func ref() -> TreeRef!","type":"method"},{"path":"\/documentation\/glib\/treeref\/remove(key:)","title":"func remove(key: gconstpointer?) -> Bool","type":"method"},{"path":"\/documentation\/glib\/treeref\/removeall()","title":"func removeAll()","type":"method"},{"path":"\/documentation\/glib\/treeref\/replace(key:value:)","title":"func replace(key: gpointer?, value: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/treeref\/replacenode(key:value:)","title":"func replaceNode(key: gpointer?, value: gpointer?) -> TreeNodeRef!","type":"method"},{"path":"\/documentation\/glib\/treeref\/search(searchfunc:userdata:)","title":"func search(searchFunc: GCompareFunc?, userData: gconstpointer?) -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/treeref\/searchnode(searchfunc:userdata:)","title":"func searchNode(searchFunc: GCompareFunc?, userData: gconstpointer?) -> TreeNodeRef!","type":"method"},{"path":"\/documentation\/glib\/treeref\/steal(key:)","title":"func steal(key: gconstpointer?) -> Bool","type":"method"},{"path":"\/documentation\/glib\/treeref\/traverse(traversefunc:traversetype:userdata:)","title":"func traverse(traverseFunc: GTraverseFunc?, traverseType: GTraverseType, userData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/treeref\/unref()","title":"func unref()","type":"method"},{"path":"\/documentation\/glib\/treeref\/upperbound(key:)","title":"func upperBound(key: gconstpointer?) -> TreeNodeRef!","type":"method"}],"path":"\/documentation\/glib\/treeref\/treeprotocol-implementations","title":"TreeProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/treeref","title":"TreeRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/tuplesref\/init(_:)-246mg","title":"init!(UnsafeMutablePointer<GTuples>?)","type":"init"},{"path":"\/documentation\/glib\/tuplesref\/init(_:)-2scgk","title":"init!(UnsafePointer<GTuples>?)","type":"init"},{"path":"\/documentation\/glib\/tuplesref\/init(_:)-4rkms","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/tuplesref\/init(_:)-7qxrl","title":"init(UnsafeMutablePointer<GTuples>)","type":"init"},{"path":"\/documentation\/glib\/tuplesref\/init(_:)-9ct6o","title":"init(UnsafePointer<GTuples>)","type":"init"},{"path":"\/documentation\/glib\/tuplesref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/tuplesref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/tuplesref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/tuplesref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/tuplesref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/tuplesref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/tuplesref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/tuplesref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/tuplesref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/tuplesref\/len","title":"var len: guint","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/tuplesref\/destroy()","title":"func destroy()","type":"method"},{"path":"\/documentation\/glib\/tuplesref\/index(index:field:)","title":"func index(index: Int, field: Int) -> gpointer?","type":"method"}],"path":"\/documentation\/glib\/tuplesref\/tuplesprotocol-implementations","title":"TuplesProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/tuplesref","title":"TuplesRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/typedarrayref\/init(_:)-1ckzn","title":"init(UnsafePointer<GArray>)","type":"init"},{"path":"\/documentation\/glib\/typedarrayref\/init(_:)-1cuh0","title":"init!(UnsafePointer<GArray>?)","type":"init"},{"path":"\/documentation\/glib\/typedarrayref\/init(_:)-46cz1","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/typedarrayref\/init(_:)-7ew3x","title":"init!(UnsafeMutablePointer<GArray>?)","type":"init"},{"path":"\/documentation\/glib\/typedarrayref\/init(_:)-89x0u","title":"init(UnsafeMutablePointer<GArray>)","type":"init"},{"path":"\/documentation\/glib\/typedarrayref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/typedarrayref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/typedarrayref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/typedarrayref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/typedarrayref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/typedarrayref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/typedarrayref\/ptr","title":"var ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/typedarrayref\/array_ptr","title":"var array_ptr: UnsafeMutablePointer<GArray>!","type":"property"},{"path":"\/documentation\/glib\/typedarrayref\/data","title":"var data: UnsafeMutablePointer<gchar>!","type":"property"},{"path":"\/documentation\/glib\/typedarrayref\/elementsize","title":"var elementSize: Int","type":"property"},{"path":"\/documentation\/glib\/typedarrayref\/len","title":"var len: guint","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/typedarrayref\/appendvals(data:len:)","title":"func appendVals(data: gconstpointer?, len: Int) -> ArrayRef!","type":"method"},{"path":"\/documentation\/glib\/typedarrayref\/binarysearch(target:comparefunc:outmatchindex:)","title":"func binarySearch(target: gconstpointer?, compareFunc: GCompareFunc?, outMatchIndex: UnsafeMutablePointer<guint>!) -> Bool","type":"method"},{"path":"\/documentation\/glib\/typedarrayref\/copy()","title":"func copy() -> ArrayRef!","type":"method"},{"path":"\/documentation\/glib\/typedarrayref\/free(freesegment:)","title":"func free(freeSegment: Bool) -> String!","type":"method"},{"path":"\/documentation\/glib\/typedarrayref\/getelementsize()","title":"func getElementSize() -> Int","type":"method"},{"path":"\/documentation\/glib\/typedarrayref\/insertvals(index:data:len:)","title":"func insertVals(index: Int, data: gconstpointer?, len: Int) -> ArrayRef!","type":"method"},{"path":"\/documentation\/glib\/typedarrayref\/prependvals(data:len:)","title":"func prependVals(data: gconstpointer?, len: Int) -> ArrayRef!","type":"method"},{"path":"\/documentation\/glib\/typedarrayref\/ref()","title":"func ref() -> ArrayRef!","type":"method"},{"path":"\/documentation\/glib\/typedarrayref\/remove(index:)","title":"func remove(index: Int) -> ArrayRef!","type":"method"},{"path":"\/documentation\/glib\/typedarrayref\/removeindexfast(index:)","title":"func removeIndexFast(index: Int) -> ArrayRef!","type":"method"},{"path":"\/documentation\/glib\/typedarrayref\/removerange(index:length:)","title":"func removeRange(index: Int, length: Int) -> ArrayRef!","type":"method"},{"path":"\/documentation\/glib\/typedarrayref\/set(clearfunc:)","title":"func set(clearFunc: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/glib\/typedarrayref\/setsize(length:)","title":"func setSize(length: Int) -> ArrayRef!","type":"method"},{"path":"\/documentation\/glib\/typedarrayref\/sort(comparefunc:)","title":"func sort(compareFunc: GCompareFunc?)","type":"method"},{"path":"\/documentation\/glib\/typedarrayref\/sortwithdata(comparefunc:userdata:)","title":"func sortWithData(compareFunc: GCompareDataFunc?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/typedarrayref\/steal(len:)","title":"func steal(len: UnsafeMutablePointer<gsize>!) -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/typedarrayref\/unref()","title":"func unref()","type":"method"}],"path":"\/documentation\/glib\/typedarrayref\/arrayprotocol-implementations","title":"ArrayProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/typedarrayref\/last","title":"var last: Self.Element?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/typedarrayref\/difference(from:)","title":"func difference<C>(from: C) -> CollectionDifference<Self.Element>","type":"method"},{"path":"\/documentation\/glib\/typedarrayref\/difference(from:by:)","title":"func difference<C>(from: C, by: (C.Element, Self.Element) -> Bool) -> CollectionDifference<Self.Element>","type":"method"},{"path":"\/documentation\/glib\/typedarrayref\/droplast(_:)","title":"func dropLast(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/typedarrayref\/firstrange(of:)-3al4d","title":"func firstRange<C>(of: C) -> Range<Self.Index>?","type":"method"},{"path":"\/documentation\/glib\/typedarrayref\/formindex(before:)","title":"func formIndex(before: inout Self.Index)","type":"method"},{"path":"\/documentation\/glib\/typedarrayref\/joined(separator:)-8r2fx","title":"func joined(separator: String) -> String","type":"method"},{"path":"\/documentation\/glib\/typedarrayref\/last(where:)","title":"func last(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/typedarrayref\/lastindex(of:)","title":"func lastIndex(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/glib\/typedarrayref\/lastindex(where:)","title":"func lastIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/glib\/typedarrayref\/reversed()","title":"func reversed() -> ReversedCollection<Self>","type":"method"},{"path":"\/documentation\/glib\/typedarrayref\/suffix(_:)","title":"func suffix(Int) -> Self.SubSequence","type":"method"}],"path":"\/documentation\/glib\/typedarrayref\/bidirectionalcollection-implementations","title":"BidirectionalCollection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/typedarrayref\/first","title":"var first: Self.Element?","type":"property"},{"path":"\/documentation\/glib\/typedarrayref\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/glib\/typedarrayref\/underestimatedcount","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/typedarrayref\/contains(_:)-4dm12","title":"func contains<C>(C) -> Bool","type":"method"},{"path":"\/documentation\/glib\/typedarrayref\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/typedarrayref\/dropfirst(_:)","title":"func dropFirst(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/typedarrayref\/firstindex(of:)","title":"func firstIndex(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/glib\/typedarrayref\/firstindex(where:)","title":"func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/glib\/typedarrayref\/firstrange(of:)-85ovo","title":"func firstRange<C>(of: C) -> Range<Self.Index>?","type":"method"},{"path":"\/documentation\/glib\/typedarrayref\/formindex(_:offsetby:)","title":"func formIndex(inout Self.Index, offsetBy: Int)","type":"method"},{"path":"\/documentation\/glib\/typedarrayref\/formindex(_:offsetby:limitedby:)","title":"func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool","type":"method"},{"path":"\/documentation\/glib\/typedarrayref\/formindex(after:)","title":"func formIndex(after: inout Self.Index)","type":"method"},{"path":"\/documentation\/glib\/typedarrayref\/index(of:)","title":"func index(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/glib\/typedarrayref\/makeiterator()","title":"func makeIterator() -> IndexingIterator<Self>","type":"method"},{"path":"\/documentation\/glib\/typedarrayref\/map(_:)-5bi71","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/glib\/typedarrayref\/prefix(_:)","title":"func prefix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/typedarrayref\/prefix(through:)","title":"func prefix(through: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/typedarrayref\/prefix(upto:)","title":"func prefix(upTo: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/typedarrayref\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/typedarrayref\/randomelement()","title":"func randomElement() -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/typedarrayref\/randomelement(using:)","title":"func randomElement<T>(using: inout T) -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/typedarrayref\/ranges(of:)","title":"func ranges<C>(of: C) -> [Range<Self.Index>]","type":"method"},{"path":"\/documentation\/glib\/typedarrayref\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/glib\/typedarrayref\/split(separator:maxsplits:omittingemptysubsequences:)-1ysmp","title":"func split<C>(separator: C, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/glib\/typedarrayref\/split(separator:maxsplits:omittingemptysubsequences:)-9rkd0","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/glib\/typedarrayref\/suffix(from:)","title":"func suffix(from: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/typedarrayref\/trimmingprefix(_:)","title":"func trimmingPrefix<Prefix>(Prefix) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/typedarrayref\/trimmingprefix(while:)","title":"func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"}],"path":"\/documentation\/glib\/typedarrayref\/collection-implementations","title":"Collection Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/typedarrayref\/partition(by:)-4giiz","title":"func partition(by: (Self.Element) throws -> Bool) rethrows -> Self.Index","type":"method"},{"path":"\/documentation\/glib\/typedarrayref\/partition(by:)-8xkyv","title":"func partition(by: (Self.Element) throws -> Bool) rethrows -> Self.Index","type":"method"},{"path":"\/documentation\/glib\/typedarrayref\/reverse()","title":"func reverse()","type":"method"},{"path":"\/documentation\/glib\/typedarrayref\/shuffle()","title":"func shuffle()","type":"method"},{"path":"\/documentation\/glib\/typedarrayref\/shuffle(using:)","title":"func shuffle<T>(using: inout T)","type":"method"},{"path":"\/documentation\/glib\/typedarrayref\/sort()","title":"func sort()","type":"method"},{"path":"\/documentation\/glib\/typedarrayref\/sort(by:)","title":"func sort(by: (Self.Element, Self.Element) throws -> Bool) rethrows","type":"method"},{"path":"\/documentation\/glib\/typedarrayref\/sort(using:)-68o0y","title":"func sort<Comparator>(using: Comparator)","type":"method"},{"path":"\/documentation\/glib\/typedarrayref\/sort(using:)-8vdik","title":"func sort<S, Comparator>(using: S)","type":"method"},{"path":"\/documentation\/glib\/typedarrayref\/swapat(_:_:)","title":"func swapAt(Self.Index, Self.Index)","type":"method"},{"path":"\/documentation\/glib\/typedarrayref\/withcontiguousmutablestorageifavailable(_:)","title":"func withContiguousMutableStorageIfAvailable<R>((inout UnsafeMutableBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"}],"path":"\/documentation\/glib\/typedarrayref\/mutablecollection-implementations","title":"MutableCollection Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/typedarrayref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/typedarrayref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/typedarrayref\/index(_:offsetby:limitedby:)","title":"func index(Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?","type":"method"}],"path":"\/documentation\/glib\/typedarrayref\/randomaccesscollection-implementations","title":"RandomAccessCollection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/typedarrayref\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"path":"\/documentation\/glib\/typedarrayref\/publisher","title":"var publisher: Publishers.Sequence<Self, Never>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/typedarrayref\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/typedarrayref\/compactmap(_:)","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/glib\/typedarrayref\/compare(_:_:)","title":"func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult","type":"method"},{"path":"\/documentation\/glib\/typedarrayref\/contains(_:)-6hbuw","title":"func contains(Self.Element) -> Bool","type":"method"},{"path":"\/documentation\/glib\/typedarrayref\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/typedarrayref\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/glib\/typedarrayref\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/typedarrayref\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/typedarrayref\/filter(_:)-5bw3c","title":"func filter(Predicate<Self.Element>) throws -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/typedarrayref\/filter(_:)-8upfa","title":"func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/typedarrayref\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/typedarrayref\/flatmap(_:)-2lmrf","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/glib\/typedarrayref\/flatmap(_:)-2qlb0","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/glib\/typedarrayref\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/glib\/typedarrayref\/formatted()","title":"func formatted() -> String","type":"method"},{"path":"\/documentation\/glib\/typedarrayref\/formatted(_:)","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/glib\/typedarrayref\/joined()","title":"func joined() -> FlattenSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/typedarrayref\/joined(separator:)-79c9q","title":"func joined<Separator>(separator: Separator) -> JoinedSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/typedarrayref\/joined(separator:)-9lmxo","title":"func joined(separator: String) -> String","type":"method"},{"path":"\/documentation\/glib\/typedarrayref\/lexicographicallyprecedes(_:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/glib\/typedarrayref\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/typedarrayref\/map(_:)-8lyub","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/glib\/typedarrayref\/max()","title":"func max() -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/typedarrayref\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/typedarrayref\/min()","title":"func min() -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/typedarrayref\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/typedarrayref\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/glib\/typedarrayref\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/glib\/typedarrayref\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/typedarrayref\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/typedarrayref\/sorted()","title":"func sorted() -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/typedarrayref\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/typedarrayref\/sorted(using:)-3e0gi","title":"func sorted<S, Comparator>(using: S) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/typedarrayref\/sorted(using:)-4go5a","title":"func sorted<Comparator>(using: Comparator) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/typedarrayref\/split(separator:maxsplits:omittingemptysubsequences:)-8qyuf","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/glib\/typedarrayref\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/glib\/typedarrayref\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/typedarrayref\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"}],"path":"\/documentation\/glib\/typedarrayref\/sequence-implementations","title":"Sequence Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/typedarrayref\/count","title":"var count: Int","type":"property"},{"path":"\/documentation\/glib\/typedarrayref\/endindex","title":"var endIndex: Int","type":"property"},{"path":"\/documentation\/glib\/typedarrayref\/startindex","title":"var startIndex: Int","type":"property"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/glib\/typedarrayref\/subscript(_:)","title":"subscript(Int) -> Self.Element","type":"subscript"}],"path":"\/documentation\/glib\/typedarrayref\/typedarrayprotocol-implementations","title":"TypedArrayProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/typedarrayref","title":"TypedArrayRef","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/typedlistiterator\/list","title":"var list: UnsafeMutablePointer<GList>?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/typedlistiterator\/next()","title":"func next() -> Element?","type":"method"}],"path":"\/documentation\/glib\/typedlistiterator","title":"TypedListIterator","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/typedlistref\/init(_:)-2bd46","title":"init!(UnsafeMutablePointer<GList>?)","type":"init"},{"path":"\/documentation\/glib\/typedlistref\/init(_:)-5rw1l","title":"init(UnsafeMutablePointer<GList>)","type":"init"},{"path":"\/documentation\/glib\/typedlistref\/init(_:)-7h53z","title":"init(UnsafePointer<GList>)","type":"init"},{"path":"\/documentation\/glib\/typedlistref\/init(_:)-teps","title":"init!(UnsafePointer<GList>?)","type":"init"},{"path":"\/documentation\/glib\/typedlistref\/init(_:)-zosg","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/typedlistref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/typedlistref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/typedlistref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/typedlistref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/typedlistref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/typedlistref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/typedlistref\/ptr","title":"var ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/typedlistref\/data","title":"var data: gpointer?","type":"property"},{"path":"\/documentation\/glib\/typedlistref\/next","title":"var next: ListRef!","type":"property"},{"path":"\/documentation\/glib\/typedlistref\/prev","title":"var prev: ListRef!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/typedlistref\/append(data:)","title":"func append(data: gpointer?) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/typedlistref\/concat(list2:)","title":"func concat<ListT>(list2: ListT) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/typedlistref\/copy()","title":"func copy() -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/typedlistref\/copydeep(func:userdata:)","title":"func copyDeep(func: GCopyFunc?, userData: gpointer?) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/typedlistref\/delete(link:)","title":"func delete<ListT>(link: ListT) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/typedlistref\/find(data:)","title":"func find(data: gconstpointer?) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/typedlistref\/findcustom(data:func:)","title":"func findCustom(data: gconstpointer?, func: GCompareFunc?) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/typedlistref\/first()","title":"func first() -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/typedlistref\/foreach(func:userdata:)","title":"func foreach(func: GFunc?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/typedlistref\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/glib\/typedlistref\/free1()","title":"func free1()","type":"method"},{"path":"\/documentation\/glib\/typedlistref\/freefull(freefunc:)","title":"func freeFull(freeFunc: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/glib\/typedlistref\/index(data:)","title":"func index(data: gconstpointer?) -> Int","type":"method"},{"path":"\/documentation\/glib\/typedlistref\/insert(data:position:)","title":"func insert(data: gpointer?, position: Int) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/typedlistref\/insertbefore(sibling:data:)","title":"func insertBefore<ListT>(sibling: ListT, data: gpointer?) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/typedlistref\/insertbeforelink(sibling:link:)","title":"func insertBeforeLink<ListT>(sibling: ListT?, link: ListT) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/typedlistref\/insertsorted(data:func:)","title":"func insertSorted(data: gpointer?, func: GCompareFunc?) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/typedlistref\/insertsortedwith(data:func:userdata:)","title":"func insertSortedWith(data: gpointer?, func: GCompareDataFunc?, userData: gpointer?) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/typedlistref\/last()","title":"func last() -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/typedlistref\/length()","title":"func length() -> Int","type":"method"},{"path":"\/documentation\/glib\/typedlistref\/nth(n:)","title":"func nth(n: Int) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/typedlistref\/nthdata(n:)","title":"func nthData(n: Int) -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/typedlistref\/nthprev(n:)","title":"func nthPrev(n: Int) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/typedlistref\/position(llink:)","title":"func position<ListT>(llink: ListT) -> Int","type":"method"},{"path":"\/documentation\/glib\/typedlistref\/prepend(data:)","title":"func prepend(data: gpointer?) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/typedlistref\/remove(data:)","title":"func remove(data: gconstpointer?) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/typedlistref\/removeall(data:)","title":"func removeAll(data: gconstpointer?) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/typedlistref\/removelink(llink:)","title":"func removeLink<ListT>(llink: ListT) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/typedlistref\/reverse()","title":"func reverse() -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/typedlistref\/sort(comparefunc:)","title":"func sort(compareFunc: GCompareFunc?) -> ListRef!","type":"method"},{"path":"\/documentation\/glib\/typedlistref\/sortwithdata(comparefunc:userdata:)","title":"func sortWithData(compareFunc: GCompareDataFunc?, userData: gpointer?) -> ListRef!","type":"method"}],"path":"\/documentation\/glib\/typedlistref\/listprotocol-implementations","title":"ListProtocol Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/typedlistref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/typedlistref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/typedlistref\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"path":"\/documentation\/glib\/typedlistref\/publisher","title":"var publisher: Publishers.Sequence<Self, Never>","type":"property"},{"path":"\/documentation\/glib\/typedlistref\/underestimatedcount","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/typedlistref\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/typedlistref\/compactmap(_:)","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/glib\/typedlistref\/compare(_:_:)","title":"func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult","type":"method"},{"path":"\/documentation\/glib\/typedlistref\/contains(_:)","title":"func contains(Self.Element) -> Bool","type":"method"},{"path":"\/documentation\/glib\/typedlistref\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/typedlistref\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> DropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/typedlistref\/dropfirst(_:)","title":"func dropFirst(Int) -> DropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/typedlistref\/droplast(_:)","title":"func dropLast(Int) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/typedlistref\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/glib\/typedlistref\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/typedlistref\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/typedlistref\/filter(_:)-42p7h","title":"func filter(Predicate<Self.Element>) throws -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/typedlistref\/filter(_:)-4xm3v","title":"func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/typedlistref\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/typedlistref\/flatmap(_:)-3fkj9","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/glib\/typedlistref\/flatmap(_:)-87ice","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/glib\/typedlistref\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/glib\/typedlistref\/formatted()","title":"func formatted() -> String","type":"method"},{"path":"\/documentation\/glib\/typedlistref\/formatted(_:)","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/glib\/typedlistref\/joined()","title":"func joined() -> FlattenSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/typedlistref\/joined(separator:)-34f01","title":"func joined(separator: String) -> String","type":"method"},{"path":"\/documentation\/glib\/typedlistref\/joined(separator:)-44cnz","title":"func joined<Separator>(separator: Separator) -> JoinedSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/typedlistref\/lexicographicallyprecedes(_:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/glib\/typedlistref\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/typedlistref\/map(_:)","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/glib\/typedlistref\/max()","title":"func max() -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/typedlistref\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/typedlistref\/min()","title":"func min() -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/typedlistref\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/typedlistref\/prefix(_:)","title":"func prefix(Int) -> PrefixSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/typedlistref\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/typedlistref\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/glib\/typedlistref\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/glib\/typedlistref\/reversed()","title":"func reversed() -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/typedlistref\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/typedlistref\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/typedlistref\/sorted()","title":"func sorted() -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/typedlistref\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/typedlistref\/sorted(using:)-1h7n6","title":"func sorted<S, Comparator>(using: S) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/typedlistref\/sorted(using:)-1kr8o","title":"func sorted<Comparator>(using: Comparator) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/typedlistref\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/glib\/typedlistref\/split(separator:maxsplits:omittingemptysubsequences:)","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/glib\/typedlistref\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/glib\/typedlistref\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/typedlistref\/suffix(_:)","title":"func suffix(Int) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/typedlistref\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"}],"path":"\/documentation\/glib\/typedlistref\/sequence-implementations","title":"Sequence Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/typedlistref\/element","title":"var element: Self.Element!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/typedlistref\/makeiterator()","title":"func makeIterator() -> TypedListIterator<Self.Element>","type":"method"}],"path":"\/documentation\/glib\/typedlistref\/typedlistprotocol-implementations","title":"TypedListProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/typedlistref","title":"TypedListRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/typedslistref\/init(_:)-4mcto","title":"init!(UnsafePointer<GSList>?)","type":"init"},{"path":"\/documentation\/glib\/typedslistref\/init(_:)-52rbt","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/typedslistref\/init(_:)-53bjo","title":"init!(UnsafeMutablePointer<GSList>?)","type":"init"},{"path":"\/documentation\/glib\/typedslistref\/init(_:)-6j93q","title":"init(UnsafeMutablePointer<GSList>)","type":"init"},{"path":"\/documentation\/glib\/typedslistref\/init(_:)-8076q","title":"init(UnsafePointer<GSList>)","type":"init"},{"path":"\/documentation\/glib\/typedslistref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/typedslistref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/typedslistref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/typedslistref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/typedslistref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/typedslistref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/typedslistref\/ptr","title":"var ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/typedslistref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/typedslistref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/typedslistref\/data","title":"var data: gpointer?","type":"property"},{"path":"\/documentation\/glib\/typedslistref\/next","title":"var next: SListRef!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/typedslistref\/append(data:)","title":"func append(data: gpointer?) -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/typedslistref\/concat(list2:)","title":"func concat<SListT>(list2: SListT) -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/typedslistref\/copy()","title":"func copy() -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/typedslistref\/copydeep(func:userdata:)","title":"func copyDeep(func: GCopyFunc?, userData: gpointer?) -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/typedslistref\/delete(link:)","title":"func delete<SListT>(link: SListT) -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/typedslistref\/find(data:)","title":"func find(data: gconstpointer?) -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/typedslistref\/findcustom(data:func:)","title":"func findCustom(data: gconstpointer?, func: GCompareFunc?) -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/typedslistref\/foreach(func:userdata:)","title":"func foreach(func: GFunc?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/typedslistref\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/glib\/typedslistref\/free1()","title":"func free1()","type":"method"},{"path":"\/documentation\/glib\/typedslistref\/freefull(freefunc:)","title":"func freeFull(freeFunc: GDestroyNotify?)","type":"method"},{"path":"\/documentation\/glib\/typedslistref\/index(data:)","title":"func index(data: gconstpointer?) -> Int","type":"method"},{"path":"\/documentation\/glib\/typedslistref\/insert(data:position:)","title":"func insert(data: gpointer?, position: Int) -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/typedslistref\/insertbefore(sibling:data:)","title":"func insertBefore<SListT>(sibling: SListT, data: gpointer?) -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/typedslistref\/insertsorted(data:func:)","title":"func insertSorted(data: gpointer?, func: GCompareFunc?) -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/typedslistref\/insertsortedwith(data:func:userdata:)","title":"func insertSortedWith(data: gpointer?, func: GCompareDataFunc?, userData: gpointer?) -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/typedslistref\/last()","title":"func last() -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/typedslistref\/length()","title":"func length() -> Int","type":"method"},{"path":"\/documentation\/glib\/typedslistref\/nth(n:)","title":"func nth(n: Int) -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/typedslistref\/nthdata(n:)","title":"func nthData(n: Int) -> gpointer?","type":"method"},{"path":"\/documentation\/glib\/typedslistref\/position(llink:)","title":"func position<SListT>(llink: SListT) -> Int","type":"method"},{"path":"\/documentation\/glib\/typedslistref\/prepend(data:)","title":"func prepend(data: gpointer?) -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/typedslistref\/remove(data:)","title":"func remove(data: gconstpointer?) -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/typedslistref\/remove(link:)","title":"func remove<SListT>(link: SListT) -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/typedslistref\/removeall(data:)","title":"func removeAll(data: gconstpointer?) -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/typedslistref\/reverse()","title":"func reverse() -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/typedslistref\/sort(comparefunc:)","title":"func sort(compareFunc: GCompareFunc?) -> SListRef!","type":"method"},{"path":"\/documentation\/glib\/typedslistref\/sortwithdata(comparefunc:userdata:)","title":"func sortWithData(compareFunc: GCompareDataFunc?, userData: gpointer?) -> SListRef!","type":"method"}],"path":"\/documentation\/glib\/typedslistref\/slistprotocol-implementations","title":"SListProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/typedslistref\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"path":"\/documentation\/glib\/typedslistref\/publisher","title":"var publisher: Publishers.Sequence<Self, Never>","type":"property"},{"path":"\/documentation\/glib\/typedslistref\/underestimatedcount","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/typedslistref\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/typedslistref\/compactmap(_:)","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/glib\/typedslistref\/compare(_:_:)","title":"func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult","type":"method"},{"path":"\/documentation\/glib\/typedslistref\/contains(_:)","title":"func contains(Self.Element) -> Bool","type":"method"},{"path":"\/documentation\/glib\/typedslistref\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/typedslistref\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> DropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/typedslistref\/dropfirst(_:)","title":"func dropFirst(Int) -> DropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/typedslistref\/droplast(_:)","title":"func dropLast(Int) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/typedslistref\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/glib\/typedslistref\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/typedslistref\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/typedslistref\/filter(_:)-5f71j","title":"func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/typedslistref\/filter(_:)-9eswj","title":"func filter(Predicate<Self.Element>) throws -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/typedslistref\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/typedslistref\/flatmap(_:)-3qwbr","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/glib\/typedslistref\/flatmap(_:)-5jh6b","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/glib\/typedslistref\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/glib\/typedslistref\/formatted()","title":"func formatted() -> String","type":"method"},{"path":"\/documentation\/glib\/typedslistref\/formatted(_:)","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/glib\/typedslistref\/joined()","title":"func joined() -> FlattenSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/typedslistref\/joined(separator:)-6cib0","title":"func joined(separator: String) -> String","type":"method"},{"path":"\/documentation\/glib\/typedslistref\/joined(separator:)-9wd3z","title":"func joined<Separator>(separator: Separator) -> JoinedSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/typedslistref\/lexicographicallyprecedes(_:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/glib\/typedslistref\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/typedslistref\/map(_:)","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/glib\/typedslistref\/max()","title":"func max() -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/typedslistref\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/typedslistref\/min()","title":"func min() -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/typedslistref\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/typedslistref\/prefix(_:)","title":"func prefix(Int) -> PrefixSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/typedslistref\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/typedslistref\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/glib\/typedslistref\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/glib\/typedslistref\/reversed()","title":"func reversed() -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/typedslistref\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/typedslistref\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/typedslistref\/sorted()","title":"func sorted() -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/typedslistref\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/typedslistref\/sorted(using:)-2q3eu","title":"func sorted<Comparator>(using: Comparator) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/typedslistref\/sorted(using:)-33quv","title":"func sorted<S, Comparator>(using: S) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/typedslistref\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/glib\/typedslistref\/split(separator:maxsplits:omittingemptysubsequences:)","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/glib\/typedslistref\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/glib\/typedslistref\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/typedslistref\/suffix(_:)","title":"func suffix(Int) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/typedslistref\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"}],"path":"\/documentation\/glib\/typedslistref\/sequence-implementations","title":"Sequence Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/typedslistref\/element","title":"var element: Self.Element!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/typedslistref\/makeiterator()","title":"func makeIterator() -> SListIterator<Self.Element>","type":"method"}],"path":"\/documentation\/glib\/typedslistref\/typedslistprotocol-implementations","title":"TypedSListProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/typedslistref","title":"TypedSListRef","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/typedsequenceiterator\/iterator","title":"var iterator: SequenceIterRef?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/typedsequenceiterator\/next()","title":"func next() -> Element?","type":"method"}],"path":"\/documentation\/glib\/typedsequenceiterator","title":"TypedSequenceIterator","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/typedsequenceref\/init(_:)-2h25n","title":"init!(UnsafePointer<GSequence>?)","type":"init"},{"path":"\/documentation\/glib\/typedsequenceref\/init(_:)-3r8bi","title":"init(UnsafePointer<GSequence>)","type":"init"},{"path":"\/documentation\/glib\/typedsequenceref\/init(_:)-4nrbw","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/typedsequenceref\/init(_:)-6uba6","title":"init(UnsafeMutablePointer<GSequence>)","type":"init"},{"path":"\/documentation\/glib\/typedsequenceref\/init(_:)-hu6l","title":"init!(UnsafeMutablePointer<GSequence>?)","type":"init"},{"path":"\/documentation\/glib\/typedsequenceref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/typedsequenceref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/typedsequenceref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/typedsequenceref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/typedsequenceref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/typedsequenceref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/typedsequenceref\/ptr","title":"var ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/typedsequenceref\/makeiterator()","title":"func makeIterator() -> TypedSequenceIterator<Element>","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/typedsequenceref\/last","title":"var last: Self.Element?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/typedsequenceref\/difference(from:)","title":"func difference<C>(from: C) -> CollectionDifference<Self.Element>","type":"method"},{"path":"\/documentation\/glib\/typedsequenceref\/difference(from:by:)","title":"func difference<C>(from: C, by: (C.Element, Self.Element) -> Bool) -> CollectionDifference<Self.Element>","type":"method"},{"path":"\/documentation\/glib\/typedsequenceref\/distance(from:to:)","title":"func distance(from: Self.Index, to: Self.Index) -> Int","type":"method"},{"path":"\/documentation\/glib\/typedsequenceref\/droplast(_:)","title":"func dropLast(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/typedsequenceref\/firstrange(of:)-rd0q","title":"func firstRange<C>(of: C) -> Range<Self.Index>?","type":"method"},{"path":"\/documentation\/glib\/typedsequenceref\/formindex(before:)","title":"func formIndex(before: inout Self.Index)","type":"method"},{"path":"\/documentation\/glib\/typedsequenceref\/index(_:offsetby:limitedby:)","title":"func index(Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?","type":"method"},{"path":"\/documentation\/glib\/typedsequenceref\/joined(separator:)-4kgvh","title":"func joined(separator: String) -> String","type":"method"},{"path":"\/documentation\/glib\/typedsequenceref\/last(where:)","title":"func last(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/typedsequenceref\/lastindex(of:)","title":"func lastIndex(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/glib\/typedsequenceref\/lastindex(where:)","title":"func lastIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/glib\/typedsequenceref\/reversed()","title":"func reversed() -> ReversedCollection<Self>","type":"method"},{"path":"\/documentation\/glib\/typedsequenceref\/suffix(_:)","title":"func suffix(Int) -> Self.SubSequence","type":"method"}],"path":"\/documentation\/glib\/typedsequenceref\/bidirectionalcollection-implementations","title":"BidirectionalCollection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/typedsequenceref\/first","title":"var first: Self.Element?","type":"property"},{"path":"\/documentation\/glib\/typedsequenceref\/indices","title":"var indices: DefaultIndices<Self>","type":"property"},{"path":"\/documentation\/glib\/typedsequenceref\/underestimatedcount","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/typedsequenceref\/contains(_:)-3phr","title":"func contains<C>(C) -> Bool","type":"method"},{"path":"\/documentation\/glib\/typedsequenceref\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/typedsequenceref\/dropfirst(_:)","title":"func dropFirst(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/typedsequenceref\/firstindex(of:)","title":"func firstIndex(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/glib\/typedsequenceref\/firstindex(where:)","title":"func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/glib\/typedsequenceref\/firstrange(of:)-m0ak","title":"func firstRange<C>(of: C) -> Range<Self.Index>?","type":"method"},{"path":"\/documentation\/glib\/typedsequenceref\/formindex(_:offsetby:)","title":"func formIndex(inout Self.Index, offsetBy: Int)","type":"method"},{"path":"\/documentation\/glib\/typedsequenceref\/formindex(_:offsetby:limitedby:)","title":"func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool","type":"method"},{"path":"\/documentation\/glib\/typedsequenceref\/formindex(after:)","title":"func formIndex(after: inout Self.Index)","type":"method"},{"path":"\/documentation\/glib\/typedsequenceref\/index(of:)","title":"func index(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/glib\/typedsequenceref\/map(_:)-2pp7j","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/glib\/typedsequenceref\/prefix(_:)","title":"func prefix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/typedsequenceref\/prefix(through:)","title":"func prefix(through: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/typedsequenceref\/prefix(upto:)","title":"func prefix(upTo: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/typedsequenceref\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/typedsequenceref\/randomelement()","title":"func randomElement() -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/typedsequenceref\/randomelement(using:)","title":"func randomElement<T>(using: inout T) -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/typedsequenceref\/ranges(of:)","title":"func ranges<C>(of: C) -> [Range<Self.Index>]","type":"method"},{"path":"\/documentation\/glib\/typedsequenceref\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/glib\/typedsequenceref\/split(separator:maxsplits:omittingemptysubsequences:)-59szi","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/glib\/typedsequenceref\/split(separator:maxsplits:omittingemptysubsequences:)-6lygq","title":"func split<C>(separator: C, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/glib\/typedsequenceref\/suffix(from:)","title":"func suffix(from: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/typedsequenceref\/trimmingprefix(_:)","title":"func trimmingPrefix<Prefix>(Prefix) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/glib\/typedsequenceref\/trimmingprefix(while:)","title":"func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"}],"path":"\/documentation\/glib\/typedsequenceref\/collection-implementations","title":"Collection Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/typedsequenceref\/partition(by:)-2h4ir","title":"func partition(by: (Self.Element) throws -> Bool) rethrows -> Self.Index","type":"method"},{"path":"\/documentation\/glib\/typedsequenceref\/partition(by:)-5d5za","title":"func partition(by: (Self.Element) throws -> Bool) rethrows -> Self.Index","type":"method"},{"path":"\/documentation\/glib\/typedsequenceref\/reverse()","title":"func reverse()","type":"method"},{"path":"\/documentation\/glib\/typedsequenceref\/swapat(_:_:)","title":"func swapAt(Self.Index, Self.Index)","type":"method"},{"path":"\/documentation\/glib\/typedsequenceref\/withcontiguousmutablestorageifavailable(_:)","title":"func withContiguousMutableStorageIfAvailable<R>((inout UnsafeMutableBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"}],"path":"\/documentation\/glib\/typedsequenceref\/mutablecollection-implementations","title":"MutableCollection Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/typedsequenceref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/typedsequenceref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/typedsequenceref\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"path":"\/documentation\/glib\/typedsequenceref\/publisher","title":"var publisher: Publishers.Sequence<Self, Never>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/typedsequenceref\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/typedsequenceref\/compactmap(_:)","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/glib\/typedsequenceref\/compare(_:_:)","title":"func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult","type":"method"},{"path":"\/documentation\/glib\/typedsequenceref\/contains(_:)-vhl8","title":"func contains(Self.Element) -> Bool","type":"method"},{"path":"\/documentation\/glib\/typedsequenceref\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/typedsequenceref\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/glib\/typedsequenceref\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/typedsequenceref\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/typedsequenceref\/filter(_:)-68npx","title":"func filter(Predicate<Self.Element>) throws -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/typedsequenceref\/filter(_:)-8zwnr","title":"func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/typedsequenceref\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/typedsequenceref\/flatmap(_:)-5l75h","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/glib\/typedsequenceref\/flatmap(_:)-81qgp","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/glib\/typedsequenceref\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/glib\/typedsequenceref\/formatted()","title":"func formatted() -> String","type":"method"},{"path":"\/documentation\/glib\/typedsequenceref\/formatted(_:)","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/glib\/typedsequenceref\/joined()","title":"func joined() -> FlattenSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/typedsequenceref\/joined(separator:)-84de8","title":"func joined(separator: String) -> String","type":"method"},{"path":"\/documentation\/glib\/typedsequenceref\/joined(separator:)-9rx3h","title":"func joined<Separator>(separator: Separator) -> JoinedSequence<Self>","type":"method"},{"path":"\/documentation\/glib\/typedsequenceref\/lexicographicallyprecedes(_:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/glib\/typedsequenceref\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/typedsequenceref\/map(_:)-3uxu5","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/glib\/typedsequenceref\/max()","title":"func max() -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/typedsequenceref\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/typedsequenceref\/min()","title":"func min() -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/typedsequenceref\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/typedsequenceref\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/glib\/typedsequenceref\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/glib\/typedsequenceref\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/typedsequenceref\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/typedsequenceref\/sorted()","title":"func sorted() -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/typedsequenceref\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/typedsequenceref\/sorted(using:)-3fx3d","title":"func sorted<S, Comparator>(using: S) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/typedsequenceref\/sorted(using:)-87rf6","title":"func sorted<Comparator>(using: Comparator) -> [Self.Element]","type":"method"},{"path":"\/documentation\/glib\/typedsequenceref\/split(separator:maxsplits:omittingemptysubsequences:)-71qni","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/glib\/typedsequenceref\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/glib\/typedsequenceref\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/glib\/typedsequenceref\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"}],"path":"\/documentation\/glib\/typedsequenceref\/sequence-implementations","title":"Sequence Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/typedsequenceref\/beginiter","title":"var beginIter: SequenceIterRef!","type":"property"},{"path":"\/documentation\/glib\/typedsequenceref\/enditer","title":"var endIter: SequenceIterRef!","type":"property"},{"path":"\/documentation\/glib\/typedsequenceref\/length","title":"var length: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/typedsequenceref\/append(data:)","title":"func append(data: gpointer?) -> SequenceIterRef!","type":"method"},{"path":"\/documentation\/glib\/typedsequenceref\/foreach(func:userdata:)","title":"func foreach(func: GFunc?, userData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/typedsequenceref\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/glib\/typedsequenceref\/getbeginiter()","title":"func getBeginIter() -> SequenceIterRef!","type":"method"},{"path":"\/documentation\/glib\/typedsequenceref\/getenditer()","title":"func getEndIter() -> SequenceIterRef!","type":"method"},{"path":"\/documentation\/glib\/typedsequenceref\/getiterat(pos:)","title":"func getIterAt(pos: Int) -> SequenceIterRef!","type":"method"},{"path":"\/documentation\/glib\/typedsequenceref\/getlength()","title":"func getLength() -> Int","type":"method"},{"path":"\/documentation\/glib\/typedsequenceref\/insertsorted(data:cmpfunc:cmpdata:)","title":"func insertSorted(data: gpointer?, cmpFunc: GCompareDataFunc?, cmpData: gpointer?) -> SequenceIterRef!","type":"method"},{"path":"\/documentation\/glib\/typedsequenceref\/insertsortediter(data:itercmp:cmpdata:)","title":"func insertSortedIter(data: gpointer?, iterCmp: GSequenceIterCompareFunc?, cmpData: gpointer?) -> SequenceIterRef!","type":"method"},{"path":"\/documentation\/glib\/typedsequenceref\/lookup(data:cmpfunc:cmpdata:)","title":"func lookup(data: gpointer?, cmpFunc: GCompareDataFunc?, cmpData: gpointer?) -> SequenceIterRef!","type":"method"},{"path":"\/documentation\/glib\/typedsequenceref\/lookupiter(data:itercmp:cmpdata:)","title":"func lookupIter(data: gpointer?, iterCmp: GSequenceIterCompareFunc?, cmpData: gpointer?) -> SequenceIterRef!","type":"method"},{"path":"\/documentation\/glib\/typedsequenceref\/prepend(data:)","title":"func prepend(data: gpointer?) -> SequenceIterRef!","type":"method"},{"path":"\/documentation\/glib\/typedsequenceref\/search(data:cmpfunc:cmpdata:)","title":"func search(data: gpointer?, cmpFunc: GCompareDataFunc?, cmpData: gpointer?) -> SequenceIterRef!","type":"method"},{"path":"\/documentation\/glib\/typedsequenceref\/searchiter(data:itercmp:cmpdata:)","title":"func searchIter(data: gpointer?, iterCmp: GSequenceIterCompareFunc?, cmpData: gpointer?) -> SequenceIterRef!","type":"method"},{"path":"\/documentation\/glib\/typedsequenceref\/sort(cmpfunc:cmpdata:)","title":"func sort(cmpFunc: GCompareDataFunc?, cmpData: gpointer?)","type":"method"},{"path":"\/documentation\/glib\/typedsequenceref\/sortiter(cmpfunc:cmpdata:)","title":"func sortIter(cmpFunc: GSequenceIterCompareFunc?, cmpData: gpointer?)","type":"method"}],"path":"\/documentation\/glib\/typedsequenceref\/sequenceprotocol-implementations","title":"SequenceProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/typedsequenceref\/count","title":"var count: Int","type":"property"},{"path":"\/documentation\/glib\/typedsequenceref\/endindex","title":"var endIndex: SequenceIterRef","type":"property"},{"path":"\/documentation\/glib\/typedsequenceref\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/glib\/typedsequenceref\/startindex","title":"var startIndex: SequenceIterRef","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/typedsequenceref\/index(_:offsetby:)","title":"func index(SequenceIterRef, offsetBy: Int) -> SequenceIterRef","type":"method"},{"path":"\/documentation\/glib\/typedsequenceref\/index(after:)","title":"func index(after: SequenceIterRef) -> SequenceIterRef","type":"method"},{"path":"\/documentation\/glib\/typedsequenceref\/index(before:)","title":"func index(before: SequenceIterRef) -> SequenceIterRef","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/glib\/typedsequenceref\/subscript(_:)","title":"subscript(SequenceIterRef) -> Self.Element","type":"subscript"}],"path":"\/documentation\/glib\/typedsequenceref\/typedsequenceprotocol-implementations","title":"TypedSequenceProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/typedsequenceref","title":"TypedSequenceRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/uriflags\/init(_:)-86mti","title":"init(GUriFlags)","type":"init"},{"path":"\/documentation\/glib\/uriflags\/init(_:)-8fq78","title":"init<I>(I)","type":"init"},{"path":"\/documentation\/glib\/uriflags\/init(rawvalue:)","title":"init(rawValue: UInt32)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/uriflags\/int","title":"var int: gint","type":"property"},{"path":"\/documentation\/glib\/uriflags\/intvalue","title":"var intValue: Int","type":"property"},{"path":"\/documentation\/glib\/uriflags\/rawvalue","title":"var rawValue: UInt32","type":"property"},{"path":"\/documentation\/glib\/uriflags\/value","title":"var value: GUriFlags","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/uriflags\/encoded","title":"static let encoded: URIFlags","type":"property"},{"path":"\/documentation\/glib\/uriflags\/encodedfragment","title":"static let encodedFragment: URIFlags","type":"property"},{"path":"\/documentation\/glib\/uriflags\/encodedpath","title":"static let encodedPath: URIFlags","type":"property"},{"path":"\/documentation\/glib\/uriflags\/encodedquery","title":"static let encodedQuery: URIFlags","type":"property"},{"path":"\/documentation\/glib\/uriflags\/hasauthparams","title":"static let hasAuthParams: URIFlags","type":"property"},{"path":"\/documentation\/glib\/uriflags\/haspassword","title":"static let hasPassword: URIFlags","type":"property"},{"path":"\/documentation\/glib\/uriflags\/nondns","title":"static let nonDns: URIFlags","type":"property"},{"path":"\/documentation\/glib\/uriflags\/none","title":"static let none: URIFlags","type":"property"},{"path":"\/documentation\/glib\/uriflags\/parserelaxed","title":"static let parseRelaxed: URIFlags","type":"property"},{"path":"\/documentation\/glib\/uriflags\/schemenormalize","title":"static let schemeNormalize: URIFlags","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/glib\/uriflags\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/glib\/uriflags\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/uriflags\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/uriflags\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/uriflags\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/glib\/uriflags\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/glib\/uriflags\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/glib\/uriflags\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/glib\/uriflags\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/glib\/uriflags\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/uriflags\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/glib\/uriflags\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/glib\/uriflags\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/glib\/uriflags\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/uriflags\/init(_:)-8cg0r","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/glib\/uriflags\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/uriflags\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/uriflags\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/uriflags\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/uriflags\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/uriflags\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/uriflags\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/uriflags\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/glib\/uriflags\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/glib\/uriflags\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/glib\/uriflags","title":"URIFlags","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/urihideflags\/init(_:)-1h1tb","title":"init<I>(I)","type":"init"},{"path":"\/documentation\/glib\/urihideflags\/init(_:)-42a5h","title":"init(GUriHideFlags)","type":"init"},{"path":"\/documentation\/glib\/urihideflags\/init(rawvalue:)","title":"init(rawValue: UInt32)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/urihideflags\/int","title":"var int: gint","type":"property"},{"path":"\/documentation\/glib\/urihideflags\/intvalue","title":"var intValue: Int","type":"property"},{"path":"\/documentation\/glib\/urihideflags\/rawvalue","title":"var rawValue: UInt32","type":"property"},{"path":"\/documentation\/glib\/urihideflags\/value","title":"var value: GUriHideFlags","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/urihideflags\/authparams","title":"static let authParams: URIHideFlags","type":"property"},{"path":"\/documentation\/glib\/urihideflags\/fragment","title":"static let fragment: URIHideFlags","type":"property"},{"path":"\/documentation\/glib\/urihideflags\/none","title":"static let none: URIHideFlags","type":"property"},{"path":"\/documentation\/glib\/urihideflags\/password","title":"static let password: URIHideFlags","type":"property"},{"path":"\/documentation\/glib\/urihideflags\/query","title":"static let query: URIHideFlags","type":"property"},{"path":"\/documentation\/glib\/urihideflags\/userinfo","title":"static let userinfo: URIHideFlags","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/glib\/urihideflags\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/glib\/urihideflags\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/urihideflags\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/urihideflags\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/urihideflags\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/glib\/urihideflags\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/glib\/urihideflags\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/glib\/urihideflags\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/glib\/urihideflags\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/glib\/urihideflags\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/urihideflags\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/glib\/urihideflags\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/glib\/urihideflags\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/glib\/urihideflags\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/urihideflags\/init(_:)-5x94z","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/glib\/urihideflags\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/urihideflags\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/urihideflags\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/urihideflags\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/urihideflags\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/urihideflags\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/urihideflags\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/urihideflags\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/glib\/urihideflags\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/glib\/urihideflags\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/glib\/urihideflags","title":"URIHideFlags","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/uriparamsflags\/init(_:)-33v1q","title":"init<I>(I)","type":"init"},{"path":"\/documentation\/glib\/uriparamsflags\/init(_:)-5gis5","title":"init(GUriParamsFlags)","type":"init"},{"path":"\/documentation\/glib\/uriparamsflags\/init(rawvalue:)","title":"init(rawValue: UInt32)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/uriparamsflags\/int","title":"var int: gint","type":"property"},{"path":"\/documentation\/glib\/uriparamsflags\/intvalue","title":"var intValue: Int","type":"property"},{"path":"\/documentation\/glib\/uriparamsflags\/rawvalue","title":"var rawValue: UInt32","type":"property"},{"path":"\/documentation\/glib\/uriparamsflags\/value","title":"var value: GUriParamsFlags","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/uriparamsflags\/caseinsensitive","title":"static let caseInsensitive: URIParamsFlags","type":"property"},{"path":"\/documentation\/glib\/uriparamsflags\/none","title":"static let none: URIParamsFlags","type":"property"},{"path":"\/documentation\/glib\/uriparamsflags\/parserelaxed","title":"static let parseRelaxed: URIParamsFlags","type":"property"},{"path":"\/documentation\/glib\/uriparamsflags\/wwwform","title":"static let wwwForm: URIParamsFlags","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/glib\/uriparamsflags\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/glib\/uriparamsflags\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/uriparamsflags\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/uriparamsflags\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/uriparamsflags\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/glib\/uriparamsflags\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/glib\/uriparamsflags\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/glib\/uriparamsflags\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/glib\/uriparamsflags\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/glib\/uriparamsflags\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/glib\/uriparamsflags\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/glib\/uriparamsflags\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/glib\/uriparamsflags\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/glib\/uriparamsflags\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/uriparamsflags\/init(_:)-3kahb","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/glib\/uriparamsflags\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/uriparamsflags\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/uriparamsflags\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/uriparamsflags\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/uriparamsflags\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/uriparamsflags\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/uriparamsflags\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/glib\/uriparamsflags\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/glib\/uriparamsflags\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/glib\/uriparamsflags\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/glib\/uriparamsflags","title":"URIParamsFlags","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/uriparamsiterref\/init(_:)-2qy1t","title":"init(UnsafeMutablePointer<GUriParamsIter>)","type":"init"},{"path":"\/documentation\/glib\/uriparamsiterref\/init(_:)-3exi0","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/uriparamsiterref\/init(_:)-3g3mm","title":"init!(UnsafePointer<GUriParamsIter>?)","type":"init"},{"path":"\/documentation\/glib\/uriparamsiterref\/init(_:)-9ec4s","title":"init(UnsafePointer<GUriParamsIter>)","type":"init"},{"path":"\/documentation\/glib\/uriparamsiterref\/init(_:)-xpdr","title":"init!(UnsafeMutablePointer<GUriParamsIter>?)","type":"init"},{"path":"\/documentation\/glib\/uriparamsiterref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/uriparamsiterref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/uriparamsiterref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/uriparamsiterref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/uriparamsiterref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/uriparamsiterref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/uriparamsiterref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/uriparamsiterref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/uriparamsiterref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/uriparamsiterref\/init_(params:length:separators:flags:)","title":"func init_(params: UnsafePointer<gchar>!, length: gssize, separators: UnsafePointer<gchar>!, flags: URIParamsFlags)","type":"method"},{"path":"\/documentation\/glib\/uriparamsiterref\/next(attribute:value:)","title":"func next(attribute: UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>?, value: UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>?) throws -> Bool","type":"method"}],"path":"\/documentation\/glib\/uriparamsiterref\/uriparamsiterprotocol-implementations","title":"URIParamsIterProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/uriparamsiterref","title":"URIParamsIterRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/uriref\/init(_:)-1m0g3","title":"init(UnsafePointer<GUri>)","type":"init"},{"path":"\/documentation\/glib\/uriref\/init(_:)-2ctpq","title":"init(UnsafeMutablePointer<GUri>)","type":"init"},{"path":"\/documentation\/glib\/uriref\/init(_:)-4kx37","title":"init!(UnsafePointer<GUri>?)","type":"init"},{"path":"\/documentation\/glib\/uriref\/init(_:)-5ugyq","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/uriref\/init(_:)-86fph","title":"init!(UnsafeMutablePointer<GUri>?)","type":"init"},{"path":"\/documentation\/glib\/uriref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/uriref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/uriref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/uriref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/uriref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/uriref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/uriref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/uriref\/build(flags:scheme:userinfo:host:port:path:query:fragment:)","title":"static func build(flags: URIFlags, scheme: UnsafePointer<gchar>!, userinfo: UnsafePointer<gchar>?, host: UnsafePointer<gchar>?, port: Int, path: UnsafePointer<gchar>!, query: UnsafePointer<gchar>?, fragment: UnsafePointer<gchar>?) -> URIRef!","type":"method"},{"path":"\/documentation\/glib\/uriref\/buildwith(user:scheme:user:password:authparams:host:port:path:query:fragment:)","title":"static func buildWith(user: URIFlags, scheme: UnsafePointer<gchar>!, user: UnsafePointer<gchar>?, password: UnsafePointer<gchar>?, authParams: UnsafePointer<gchar>?, host: UnsafePointer<gchar>?, port: Int, path: UnsafePointer<gchar>!, query: UnsafePointer<gchar>?, fragment: UnsafePointer<gchar>?) -> URIRef!","type":"method"},{"path":"\/documentation\/glib\/uriref\/parse(uristring:flags:)","title":"static func parse(uriString: UnsafePointer<gchar>!, flags: URIFlags) throws -> URIRef!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/uriref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/uriref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/uriref\/authparams","title":"var authParams: String!","type":"property"},{"path":"\/documentation\/glib\/uriref\/flags","title":"var flags: URIFlags","type":"property"},{"path":"\/documentation\/glib\/uriref\/fragment","title":"var fragment: String!","type":"property"},{"path":"\/documentation\/glib\/uriref\/host","title":"var host: String!","type":"property"},{"path":"\/documentation\/glib\/uriref\/password","title":"var password: String!","type":"property"},{"path":"\/documentation\/glib\/uriref\/path","title":"var path: String!","type":"property"},{"path":"\/documentation\/glib\/uriref\/port","title":"var port: Int","type":"property"},{"path":"\/documentation\/glib\/uriref\/query","title":"var query: String!","type":"property"},{"path":"\/documentation\/glib\/uriref\/scheme","title":"var scheme: String!","type":"property"},{"path":"\/documentation\/glib\/uriref\/uri_ptr","title":"var uri_ptr: UnsafeMutablePointer<GUri>!","type":"property"},{"path":"\/documentation\/glib\/uriref\/user","title":"var user: String!","type":"property"},{"path":"\/documentation\/glib\/uriref\/userinfo","title":"var userinfo: String!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/uriref\/getauthparams()","title":"func getAuthParams() -> String!","type":"method"},{"path":"\/documentation\/glib\/uriref\/getflags()","title":"func getFlags() -> URIFlags","type":"method"},{"path":"\/documentation\/glib\/uriref\/getfragment()","title":"func getFragment() -> String!","type":"method"},{"path":"\/documentation\/glib\/uriref\/gethost()","title":"func getHost() -> String!","type":"method"},{"path":"\/documentation\/glib\/uriref\/getpassword()","title":"func getPassword() -> String!","type":"method"},{"path":"\/documentation\/glib\/uriref\/getpath()","title":"func getPath() -> String!","type":"method"},{"path":"\/documentation\/glib\/uriref\/getport()","title":"func getPort() -> Int","type":"method"},{"path":"\/documentation\/glib\/uriref\/getquery()","title":"func getQuery() -> String!","type":"method"},{"path":"\/documentation\/glib\/uriref\/getscheme()","title":"func getScheme() -> String!","type":"method"},{"path":"\/documentation\/glib\/uriref\/getuser()","title":"func getUser() -> String!","type":"method"},{"path":"\/documentation\/glib\/uriref\/getuserinfo()","title":"func getUserinfo() -> String!","type":"method"},{"path":"\/documentation\/glib\/uriref\/parserelative(uriref:flags:)","title":"func parseRelative(uriRef: UnsafePointer<gchar>!, flags: URIFlags) throws -> URIRef!","type":"method"},{"path":"\/documentation\/glib\/uriref\/ref()","title":"func ref() -> URIRef!","type":"method"},{"path":"\/documentation\/glib\/uriref\/tostring()","title":"func toString() -> String!","type":"method"},{"path":"\/documentation\/glib\/uriref\/tostringpartial(flags:)","title":"func toStringPartial(flags: URIHideFlags) -> String!","type":"method"},{"path":"\/documentation\/glib\/uriref\/unref()","title":"func unref()","type":"method"}],"path":"\/documentation\/glib\/uriref\/uriprotocol-implementations","title":"URIProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/uriref","title":"URIRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/unixpiperef\/init(_:)-17ig5","title":"init!(UnsafePointer<GUnixPipe>?)","type":"init"},{"path":"\/documentation\/glib\/unixpiperef\/init(_:)-4btlf","title":"init!(UnsafeMutablePointer<GUnixPipe>?)","type":"init"},{"path":"\/documentation\/glib\/unixpiperef\/init(_:)-72ss5","title":"init(UnsafeMutablePointer<GUnixPipe>)","type":"init"},{"path":"\/documentation\/glib\/unixpiperef\/init(_:)-85u0","title":"init(UnsafePointer<GUnixPipe>)","type":"init"},{"path":"\/documentation\/glib\/unixpiperef\/init(_:)-9t7ej","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/unixpiperef\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/unixpiperef\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/unixpiperef\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/unixpiperef\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/unixpiperef\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/unixpiperef\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/unixpiperef\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/unixpiperef\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/unixpiperef\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/unixpiperef\/fds","title":"var fds: (gint, gint)","type":"property"}],"path":"\/documentation\/glib\/unixpiperef\/unixpipeprotocol-implementations","title":"UnixPipeProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/unixpiperef","title":"UnixPipeRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/variantbuilderref\/init(_:)-1eomh","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/variantbuilderref\/init(_:)-2cciz","title":"init(UnsafeMutablePointer<GVariantBuilder>)","type":"init"},{"path":"\/documentation\/glib\/variantbuilderref\/init(_:)-2w550","title":"init!(UnsafeMutablePointer<GVariantBuilder>?)","type":"init"},{"path":"\/documentation\/glib\/variantbuilderref\/init(_:)-51flz","title":"init(UnsafePointer<GVariantBuilder>)","type":"init"},{"path":"\/documentation\/glib\/variantbuilderref\/init(_:)-5gudk","title":"init!(UnsafePointer<GVariantBuilder>?)","type":"init"},{"path":"\/documentation\/glib\/variantbuilderref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/variantbuilderref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/variantbuilderref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/variantbuilderref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/variantbuilderref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/variantbuilderref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/variantbuilderref\/init(type:)","title":"init<VariantTypeT>(type: VariantTypeT)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/variantbuilderref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/variantbuilderref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/variantbuilderref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/variantbuilderref\/variant_builder_ptr","title":"var variant_builder_ptr: UnsafeMutablePointer<GVariantBuilder>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/variantbuilderref\/add(value:)","title":"func add<VariantT>(value: VariantT)","type":"method"},{"path":"\/documentation\/glib\/variantbuilderref\/clear()","title":"func clear()","type":"method"},{"path":"\/documentation\/glib\/variantbuilderref\/close()","title":"func close()","type":"method"},{"path":"\/documentation\/glib\/variantbuilderref\/end()","title":"func end() -> VariantRef!","type":"method"},{"path":"\/documentation\/glib\/variantbuilderref\/init_(type:)","title":"func init_<VariantTypeT>(type: VariantTypeT)","type":"method"},{"path":"\/documentation\/glib\/variantbuilderref\/open(type:)","title":"func open<VariantTypeT>(type: VariantTypeT)","type":"method"},{"path":"\/documentation\/glib\/variantbuilderref\/ref()","title":"func ref() -> VariantBuilderRef!","type":"method"},{"path":"\/documentation\/glib\/variantbuilderref\/unref()","title":"func unref()","type":"method"}],"path":"\/documentation\/glib\/variantbuilderref\/variantbuilderprotocol-implementations","title":"VariantBuilderProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/variantbuilderref","title":"VariantBuilderRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/variantdictref\/init(_:)-1m81v","title":"init(UnsafePointer<GVariantDict>)","type":"init"},{"path":"\/documentation\/glib\/variantdictref\/init(_:)-2ionc","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/variantdictref\/init(_:)-32bsf","title":"init!(UnsafePointer<GVariantDict>?)","type":"init"},{"path":"\/documentation\/glib\/variantdictref\/init(_:)-3gqla","title":"init!(UnsafeMutablePointer<GVariantDict>?)","type":"init"},{"path":"\/documentation\/glib\/variantdictref\/init(_:)-9l5r7","title":"init(UnsafeMutablePointer<GVariantDict>)","type":"init"},{"path":"\/documentation\/glib\/variantdictref\/init(asv:)","title":"init<VariantT>(asv: VariantT?)","type":"init"},{"path":"\/documentation\/glib\/variantdictref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/variantdictref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/variantdictref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/variantdictref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/variantdictref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/variantdictref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/variantdictref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/variantdictref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/variantdictref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/variantdictref\/variant_dict_ptr","title":"var variant_dict_ptr: UnsafeMutablePointer<GVariantDict>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/variantdictref\/clear()","title":"func clear()","type":"method"},{"path":"\/documentation\/glib\/variantdictref\/contains(key:)","title":"func contains(key: UnsafePointer<gchar>!) -> Bool","type":"method"},{"path":"\/documentation\/glib\/variantdictref\/end()","title":"func end() -> VariantRef!","type":"method"},{"path":"\/documentation\/glib\/variantdictref\/init_(from:)","title":"func init_(from: VariantRef?)","type":"method"},{"path":"\/documentation\/glib\/variantdictref\/insertvalue(key:value:)","title":"func insertValue<VariantT>(key: UnsafePointer<gchar>!, value: VariantT)","type":"method"},{"path":"\/documentation\/glib\/variantdictref\/lookupvalue(key:expectedtype:)","title":"func lookupValue(key: UnsafePointer<gchar>!, expectedType: VariantTypeRef?) -> VariantRef!","type":"method"},{"path":"\/documentation\/glib\/variantdictref\/ref()","title":"func ref() -> VariantDictRef!","type":"method"},{"path":"\/documentation\/glib\/variantdictref\/remove(key:)","title":"func remove(key: UnsafePointer<gchar>!) -> Bool","type":"method"},{"path":"\/documentation\/glib\/variantdictref\/unref()","title":"func unref()","type":"method"}],"path":"\/documentation\/glib\/variantdictref\/variantdictprotocol-implementations","title":"VariantDictProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/variantdictref","title":"VariantDictRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/variantiterref\/init(_:)-181x0","title":"init(UnsafePointer<GVariantIter>)","type":"init"},{"path":"\/documentation\/glib\/variantiterref\/init(_:)-1z4ta","title":"init(UnsafeMutablePointer<GVariantIter>)","type":"init"},{"path":"\/documentation\/glib\/variantiterref\/init(_:)-51msm","title":"init!(UnsafePointer<GVariantIter>?)","type":"init"},{"path":"\/documentation\/glib\/variantiterref\/init(_:)-5xrn6","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/variantiterref\/init(_:)-ixhq","title":"init!(UnsafeMutablePointer<GVariantIter>?)","type":"init"},{"path":"\/documentation\/glib\/variantiterref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/variantiterref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/variantiterref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/variantiterref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/variantiterref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/variantiterref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/variantiterref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/variantiterref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/variantiterref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/variantiterref\/copy()","title":"func copy() -> VariantIterRef!","type":"method"},{"path":"\/documentation\/glib\/variantiterref\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/glib\/variantiterref\/init_(value:)","title":"func init_<VariantT>(value: VariantT) -> Int","type":"method"},{"path":"\/documentation\/glib\/variantiterref\/nchildren()","title":"func nChildren() -> Int","type":"method"},{"path":"\/documentation\/glib\/variantiterref\/nextvalue()","title":"func nextValue() -> VariantRef!","type":"method"}],"path":"\/documentation\/glib\/variantiterref\/variantiterprotocol-implementations","title":"VariantIterProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/variantiterref","title":"VariantIterRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/variantref\/init(cdouble:)","title":"init(CDouble: Double)","type":"init"},{"path":"\/documentation\/glib\/variantref\/init(_:)-13wqg","title":"init(UnsafePointer<GVariant>)","type":"init"},{"path":"\/documentation\/glib\/variantref\/init(_:)-2c060","title":"init!(UnsafePointer<GVariant>?)","type":"init"},{"path":"\/documentation\/glib\/variantref\/init(_:)-2qnta","title":"init!(UnsafeMutablePointer<GVariant>?)","type":"init"},{"path":"\/documentation\/glib\/variantref\/init(_:)-3gvng","title":"init(UnsafeMutablePointer<GVariant>)","type":"init"},{"path":"\/documentation\/glib\/variantref\/init(_:)-7p8mw","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/variantref\/init(array:children:nchildren:)","title":"init<VariantTypeT>(array: VariantTypeT?, children: UnsafePointer<UnsafeMutablePointer<GVariant>?>!, nChildren: Int)","type":"init"},{"path":"\/documentation\/glib\/variantref\/init(boolean:)","title":"init(boolean: Bool)","type":"init"},{"path":"\/documentation\/glib\/variantref\/init(byte:)","title":"init(byte: guint8)","type":"init"},{"path":"\/documentation\/glib\/variantref\/init(bytes:bytes:trusted:)","title":"init<BytesT, VariantTypeT>(bytes: VariantTypeT, bytes: BytesT, trusted: Bool)","type":"init"},{"path":"\/documentation\/glib\/variantref\/init(bytestring:)","title":"init(bytestring: UnsafePointer<gchar>!)","type":"init"},{"path":"\/documentation\/glib\/variantref\/init(bytestring_array:length:)","title":"init(bytestring_array: UnsafePointer<UnsafePointer<gchar>?>!, length: gssize)","type":"init"},{"path":"\/documentation\/glib\/variantref\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/variantref\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/variantref\/init(data:data:size:trusted:notify:userdata:)","title":"init<VariantTypeT>(data: VariantTypeT, data: gconstpointer!, size: Int, trusted: Bool, notify: GDestroyNotify?, userData: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/variantref\/init(fixed_array:elements:nelements:elementsize:)","title":"init<VariantTypeT>(fixed_array: VariantTypeT, elements: gconstpointer?, nElements: Int, elementSize: Int)","type":"init"},{"path":"\/documentation\/glib\/variantref\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/variantref\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/variantref\/init(handle:)","title":"init(handle: gint32)","type":"init"},{"path":"\/documentation\/glib\/variantref\/init(int16:)","title":"init(int16: gint16)","type":"init"},{"path":"\/documentation\/glib\/variantref\/init(int32:)","title":"init(int32: gint32)","type":"init"},{"path":"\/documentation\/glib\/variantref\/init(int64:)","title":"init(int64: gint64)","type":"init"},{"path":"\/documentation\/glib\/variantref\/init(maybe:child:)","title":"init<VariantT, VariantTypeT>(maybe: VariantTypeT?, child: VariantT?)","type":"init"},{"path":"\/documentation\/glib\/variantref\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/variantref\/init(objectpath:)","title":"init(objectPath: UnsafePointer<gchar>!)","type":"init"},{"path":"\/documentation\/glib\/variantref\/init(objv:length:)","title":"init(objv: UnsafePointer<UnsafePointer<gchar>?>!, length: gssize)","type":"init"},{"path":"\/documentation\/glib\/variantref\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/variantref\/init(signature:)","title":"init(signature: UnsafePointer<gchar>!)","type":"init"},{"path":"\/documentation\/glib\/variantref\/init(string:)","title":"init(string: UnsafePointer<gchar>!)","type":"init"},{"path":"\/documentation\/glib\/variantref\/init(strv:length:)","title":"init(strv: UnsafePointer<UnsafePointer<gchar>?>!, length: gssize)","type":"init"},{"path":"\/documentation\/glib\/variantref\/init(take_string:)","title":"init(take_string: UnsafeMutablePointer<gchar>!)","type":"init"},{"path":"\/documentation\/glib\/variantref\/init(tuple:nchildren:)","title":"init(tuple: UnsafePointer<UnsafeMutablePointer<GVariant>?>!, nChildren: Int)","type":"init"},{"path":"\/documentation\/glib\/variantref\/init(uint16:)","title":"init(uint16: guint16)","type":"init"},{"path":"\/documentation\/glib\/variantref\/init(uint32:)","title":"init(uint32: guint32)","type":"init"},{"path":"\/documentation\/glib\/variantref\/init(uint64:)","title":"init(uint64: guint64)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/variantref\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/variantref\/new(array:children:nchildren:)","title":"static func new<VariantTypeT>(array: VariantTypeT?, children: UnsafePointer<UnsafeMutablePointer<GVariant>?>!, nChildren: Int) -> VariantRef!","type":"method"},{"path":"\/documentation\/glib\/variantref\/new(boolean:)","title":"static func new(boolean: Bool) -> VariantRef!","type":"method"},{"path":"\/documentation\/glib\/variantref\/new(byte:)","title":"static func new(byte: guint8) -> VariantRef!","type":"method"},{"path":"\/documentation\/glib\/variantref\/new(handle:)","title":"static func new(handle: gint32) -> VariantRef!","type":"method"},{"path":"\/documentation\/glib\/variantref\/new(int16:)","title":"static func new(int16: gint16) -> VariantRef!","type":"method"},{"path":"\/documentation\/glib\/variantref\/new(int32:)","title":"static func new(int32: gint32) -> VariantRef!","type":"method"},{"path":"\/documentation\/glib\/variantref\/new(int64:)","title":"static func new(int64: gint64) -> VariantRef!","type":"method"},{"path":"\/documentation\/glib\/variantref\/new(maybe:child:)","title":"static func new<VariantT, VariantTypeT>(maybe: VariantTypeT?, child: VariantT?) -> VariantRef!","type":"method"},{"path":"\/documentation\/glib\/variantref\/new(objectpath:)","title":"static func new(objectPath: UnsafePointer<gchar>!) -> VariantRef!","type":"method"},{"path":"\/documentation\/glib\/variantref\/new(objv:length:)","title":"static func new(objv: UnsafePointer<UnsafePointer<gchar>?>!, length: gssize) -> VariantRef!","type":"method"},{"path":"\/documentation\/glib\/variantref\/new(signature:)","title":"static func new(signature: UnsafePointer<gchar>!) -> VariantRef!","type":"method"},{"path":"\/documentation\/glib\/variantref\/new(string:)","title":"static func new(string: UnsafePointer<gchar>!) -> VariantRef!","type":"method"},{"path":"\/documentation\/glib\/variantref\/new(strv:length:)","title":"static func new(strv: UnsafePointer<UnsafePointer<gchar>?>!, length: gssize) -> VariantRef!","type":"method"},{"path":"\/documentation\/glib\/variantref\/new(tuple:nchildren:)","title":"static func new(tuple: UnsafePointer<UnsafeMutablePointer<GVariant>?>!, nChildren: Int) -> VariantRef!","type":"method"},{"path":"\/documentation\/glib\/variantref\/new(uint16:)","title":"static func new(uint16: guint16) -> VariantRef!","type":"method"},{"path":"\/documentation\/glib\/variantref\/new(uint32:)","title":"static func new(uint32: guint32) -> VariantRef!","type":"method"},{"path":"\/documentation\/glib\/variantref\/new(uint64:)","title":"static func new(uint64: guint64) -> VariantRef!","type":"method"},{"path":"\/documentation\/glib\/variantref\/newbyte(bytestring:)","title":"static func newByte(bytestring: UnsafePointer<gchar>!) -> VariantRef!","type":"method"},{"path":"\/documentation\/glib\/variantref\/newbytestringarray(bytestring_array:length:)","title":"static func newBytestringArray(bytestring_array: UnsafePointer<UnsafePointer<gchar>?>!, length: gssize) -> VariantRef!","type":"method"},{"path":"\/documentation\/glib\/variantref\/newdouble(cdouble:)","title":"static func newDouble(CDouble: Double) -> VariantRef!","type":"method"},{"path":"\/documentation\/glib\/variantref\/newfixedarray(fixed_array:elements:nelements:elementsize:)","title":"static func newFixedArray<VariantTypeT>(fixed_array: VariantTypeT, elements: gconstpointer?, nElements: Int, elementSize: Int) -> VariantRef!","type":"method"},{"path":"\/documentation\/glib\/variantref\/newfrom(bytes:bytes:trusted:)","title":"static func newFrom<BytesT, VariantTypeT>(bytes: VariantTypeT, bytes: BytesT, trusted: Bool) -> VariantRef!","type":"method"},{"path":"\/documentation\/glib\/variantref\/newfrom(data:data:size:trusted:notify:userdata:)","title":"static func newFrom<VariantTypeT>(data: VariantTypeT, data: gconstpointer!, size: Int, trusted: Bool, notify: GDestroyNotify?, userData: gpointer?) -> VariantRef!","type":"method"},{"path":"\/documentation\/glib\/variantref\/newtake(take_string:)","title":"static func newTake(take_string: UnsafeMutablePointer<gchar>!) -> VariantRef!","type":"method"},{"path":"\/documentation\/glib\/variantref\/parse(type:text:limit:endptr:)","title":"static func parse<VariantTypeT>(type: VariantTypeT?, text: UnsafePointer<gchar>!, limit: UnsafePointer<gchar>?, endptr: UnsafeMutablePointer<UnsafePointer<gchar>?>?) throws -> VariantRef!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/variantref\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/variantref\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/variantref\/boolean","title":"var boolean: Bool","type":"property"},{"path":"\/documentation\/glib\/variantref\/byte","title":"var byte: guint8","type":"property"},{"path":"\/documentation\/glib\/variantref\/bytestring","title":"var bytestring: String!","type":"property"},{"path":"\/documentation\/glib\/variantref\/data","title":"var data: gconstpointer?","type":"property"},{"path":"\/documentation\/glib\/variantref\/dataasbytes","title":"var dataAsBytes: BytesRef!","type":"property"},{"path":"\/documentation\/glib\/variantref\/double","title":"var double: Double","type":"property"},{"path":"\/documentation\/glib\/variantref\/handle","title":"var handle: gint32","type":"property"},{"path":"\/documentation\/glib\/variantref\/int16","title":"var int16: gint16","type":"property"},{"path":"\/documentation\/glib\/variantref\/int32","title":"var int32: gint32","type":"property"},{"path":"\/documentation\/glib\/variantref\/int64","title":"var int64: gint64","type":"property"},{"path":"\/documentation\/glib\/variantref\/iscontainer","title":"var isContainer: Bool","type":"property"},{"path":"\/documentation\/glib\/variantref\/isfloating","title":"var isFloating: Bool","type":"property"},{"path":"\/documentation\/glib\/variantref\/isnormalform","title":"var isNormalForm: Bool","type":"property"},{"path":"\/documentation\/glib\/variantref\/maybe","title":"var maybe: VariantRef!","type":"property"},{"path":"\/documentation\/glib\/variantref\/normalform","title":"var normalForm: VariantRef!","type":"property"},{"path":"\/documentation\/glib\/variantref\/size","title":"var size: Int","type":"property"},{"path":"\/documentation\/glib\/variantref\/type","title":"var type: VariantTypeRef!","type":"property"},{"path":"\/documentation\/glib\/variantref\/typestring","title":"var typeString: String!","type":"property"},{"path":"\/documentation\/glib\/variantref\/uint16","title":"var uint16: guint16","type":"property"},{"path":"\/documentation\/glib\/variantref\/uint32","title":"var uint32: guint32","type":"property"},{"path":"\/documentation\/glib\/variantref\/uint64","title":"var uint64: guint64","type":"property"},{"path":"\/documentation\/glib\/variantref\/variant","title":"var variant: VariantRef!","type":"property"},{"path":"\/documentation\/glib\/variantref\/variant_ptr","title":"var variant_ptr: UnsafeMutablePointer<GVariant>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/variantref\/byteswap()","title":"func byteswap() -> VariantRef!","type":"method"},{"path":"\/documentation\/glib\/variantref\/check(formatstring:copyonly:)","title":"func check(formatString: UnsafePointer<gchar>!, copyOnly: Bool) -> Bool","type":"method"},{"path":"\/documentation\/glib\/variantref\/classify()","title":"func classify() -> GVariantClass","type":"method"},{"path":"\/documentation\/glib\/variantref\/compare(two:)","title":"func compare<VariantT>(two: VariantT) -> Int","type":"method"},{"path":"\/documentation\/glib\/variantref\/dupbytestring(length:)","title":"func dupBytestring(length: UnsafeMutablePointer<gsize>!) -> String!","type":"method"},{"path":"\/documentation\/glib\/variantref\/dupbytestringarray(length:)","title":"func dupBytestringArray(length: UnsafeMutablePointer<gsize>!) -> UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!","type":"method"},{"path":"\/documentation\/glib\/variantref\/dupobjv(length:)","title":"func dupObjv(length: UnsafeMutablePointer<gsize>!) -> UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!","type":"method"},{"path":"\/documentation\/glib\/variantref\/dupstring(length:)","title":"func dupString(length: UnsafeMutablePointer<gsize>!) -> String!","type":"method"},{"path":"\/documentation\/glib\/variantref\/dupstrv(length:)","title":"func dupStrv(length: UnsafeMutablePointer<gsize>!) -> UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!","type":"method"},{"path":"\/documentation\/glib\/variantref\/equal(two:)","title":"func equal<VariantT>(two: VariantT) -> Bool","type":"method"},{"path":"\/documentation\/glib\/variantref\/getboolean()","title":"func getBoolean() -> Bool","type":"method"},{"path":"\/documentation\/glib\/variantref\/getbyte()","title":"func getByte() -> guint8","type":"method"},{"path":"\/documentation\/glib\/variantref\/getbytestring()","title":"func getBytestring() -> String!","type":"method"},{"path":"\/documentation\/glib\/variantref\/getbytestringarray(length:)","title":"func getBytestringArray(length: UnsafeMutablePointer<gsize>!) -> UnsafeMutablePointer<UnsafePointer<gchar>?>!","type":"method"},{"path":"\/documentation\/glib\/variantref\/getchildvalue(index:)","title":"func getChildValue(index: Int) -> VariantRef!","type":"method"},{"path":"\/documentation\/glib\/variantref\/getdata()","title":"func getData() -> gconstpointer?","type":"method"},{"path":"\/documentation\/glib\/variantref\/getdataasbytes()","title":"func getDataAsBytes() -> BytesRef!","type":"method"},{"path":"\/documentation\/glib\/variantref\/getdouble()","title":"func getDouble() -> Double","type":"method"},{"path":"\/documentation\/glib\/variantref\/getfixedarray(nelements:elementsize:)","title":"func getFixedArray(nElements: UnsafeMutablePointer<gsize>!, elementSize: Int) -> gconstpointer!","type":"method"},{"path":"\/documentation\/glib\/variantref\/gethandle()","title":"func getHandle() -> gint32","type":"method"},{"path":"\/documentation\/glib\/variantref\/getint16()","title":"func getInt16() -> gint16","type":"method"},{"path":"\/documentation\/glib\/variantref\/getint32()","title":"func getInt32() -> gint32","type":"method"},{"path":"\/documentation\/glib\/variantref\/getint64()","title":"func getInt64() -> gint64","type":"method"},{"path":"\/documentation\/glib\/variantref\/getmaybe()","title":"func getMaybe() -> VariantRef!","type":"method"},{"path":"\/documentation\/glib\/variantref\/getnormalform()","title":"func getNormalForm() -> VariantRef!","type":"method"},{"path":"\/documentation\/glib\/variantref\/getobjv(length:)","title":"func getObjv(length: UnsafeMutablePointer<gsize>!) -> UnsafeMutablePointer<UnsafePointer<gchar>?>!","type":"method"},{"path":"\/documentation\/glib\/variantref\/getsize()","title":"func getSize() -> Int","type":"method"},{"path":"\/documentation\/glib\/variantref\/getstring(length:)","title":"func getString(length: UnsafeMutablePointer<gsize>!) -> String!","type":"method"},{"path":"\/documentation\/glib\/variantref\/getstrv(length:)","title":"func getStrv(length: UnsafeMutablePointer<gsize>!) -> UnsafeMutablePointer<UnsafePointer<gchar>?>!","type":"method"},{"path":"\/documentation\/glib\/variantref\/gettype()","title":"func getType() -> VariantTypeRef!","type":"method"},{"path":"\/documentation\/glib\/variantref\/gettypestring()","title":"func getTypeString() -> String!","type":"method"},{"path":"\/documentation\/glib\/variantref\/getuint16()","title":"func getUint16() -> guint16","type":"method"},{"path":"\/documentation\/glib\/variantref\/getuint32()","title":"func getUint32() -> guint32","type":"method"},{"path":"\/documentation\/glib\/variantref\/getuint64()","title":"func getUint64() -> guint64","type":"method"},{"path":"\/documentation\/glib\/variantref\/getvariant()","title":"func getVariant() -> VariantRef!","type":"method"},{"path":"\/documentation\/glib\/variantref\/hash()","title":"func hash() -> Int","type":"method"},{"path":"\/documentation\/glib\/variantref\/isof(type:)","title":"func isOf<VariantTypeT>(type: VariantTypeT) -> Bool","type":"method"},{"path":"\/documentation\/glib\/variantref\/iternew()","title":"func iterNew() -> VariantIterRef!","type":"method"},{"path":"\/documentation\/glib\/variantref\/logvariant(logdomain:loglevel:)","title":"func logVariant(logDomain: UnsafePointer<gchar>?, logLevel: LogLevelFlags)","type":"method"},{"path":"\/documentation\/glib\/variantref\/lookupvalue(key:expectedtype:)","title":"func lookupValue(key: UnsafePointer<gchar>!, expectedType: VariantTypeRef?) -> VariantRef!","type":"method"},{"path":"\/documentation\/glib\/variantref\/nchildren()","title":"func nChildren() -> Int","type":"method"},{"path":"\/documentation\/glib\/variantref\/print(string:typeannotate:)","title":"func print(string: StringRef?, typeAnnotate: Bool) -> StringRef!","type":"method"},{"path":"\/documentation\/glib\/variantref\/print(typeannotate:)","title":"func print(typeAnnotate: Bool) -> String!","type":"method"},{"path":"\/documentation\/glib\/variantref\/ref()","title":"func ref() -> VariantRef!","type":"method"},{"path":"\/documentation\/glib\/variantref\/refsink()","title":"func refSink() -> VariantRef!","type":"method"},{"path":"\/documentation\/glib\/variantref\/store(data:)","title":"func store(data: gpointer!)","type":"method"},{"path":"\/documentation\/glib\/variantref\/takeref()","title":"func takeRef() -> VariantRef!","type":"method"},{"path":"\/documentation\/glib\/variantref\/unref()","title":"func unref()","type":"method"}],"path":"\/documentation\/glib\/variantref\/variantprotocol-implementations","title":"VariantProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/variantref","title":"VariantRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/varianttyperef\/init(_:)-1262e","title":"init!(UnsafePointer<GVariantType>?)","type":"init"},{"path":"\/documentation\/glib\/varianttyperef\/init(_:)-1cp1y","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/glib\/varianttyperef\/init(_:)-3bbhv","title":"init(UnsafeMutablePointer<GVariantType>)","type":"init"},{"path":"\/documentation\/glib\/varianttyperef\/init(_:)-3or3","title":"init(UnsafePointer<GVariantType>)","type":"init"},{"path":"\/documentation\/glib\/varianttyperef\/init(_:)-yp1o","title":"init!(UnsafeMutablePointer<GVariantType>?)","type":"init"},{"path":"\/documentation\/glib\/varianttyperef\/init(cpointer:)","title":"init<T>(cPointer: UnsafeMutablePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/varianttyperef\/init(constpointer:)","title":"init<T>(constPointer: UnsafePointer<T>)","type":"init"},{"path":"\/documentation\/glib\/varianttyperef\/init(gconstpointer:)","title":"init!(gconstpointer: gconstpointer?)","type":"init"},{"path":"\/documentation\/glib\/varianttyperef\/init(gpointer:)","title":"init!(gpointer: gpointer?)","type":"init"},{"path":"\/documentation\/glib\/varianttyperef\/init(mutating:)","title":"init(mutating: UnsafeRawPointer)","type":"init"},{"path":"\/documentation\/glib\/varianttyperef\/init(opaquepointer:)","title":"init(opaquePointer: OpaquePointer)","type":"init"},{"path":"\/documentation\/glib\/varianttyperef\/init(typestring:)","title":"init(typeString: UnsafePointer<gchar>!)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/varianttyperef\/ptr","title":"let ptr: UnsafeMutableRawPointer!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/varianttyperef\/checked(typestring:)","title":"static func checked(typeString: UnsafePointer<gchar>!) -> VariantTypeRef!","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/varianttyperef\/init(raw:)","title":"init(raw: UnsafeMutableRawPointer)","type":"init"}],"path":"\/documentation\/glib\/varianttyperef\/pointerwrapper-implementations","title":"PointerWrapper Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/varianttyperef\/isarray","title":"var isArray: Bool","type":"property"},{"path":"\/documentation\/glib\/varianttyperef\/isbasic","title":"var isBasic: Bool","type":"property"},{"path":"\/documentation\/glib\/varianttyperef\/iscontainer","title":"var isContainer: Bool","type":"property"},{"path":"\/documentation\/glib\/varianttyperef\/isdefinite","title":"var isDefinite: Bool","type":"property"},{"path":"\/documentation\/glib\/varianttyperef\/isdictentry","title":"var isDictEntry: Bool","type":"property"},{"path":"\/documentation\/glib\/varianttyperef\/ismaybe","title":"var isMaybe: Bool","type":"property"},{"path":"\/documentation\/glib\/varianttyperef\/istuple","title":"var isTuple: Bool","type":"property"},{"path":"\/documentation\/glib\/varianttyperef\/isvariant","title":"var isVariant: Bool","type":"property"},{"path":"\/documentation\/glib\/varianttyperef\/stringlength","title":"var stringLength: Int","type":"property"},{"path":"\/documentation\/glib\/varianttyperef\/variant_type_ptr","title":"var variant_type_ptr: UnsafeMutablePointer<GVariantType>!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/varianttyperef\/copy()","title":"func copy() -> VariantTypeRef!","type":"method"},{"path":"\/documentation\/glib\/varianttyperef\/dupstring()","title":"func dupString() -> String!","type":"method"},{"path":"\/documentation\/glib\/varianttyperef\/element()","title":"func element() -> VariantTypeRef!","type":"method"},{"path":"\/documentation\/glib\/varianttyperef\/equal(type2:)","title":"func equal<VariantTypeT>(type2: VariantTypeT) -> Bool","type":"method"},{"path":"\/documentation\/glib\/varianttyperef\/first()","title":"func first() -> VariantTypeRef!","type":"method"},{"path":"\/documentation\/glib\/varianttyperef\/free()","title":"func free()","type":"method"},{"path":"\/documentation\/glib\/varianttyperef\/getstringlength()","title":"func getStringLength() -> Int","type":"method"},{"path":"\/documentation\/glib\/varianttyperef\/hash()","title":"func hash() -> Int","type":"method"},{"path":"\/documentation\/glib\/varianttyperef\/issubtypeof(supertype:)","title":"func isSubtypeOf<VariantTypeT>(supertype: VariantTypeT) -> Bool","type":"method"},{"path":"\/documentation\/glib\/varianttyperef\/key()","title":"func key() -> VariantTypeRef!","type":"method"},{"path":"\/documentation\/glib\/varianttyperef\/nitems()","title":"func nItems() -> Int","type":"method"},{"path":"\/documentation\/glib\/varianttyperef\/next()","title":"func next() -> VariantTypeRef!","type":"method"},{"path":"\/documentation\/glib\/varianttyperef\/peekstring()","title":"func peekString() -> String!","type":"method"},{"path":"\/documentation\/glib\/varianttyperef\/value()","title":"func value() -> VariantTypeRef!","type":"method"},{"path":"\/documentation\/glib\/varianttyperef\/variantparse(text:limit:endptr:)","title":"func variantParse(text: UnsafePointer<gchar>!, limit: UnsafePointer<gchar>?, endptr: UnsafeMutablePointer<UnsafePointer<gchar>?>?) throws -> VariantRef!","type":"method"}],"path":"\/documentation\/glib\/varianttyperef\/varianttypeprotocol-implementations","title":"VariantTypeProtocol Implementations","type":"symbol"}],"path":"\/documentation\/glib\/varianttyperef","title":"VariantTypeRef","type":"struct"},{"title":"Variables","type":"groupMarker"},{"path":"\/documentation\/glib\/allocator_list","title":"let ALLOCATOR_LIST: Int32","type":"var"},{"path":"\/documentation\/glib\/allocator_node","title":"let ALLOCATOR_NODE: Int32","type":"var"},{"path":"\/documentation\/glib\/allocator_slist","title":"let ALLOCATOR_SLIST: Int32","type":"var"},{"path":"\/documentation\/glib\/alloc_and_free","title":"let ALLOC_AND_FREE: Int32","type":"var"},{"path":"\/documentation\/glib\/alloc_only","title":"let ALLOC_ONLY: Int32","type":"var"},{"path":"\/documentation\/glib\/analyzer_analyzing","title":"let ANALYZER_ANALYZING: Int32","type":"var"},{"path":"\/documentation\/glib\/ascii_dtostr_buf_size","title":"let ASCII_DTOSTR_BUF_SIZE: Int32","type":"var"},{"path":"\/documentation\/glib\/atomic_ref_count_init","title":"let ATOMIC_REF_COUNT_INIT: Int","type":"var"},{"path":"\/documentation\/glib\/big_endian","title":"let BIG_ENDIAN: Int32","type":"var"},{"path":"\/documentation\/glib\/cset_a_2_z-443a0","title":"let CSET_A_2_Z: String","type":"var"},{"path":"\/documentation\/glib\/cset_digits","title":"let CSET_DIGITS: String","type":"var"},{"path":"\/documentation\/glib\/cset_a_2_z-8sfqt","title":"let CSET_a_2_z: String","type":"var"},{"path":"\/documentation\/glib\/cstdversion","title":"let CStdVersion: Int","type":"var"},{"path":"\/documentation\/glib\/c_std_version","title":"let C_STD_VERSION: Int","type":"var"},{"path":"\/documentation\/glib\/datalist_flags_mask","title":"let DATALIST_FLAGS_MASK: Int32","type":"var"},{"path":"\/documentation\/glib\/date_bad_day","title":"let DATE_BAD_DAY: UInt32","type":"var"},{"path":"\/documentation\/glib\/date_bad_julian","title":"let DATE_BAD_JULIAN: UInt32","type":"var"},{"path":"\/documentation\/glib\/date_bad_year","title":"let DATE_BAD_YEAR: UInt32","type":"var"},{"path":"\/documentation\/glib\/dir_separator","title":"let DIR_SEPARATOR: Int","type":"var"},{"path":"\/documentation\/glib\/dir_separator_s","title":"let DIR_SEPARATOR_S: String","type":"var"},{"path":"\/documentation\/glib\/e-80kbi","title":"let E: Double","type":"var"},{"path":"\/documentation\/glib\/gint16_format","title":"let GINT16_FORMAT: String","type":"var"},{"path":"\/documentation\/glib\/gint16_modifier","title":"let GINT16_MODIFIER: String","type":"var"},{"path":"\/documentation\/glib\/gint32_format","title":"let GINT32_FORMAT: String","type":"var"},{"path":"\/documentation\/glib\/gint32_modifier","title":"let GINT32_MODIFIER: String","type":"var"},{"path":"\/documentation\/glib\/gint64_format","title":"let GINT64_FORMAT: String","type":"var"},{"path":"\/documentation\/glib\/gint64_modifier","title":"let GINT64_MODIFIER: String","type":"var"},{"path":"\/documentation\/glib\/gintptr_format","title":"let GINTPTR_FORMAT: String","type":"var"},{"path":"\/documentation\/glib\/gintptr_modifier","title":"let GINTPTR_MODIFIER: String","type":"var"},{"path":"\/documentation\/glib\/gsize_format","title":"let GSIZE_FORMAT: String","type":"var"},{"path":"\/documentation\/glib\/gsize_modifier","title":"let GSIZE_MODIFIER: String","type":"var"},{"path":"\/documentation\/glib\/gssize_format","title":"let GSSIZE_FORMAT: String","type":"var"},{"path":"\/documentation\/glib\/gssize_modifier","title":"let GSSIZE_MODIFIER: String","type":"var"},{"path":"\/documentation\/glib\/guint16_format","title":"let GUINT16_FORMAT: String","type":"var"},{"path":"\/documentation\/glib\/guint32_format","title":"let GUINT32_FORMAT: String","type":"var"},{"path":"\/documentation\/glib\/guint64_format","title":"let GUINT64_FORMAT: String","type":"var"},{"path":"\/documentation\/glib\/guintptr_format","title":"let GUINTPTR_FORMAT: String","type":"var"},{"path":"\/documentation\/glib\/g_minint16","title":"let G_MININT16: Int16","type":"var"},{"path":"\/documentation\/glib\/g_minint32","title":"let G_MININT32: Int32","type":"var"},{"path":"\/documentation\/glib\/g_minint8","title":"let G_MININT8: Int8","type":"var"},{"path":"\/documentation\/glib\/g_source_continue","title":"let G_SOURCE_CONTINUE: gboolean","type":"var"},{"path":"\/documentation\/glib\/have_gint64","title":"let HAVE_GINT64: Int32","type":"var"},{"path":"\/documentation\/glib\/have_gnuc_varargs","title":"let HAVE_GNUC_VARARGS: Int32","type":"var"},{"path":"\/documentation\/glib\/have_gnuc_visibility","title":"let HAVE_GNUC_VISIBILITY: Int32","type":"var"},{"path":"\/documentation\/glib\/have_growing_stack","title":"let HAVE_GROWING_STACK: Int32","type":"var"},{"path":"\/documentation\/glib\/have_iso_varargs","title":"let HAVE_ISO_VARARGS: Int32","type":"var"},{"path":"\/documentation\/glib\/hook_flag_user_shift","title":"let HOOK_FLAG_USER_SHIFT: Int32","type":"var"},{"path":"\/documentation\/glib\/ieee754_double_bias","title":"let IEEE754_DOUBLE_BIAS: Int32","type":"var"},{"path":"\/documentation\/glib\/ieee754_float_bias","title":"let IEEE754_FLOAT_BIAS: Int32","type":"var"},{"path":"\/documentation\/glib\/key_file_desktop_group","title":"let KEY_FILE_DESKTOP_GROUP: String","type":"var"},{"path":"\/documentation\/glib\/key_file_desktop_key_actions","title":"let KEY_FILE_DESKTOP_KEY_ACTIONS: String","type":"var"},{"path":"\/documentation\/glib\/key_file_desktop_key_categories","title":"let KEY_FILE_DESKTOP_KEY_CATEGORIES: String","type":"var"},{"path":"\/documentation\/glib\/key_file_desktop_key_comment","title":"let KEY_FILE_DESKTOP_KEY_COMMENT: String","type":"var"},{"path":"\/documentation\/glib\/key_file_desktop_key_dbus_activatable","title":"let KEY_FILE_DESKTOP_KEY_DBUS_ACTIVATABLE: String","type":"var"},{"path":"\/documentation\/glib\/key_file_desktop_key_exec","title":"let KEY_FILE_DESKTOP_KEY_EXEC: String","type":"var"},{"path":"\/documentation\/glib\/key_file_desktop_key_generic_name","title":"let KEY_FILE_DESKTOP_KEY_GENERIC_NAME: String","type":"var"},{"path":"\/documentation\/glib\/key_file_desktop_key_hidden","title":"let KEY_FILE_DESKTOP_KEY_HIDDEN: String","type":"var"},{"path":"\/documentation\/glib\/key_file_desktop_key_icon","title":"let KEY_FILE_DESKTOP_KEY_ICON: String","type":"var"},{"path":"\/documentation\/glib\/key_file_desktop_key_mime_type","title":"let KEY_FILE_DESKTOP_KEY_MIME_TYPE: String","type":"var"},{"path":"\/documentation\/glib\/key_file_desktop_key_name","title":"let KEY_FILE_DESKTOP_KEY_NAME: String","type":"var"},{"path":"\/documentation\/glib\/key_file_desktop_key_not_show_in","title":"let KEY_FILE_DESKTOP_KEY_NOT_SHOW_IN: String","type":"var"},{"path":"\/documentation\/glib\/key_file_desktop_key_no_display","title":"let KEY_FILE_DESKTOP_KEY_NO_DISPLAY: String","type":"var"},{"path":"\/documentation\/glib\/key_file_desktop_key_only_show_in","title":"let KEY_FILE_DESKTOP_KEY_ONLY_SHOW_IN: String","type":"var"},{"path":"\/documentation\/glib\/key_file_desktop_key_path","title":"let KEY_FILE_DESKTOP_KEY_PATH: String","type":"var"},{"path":"\/documentation\/glib\/key_file_desktop_key_startup_notify","title":"let KEY_FILE_DESKTOP_KEY_STARTUP_NOTIFY: String","type":"var"},{"path":"\/documentation\/glib\/key_file_desktop_key_startup_wm_class","title":"let KEY_FILE_DESKTOP_KEY_STARTUP_WM_CLASS: String","type":"var"},{"path":"\/documentation\/glib\/key_file_desktop_key_terminal","title":"let KEY_FILE_DESKTOP_KEY_TERMINAL: String","type":"var"},{"path":"\/documentation\/glib\/key_file_desktop_key_try_exec","title":"let KEY_FILE_DESKTOP_KEY_TRY_EXEC: String","type":"var"},{"path":"\/documentation\/glib\/key_file_desktop_key_type","title":"let KEY_FILE_DESKTOP_KEY_TYPE: String","type":"var"},{"path":"\/documentation\/glib\/key_file_desktop_key_url","title":"let KEY_FILE_DESKTOP_KEY_URL: String","type":"var"},{"path":"\/documentation\/glib\/key_file_desktop_key_version","title":"let KEY_FILE_DESKTOP_KEY_VERSION: String","type":"var"},{"path":"\/documentation\/glib\/key_file_desktop_type_application","title":"let KEY_FILE_DESKTOP_TYPE_APPLICATION: String","type":"var"},{"path":"\/documentation\/glib\/key_file_desktop_type_directory","title":"let KEY_FILE_DESKTOP_TYPE_DIRECTORY: String","type":"var"},{"path":"\/documentation\/glib\/key_file_desktop_type_link","title":"let KEY_FILE_DESKTOP_TYPE_LINK: String","type":"var"},{"path":"\/documentation\/glib\/little_endian","title":"let LITTLE_ENDIAN: Int32","type":"var"},{"path":"\/documentation\/glib\/ln10-432rd","title":"let LN10: Double","type":"var"},{"path":"\/documentation\/glib\/ln2-9lkkk","title":"let LN2: Double","type":"var"},{"path":"\/documentation\/glib\/log_2_base_10","title":"let LOG_2_BASE_10: Double","type":"var"},{"path":"\/documentation\/glib\/log_domain","title":"let LOG_DOMAIN: Int","type":"var"},{"path":"\/documentation\/glib\/log_fatal_mask","title":"let LOG_FATAL_MASK: Int","type":"var"},{"path":"\/documentation\/glib\/log_level_user_shift","title":"let LOG_LEVEL_USER_SHIFT: Int32","type":"var"},{"path":"\/documentation\/glib\/major_version","title":"let MAJOR_VERSION: Int32","type":"var"},{"path":"\/documentation\/glib\/maxint16-29aaz","title":"let MAXINT16: Int","type":"var"},{"path":"\/documentation\/glib\/maxint32-5phi9","title":"let MAXINT32: Int","type":"var"},{"path":"\/documentation\/glib\/maxint64-106w1","title":"let MAXINT64: Int","type":"var"},{"path":"\/documentation\/glib\/maxint8-8btym","title":"let MAXINT8: Int","type":"var"},{"path":"\/documentation\/glib\/maxuint16-5a4qo","title":"let MAXUINT16: Int","type":"var"},{"path":"\/documentation\/glib\/maxuint32-4k32i","title":"let MAXUINT32: Int","type":"var"},{"path":"\/documentation\/glib\/maxuint64-5erd2","title":"let MAXUINT64: Int","type":"var"},{"path":"\/documentation\/glib\/maxuint8-62laa","title":"let MAXUINT8: Int","type":"var"},{"path":"\/documentation\/glib\/micro_version","title":"let MICRO_VERSION: Int32","type":"var"},{"path":"\/documentation\/glib\/minint16-7qu5","title":"let MININT16: Int16","type":"var"},{"path":"\/documentation\/glib\/minint32-3odmm","title":"let MININT32: Int32","type":"var"},{"path":"\/documentation\/glib\/minint64-56aj","title":"let MININT64: Int","type":"var"},{"path":"\/documentation\/glib\/minint8-4kmuw","title":"let MININT8: Int8","type":"var"},{"path":"\/documentation\/glib\/minor_version","title":"let MINOR_VERSION: Int32","type":"var"},{"path":"\/documentation\/glib\/module_suffix","title":"let MODULE_SUFFIX: Int","type":"var"},{"path":"\/documentation\/glib\/option_remaining","title":"let OPTION_REMAINING: String","type":"var"},{"path":"\/documentation\/glib\/pdp_endian","title":"let PDP_ENDIAN: Int32","type":"var"},{"path":"\/documentation\/glib\/pi-1ric0","title":"let PI: Double","type":"var"},{"path":"\/documentation\/glib\/pid_format","title":"let PID_FORMAT: String","type":"var"},{"path":"\/documentation\/glib\/pi_2","title":"let PI_2: Double","type":"var"},{"path":"\/documentation\/glib\/pi_4","title":"let PI_4: Double","type":"var"},{"path":"\/documentation\/glib\/pollfd_format","title":"let POLLFD_FORMAT: String","type":"var"},{"path":"\/documentation\/glib\/priority_default","title":"let PRIORITY_DEFAULT: Int32","type":"var"},{"path":"\/documentation\/glib\/priority_default_idle","title":"let PRIORITY_DEFAULT_IDLE: Int32","type":"var"},{"path":"\/documentation\/glib\/priority_high","title":"let PRIORITY_HIGH: Int32","type":"var"},{"path":"\/documentation\/glib\/priority_high_idle","title":"let PRIORITY_HIGH_IDLE: Int32","type":"var"},{"path":"\/documentation\/glib\/priority_low","title":"let PRIORITY_LOW: Int32","type":"var"},{"path":"\/documentation\/glib\/ref_count_init","title":"let REF_COUNT_INIT: Int","type":"var"},{"path":"\/documentation\/glib\/searchpath_separator","title":"let SEARCHPATH_SEPARATOR: Int","type":"var"},{"path":"\/documentation\/glib\/searchpath_separator_s","title":"let SEARCHPATH_SEPARATOR_S: String","type":"var"},{"path":"\/documentation\/glib\/sizeof_long","title":"let SIZEOF_LONG: Int32","type":"var"},{"path":"\/documentation\/glib\/sizeof_size_t","title":"let SIZEOF_SIZE_T: Int32","type":"var"},{"path":"\/documentation\/glib\/sizeof_ssize_t","title":"let SIZEOF_SSIZE_T: Int32","type":"var"},{"path":"\/documentation\/glib\/sizeof_void_p","title":"let SIZEOF_VOID_P: Int32","type":"var"},{"path":"\/documentation\/glib\/source_continue","title":"let SOURCE_CONTINUE: gboolean","type":"var"},{"path":"\/documentation\/glib\/source_remove","title":"let SOURCE_REMOVE: Int32","type":"var"},{"path":"\/documentation\/glib\/sqrt2-6p7hu","title":"let SQRT2: Double","type":"var"},{"path":"\/documentation\/glib\/str_delimiters","title":"let STR_DELIMITERS: String","type":"var"},{"path":"\/documentation\/glib\/sysdef_af_inet","title":"let SYSDEF_AF_INET: Int32","type":"var"},{"path":"\/documentation\/glib\/sysdef_af_inet6","title":"let SYSDEF_AF_INET6: Int32","type":"var"},{"path":"\/documentation\/glib\/sysdef_af_unix","title":"let SYSDEF_AF_UNIX: Int32","type":"var"},{"path":"\/documentation\/glib\/sysdef_msg_dontroute","title":"let SYSDEF_MSG_DONTROUTE: Int32","type":"var"},{"path":"\/documentation\/glib\/sysdef_msg_oob","title":"let SYSDEF_MSG_OOB: Int32","type":"var"},{"path":"\/documentation\/glib\/sysdef_msg_peek","title":"let SYSDEF_MSG_PEEK: Int32","type":"var"},{"path":"\/documentation\/glib\/test_option_isolate_dirs","title":"let TEST_OPTION_ISOLATE_DIRS: String","type":"var"},{"path":"\/documentation\/glib\/time_span_day","title":"let TIME_SPAN_DAY: Int","type":"var"},{"path":"\/documentation\/glib\/time_span_hour","title":"let TIME_SPAN_HOUR: Int","type":"var"},{"path":"\/documentation\/glib\/time_span_millisecond","title":"let TIME_SPAN_MILLISECOND: Int","type":"var"},{"path":"\/documentation\/glib\/time_span_minute","title":"let TIME_SPAN_MINUTE: Int","type":"var"},{"path":"\/documentation\/glib\/time_span_second","title":"let TIME_SPAN_SECOND: Int","type":"var"},{"path":"\/documentation\/glib\/unichar_max_decomposition_length","title":"let UNICHAR_MAX_DECOMPOSITION_LENGTH: Int32","type":"var"},{"path":"\/documentation\/glib\/uri_reserved_chars_generic_delimiters","title":"let URI_RESERVED_CHARS_GENERIC_DELIMITERS: String","type":"var"},{"path":"\/documentation\/glib\/uri_reserved_chars_subcomponent_delimiters","title":"let URI_RESERVED_CHARS_SUBCOMPONENT_DELIMITERS: String","type":"var"},{"path":"\/documentation\/glib\/usec_per_sec","title":"let USEC_PER_SEC: Int32","type":"var"},{"path":"\/documentation\/glib\/va_copy_as_array","title":"let VA_COPY_AS_ARRAY: Int32","type":"var"},{"path":"\/documentation\/glib\/version_min_required","title":"let VERSION_MIN_REQUIRED: Int","type":"var"},{"path":"\/documentation\/glib\/win32_msg_handle","title":"let WIN32_MSG_HANDLE: Int","type":"var"},{"path":"\/documentation\/glib\/allocandfree","title":"let allocAndFree: Int32","type":"var"},{"path":"\/documentation\/glib\/alloconly","title":"let allocOnly: Int32","type":"var"},{"path":"\/documentation\/glib\/allocatorlist","title":"let allocatorList: Int32","type":"var"},{"path":"\/documentation\/glib\/allocatornode","title":"let allocatorNode: Int32","type":"var"},{"path":"\/documentation\/glib\/allocatorslist","title":"let allocatorSlist: Int32","type":"var"},{"path":"\/documentation\/glib\/analyzeranalyzing","title":"let analyzerAnalyzing: Int32","type":"var"},{"path":"\/documentation\/glib\/asciidtostrbufsize","title":"let asciiDtostrBufSize: Int32","type":"var"},{"path":"\/documentation\/glib\/atomicrefcountinit","title":"let atomicRefCountInit: Int","type":"var"},{"path":"\/documentation\/glib\/bigendian","title":"let bigEndian: Int32","type":"var"},{"path":"\/documentation\/glib\/cseta2z-1764s","title":"let csetA2Z: String","type":"var"},{"path":"\/documentation\/glib\/csetdigits","title":"let csetDigits: String","type":"var"},{"path":"\/documentation\/glib\/cseta2z-1efi9","title":"let cseta2z: String","type":"var"},{"path":"\/documentation\/glib\/datalistflagsmask","title":"let datalistFlagsMask: Int32","type":"var"},{"path":"\/documentation\/glib\/datebadday","title":"let dateBadDay: UInt32","type":"var"},{"path":"\/documentation\/glib\/datebadjulian","title":"let dateBadJulian: UInt32","type":"var"},{"path":"\/documentation\/glib\/datebadyear","title":"let dateBadYear: UInt32","type":"var"},{"path":"\/documentation\/glib\/dirseparator","title":"let dirSeparator: Int","type":"var"},{"path":"\/documentation\/glib\/dirseparators","title":"let dirSeparatorS: String","type":"var"},{"path":"\/documentation\/glib\/e-3m6a4","title":"let e: Double","type":"var"},{"path":"\/documentation\/glib\/gint16format","title":"let gint16Format: String","type":"var"},{"path":"\/documentation\/glib\/gint16modifier","title":"let gint16Modifier: String","type":"var"},{"path":"\/documentation\/glib\/gint32format","title":"let gint32Format: String","type":"var"},{"path":"\/documentation\/glib\/gint32modifier","title":"let gint32Modifier: String","type":"var"},{"path":"\/documentation\/glib\/gint64format","title":"let gint64Format: String","type":"var"},{"path":"\/documentation\/glib\/gint64modifier","title":"let gint64Modifier: String","type":"var"},{"path":"\/documentation\/glib\/gintptrformat","title":"let gintptrFormat: String","type":"var"},{"path":"\/documentation\/glib\/gintptrmodifier","title":"let gintptrModifier: String","type":"var"},{"path":"\/documentation\/glib\/gnucfunction","title":"let gnucFunction: Int","type":"var"},{"path":"\/documentation\/glib\/gnucprettyfunction","title":"let gnucPrettyFunction: Int","type":"var"},{"path":"\/documentation\/glib\/gsizeformat","title":"let gsizeFormat: String","type":"var"},{"path":"\/documentation\/glib\/gsizemodifier","title":"let gsizeModifier: String","type":"var"},{"path":"\/documentation\/glib\/gssizeformat","title":"let gssizeFormat: String","type":"var"},{"path":"\/documentation\/glib\/gssizemodifier","title":"let gssizeModifier: String","type":"var"},{"path":"\/documentation\/glib\/guint16format","title":"let guint16Format: String","type":"var"},{"path":"\/documentation\/glib\/guint32format","title":"let guint32Format: String","type":"var"},{"path":"\/documentation\/glib\/guint64format","title":"let guint64Format: String","type":"var"},{"path":"\/documentation\/glib\/guintptrformat","title":"let guintptrFormat: String","type":"var"},{"path":"\/documentation\/glib\/havegint64","title":"let haveGint64: Int32","type":"var"},{"path":"\/documentation\/glib\/havegnucvarargs","title":"let haveGnucVarargs: Int32","type":"var"},{"path":"\/documentation\/glib\/havegnucvisibility","title":"let haveGnucVisibility: Int32","type":"var"},{"path":"\/documentation\/glib\/havegrowingstack","title":"let haveGrowingStack: Int32","type":"var"},{"path":"\/documentation\/glib\/haveisovarargs","title":"let haveIsoVarargs: Int32","type":"var"},{"path":"\/documentation\/glib\/hookflagusershift","title":"let hookFlagUserShift: Int32","type":"var"},{"path":"\/documentation\/glib\/ieee754doublebias","title":"let ieee754DoubleBias: Int32","type":"var"},{"path":"\/documentation\/glib\/ieee754floatbias","title":"let ieee754FloatBias: Int32","type":"var"},{"path":"\/documentation\/glib\/keyfiledesktopgroup","title":"let keyFileDesktopGroup: String","type":"var"},{"path":"\/documentation\/glib\/keyfiledesktopkeyactions","title":"let keyFileDesktopKeyActions: String","type":"var"},{"path":"\/documentation\/glib\/keyfiledesktopkeycategories","title":"let keyFileDesktopKeyCategories: String","type":"var"},{"path":"\/documentation\/glib\/keyfiledesktopkeycomment","title":"let keyFileDesktopKeyComment: String","type":"var"},{"path":"\/documentation\/glib\/keyfiledesktopkeydbusactivatable","title":"let keyFileDesktopKeyDbusActivatable: String","type":"var"},{"path":"\/documentation\/glib\/keyfiledesktopkeyexec","title":"let keyFileDesktopKeyExec: String","type":"var"},{"path":"\/documentation\/glib\/keyfiledesktopkeygenericname","title":"let keyFileDesktopKeyGenericName: String","type":"var"},{"path":"\/documentation\/glib\/keyfiledesktopkeyhidden","title":"let keyFileDesktopKeyHidden: String","type":"var"},{"path":"\/documentation\/glib\/keyfiledesktopkeyicon","title":"let keyFileDesktopKeyIcon: String","type":"var"},{"path":"\/documentation\/glib\/keyfiledesktopkeymimetype","title":"let keyFileDesktopKeyMimeType: String","type":"var"},{"path":"\/documentation\/glib\/keyfiledesktopkeyname","title":"let keyFileDesktopKeyName: String","type":"var"},{"path":"\/documentation\/glib\/keyfiledesktopkeynodisplay","title":"let keyFileDesktopKeyNoDisplay: String","type":"var"},{"path":"\/documentation\/glib\/keyfiledesktopkeynotshowin","title":"let keyFileDesktopKeyNotShowIn: String","type":"var"},{"path":"\/documentation\/glib\/keyfiledesktopkeyonlyshowin","title":"let keyFileDesktopKeyOnlyShowIn: String","type":"var"},{"path":"\/documentation\/glib\/keyfiledesktopkeypath","title":"let keyFileDesktopKeyPath: String","type":"var"},{"path":"\/documentation\/glib\/keyfiledesktopkeystartupnotify","title":"let keyFileDesktopKeyStartupNotify: String","type":"var"},{"path":"\/documentation\/glib\/keyfiledesktopkeystartupwmclass","title":"let keyFileDesktopKeyStartupWmClass: String","type":"var"},{"path":"\/documentation\/glib\/keyfiledesktopkeyterminal","title":"let keyFileDesktopKeyTerminal: String","type":"var"},{"path":"\/documentation\/glib\/keyfiledesktopkeytryexec","title":"let keyFileDesktopKeyTryExec: String","type":"var"},{"path":"\/documentation\/glib\/keyfiledesktopkeytype","title":"let keyFileDesktopKeyType: String","type":"var"},{"path":"\/documentation\/glib\/keyfiledesktopkeyurl","title":"let keyFileDesktopKeyUrl: String","type":"var"},{"path":"\/documentation\/glib\/keyfiledesktopkeyversion","title":"let keyFileDesktopKeyVersion: String","type":"var"},{"path":"\/documentation\/glib\/keyfiledesktoptypeapplication","title":"let keyFileDesktopTypeApplication: String","type":"var"},{"path":"\/documentation\/glib\/keyfiledesktoptypedirectory","title":"let keyFileDesktopTypeDirectory: String","type":"var"},{"path":"\/documentation\/glib\/keyfiledesktoptypelink","title":"let keyFileDesktopTypeLink: String","type":"var"},{"path":"\/documentation\/glib\/littleendian","title":"let littleEndian: Int32","type":"var"},{"path":"\/documentation\/glib\/ln10-9wweb","title":"let ln10: Double","type":"var"},{"path":"\/documentation\/glib\/ln2-8s72s","title":"let ln2: Double","type":"var"},{"path":"\/documentation\/glib\/log2base10","title":"let log2Base10: Double","type":"var"},{"path":"\/documentation\/glib\/logdomain","title":"let logDomain: Int","type":"var"},{"path":"\/documentation\/glib\/logfatalmask","title":"let logFatalMask: Int","type":"var"},{"path":"\/documentation\/glib\/logkeydomain","title":"let logKeyDomain: String","type":"var"},{"path":"\/documentation\/glib\/logkeyfile","title":"let logKeyFile: String","type":"var"},{"path":"\/documentation\/glib\/logkeyfunc","title":"let logKeyFunc: String","type":"var"},{"path":"\/documentation\/glib\/logkeyline","title":"let logKeyLine: String","type":"var"},{"path":"\/documentation\/glib\/logkeymessage","title":"let logKeyMessage: String","type":"var"},{"path":"\/documentation\/glib\/logkeypriority","title":"let logKeyPriority: String","type":"var"},{"path":"\/documentation\/glib\/loglevelusershift","title":"let logLevelUserShift: Int32","type":"var"},{"path":"\/documentation\/glib\/logpriority1","title":"let logPriority1: UnsafePointer<CChar>","type":"var"},{"path":"\/documentation\/glib\/logpriority2","title":"let logPriority2: UnsafePointer<CChar>","type":"var"},{"path":"\/documentation\/glib\/logpriority3","title":"let logPriority3: UnsafePointer<CChar>","type":"var"},{"path":"\/documentation\/glib\/logpriority4","title":"let logPriority4: UnsafePointer<CChar>","type":"var"},{"path":"\/documentation\/glib\/logpriority5","title":"let logPriority5: UnsafePointer<CChar>","type":"var"},{"path":"\/documentation\/glib\/logpriority6","title":"let logPriority6: UnsafePointer<CChar>","type":"var"},{"path":"\/documentation\/glib\/logpriority7","title":"let logPriority7: UnsafePointer<CChar>","type":"var"},{"path":"\/documentation\/glib\/majorversion","title":"let majorVersion: Int32","type":"var"},{"path":"\/documentation\/glib\/maxint16-2ozid","title":"let maxint16: Int","type":"var"},{"path":"\/documentation\/glib\/maxint32-656h3","title":"let maxint32: Int","type":"var"},{"path":"\/documentation\/glib\/maxint64-1fvuv","title":"let maxint64: Int","type":"var"},{"path":"\/documentation\/glib\/maxint8-8xvry","title":"let maxint8: Int","type":"var"},{"path":"\/documentation\/glib\/maxuint16-2vp12","title":"let maxuint16: Int","type":"var"},{"path":"\/documentation\/glib\/maxuint32-3dy3y","title":"let maxuint32: Int","type":"var"},{"path":"\/documentation\/glib\/maxuint64-9k7jw","title":"let maxuint64: Int","type":"var"},{"path":"\/documentation\/glib\/maxuint8-37owd","title":"let maxuint8: Int","type":"var"},{"path":"\/documentation\/glib\/microversion","title":"let microVersion: Int32","type":"var"},{"path":"\/documentation\/glib\/minint16-7ct47","title":"let minint16: Int16","type":"var"},{"path":"\/documentation\/glib\/minint32-tukh","title":"let minint32: Int32","type":"var"},{"path":"\/documentation\/glib\/minint64-9jasn","title":"let minint64: Int","type":"var"},{"path":"\/documentation\/glib\/minint8-7cd5n","title":"let minint8: Int8","type":"var"},{"path":"\/documentation\/glib\/minorversion","title":"let minorVersion: Int32","type":"var"},{"path":"\/documentation\/glib\/modulesuffix","title":"let moduleSuffix: Int","type":"var"},{"path":"\/documentation\/glib\/optionremaining","title":"let optionRemaining: String","type":"var"},{"path":"\/documentation\/glib\/pdpendian","title":"let pdpEndian: Int32","type":"var"},{"path":"\/documentation\/glib\/pi-8ge50","title":"let pi: Double","type":"var"},{"path":"\/documentation\/glib\/pi2","title":"let pi2: Double","type":"var"},{"path":"\/documentation\/glib\/pi4","title":"let pi4: Double","type":"var"},{"path":"\/documentation\/glib\/pidformat","title":"let pidFormat: String","type":"var"},{"path":"\/documentation\/glib\/pollfdformat","title":"let pollfdFormat: String","type":"var"},{"path":"\/documentation\/glib\/prioritydefault","title":"let priorityDefault: Int32","type":"var"},{"path":"\/documentation\/glib\/prioritydefaultidle","title":"let priorityDefaultIdle: Int32","type":"var"},{"path":"\/documentation\/glib\/priorityhigh","title":"let priorityHigh: Int32","type":"var"},{"path":"\/documentation\/glib\/priorityhighidle","title":"let priorityHighIdle: Int32","type":"var"},{"path":"\/documentation\/glib\/prioritylow","title":"let priorityLow: Int32","type":"var"},{"path":"\/documentation\/glib\/refcountinit","title":"let refCountInit: Int","type":"var"},{"path":"\/documentation\/glib\/searchpathseparator","title":"let searchpathSeparator: Int","type":"var"},{"path":"\/documentation\/glib\/searchpathseparators","title":"let searchpathSeparatorS: String","type":"var"},{"path":"\/documentation\/glib\/sizeoflong","title":"let sizeofLong: Int32","type":"var"},{"path":"\/documentation\/glib\/sizeofsizet","title":"let sizeofSizeT: Int32","type":"var"},{"path":"\/documentation\/glib\/sizeofssizet","title":"let sizeofSsizeT: Int32","type":"var"},{"path":"\/documentation\/glib\/sizeofvoidp","title":"let sizeofVoidP: Int32","type":"var"},{"path":"\/documentation\/glib\/sourcecontinue","title":"let sourceContinue: gboolean","type":"var"},{"path":"\/documentation\/glib\/sourceremove","title":"let sourceRemove: Int32","type":"var"},{"path":"\/documentation\/glib\/sqrt2-3rbue","title":"let sqrt2: Double","type":"var"},{"path":"\/documentation\/glib\/strdelimiters","title":"let strDelimiters: String","type":"var"},{"path":"\/documentation\/glib\/sysdefafinet","title":"let sysdefAfInet: Int32","type":"var"},{"path":"\/documentation\/glib\/sysdefafinet6","title":"let sysdefAfInet6: Int32","type":"var"},{"path":"\/documentation\/glib\/sysdefafunix","title":"let sysdefAfUnix: Int32","type":"var"},{"path":"\/documentation\/glib\/sysdefmsgdontroute","title":"let sysdefMsgDontroute: Int32","type":"var"},{"path":"\/documentation\/glib\/sysdefmsgoob","title":"let sysdefMsgOob: Int32","type":"var"},{"path":"\/documentation\/glib\/sysdefmsgpeek","title":"let sysdefMsgPeek: Int32","type":"var"},{"path":"\/documentation\/glib\/testoptionisolatedirs","title":"let testOptionIsolateDirs: String","type":"var"},{"path":"\/documentation\/glib\/timespanday","title":"let timeSpanDay: Int","type":"var"},{"path":"\/documentation\/glib\/timespanhour","title":"let timeSpanHour: Int","type":"var"},{"path":"\/documentation\/glib\/timespanmillisecond","title":"let timeSpanMillisecond: Int","type":"var"},{"path":"\/documentation\/glib\/timespanminute","title":"let timeSpanMinute: Int","type":"var"},{"path":"\/documentation\/glib\/timespansecond","title":"let timeSpanSecond: Int","type":"var"},{"path":"\/documentation\/glib\/unicharmaxdecompositionlength","title":"let unicharMaxDecompositionLength: Int32","type":"var"},{"path":"\/documentation\/glib\/urireservedcharsgenericdelimiters","title":"let uriReservedCharsGenericDelimiters: String","type":"var"},{"path":"\/documentation\/glib\/urireservedcharssubcomponentdelimiters","title":"let uriReservedCharsSubcomponentDelimiters: String","type":"var"},{"path":"\/documentation\/glib\/usecpersec","title":"let usecPerSec: Int32","type":"var"},{"path":"\/documentation\/glib\/vacopyasarray","title":"let vaCopyAsArray: Int32","type":"var"},{"path":"\/documentation\/glib\/versionminrequired","title":"let versionMinRequired: Int","type":"var"},{"path":"\/documentation\/glib\/win32msghandle","title":"let win32MsgHandle: Int","type":"var"},{"title":"Functions","type":"groupMarker"},{"path":"\/documentation\/glib\/access(filename:mode:)","title":"func access(filename: UnsafePointer<gchar>!, mode: Int) -> Int","type":"func"},{"path":"\/documentation\/glib\/alignedalloc(nblocks:nblockbytes:alignment:)","title":"func alignedAlloc(nBlocks: Int, nBlockBytes: Int, alignment: Int) -> gpointer?","type":"func"},{"path":"\/documentation\/glib\/alignedalloc0(nblocks:nblockbytes:alignment:)","title":"func alignedAlloc0(nBlocks: Int, nBlockBytes: Int, alignment: Int) -> gpointer?","type":"func"},{"path":"\/documentation\/glib\/alignedfree(mem:)","title":"func alignedFree(mem: gpointer?)","type":"func"},{"path":"\/documentation\/glib\/alignedfreesized(mem:alignment:size:)","title":"func alignedFreeSized(mem: gpointer?, alignment: size_t, size: size_t)","type":"func"},{"path":"\/documentation\/glib\/arraynewtake(data:len:clear:elementsize:)","title":"func arrayNewTake(data: gpointer!, len: Int, clear: Bool, elementSize: Int) -> ArrayRef!","type":"func"},{"path":"\/documentation\/glib\/arraynewtakezeroterminated(data:clear:elementsize:)","title":"func arrayNewTakeZeroTerminated(data: gpointer!, clear: Bool, elementSize: Int) -> ArrayRef!","type":"func"},{"path":"\/documentation\/glib\/asciidigitvalue(c:)","title":"func asciiDigitValue(c: gchar) -> Int","type":"func"},{"path":"\/documentation\/glib\/asciidtostr(buffer:buflen:d:)","title":"func asciiDtostr(buffer: UnsafeMutablePointer<gchar>!, bufLen: Int, d: Double) -> String!","type":"func"},{"path":"\/documentation\/glib\/asciiformatd(buffer:buflen:format:d:)","title":"func asciiFormatd(buffer: UnsafeMutablePointer<gchar>!, bufLen: Int, format: UnsafePointer<gchar>!, d: Double) -> String!","type":"func"},{"path":"\/documentation\/glib\/asciistrcasecmp(s1:s2:)","title":"func asciiStrcasecmp(s1: UnsafePointer<gchar>!, s2: UnsafePointer<gchar>!) -> Int","type":"func"},{"path":"\/documentation\/glib\/asciistrdown(str:len:)","title":"func asciiStrdown(str: UnsafePointer<gchar>!, len: gssize) -> String!","type":"func"},{"path":"\/documentation\/glib\/asciistringtosigned(str:base:min:max:outnum:)","title":"func asciiStringToSigned(str: UnsafePointer<gchar>!, base: Int, min: gint64, max: gint64, outNum: UnsafeMutablePointer<gint64>!) throws -> Bool","type":"func"},{"path":"\/documentation\/glib\/asciistringtounsigned(str:base:min:max:outnum:)","title":"func asciiStringToUnsigned(str: UnsafePointer<gchar>!, base: Int, min: guint64, max: guint64, outNum: UnsafeMutablePointer<guint64>!) throws -> Bool","type":"func"},{"path":"\/documentation\/glib\/asciistrncasecmp(s1:s2:n:)","title":"func asciiStrncasecmp(s1: UnsafePointer<gchar>!, s2: UnsafePointer<gchar>!, n: Int) -> Int","type":"func"},{"path":"\/documentation\/glib\/asciistrtod(nptr:endptr:)","title":"func asciiStrtod(nptr: UnsafePointer<gchar>!, endptr: UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!) -> Double","type":"func"},{"path":"\/documentation\/glib\/asciistrtoll(nptr:endptr:base:)","title":"func asciiStrtoll(nptr: UnsafePointer<gchar>!, endptr: UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!, base: Int) -> gint64","type":"func"},{"path":"\/documentation\/glib\/asciistrtoull(nptr:endptr:base:)","title":"func asciiStrtoull(nptr: UnsafePointer<gchar>!, endptr: UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!, base: Int) -> guint64","type":"func"},{"path":"\/documentation\/glib\/asciistrup(str:len:)","title":"func asciiStrup(str: UnsafePointer<gchar>!, len: gssize) -> String!","type":"func"},{"path":"\/documentation\/glib\/asciitolower(c:)","title":"func asciiTolower(c: gchar) -> gchar","type":"func"},{"path":"\/documentation\/glib\/asciitoupper(c:)","title":"func asciiToupper(c: gchar) -> gchar","type":"func"},{"path":"\/documentation\/glib\/asciixdigitvalue(c:)","title":"func asciiXdigitValue(c: gchar) -> Int","type":"func"},{"path":"\/documentation\/glib\/assertwarning(logdomain:file:line:prettyfunction:expression:)","title":"func assertWarning(logDomain: UnsafePointer<CChar>!, file: UnsafePointer<CChar>!, line: Int, prettyFunction: UnsafePointer<CChar>!, expression: UnsafePointer<CChar>!)","type":"func"},{"path":"\/documentation\/glib\/assertionmessage(domain:file:line:func:message:)","title":"func assertionMessage(domain: UnsafePointer<CChar>!, file: UnsafePointer<CChar>!, line: Int, func: UnsafePointer<CChar>!, message: UnsafePointer<CChar>!)","type":"func"},{"path":"\/documentation\/glib\/assertionmessagecmpint(domain:file:line:func:expr:arg1:cmp:arg2:numtype:)","title":"func assertionMessageCmpint(domain: UnsafePointer<CChar>!, file: UnsafePointer<CChar>!, line: Int, func: UnsafePointer<CChar>!, expr: UnsafePointer<CChar>!, arg1: guint64, cmp: UnsafePointer<CChar>!, arg2: guint64, numtype: CChar)","type":"func"},{"path":"\/documentation\/glib\/assertionmessagecmpstr(domain:file:line:func:expr:arg1:cmp:arg2:)","title":"func assertionMessageCmpstr(domain: UnsafePointer<CChar>!, file: UnsafePointer<CChar>!, line: Int, func: UnsafePointer<CChar>!, expr: UnsafePointer<CChar>!, arg1: UnsafePointer<CChar>!, cmp: UnsafePointer<CChar>!, arg2: UnsafePointer<CChar>!)","type":"func"},{"path":"\/documentation\/glib\/assertionmessagecmpstrv(domain:file:line:func:expr:arg1:arg2:firstwrongidx:)","title":"func assertionMessageCmpstrv(domain: UnsafePointer<CChar>!, file: UnsafePointer<CChar>!, line: Int, func: UnsafePointer<CChar>!, expr: UnsafePointer<CChar>!, arg1: UnsafePointer<UnsafePointer<CChar>?>!, arg2: UnsafePointer<UnsafePointer<CChar>?>!, firstWrongIDx: Int)","type":"func"},{"path":"\/documentation\/glib\/assertionmessageerror(domain:file:line:func:expr:error:errordomain:errorcode:)","title":"func assertionMessageError<GLibErrorT>(domain: UnsafePointer<CChar>!, file: UnsafePointer<CChar>!, line: Int, func: UnsafePointer<CChar>!, expr: UnsafePointer<CChar>!, error: GLibErrorT, errorDomain: GQuark, errorCode: Int)","type":"func"},{"path":"\/documentation\/glib\/assertionmessageexpr(domain:file:line:func:expr:)","title":"func assertionMessageExpr(domain: UnsafePointer<CChar>?, file: UnsafePointer<CChar>!, line: Int, func: UnsafePointer<CChar>!, expr: UnsafePointer<CChar>?)","type":"func"},{"path":"\/documentation\/glib\/asyncqueuenew()","title":"func asyncQueueNew() -> AsyncQueueRef!","type":"func"},{"path":"\/documentation\/glib\/asyncqueuenewfull(itemfreefunc:)","title":"func asyncQueueNewFull(itemFreeFunc: GDestroyNotify?) -> AsyncQueueRef!","type":"func"},{"path":"\/documentation\/glib\/atexit(func:)","title":"func atexit(func: GVoidFunc?)","type":"func"},{"path":"\/documentation\/glib\/atomicintadd(atomic:val:)","title":"func atomicIntAdd(atomic: UnsafeMutablePointer<gint>!, val: Int) -> Int","type":"func"},{"path":"\/documentation\/glib\/atomicintand(atomic:val:)","title":"func atomicIntAnd(atomic: UnsafeMutablePointer<guint>!, val: Int) -> Int","type":"func"},{"path":"\/documentation\/glib\/atomicintcompareandexchange(atomic:oldval:newval:)","title":"func atomicIntCompareAndExchange(atomic: UnsafeMutablePointer<gint>!, oldval: Int, newval: Int) -> Bool","type":"func"},{"path":"\/documentation\/glib\/atomicintcompareandexchangefull(atomic:oldval:newval:preval:)","title":"func atomicIntCompareAndExchangeFull(atomic: UnsafeMutablePointer<gint>!, oldval: Int, newval: Int, preval: UnsafeMutablePointer<gint>!) -> Bool","type":"func"},{"path":"\/documentation\/glib\/atomicintdecandtest(atomic:)","title":"func atomicIntDecAndTest(atomic: UnsafeMutablePointer<gint>!) -> Bool","type":"func"},{"path":"\/documentation\/glib\/atomicintexchange(atomic:newval:)","title":"func atomicIntExchange(atomic: UnsafeMutablePointer<gint>!, newval: Int) -> Int","type":"func"},{"path":"\/documentation\/glib\/atomicintexchangeandadd(atomic:val:)","title":"func atomicIntExchangeAndAdd(atomic: UnsafeMutablePointer<gint>!, val: Int) -> Int","type":"func"},{"path":"\/documentation\/glib\/atomicintget(atomic:)","title":"func atomicIntGet(atomic: UnsafePointer<gint>!) -> Int","type":"func"},{"path":"\/documentation\/glib\/atomicintinc(atomic:)","title":"func atomicIntInc(atomic: UnsafeMutablePointer<gint>!)","type":"func"},{"path":"\/documentation\/glib\/atomicintor(atomic:val:)","title":"func atomicIntOr(atomic: UnsafeMutablePointer<guint>!, val: Int) -> Int","type":"func"},{"path":"\/documentation\/glib\/atomicintset(atomic:newval:)","title":"func atomicIntSet(atomic: UnsafeMutablePointer<gint>!, newval: Int)","type":"func"},{"path":"\/documentation\/glib\/atomicintxor(atomic:val:)","title":"func atomicIntXor(atomic: UnsafeMutablePointer<guint>!, val: Int) -> Int","type":"func"},{"path":"\/documentation\/glib\/atomicpointeradd(atomic:val:)","title":"func atomicPointerAdd(atomic: UnsafeMutableRawPointer!, val: gssize) -> gintptr","type":"func"},{"path":"\/documentation\/glib\/atomicpointerand(atomic:val:)","title":"func atomicPointerAnd(atomic: UnsafeMutableRawPointer!, val: Int) -> guintptr","type":"func"},{"path":"\/documentation\/glib\/atomicpointercompareandexchange(atomic:oldval:newval:)","title":"func atomicPointerCompareAndExchange(atomic: UnsafeMutableRawPointer!, oldval: gpointer?, newval: gpointer?) -> Bool","type":"func"},{"path":"\/documentation\/glib\/atomicpointercompareandexchangefull(atomic:oldval:newval:preval:)","title":"func atomicPointerCompareAndExchangeFull(atomic: UnsafeMutableRawPointer!, oldval: gpointer?, newval: gpointer?, preval: UnsafeMutableRawPointer!) -> Bool","type":"func"},{"path":"\/documentation\/glib\/atomicpointerexchange(atomic:newval:)","title":"func atomicPointerExchange(atomic: UnsafeMutableRawPointer?, newval: gpointer?) -> gpointer?","type":"func"},{"path":"\/documentation\/glib\/atomicpointerget(atomic:)","title":"func atomicPointerGet(atomic: UnsafeMutableRawPointer!) -> gpointer?","type":"func"},{"path":"\/documentation\/glib\/atomicpointeror(atomic:val:)","title":"func atomicPointerOr(atomic: UnsafeMutableRawPointer!, val: Int) -> guintptr","type":"func"},{"path":"\/documentation\/glib\/atomicpointerset(atomic:newval:)","title":"func atomicPointerSet(atomic: UnsafeMutableRawPointer!, newval: gpointer?)","type":"func"},{"path":"\/documentation\/glib\/atomicpointerxor(atomic:val:)","title":"func atomicPointerXor(atomic: UnsafeMutableRawPointer!, val: Int) -> guintptr","type":"func"},{"path":"\/documentation\/glib\/atomicrcboxacquire(memblock:)","title":"func atomicRcBoxAcquire(memBlock: gpointer!) -> gpointer!","type":"func"},{"path":"\/documentation\/glib\/atomicrcboxalloc(blocksize:)","title":"func atomicRcBoxAlloc(blockSize: Int) -> gpointer!","type":"func"},{"path":"\/documentation\/glib\/atomicrcboxalloc0(blocksize:)","title":"func atomicRcBoxAlloc0(blockSize: Int) -> gpointer!","type":"func"},{"path":"\/documentation\/glib\/atomicrcboxdup(blocksize:memblock:)","title":"func atomicRcBoxDup(blockSize: Int, memBlock: gconstpointer?) -> gpointer!","type":"func"},{"path":"\/documentation\/glib\/atomicrcboxgetsize(memblock:)","title":"func atomicRcBoxGetSize(memBlock: gpointer!) -> Int","type":"func"},{"path":"\/documentation\/glib\/atomicrcboxrelease(memblock:)","title":"func atomicRcBoxRelease(memBlock: gpointer!)","type":"func"},{"path":"\/documentation\/glib\/atomicrcboxreleasefull(memblock:clearfunc:)","title":"func atomicRcBoxReleaseFull(memBlock: gpointer!, clearFunc: GDestroyNotify?)","type":"func"},{"path":"\/documentation\/glib\/atomicrefcountcompare(arc:val:)","title":"func atomicRefCountCompare(arc: UnsafeMutablePointer<gatomicrefcount>!, val: Int) -> Bool","type":"func"},{"path":"\/documentation\/glib\/atomicrefcountdec(arc:)","title":"func atomicRefCountDec(arc: UnsafeMutablePointer<gatomicrefcount>!) -> Bool","type":"func"},{"path":"\/documentation\/glib\/atomicrefcountinc(arc:)","title":"func atomicRefCountInc(arc: UnsafeMutablePointer<gatomicrefcount>!)","type":"func"},{"path":"\/documentation\/glib\/base64decode(_:)","title":"func base64Decode(UnsafePointer<CChar>) -> Data!","type":"func"},{"path":"\/documentation\/glib\/base64decode(text:outlen:)","title":"func base64Decode(text: UnsafePointer<gchar>!, outLen: UnsafeMutablePointer<gsize>!) -> String!","type":"func"},{"path":"\/documentation\/glib\/base64decodeinplace(_:deallocator:)","title":"func base64DecodeInPlace(UnsafeMutablePointer<CChar>, deallocator: Data.Deallocator) -> Data!","type":"func"},{"path":"\/documentation\/glib\/base64decodeinplace(text:outlen:)","title":"func base64DecodeInplace(text: UnsafeMutablePointer<gchar>!, outLen: UnsafeMutablePointer<gsize>!) -> String!","type":"func"},{"path":"\/documentation\/glib\/base64decodestep(in:len:out:state:save:)","title":"func base64DecodeStep(in: UnsafePointer<gchar>!, len: Int, out: UnsafeMutablePointer<guchar>!, state: UnsafeMutablePointer<gint>!, save: UnsafeMutablePointer<guint>!) -> Int","type":"func"},{"path":"\/documentation\/glib\/base64encode(data:len:)","title":"func base64Encode(data: UnsafePointer<guchar>!, len: Int) -> String!","type":"func"},{"path":"\/documentation\/glib\/base64encodeclose(breaklines:out:state:save:)","title":"func base64EncodeClose(breakLines: Bool, out: UnsafeMutablePointer<gchar>!, state: UnsafeMutablePointer<gint>!, save: UnsafeMutablePointer<gint>!) -> Int","type":"func"},{"path":"\/documentation\/glib\/base64encodestep(in:len:breaklines:out:state:save:)","title":"func base64EncodeStep(in: UnsafePointer<guchar>!, len: Int, breakLines: Bool, out: UnsafeMutablePointer<gchar>!, state: UnsafeMutablePointer<gint>!, save: UnsafeMutablePointer<gint>!) -> Int","type":"func"},{"path":"\/documentation\/glib\/basename(filename:)","title":"func basename(fileName: UnsafePointer<gchar>!) -> String!","type":"func"},{"path":"\/documentation\/glib\/bitlock(address:lockbit:)","title":"func bitLock(address: UnsafeMutablePointer<gint>!, lockBit: Int)","type":"func"},{"path":"\/documentation\/glib\/bitnthlsf(mask:nthbit:)","title":"func bitNthLsf(mask: Int, nthBit: Int) -> Int","type":"func"},{"path":"\/documentation\/glib\/bitnthmsf(mask:nthbit:)","title":"func bitNthMsf(mask: Int, nthBit: Int) -> Int","type":"func"},{"path":"\/documentation\/glib\/bitstorage(number:)","title":"func bitStorage(number: Int) -> Int","type":"func"},{"path":"\/documentation\/glib\/bittrylock(address:lockbit:)","title":"func bitTrylock(address: UnsafeMutablePointer<gint>!, lockBit: Int) -> Bool","type":"func"},{"path":"\/documentation\/glib\/bitunlock(address:lockbit:)","title":"func bitUnlock(address: UnsafeMutablePointer<gint>!, lockBit: Int)","type":"func"},{"path":"\/documentation\/glib\/blowchunks()","title":"func blowChunks()","type":"func"},{"path":"\/documentation\/glib\/bookmarkfileerrorquark()","title":"func bookmarkFileErrorQuark() -> GQuark","type":"func"},{"path":"\/documentation\/glib\/buildfilenamev(args:)","title":"func buildFilenamev(args: UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!) -> String!","type":"func"},{"path":"\/documentation\/glib\/buildpathv(separator:args:)","title":"func buildPathv(separator: UnsafePointer<gchar>!, args: UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!) -> String!","type":"func"},{"path":"\/documentation\/glib\/bytearrayappend(array:data:len:)","title":"func byteArrayAppend<ByteArrayT>(array: ByteArrayT, data: UnsafePointer<guint8>!, len: Int) -> ByteArrayRef!","type":"func"},{"path":"\/documentation\/glib\/bytearrayfree(array:freesegment:)","title":"func byteArrayFree<ByteArrayT>(array: ByteArrayT, freeSegment: Bool) -> UnsafeMutablePointer<guint8>!","type":"func"},{"path":"\/documentation\/glib\/bytearrayfreetobytes(array:)","title":"func byteArrayFreeToBytes<ByteArrayT>(array: ByteArrayT) -> BytesRef!","type":"func"},{"path":"\/documentation\/glib\/bytearraynew()","title":"func byteArrayNew() -> ByteArrayRef!","type":"func"},{"path":"\/documentation\/glib\/bytearraynewtake(data:len:)","title":"func byteArrayNewTake(data: UnsafeMutablePointer<guint8>!, len: Int) -> ByteArrayRef!","type":"func"},{"path":"\/documentation\/glib\/bytearrayprepend(array:data:len:)","title":"func byteArrayPrepend<ByteArrayT>(array: ByteArrayT, data: UnsafePointer<guint8>!, len: Int) -> ByteArrayRef!","type":"func"},{"path":"\/documentation\/glib\/bytearrayref(array:)","title":"func byteArrayRef<ByteArrayT>(array: ByteArrayT) -> ByteArrayRef!","type":"func"},{"path":"\/documentation\/glib\/bytearrayremoveindex(array:index:)","title":"func byteArrayRemoveIndex<ByteArrayT>(array: ByteArrayT, index: Int) -> ByteArrayRef!","type":"func"},{"path":"\/documentation\/glib\/bytearrayremoveindexfast(array:index:)","title":"func byteArrayRemoveIndexFast<ByteArrayT>(array: ByteArrayT, index: Int) -> ByteArrayRef!","type":"func"},{"path":"\/documentation\/glib\/bytearrayremoverange(array:index:length:)","title":"func byteArrayRemoveRange<ByteArrayT>(array: ByteArrayT, index: Int, length: Int) -> ByteArrayRef!","type":"func"},{"path":"\/documentation\/glib\/bytearraysetsize(array:length:)","title":"func byteArraySetSize<ByteArrayT>(array: ByteArrayT, length: Int) -> ByteArrayRef!","type":"func"},{"path":"\/documentation\/glib\/bytearraysizednew(reservedsize:)","title":"func byteArraySizedNew(reservedSize: Int) -> ByteArrayRef!","type":"func"},{"path":"\/documentation\/glib\/bytearraysort(array:comparefunc:)","title":"func byteArraySort<ByteArrayT>(array: ByteArrayT, compareFunc: GCompareFunc?)","type":"func"},{"path":"\/documentation\/glib\/bytearraysortwithdata(array:comparefunc:userdata:)","title":"func byteArraySortWithData<ByteArrayT>(array: ByteArrayT, compareFunc: GCompareDataFunc?, userData: gpointer?)","type":"func"},{"path":"\/documentation\/glib\/bytearraysteal(array:len:)","title":"func byteArraySteal<ByteArrayT>(array: ByteArrayT, len: UnsafeMutablePointer<gsize>!) -> UnsafeMutablePointer<guint8>!","type":"func"},{"path":"\/documentation\/glib\/bytearrayunref(array:)","title":"func byteArrayUnref<ByteArrayT>(array: ByteArrayT)","type":"func"},{"path":"\/documentation\/glib\/canonicalize(filename:relativeto:)","title":"func canonicalize(filename: UnsafePointer<gchar>!, relativeTo: UnsafePointer<gchar>?) -> String!","type":"func"},{"path":"\/documentation\/glib\/chdir(path:)","title":"func chdir(path: UnsafePointer<gchar>!) -> Int","type":"func"},{"path":"\/documentation\/glib\/checkversion(requiredmajor:requiredminor:requiredmicro:)","title":"func checkVersion(requiredMajor: Int, requiredMinor: Int, requiredMicro: Int) -> String!","type":"func"},{"path":"\/documentation\/glib\/checksumtypegetlength(checksumtype:)","title":"func checksumTypeGetLength(checksumType: GChecksumType) -> gssize","type":"func"},{"path":"\/documentation\/glib\/childwatchadd(pid:function:data:)","title":"func childWatchAdd(pid: GPid, function: GChildWatchFunc?, data: gpointer?) -> Int","type":"func"},{"path":"\/documentation\/glib\/childwatchaddfull(priority:pid:function:data:notify:)","title":"func childWatchAddFull(priority: Int, pid: GPid, function: GChildWatchFunc?, data: gpointer?, notify: GDestroyNotify?) -> Int","type":"func"},{"path":"\/documentation\/glib\/childwatchsourcenew(pid:)","title":"func childWatchSourceNew(pid: GPid) -> SourceRef!","type":"func"},{"path":"\/documentation\/glib\/chmod(filename:mode:)","title":"func chmod(filename: UnsafePointer<gchar>!, mode: Int) -> Int","type":"func"},{"path":"\/documentation\/glib\/clearerror()","title":"func clearError() throws","type":"func"},{"path":"\/documentation\/glib\/clearhandleid(tagptr:clearfunc:)","title":"func clearHandleID(tagPtr: UnsafeMutablePointer<guint>!, clearFunc: GClearHandleFunc?)","type":"func"},{"path":"\/documentation\/glib\/clearlist(listptr:destroy:)","title":"func clearList(listPtr: UnsafeMutablePointer<UnsafeMutablePointer<GList>?>!, destroy: GDestroyNotify?)","type":"func"},{"path":"\/documentation\/glib\/clearpointer(pp:destroy:)","title":"func clearPointer(pp: UnsafeMutablePointer<gpointer?>!, destroy: GDestroyNotify?)","type":"func"},{"path":"\/documentation\/glib\/clearslist(slistptr:destroy:)","title":"func clearSlist(slistPtr: UnsafeMutablePointer<UnsafeMutablePointer<GSList>?>!, destroy: GDestroyNotify?)","type":"func"},{"path":"\/documentation\/glib\/close(fd:)","title":"func close(fd: Int) throws -> Bool","type":"func"},{"path":"\/documentation\/glib\/closefrom(lowfd:)","title":"func closefrom(lowfd: Int) -> Int","type":"func"},{"path":"\/documentation\/glib\/computechecksumforbytes(checksumtype:data:)","title":"func computeChecksumForBytes<BytesT>(checksumType: GChecksumType, data: BytesT) -> String!","type":"func"},{"path":"\/documentation\/glib\/computechecksumfordata(checksumtype:data:length:)","title":"func computeChecksumForData(checksumType: GChecksumType, data: UnsafePointer<guchar>!, length: Int) -> String!","type":"func"},{"path":"\/documentation\/glib\/computechecksumforstring(checksumtype:str:length:)","title":"func computeChecksumForString(checksumType: GChecksumType, str: UnsafePointer<gchar>!, length: gssize) -> String!","type":"func"},{"path":"\/documentation\/glib\/computehmacforbytes(digesttype:key:data:)","title":"func computeHmacForBytes<BytesT>(digestType: GChecksumType, key: BytesT, data: BytesT) -> String!","type":"func"},{"path":"\/documentation\/glib\/computehmacfordata(digesttype:key:keylen:data:length:)","title":"func computeHmacForData(digestType: GChecksumType, key: UnsafePointer<guchar>!, keyLen: Int, data: UnsafePointer<guchar>!, length: Int) -> String!","type":"func"},{"path":"\/documentation\/glib\/computehmacforstring(digesttype:key:keylen:str:length:)","title":"func computeHmacForString(digestType: GChecksumType, key: UnsafePointer<guchar>!, keyLen: Int, str: UnsafePointer<gchar>!, length: gssize) -> String!","type":"func"},{"path":"\/documentation\/glib\/condnew()","title":"func condNew() -> CondRef!","type":"func"},{"path":"\/documentation\/glib\/convert(str:len:tocodeset:from:bytesread:byteswritten:)","title":"func convert(str: UnsafePointer<gchar>!, len: gssize, toCodeset: UnsafePointer<gchar>!, from: UnsafePointer<gchar>!, bytesRead: UnsafeMutablePointer<gsize>!, bytesWritten: UnsafeMutablePointer<gsize>!) throws -> String!","type":"func"},{"path":"\/documentation\/glib\/converterrorquark()","title":"func convertErrorQuark() -> GQuark","type":"func"},{"path":"\/documentation\/glib\/convertwithfallback(str:len:tocodeset:from:fallback:bytesread:byteswritten:)","title":"func convertWithFallback(str: UnsafePointer<gchar>!, len: gssize, toCodeset: UnsafePointer<gchar>!, from: UnsafePointer<gchar>!, fallback: UnsafePointer<gchar>!, bytesRead: UnsafeMutablePointer<gsize>!, bytesWritten: UnsafeMutablePointer<gsize>!) throws -> String!","type":"func"},{"path":"\/documentation\/glib\/convertwithiconv(str:len:converter:bytesread:byteswritten:)","title":"func convertWithIconv(str: UnsafePointer<gchar>!, len: gssize, converter: GIConv, bytesRead: UnsafeMutablePointer<gsize>!, bytesWritten: UnsafeMutablePointer<gsize>!) throws -> String!","type":"func"},{"path":"\/documentation\/glib\/creat(filename:mode:)","title":"func creat(filename: UnsafePointer<gchar>!, mode: Int) -> Int","type":"func"},{"path":"\/documentation\/glib\/datalistclear(datalist:)","title":"func datalistClear(datalist: UnsafeMutablePointer<UnsafeMutablePointer<GData>?>!)","type":"func"},{"path":"\/documentation\/glib\/datalistforeach(datalist:func:userdata:)","title":"func datalistForeach(datalist: UnsafeMutablePointer<UnsafeMutablePointer<GData>?>!, func: GDataForeachFunc?, userData: gpointer?)","type":"func"},{"path":"\/documentation\/glib\/datalistgetdata(datalist:key:)","title":"func datalistGetData(datalist: UnsafeMutablePointer<UnsafeMutablePointer<GData>?>!, key: UnsafePointer<gchar>!) -> gpointer?","type":"func"},{"path":"\/documentation\/glib\/datalistgetflags(datalist:)","title":"func datalistGetFlags(datalist: UnsafeMutablePointer<UnsafeMutablePointer<GData>?>!) -> Int","type":"func"},{"path":"\/documentation\/glib\/datalistiddupdata(datalist:keyid:dupfunc:userdata:)","title":"func datalistIDDupData(datalist: UnsafeMutablePointer<UnsafeMutablePointer<GData>?>!, keyID: GQuark, dupFunc: GDuplicateFunc?, userData: gpointer?) -> gpointer?","type":"func"},{"path":"\/documentation\/glib\/datalistidgetdata(datalist:keyid:)","title":"func datalistIDGetData(datalist: UnsafeMutablePointer<UnsafeMutablePointer<GData>?>!, keyID: GQuark) -> gpointer?","type":"func"},{"path":"\/documentation\/glib\/datalistidremovemultiple(datalist:keys:nkeys:)","title":"func datalistIDRemoveMultiple(datalist: UnsafeMutablePointer<UnsafeMutablePointer<GData>?>!, keys: UnsafeMutablePointer<GQuark>!, nKeys: Int)","type":"func"},{"path":"\/documentation\/glib\/datalistidremovenonotify(datalist:keyid:)","title":"func datalistIDRemoveNoNotify(datalist: UnsafeMutablePointer<UnsafeMutablePointer<GData>?>!, keyID: GQuark) -> gpointer?","type":"func"},{"path":"\/documentation\/glib\/datalistidreplacedata(datalist:keyid:oldval:newval:destroy:olddestroy:)","title":"func datalistIDReplaceData(datalist: UnsafeMutablePointer<UnsafeMutablePointer<GData>?>!, keyID: GQuark, oldval: gpointer?, newval: gpointer?, destroy: GDestroyNotify?, oldDestroy: UnsafeMutablePointer<GDestroyNotify?>!) -> Bool","type":"func"},{"path":"\/documentation\/glib\/datalistidsetdatafull(datalist:keyid:data:destroyfunc:)","title":"func datalistIDSetDataFull(datalist: UnsafeMutablePointer<UnsafeMutablePointer<GData>?>!, keyID: GQuark, data: gpointer?, destroyFunc: GDestroyNotify?)","type":"func"},{"path":"\/documentation\/glib\/datalistinit(datalist:)","title":"func datalistInit(datalist: UnsafeMutablePointer<UnsafeMutablePointer<GData>?>!)","type":"func"},{"path":"\/documentation\/glib\/datalistsetflags(datalist:flags:)","title":"func datalistSetFlags(datalist: UnsafeMutablePointer<UnsafeMutablePointer<GData>?>!, flags: Int)","type":"func"},{"path":"\/documentation\/glib\/datalistunsetflags(datalist:flags:)","title":"func datalistUnsetFlags(datalist: UnsafeMutablePointer<UnsafeMutablePointer<GData>?>!, flags: Int)","type":"func"},{"path":"\/documentation\/glib\/datasetdestroy(datasetlocation:)","title":"func datasetDestroy(datasetLocation: gconstpointer?)","type":"func"},{"path":"\/documentation\/glib\/datasetforeach(datasetlocation:func:userdata:)","title":"func datasetForeach(datasetLocation: gconstpointer?, func: GDataForeachFunc?, userData: gpointer?)","type":"func"},{"path":"\/documentation\/glib\/datasetidgetdata(datasetlocation:keyid:)","title":"func datasetIDGetData(datasetLocation: gconstpointer?, keyID: GQuark) -> gpointer?","type":"func"},{"path":"\/documentation\/glib\/datasetidremovenonotify(datasetlocation:keyid:)","title":"func datasetIDRemoveNoNotify(datasetLocation: gconstpointer?, keyID: GQuark) -> gpointer?","type":"func"},{"path":"\/documentation\/glib\/datasetidsetdatafull(datasetlocation:keyid:data:destroyfunc:)","title":"func datasetIDSetDataFull(datasetLocation: gconstpointer?, keyID: GQuark, data: gpointer?, destroyFunc: GDestroyNotify?)","type":"func"},{"path":"\/documentation\/glib\/dategetdaysin(month:year:)","title":"func dateGetDaysIn(month: GDateMonth, year: GDateYear) -> guint8","type":"func"},{"path":"\/documentation\/glib\/dategetmondayweeksin(year:)","title":"func dateGetMondayWeeksIn(year: GDateYear) -> guint8","type":"func"},{"path":"\/documentation\/glib\/dategetsundayweeksin(year:)","title":"func dateGetSundayWeeksIn(year: GDateYear) -> guint8","type":"func"},{"path":"\/documentation\/glib\/dateisleap(year:)","title":"func dateIsLeap(year: GDateYear) -> Bool","type":"func"},{"path":"\/documentation\/glib\/datestrftime(s:slen:format:date:)","title":"func dateStrftime<DateT>(s: UnsafeMutablePointer<gchar>!, slen: Int, format: UnsafePointer<gchar>!, date: DateT) -> Int","type":"func"},{"path":"\/documentation\/glib\/datevalid(day:)","title":"func dateValid(day: GDateDay) -> Bool","type":"func"},{"path":"\/documentation\/glib\/datevalid(month:)","title":"func dateValid(month: GDateMonth) -> Bool","type":"func"},{"path":"\/documentation\/glib\/datevalid(weekday:)","title":"func dateValid(weekday: GDateWeekday) -> Bool","type":"func"},{"path":"\/documentation\/glib\/datevalid(year:)","title":"func dateValid(year: GDateYear) -> Bool","type":"func"},{"path":"\/documentation\/glib\/datevaliddmy(day:month:year:)","title":"func dateValidDmy(day: GDateDay, month: GDateMonth, year: GDateYear) -> Bool","type":"func"},{"path":"\/documentation\/glib\/datevalidjulian(juliandate:)","title":"func dateValidJulian(julianDate: guint32) -> Bool","type":"func"},{"path":"\/documentation\/glib\/dcgettext(domain:msgid:category:)","title":"func dcgettext(domain: UnsafePointer<gchar>?, msgid: UnsafePointer<gchar>!, category: Int) -> String!","type":"func"},{"path":"\/documentation\/glib\/dgettext(domain:msgid:)","title":"func dgettext(domain: UnsafePointer<gchar>?, msgid: UnsafePointer<gchar>!) -> String!","type":"func"},{"path":"\/documentation\/glib\/dirmaketmp(tmpl:)","title":"func dirMakeTmp(tmpl: UnsafePointer<gchar>?) throws -> String!","type":"func"},{"path":"\/documentation\/glib\/directequal(v1:v2:)","title":"func directEqual(v1: gconstpointer?, v2: gconstpointer?) -> Bool","type":"func"},{"path":"\/documentation\/glib\/directhash(v:)","title":"func directHash(v: gconstpointer?) -> Int","type":"func"},{"path":"\/documentation\/glib\/dngettext(domain:msgid:msgidplural:n:)","title":"func dngettext(domain: UnsafePointer<gchar>?, msgid: UnsafePointer<gchar>!, msgidPlural: UnsafePointer<gchar>!, n: Int) -> String!","type":"func"},{"path":"\/documentation\/glib\/doubleequal(v1:v2:)","title":"func doubleEqual(v1: gconstpointer?, v2: gconstpointer?) -> Bool","type":"func"},{"path":"\/documentation\/glib\/doublehash(v:)","title":"func doubleHash(v: gconstpointer?) -> Int","type":"func"},{"path":"\/documentation\/glib\/dpgettext(domain:msgctxtid:msgidoffset:)","title":"func dpgettext(domain: UnsafePointer<gchar>?, msgctxtid: UnsafePointer<gchar>!, msgidoffset: Int) -> String!","type":"func"},{"path":"\/documentation\/glib\/dpgettext2(domain:context:msgid:)","title":"func dpgettext2(domain: UnsafePointer<gchar>?, context: UnsafePointer<gchar>!, msgid: UnsafePointer<gchar>!) -> String!","type":"func"},{"path":"\/documentation\/glib\/environgetenv(envp:variable:)","title":"func environGetenv(envp: UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!, variable: UnsafePointer<gchar>!) -> String!","type":"func"},{"path":"\/documentation\/glib\/environsetenv(envp:variable:value:overwrite:)","title":"func environSetenv(envp: UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!, variable: UnsafePointer<gchar>!, value: UnsafePointer<gchar>!, overwrite: Bool) -> UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!","type":"func"},{"path":"\/documentation\/glib\/environunsetenv(envp:variable:)","title":"func environUnsetenv(envp: UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!, variable: UnsafePointer<gchar>!) -> UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!","type":"func"},{"path":"\/documentation\/glib\/errordomainregister(errortypename:errortypeprivatesize:errortypeinit:errortypecopy:errortypeclear:)","title":"func errorDomainRegister(errorTypeName: UnsafePointer<CChar>!, errorTypePrivateSize: Int, errorTypeInit: GErrorInitFunc?, errorTypeCopy: GErrorCopyFunc?, errorTypeClear: GErrorClearFunc?) -> GQuark","type":"func"},{"path":"\/documentation\/glib\/errordomainregisterstatic(errortypename:errortypeprivatesize:errortypeinit:errortypecopy:errortypeclear:)","title":"func errorDomainRegisterStatic(errorTypeName: UnsafePointer<CChar>!, errorTypePrivateSize: Int, errorTypeInit: GErrorInitFunc?, errorTypeCopy: GErrorCopyFunc?, errorTypeClear: GErrorClearFunc?) -> GQuark","type":"func"},{"path":"\/documentation\/glib\/fdwalksetcloexec(lowfd:)","title":"func fdwalkSetCloexec(lowfd: Int) -> Int","type":"func"},{"path":"\/documentation\/glib\/fileerrorfromerrno(errno:)","title":"func fileErrorFromErrno(errNo: Int) -> GFileError","type":"func"},{"path":"\/documentation\/glib\/fileerrorquark()","title":"func fileErrorQuark() -> GQuark","type":"func"},{"path":"\/documentation\/glib\/filegetcontents(filename:contents:length:)","title":"func fileGetContents(filename: UnsafePointer<gchar>!, contents: UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!, length: UnsafeMutablePointer<gsize>?) throws -> Bool","type":"func"},{"path":"\/documentation\/glib\/fileopentmp(tmpl:nameused:)","title":"func fileOpenTmp(tmpl: UnsafePointer<gchar>?, nameUsed: UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!) throws -> Int","type":"func"},{"path":"\/documentation\/glib\/filereadlink(filename:)","title":"func fileReadLink(filename: UnsafePointer<gchar>!) throws -> String!","type":"func"},{"path":"\/documentation\/glib\/filesetcontents(filename:contents:length:)","title":"func fileSetContents(filename: UnsafePointer<gchar>!, contents: UnsafePointer<gchar>!, length: gssize) throws -> Bool","type":"func"},{"path":"\/documentation\/glib\/filesetcontentsfull(filename:contents:length:flags:mode:)","title":"func fileSetContentsFull(filename: UnsafePointer<gchar>!, contents: UnsafePointer<gchar>!, length: gssize, flags: FileSetContentsFlags, mode: Int) throws -> Bool","type":"func"},{"path":"\/documentation\/glib\/filetest(filename:test:)","title":"func fileTest(filename: UnsafePointer<gchar>!, test: FileTest) -> Bool","type":"func"},{"path":"\/documentation\/glib\/filenamedisplaybasename(filename:)","title":"func filenameDisplayBasename(filename: UnsafePointer<gchar>!) -> String!","type":"func"},{"path":"\/documentation\/glib\/filenamedisplayname(filename:)","title":"func filenameDisplayName(filename: UnsafePointer<gchar>!) -> String!","type":"func"},{"path":"\/documentation\/glib\/filenamefrom(uri:hostname:)","title":"func filenameFrom(uri: UnsafePointer<gchar>!, hostname: UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>?) throws -> String!","type":"func"},{"path":"\/documentation\/glib\/filenamefromutf8(utf8string:len:bytesread:byteswritten:)","title":"func filenameFromUTF8(utf8string: UnsafePointer<gchar>!, len: gssize, bytesRead: UnsafeMutablePointer<gsize>!, bytesWritten: UnsafeMutablePointer<gsize>!) throws -> String!","type":"func"},{"path":"\/documentation\/glib\/filenametouri(filename:hostname:)","title":"func filenameToURI(filename: UnsafePointer<gchar>!, hostname: UnsafePointer<gchar>?) throws -> String!","type":"func"},{"path":"\/documentation\/glib\/filenametoutf8(opsysstring:len:bytesread:byteswritten:)","title":"func filenameToUTF8(opsysstring: UnsafePointer<gchar>!, len: gssize, bytesRead: UnsafeMutablePointer<gsize>!, bytesWritten: UnsafeMutablePointer<gsize>!) throws -> String!","type":"func"},{"path":"\/documentation\/glib\/findprograminpath(program:)","title":"func findProgramInPath(program: UnsafePointer<gchar>!) -> String!","type":"func"},{"path":"\/documentation\/glib\/fopen(filename:mode:)","title":"func fopen(filename: UnsafePointer<gchar>!, mode: UnsafePointer<gchar>!) -> UnsafeMutablePointer<FILE>?","type":"func"},{"path":"\/documentation\/glib\/format(size:)","title":"func format(size: guint64) -> String!","type":"func"},{"path":"\/documentation\/glib\/formatsizefordisplay(size:)","title":"func formatSizeForDisplay(size: goffset) -> String!","type":"func"},{"path":"\/documentation\/glib\/formatsizefull(size:flags:)","title":"func formatSizeFull(size: guint64, flags: FormatSizeFlags) -> String!","type":"func"},{"path":"\/documentation\/glib\/free(mem:)","title":"func free(mem: gpointer?)","type":"func"},{"path":"\/documentation\/glib\/freesized(mem:size:)","title":"func freeSized(mem: gpointer?, size: size_t)","type":"func"},{"path":"\/documentation\/glib\/freopen(filename:mode:stream:)","title":"func freopen(filename: UnsafePointer<gchar>!, mode: UnsafePointer<gchar>!, stream: UnsafeMutablePointer<FILE>?) -> UnsafeMutablePointer<FILE>?","type":"func"},{"path":"\/documentation\/glib\/fsync(fd:)","title":"func fsync(fd: Int) -> Int","type":"func"},{"path":"\/documentation\/glib\/g_chmod(_:_:)","title":"func g_chmod(UnsafePointer<CChar>, gint) -> CInt","type":"func"},{"path":"\/documentation\/glib\/g_creat(_:_:)","title":"func g_creat(UnsafePointer<CChar>, gint) -> CInt","type":"func"},{"path":"\/documentation\/glib\/g_fopen(_:_:)","title":"func g_fopen(UnsafePointer<CChar>, UnsafePointer<CChar>) -> UnsafeMutablePointer<FILE>?","type":"func"},{"path":"\/documentation\/glib\/g_freopen(_:_:_:)","title":"func g_freopen(UnsafePointer<CChar>, UnsafePointer<CChar>, UnsafeMutablePointer<FILE>!) -> UnsafeMutablePointer<FILE>?","type":"func"},{"path":"\/documentation\/glib\/g_fsync(_:)","title":"func g_fsync(CInt) -> CInt","type":"func"},{"path":"\/documentation\/glib\/g_log(_:level:)","title":"func g_log(String, level: LogLevelFlags)","type":"func"},{"path":"\/documentation\/glib\/g_log(domain:_:level:)","title":"func g_log(domain: String, String, level: LogLevelFlags)","type":"func"},{"path":"\/documentation\/glib\/g_log(messageptr:level:)","title":"func g_log(messagePtr: UnsafePointer<CChar>?, level: LogLevelFlags)","type":"func"},{"path":"\/documentation\/glib\/g_lstat(_:_:)","title":"func g_lstat(UnsafePointer<CChar>, UnsafeMutablePointer<GStatBuf>!) -> CInt","type":"func"},{"path":"\/documentation\/glib\/g_mkdir(_:_:)","title":"func g_mkdir(UnsafePointer<CChar>, gint) -> CInt","type":"func"},{"path":"\/documentation\/glib\/g_open(_:_:_:)","title":"func g_open(UnsafePointer<CChar>, CInt, gint) -> CInt","type":"func"},{"path":"\/documentation\/glib\/g_remove(_:)","title":"func g_remove(UnsafePointer<CChar>) -> CInt","type":"func"},{"path":"\/documentation\/glib\/g_rename(_:_:)","title":"func g_rename(UnsafePointer<CChar>, UnsafePointer<CChar>) -> CInt","type":"func"},{"path":"\/documentation\/glib\/g_slice_free(_:)","title":"func g_slice_free<T>(UnsafePointer<T>!)","type":"func"},{"path":"\/documentation\/glib\/g_slice_new()","title":"func g_slice_new<T>() -> UnsafeMutablePointer<T>!","type":"func"},{"path":"\/documentation\/glib\/g_slice_new0()","title":"func g_slice_new0<T>() -> UnsafeMutablePointer<T>!","type":"func"},{"path":"\/documentation\/glib\/g_stat(_:_:)","title":"func g_stat(UnsafePointer<CChar>, UnsafeMutablePointer<GStatBuf>!) -> CInt","type":"func"},{"path":"\/documentation\/glib\/g_utime(_:_:)","title":"func g_utime(UnsafePointer<CChar>, UnsafePointer<utimbuf>!) -> CInt","type":"func"},{"path":"\/documentation\/glib\/g_warning(_:domain:)","title":"func g_warning(String, domain: String?)","type":"func"},{"path":"\/documentation\/glib\/get(charset:)","title":"func get(charset: UnsafeMutablePointer<UnsafePointer<CChar>?>!) -> Bool","type":"func"},{"path":"\/documentation\/glib\/get(filenamecharsets:)","title":"func get(filenameCharsets: UnsafeMutablePointer<UnsafeMutablePointer<UnsafePointer<gchar>?>?>!) -> Bool","type":"func"},{"path":"\/documentation\/glib\/getapplicationname()","title":"func getApplicationName() -> String!","type":"func"},{"path":"\/documentation\/glib\/getatomicrefcountinit(arc:)","title":"func getAtomicRefCountInit(arc: UnsafeMutablePointer<gatomicrefcount>!)","type":"func"},{"path":"\/documentation\/glib\/getcodeset()","title":"func getCodeset() -> String!","type":"func"},{"path":"\/documentation\/glib\/getconsole(charset:)","title":"func getConsole(charset: UnsafeMutablePointer<UnsafePointer<CChar>?>!) -> Bool","type":"func"},{"path":"\/documentation\/glib\/getcurrentdir()","title":"func getCurrentDir() -> String!","type":"func"},{"path":"\/documentation\/glib\/getcurrenttime(result:)","title":"func getCurrentTime<TimeValT>(result: TimeValT)","type":"func"},{"path":"\/documentation\/glib\/getenviron()","title":"func getEnviron() -> UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!","type":"func"},{"path":"\/documentation\/glib\/gethomedir()","title":"func getHomeDir() -> String!","type":"func"},{"path":"\/documentation\/glib\/gethostname()","title":"func getHostName() -> String!","type":"func"},{"path":"\/documentation\/glib\/getlanguagenames()","title":"func getLanguageNames() -> UnsafePointer<UnsafePointer<gchar>?>!","type":"func"},{"path":"\/documentation\/glib\/getlanguagenameswithcategory(categoryname:)","title":"func getLanguageNamesWithCategory(categoryName: UnsafePointer<gchar>!) -> UnsafePointer<UnsafePointer<gchar>?>!","type":"func"},{"path":"\/documentation\/glib\/getlocalevariants(locale:)","title":"func getLocaleVariants(locale: UnsafePointer<gchar>!) -> UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!","type":"func"},{"path":"\/documentation\/glib\/getmonotonictime()","title":"func getMonotonicTime() -> gint64","type":"func"},{"path":"\/documentation\/glib\/getnumprocessors()","title":"func getNumProcessors() -> Int","type":"func"},{"path":"\/documentation\/glib\/getosinfo(keyname:)","title":"func getOsInfo(keyName: UnsafePointer<gchar>!) -> String!","type":"func"},{"path":"\/documentation\/glib\/getprgname()","title":"func getPrgname() -> String!","type":"func"},{"path":"\/documentation\/glib\/getrealname()","title":"func getRealName() -> String!","type":"func"},{"path":"\/documentation\/glib\/getrealtime()","title":"func getRealTime() -> gint64","type":"func"},{"path":"\/documentation\/glib\/getrefcountinit(rc:)","title":"func getRefCountInit(rc: UnsafeMutablePointer<grefcount>!)","type":"func"},{"path":"\/documentation\/glib\/getsourceremove(tag:)","title":"func getSourceRemove(tag: Int) -> Bool","type":"func"},{"path":"\/documentation\/glib\/getsystemconfigdirs()","title":"func getSystemConfigDirs() -> UnsafePointer<UnsafePointer<gchar>?>!","type":"func"},{"path":"\/documentation\/glib\/getsystemdatadirs()","title":"func getSystemDataDirs() -> UnsafePointer<UnsafePointer<gchar>?>!","type":"func"},{"path":"\/documentation\/glib\/gettmpdir()","title":"func getTmpDir() -> String!","type":"func"},{"path":"\/documentation\/glib\/getusercachedir()","title":"func getUserCacheDir() -> String!","type":"func"},{"path":"\/documentation\/glib\/getuserconfigdir()","title":"func getUserConfigDir() -> String!","type":"func"},{"path":"\/documentation\/glib\/getuserdatadir()","title":"func getUserDataDir() -> String!","type":"func"},{"path":"\/documentation\/glib\/getusername()","title":"func getUserName() -> String!","type":"func"},{"path":"\/documentation\/glib\/getuserruntimedir()","title":"func getUserRuntimeDir() -> String!","type":"func"},{"path":"\/documentation\/glib\/getuserspecialdir(directory:)","title":"func getUserSpecialDir(directory: GUserDirectory) -> String!","type":"func"},{"path":"\/documentation\/glib\/getuserstatedir()","title":"func getUserStateDir() -> String!","type":"func"},{"path":"\/documentation\/glib\/getenv(variable:)","title":"func getenv(variable: UnsafePointer<gchar>!) -> String!","type":"func"},{"path":"\/documentation\/glib\/hashtableadd(hashtable:key:)","title":"func hashTableAdd<HashTableT>(hashTable: HashTableT, key: gpointer?) -> Bool","type":"func"},{"path":"\/documentation\/glib\/hashtablecontains(hashtable:key:)","title":"func hashTableContains<HashTableT>(hashTable: HashTableT, key: gconstpointer?) -> Bool","type":"func"},{"path":"\/documentation\/glib\/hashtabledestroy(hashtable:)","title":"func hashTableDestroy<HashTableT>(hashTable: HashTableT)","type":"func"},{"path":"\/documentation\/glib\/hashtablefind(hashtable:predicate:userdata:)","title":"func hashTableFind<HashTableT>(hashTable: HashTableT, predicate: GHRFunc?, userData: gpointer?) -> gpointer?","type":"func"},{"path":"\/documentation\/glib\/hashtableforeach(hashtable:func:userdata:)","title":"func hashTableForeach<HashTableT>(hashTable: HashTableT, func: GHFunc?, userData: gpointer?)","type":"func"},{"path":"\/documentation\/glib\/hashtableforeachremove(hashtable:func:userdata:)","title":"func hashTableForeachRemove<HashTableT>(hashTable: HashTableT, func: GHRFunc?, userData: gpointer?) -> Int","type":"func"},{"path":"\/documentation\/glib\/hashtableforeachsteal(hashtable:func:userdata:)","title":"func hashTableForeachSteal<HashTableT>(hashTable: HashTableT, func: GHRFunc?, userData: gpointer?) -> Int","type":"func"},{"path":"\/documentation\/glib\/hashtablegetkeysasptrarray(hashtable:)","title":"func hashTableGetKeysAsPtrArray<HashTableT>(hashTable: HashTableT) -> ReferenceArrayRef<gpointer>!","type":"func"},{"path":"\/documentation\/glib\/hashtablegetvaluesasptrarray(hashtable:)","title":"func hashTableGetValuesAsPtrArray<HashTableT>(hashTable: HashTableT) -> ReferenceArrayRef<gpointer>!","type":"func"},{"path":"\/documentation\/glib\/hashtableinsert(hashtable:key:value:)","title":"func hashTableInsert<HashTableT>(hashTable: HashTableT, key: gpointer?, value: gpointer?) -> Bool","type":"func"},{"path":"\/documentation\/glib\/hashtablelookup(hashtable:key:)","title":"func hashTableLookup<HashTableT>(hashTable: HashTableT, key: gconstpointer?) -> gpointer?","type":"func"},{"path":"\/documentation\/glib\/hashtablelookupextended(hashtable:lookupkey:origkey:value:)","title":"func hashTableLookupExtended<HashTableT>(hashTable: HashTableT, lookupKey: gconstpointer?, origKey: UnsafeMutablePointer<gpointer?>?, value: UnsafeMutablePointer<gpointer?>?) -> Bool","type":"func"},{"path":"\/documentation\/glib\/hashtablenewsimilar(otherhashtable:)","title":"func hashTableNewSimilar<HashTableT>(otherHashTable: HashTableT) -> HashTableRef!","type":"func"},{"path":"\/documentation\/glib\/hashtableref(hashtable:)","title":"func hashTableRef<HashTableT>(hashTable: HashTableT) -> HashTableRef!","type":"func"},{"path":"\/documentation\/glib\/hashtableremove(hashtable:key:)","title":"func hashTableRemove<HashTableT>(hashTable: HashTableT, key: gconstpointer?) -> Bool","type":"func"},{"path":"\/documentation\/glib\/hashtableremoveall(hashtable:)","title":"func hashTableRemoveAll<HashTableT>(hashTable: HashTableT)","type":"func"},{"path":"\/documentation\/glib\/hashtablereplace(hashtable:key:value:)","title":"func hashTableReplace<HashTableT>(hashTable: HashTableT, key: gpointer?, value: gpointer?) -> Bool","type":"func"},{"path":"\/documentation\/glib\/hashtablesize(hashtable:)","title":"func hashTableSize<HashTableT>(hashTable: HashTableT) -> Int","type":"func"},{"path":"\/documentation\/glib\/hashtablesteal(hashtable:key:)","title":"func hashTableSteal<HashTableT>(hashTable: HashTableT, key: gconstpointer?) -> Bool","type":"func"},{"path":"\/documentation\/glib\/hashtablestealall(hashtable:)","title":"func hashTableStealAll<HashTableT>(hashTable: HashTableT)","type":"func"},{"path":"\/documentation\/glib\/hashtablestealallkeys(hashtable:)","title":"func hashTableStealAllKeys<HashTableT>(hashTable: HashTableT) -> ReferenceArrayRef<gpointer>!","type":"func"},{"path":"\/documentation\/glib\/hashtablestealallvalues(hashtable:)","title":"func hashTableStealAllValues<HashTableT>(hashTable: HashTableT) -> ReferenceArrayRef<gpointer>!","type":"func"},{"path":"\/documentation\/glib\/hashtablestealextended(hashtable:lookupkey:stolenkey:stolenvalue:)","title":"func hashTableStealExtended<HashTableT>(hashTable: HashTableT, lookupKey: gconstpointer?, stolenKey: UnsafeMutablePointer<gpointer?>?, stolenValue: UnsafeMutablePointer<gpointer?>?) -> Bool","type":"func"},{"path":"\/documentation\/glib\/hashtableunref(hashtable:)","title":"func hashTableUnref<HashTableT>(hashTable: HashTableT)","type":"func"},{"path":"\/documentation\/glib\/hookdestroy(hooklist:hookid:)","title":"func hookDestroy<HookListT>(hookList: HookListT, hookID: Int) -> Bool","type":"func"},{"path":"\/documentation\/glib\/hookdestroylink(hooklist:hook:)","title":"func hookDestroyLink<HookListT, HookT>(hookList: HookListT, hook: HookT)","type":"func"},{"path":"\/documentation\/glib\/hookfree(hooklist:hook:)","title":"func hookFree<HookListT, HookT>(hookList: HookListT, hook: HookT)","type":"func"},{"path":"\/documentation\/glib\/hookinsertbefore(hooklist:sibling:hook:)","title":"func hookInsertBefore<HookListT, HookT>(hookList: HookListT, sibling: HookT?, hook: HookT)","type":"func"},{"path":"\/documentation\/glib\/hookinsertsorted(hooklist:hook:func:)","title":"func hookInsertSorted<HookListT, HookT>(hookList: HookListT, hook: HookT, func: GHookCompareFunc?)","type":"func"},{"path":"\/documentation\/glib\/hookprepend(hooklist:hook:)","title":"func hookPrepend<HookListT, HookT>(hookList: HookListT, hook: HookT)","type":"func"},{"path":"\/documentation\/glib\/hookunref(hooklist:hook:)","title":"func hookUnref<HookListT, HookT>(hookList: HookListT, hook: HookT)","type":"func"},{"path":"\/documentation\/glib\/hostnameisasciiencoded(hostname:)","title":"func hostnameIsAsciiEncoded(hostname: UnsafePointer<gchar>!) -> Bool","type":"func"},{"path":"\/documentation\/glib\/hostnameisipaddress(hostname:)","title":"func hostnameIsIpAddress(hostname: UnsafePointer<gchar>!) -> Bool","type":"func"},{"path":"\/documentation\/glib\/hostnameisnonascii(hostname:)","title":"func hostnameIsNonAscii(hostname: UnsafePointer<gchar>!) -> Bool","type":"func"},{"path":"\/documentation\/glib\/hostnametoascii(hostname:)","title":"func hostnameToAscii(hostname: UnsafePointer<gchar>!) -> String!","type":"func"},{"path":"\/documentation\/glib\/hostnametounicode(hostname:)","title":"func hostnameToUnicode(hostname: UnsafePointer<gchar>!) -> String!","type":"func"},{"path":"\/documentation\/glib\/iconv(converter:inbuf:inbytesleft:outbuf:outbytesleft:)","title":"func iconv(converter: GIConv, inbuf: UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!, inbytesLeft: UnsafeMutablePointer<gsize>!, outbuf: UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!, outbytesLeft: UnsafeMutablePointer<gsize>!) -> Int","type":"func"},{"path":"\/documentation\/glib\/iconvopen(tocodeset:from:)","title":"func iconvOpen(toCodeset: UnsafePointer<gchar>!, from: UnsafePointer<gchar>!) -> GIConv?","type":"func"},{"path":"\/documentation\/glib\/idleadd(function:data:)","title":"func idleAdd(function: GSourceFunc?, data: gpointer?) -> Int","type":"func"},{"path":"\/documentation\/glib\/idleaddfull(priority:function:data:notify:)","title":"func idleAddFull(priority: Int, function: GSourceFunc?, data: gpointer?, notify: GDestroyNotify?) -> Int","type":"func"},{"path":"\/documentation\/glib\/idleaddonce(function:data:)","title":"func idleAddOnce(function: GSourceOnceFunc?, data: gpointer?) -> Int","type":"func"},{"path":"\/documentation\/glib\/idleremoveby(data:)","title":"func idleRemoveBy(data: gpointer?) -> Bool","type":"func"},{"path":"\/documentation\/glib\/idlesourcenew()","title":"func idleSourceNew() -> SourceRef!","type":"func"},{"path":"\/documentation\/glib\/int64equal(v1:v2:)","title":"func int64Equal(v1: gconstpointer?, v2: gconstpointer?) -> Bool","type":"func"},{"path":"\/documentation\/glib\/int64hash(v:)","title":"func int64Hash(v: gconstpointer?) -> Int","type":"func"},{"path":"\/documentation\/glib\/intequal(v1:v2:)","title":"func intEqual(v1: gconstpointer?, v2: gconstpointer?) -> Bool","type":"func"},{"path":"\/documentation\/glib\/inthash(v:)","title":"func intHash(v: gconstpointer?) -> Int","type":"func"},{"path":"\/documentation\/glib\/intern(string:)","title":"func intern(string: UnsafePointer<gchar>?) -> String!","type":"func"},{"path":"\/documentation\/glib\/internstatic(string:)","title":"func internStatic(string: UnsafePointer<gchar>?) -> String!","type":"func"},{"path":"\/documentation\/glib\/ioaddwatch(channel:condition:func:userdata:)","title":"func ioAddWatch<IOChannelT>(channel: IOChannelT, condition: IOCondition, func: GIOFunc?, userData: gpointer?) -> Int","type":"func"},{"path":"\/documentation\/glib\/ioaddwatchfull(channel:priority:condition:func:userdata:notify:)","title":"func ioAddWatchFull<IOChannelT>(channel: IOChannelT, priority: Int, condition: IOCondition, func: GIOFunc?, userData: gpointer?, notify: GDestroyNotify?) -> Int","type":"func"},{"path":"\/documentation\/glib\/iochannelerrorfromerrno(en:)","title":"func ioChannelErrorFromErrno(en: Int) -> GIOChannelError","type":"func"},{"path":"\/documentation\/glib\/iochannelerrorquark()","title":"func ioChannelErrorQuark() -> GQuark","type":"func"},{"path":"\/documentation\/glib\/iocreatewatch(channel:condition:)","title":"func ioCreateWatch<IOChannelT>(channel: IOChannelT, condition: IOCondition) -> SourceRef!","type":"func"},{"path":"\/documentation\/glib\/keyfileerrorquark()","title":"func keyFileErrorQuark() -> GQuark","type":"func"},{"path":"\/documentation\/glib\/listpopallocator()","title":"func listPopAllocator()","type":"func"},{"path":"\/documentation\/glib\/listpush(allocator:)","title":"func listPush<AllocatorT>(allocator: AllocatorT)","type":"func"},{"path":"\/documentation\/glib\/listenv()","title":"func listenv() -> UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!","type":"func"},{"path":"\/documentation\/glib\/localefromutf8(utf8string:len:bytesread:byteswritten:)","title":"func localeFromUTF8(utf8string: UnsafePointer<gchar>!, len: gssize, bytesRead: UnsafeMutablePointer<gsize>!, bytesWritten: UnsafeMutablePointer<gsize>!) throws -> String!","type":"func"},{"path":"\/documentation\/glib\/localetoutf8(opsysstring:len:bytesread:byteswritten:)","title":"func localeToUTF8(opsysstring: UnsafePointer<gchar>!, len: gssize, bytesRead: UnsafeMutablePointer<gsize>!, bytesWritten: UnsafeMutablePointer<gsize>!) throws -> String!","type":"func"},{"path":"\/documentation\/glib\/logdefaulthandler(logdomain:loglevel:message:unuseddata:)","title":"func logDefaultHandler(logDomain: UnsafePointer<gchar>?, logLevel: LogLevelFlags, message: UnsafePointer<gchar>?, unusedData: gpointer?)","type":"func"},{"path":"\/documentation\/glib\/loggetdebugenabled()","title":"func logGetDebugEnabled() -> Bool","type":"func"},{"path":"\/documentation\/glib\/logremovehandler(logdomain:handlerid:)","title":"func logRemoveHandler(logDomain: UnsafePointer<gchar>!, handlerID: Int)","type":"func"},{"path":"\/documentation\/glib\/logsetalwaysfatal(fatalmask:)","title":"func logSetAlwaysFatal(fatalMask: LogLevelFlags) -> LogLevelFlags","type":"func"},{"path":"\/documentation\/glib\/logsetdebug(enabled:)","title":"func logSetDebug(enabled: Bool)","type":"func"},{"path":"\/documentation\/glib\/logsetdefaulthandler(logfunc:userdata:)","title":"func logSetDefaultHandler(logFunc: GLogFunc?, userData: gpointer?) -> GLogFunc!","type":"func"},{"path":"\/documentation\/glib\/logsetfatalmask(logdomain:fatalmask:)","title":"func logSetFatalMask(logDomain: UnsafePointer<gchar>!, fatalMask: LogLevelFlags) -> LogLevelFlags","type":"func"},{"path":"\/documentation\/glib\/logsethandler(logdomain:loglevels:logfunc:userdata:)","title":"func logSetHandler(logDomain: UnsafePointer<gchar>?, logLevels: LogLevelFlags, logFunc: GLogFunc?, userData: gpointer?) -> Int","type":"func"},{"path":"\/documentation\/glib\/logsethandlerfull(logdomain:loglevels:logfunc:userdata:destroy:)","title":"func logSetHandlerFull(logDomain: UnsafePointer<gchar>?, logLevels: LogLevelFlags, logFunc: GLogFunc?, userData: gpointer?, destroy: GDestroyNotify?) -> Int","type":"func"},{"path":"\/documentation\/glib\/logsetwriterfunc(func:userdata:userdatafree:)","title":"func logSetWriterFunc(func: GLogWriterFunc?, userData: gpointer?, userDataFree: GDestroyNotify?)","type":"func"},{"path":"\/documentation\/glib\/logstructuredarray(loglevel:fields:nfields:)","title":"func logStructuredArray(logLevel: LogLevelFlags, fields: UnsafePointer<GLogField>!, nFields: Int)","type":"func"},{"path":"\/documentation\/glib\/logvariant(logdomain:loglevel:fields:)","title":"func logVariant<VariantT>(logDomain: UnsafePointer<gchar>?, logLevel: LogLevelFlags, fields: VariantT)","type":"func"},{"path":"\/documentation\/glib\/logwriterdefault(loglevel:fields:nfields:userdata:)","title":"func logWriterDefault(logLevel: LogLevelFlags, fields: UnsafePointer<GLogField>!, nFields: Int, userData: gpointer?) -> GLogWriterOutput","type":"func"},{"path":"\/documentation\/glib\/logwriterdefaultset(usestderr:)","title":"func logWriterDefaultSet(useStderr: Bool)","type":"func"},{"path":"\/documentation\/glib\/logwriterdefaultsetdebug(domains:)","title":"func logWriterDefaultSetDebug(domains: UnsafePointer<UnsafePointer<gchar>?>?)","type":"func"},{"path":"\/documentation\/glib\/logwriterdefaultwoulddrop(loglevel:logdomain:)","title":"func logWriterDefaultWouldDrop(logLevel: LogLevelFlags, logDomain: UnsafePointer<CChar>?) -> Bool","type":"func"},{"path":"\/documentation\/glib\/logwriterformatfields(loglevel:fields:nfields:usecolor:)","title":"func logWriterFormatFields(logLevel: LogLevelFlags, fields: UnsafePointer<GLogField>!, nFields: Int, useColor: Bool) -> String!","type":"func"},{"path":"\/documentation\/glib\/logwriterisjournald(outputfd:)","title":"func logWriterIsJournald(outputFd: Int) -> Bool","type":"func"},{"path":"\/documentation\/glib\/logwriterjournald(loglevel:fields:nfields:userdata:)","title":"func logWriterJournald(logLevel: LogLevelFlags, fields: UnsafePointer<GLogField>!, nFields: Int, userData: gpointer?) -> GLogWriterOutput","type":"func"},{"path":"\/documentation\/glib\/logwriterstandardstreams(loglevel:fields:nfields:userdata:)","title":"func logWriterStandardStreams(logLevel: LogLevelFlags, fields: UnsafePointer<GLogField>!, nFields: Int, userData: gpointer?) -> GLogWriterOutput","type":"func"},{"path":"\/documentation\/glib\/logwritersupportscolor(outputfd:)","title":"func logWriterSupportsColor(outputFd: Int) -> Bool","type":"func"},{"path":"\/documentation\/glib\/logwritersyslog(loglevel:fields:nfields:userdata:)","title":"func logWriterSyslog(logLevel: LogLevelFlags, fields: UnsafePointer<GLogField>!, nFields: Int, userData: gpointer?) -> GLogWriterOutput","type":"func"},{"path":"\/documentation\/glib\/logv(logdomain:loglevel:format:args:)","title":"func logv(logDomain: UnsafePointer<gchar>?, logLevel: LogLevelFlags, format: UnsafePointer<gchar>!, args: CVaListPointer)","type":"func"},{"path":"\/documentation\/glib\/lstat(filename:buf:)","title":"func lstat<StatBufT>(filename: UnsafePointer<gchar>!, buf: StatBufT) -> Int","type":"func"},{"path":"\/documentation\/glib\/maincontextdefault()","title":"func mainContextDefault() -> MainContextRef!","type":"func"},{"path":"\/documentation\/glib\/maincontextgetthreaddefault()","title":"func mainContextGetThreadDefault() -> MainContextRef!","type":"func"},{"path":"\/documentation\/glib\/maincontextrefthreaddefault()","title":"func mainContextRefThreadDefault() -> MainContextRef!","type":"func"},{"path":"\/documentation\/glib\/maincurrentsource()","title":"func mainCurrentSource() -> SourceRef!","type":"func"},{"path":"\/documentation\/glib\/maindepth()","title":"func mainDepth() -> Int","type":"func"},{"path":"\/documentation\/glib\/malloc(nbytes:)","title":"func malloc(nBytes: Int) -> gpointer?","type":"func"},{"path":"\/documentation\/glib\/malloc0(nbytes:)","title":"func malloc0(nBytes: Int) -> gpointer?","type":"func"},{"path":"\/documentation\/glib\/malloc0n(nblocks:nblockbytes:)","title":"func malloc0N(nBlocks: Int, nBlockBytes: Int) -> gpointer?","type":"func"},{"path":"\/documentation\/glib\/mallocn(nblocks:nblockbytes:)","title":"func mallocN(nBlocks: Int, nBlockBytes: Int) -> gpointer?","type":"func"},{"path":"\/documentation\/glib\/markuperrorquark()","title":"func markupErrorQuark() -> GQuark","type":"func"},{"path":"\/documentation\/glib\/markupescape(text:length:)","title":"func markupEscape(text: UnsafePointer<gchar>!, length: gssize) -> String!","type":"func"},{"path":"\/documentation\/glib\/markupvprintfescaped(format:args:)","title":"func markupVprintfEscaped(format: UnsafePointer<CChar>!, args: CVaListPointer) -> String!","type":"func"},{"path":"\/documentation\/glib\/memchunkinfo()","title":"func memChunkInfo()","type":"func"},{"path":"\/documentation\/glib\/memissystemmalloc()","title":"func memIsSystemMalloc() -> Bool","type":"func"},{"path":"\/documentation\/glib\/memprofile()","title":"func memProfile()","type":"func"},{"path":"\/documentation\/glib\/memset(vtable:)","title":"func memSet<MemVTableT>(vtable: MemVTableT)","type":"func"},{"path":"\/documentation\/glib\/memdup(mem:bytesize:)","title":"func memdup(mem: gconstpointer?, byteSize: Int) -> gpointer?","type":"func"},{"path":"\/documentation\/glib\/memdup2(mem:bytesize:)","title":"func memdup2(mem: gconstpointer?, byteSize: Int) -> gpointer?","type":"func"},{"path":"\/documentation\/glib\/mkdir(filename:mode:)","title":"func mkdir(filename: UnsafePointer<gchar>!, mode: Int) -> Int","type":"func"},{"path":"\/documentation\/glib\/mkdirwithparents(pathname:mode:)","title":"func mkdirWithParents(pathname: UnsafePointer<gchar>!, mode: Int) -> Int","type":"func"},{"path":"\/documentation\/glib\/mkdtemp(tmpl:)","title":"func mkdtemp(tmpl: UnsafeMutablePointer<gchar>!) -> String!","type":"func"},{"path":"\/documentation\/glib\/mkdtempfull(tmpl:mode:)","title":"func mkdtempFull(tmpl: UnsafeMutablePointer<gchar>!, mode: Int) -> String!","type":"func"},{"path":"\/documentation\/glib\/mkstemp(tmpl:)","title":"func mkstemp(tmpl: UnsafeMutablePointer<gchar>!) -> Int","type":"func"},{"path":"\/documentation\/glib\/mkstempfull(tmpl:flags:mode:)","title":"func mkstempFull(tmpl: UnsafeMutablePointer<gchar>!, flags: Int, mode: Int) -> Int","type":"func"},{"path":"\/documentation\/glib\/mutate(_:)","title":"func mutate<T>(UnsafePointer<T>) -> UnsafeMutablePointer<T>","type":"func"},{"path":"\/documentation\/glib\/mutexnew()","title":"func mutexNew() -> MutexRef!","type":"func"},{"path":"\/documentation\/glib\/new()","title":"func new() -> MutexRef!","type":"func"},{"path":"\/documentation\/glib\/nodepopallocator()","title":"func nodePopAllocator()","type":"func"},{"path":"\/documentation\/glib\/nodepush(allocator:)","title":"func nodePush<AllocatorT>(allocator: AllocatorT)","type":"func"},{"path":"\/documentation\/glib\/nullifypointer(nullifylocation:)","title":"func nullifyPointer(nullifyLocation: UnsafeMutablePointer<gpointer?>!)","type":"func"},{"path":"\/documentation\/glib\/numberparsererrorquark()","title":"func numberParserErrorQuark() -> GQuark","type":"func"},{"path":"\/documentation\/glib\/onerrorquery(prgname:)","title":"func onErrorQuery(prgName: UnsafePointer<gchar>!)","type":"func"},{"path":"\/documentation\/glib\/onerrorstacktrace(prgname:)","title":"func onErrorStackTrace(prgName: UnsafePointer<gchar>!)","type":"func"},{"path":"\/documentation\/glib\/onceinitenter(location:)","title":"func onceInitEnter(location: UnsafeMutableRawPointer!) -> Bool","type":"func"},{"path":"\/documentation\/glib\/onceinitenterimpl(location:)","title":"func onceInitEnterImpl(location: UnsafeMutablePointer<gsize>!) -> Bool","type":"func"},{"path":"\/documentation\/glib\/onceinitenterpointer(location:)","title":"func onceInitEnterPointer(location: UnsafeMutableRawPointer!) -> Bool","type":"func"},{"path":"\/documentation\/glib\/onceinitleave(location:result:)","title":"func onceInitLeave(location: UnsafeMutableRawPointer!, result: Int)","type":"func"},{"path":"\/documentation\/glib\/onceinitleavepointer(location:result:)","title":"func onceInitLeavePointer(location: UnsafeMutableRawPointer!, result: gpointer?)","type":"func"},{"path":"\/documentation\/glib\/open(filename:flags:mode:)","title":"func open(filename: UnsafePointer<gchar>!, flags: Int, mode: Int) -> Int","type":"func"},{"path":"\/documentation\/glib\/optionerrorquark()","title":"func optionErrorQuark() -> GQuark","type":"func"},{"path":"\/documentation\/glib\/parsedebug(string:keys:nkeys:)","title":"func parseDebug(string: UnsafePointer<gchar>?, keys: UnsafePointer<GDebugKey>!, nkeys: Int) -> Int","type":"func"},{"path":"\/documentation\/glib\/pathbufequal(v1:v2:)","title":"func pathBufEqual(v1: gconstpointer?, v2: gconstpointer?) -> Bool","type":"func"},{"path":"\/documentation\/glib\/pathgetbasename(filename:)","title":"func pathGetBasename(fileName: UnsafePointer<gchar>!) -> String!","type":"func"},{"path":"\/documentation\/glib\/pathgetdirname(filename:)","title":"func pathGetDirname(fileName: UnsafePointer<gchar>!) -> String!","type":"func"},{"path":"\/documentation\/glib\/pathisabsolute(filename:)","title":"func pathIsAbsolute(fileName: UnsafePointer<gchar>!) -> Bool","type":"func"},{"path":"\/documentation\/glib\/pathskiproot(filename:)","title":"func pathSkipRoot(fileName: UnsafePointer<gchar>!) -> String!","type":"func"},{"path":"\/documentation\/glib\/patternmatch(pspec:stringlength:string:stringreversed:)","title":"func patternMatch<PatternSpecT>(pspec: PatternSpecT, stringLength: Int, string: UnsafePointer<gchar>!, stringReversed: UnsafePointer<gchar>?) -> Bool","type":"func"},{"path":"\/documentation\/glib\/patternmatchsimple(pattern:string:)","title":"func patternMatchSimple(pattern: UnsafePointer<gchar>!, string: UnsafePointer<gchar>!) -> Bool","type":"func"},{"path":"\/documentation\/glib\/patternmatchstring(pspec:string:)","title":"func patternMatchString<PatternSpecT>(pspec: PatternSpecT, string: UnsafePointer<gchar>!) -> Bool","type":"func"},{"path":"\/documentation\/glib\/pointerbitlock(address:lockbit:)","title":"func pointerBitLock(address: UnsafeMutableRawPointer!, lockBit: Int)","type":"func"},{"path":"\/documentation\/glib\/pointerbitlockandget(address:lockbit:outptr:)","title":"func pointerBitLockAndGet(address: gpointer!, lockBit: Int, outPtr: UnsafeMutablePointer<guintptr>!)","type":"func"},{"path":"\/documentation\/glib\/pointerbitlockmask(ptr:lockbit:set:preservemask:preserveptr:)","title":"func pointerBitLockMask(ptr: gpointer?, lockBit: Int, set: Bool, preserveMask: guintptr, preservePtr: gpointer?) -> gpointer?","type":"func"},{"path":"\/documentation\/glib\/pointerbittrylock(address:lockbit:)","title":"func pointerBitTrylock(address: UnsafeMutableRawPointer!, lockBit: Int) -> Bool","type":"func"},{"path":"\/documentation\/glib\/pointerbitunlock(address:lockbit:)","title":"func pointerBitUnlock(address: UnsafeMutableRawPointer!, lockBit: Int)","type":"func"},{"path":"\/documentation\/glib\/pointerbitunlockandset(address:lockbit:ptr:preservemask:)","title":"func pointerBitUnlockAndSet(address: UnsafeMutableRawPointer!, lockBit: Int, ptr: gpointer?, preserveMask: guintptr)","type":"func"},{"path":"\/documentation\/glib\/poll(fds:nfds:timeout:)","title":"func poll<PollFDT>(fds: PollFDT, nfds: Int, timeout: Int) -> Int","type":"func"},{"path":"\/documentation\/glib\/prefixerrorliteral(err:prefix:)","title":"func prefixErrorLiteral(err: UnsafeMutablePointer<UnsafeMutablePointer<GError>?>?, prefix: UnsafePointer<gchar>!)","type":"func"},{"path":"\/documentation\/glib\/printfstringupperbound(format:args:)","title":"func printfStringUpperBound(format: UnsafePointer<gchar>!, args: CVaListPointer) -> Int","type":"func"},{"path":"\/documentation\/glib\/privatenew(notify:)","title":"func privateNew(notify: GDestroyNotify?) -> PrivateRef!","type":"func"},{"path":"\/documentation\/glib\/propagateerror(dest:src:)","title":"func propagateError<GLibErrorT>(dest: UnsafeMutablePointer<UnsafeMutablePointer<GError>?>?, src: GLibErrorT)","type":"func"},{"path":"\/documentation\/glib\/ptrarrayfind(haystack:needle:index:)","title":"func ptrArrayFind<PtrArrayT>(haystack: PtrArrayT, needle: gconstpointer?, index: UnsafeMutablePointer<guint>!) -> Bool","type":"func"},{"path":"\/documentation\/glib\/ptrarrayfindwithequalfunc(haystack:needle:equalfunc:index:)","title":"func ptrArrayFindWithEqualFunc<PtrArrayT>(haystack: PtrArrayT, needle: gconstpointer?, equalFunc: GEqualFunc?, index: UnsafeMutablePointer<guint>!) -> Bool","type":"func"},{"path":"\/documentation\/glib\/ptrarraynewfromarray(data:len:copyfunc:copyfuncuserdata:elementfreefunc:)","title":"func ptrArrayNewFromArray(data: UnsafeMutablePointer<gpointer?>!, len: Int, copyFunc: GCopyFunc?, copyFuncUserData: gpointer?, elementFreeFunc: GDestroyNotify?) -> ReferenceArrayRef<gpointer>!","type":"func"},{"path":"\/documentation\/glib\/ptrarraynewfromnullterminatedarray(data:copyfunc:copyfuncuserdata:elementfreefunc:)","title":"func ptrArrayNewFromNullTerminatedArray(data: UnsafeMutablePointer<gpointer?>!, copyFunc: GCopyFunc?, copyFuncUserData: gpointer?, elementFreeFunc: GDestroyNotify?) -> ReferenceArrayRef<gpointer>!","type":"func"},{"path":"\/documentation\/glib\/ptrarraynewtake(data:len:elementfreefunc:)","title":"func ptrArrayNewTake(data: UnsafeMutablePointer<gpointer?>!, len: Int, elementFreeFunc: GDestroyNotify?) -> ReferenceArrayRef<gpointer>!","type":"func"},{"path":"\/documentation\/glib\/ptrarraynewtakenullterminated(data:elementfreefunc:)","title":"func ptrArrayNewTakeNullTerminated(data: UnsafeMutablePointer<gpointer?>!, elementFreeFunc: GDestroyNotify?) -> ReferenceArrayRef<gpointer>!","type":"func"},{"path":"\/documentation\/glib\/qsortwithdata(pbase:totalelems:size:comparefunc:userdata:)","title":"func qsortWithData(pbase: gconstpointer?, totalElems: Int, size: Int, compareFunc: GCompareDataFunc?, userData: gpointer?)","type":"func"},{"path":"\/documentation\/glib\/quarkfrom(string:)","title":"func quarkFrom(string: UnsafePointer<gchar>?) -> GQuark","type":"func"},{"path":"\/documentation\/glib\/quarkfromstatic(string:)","title":"func quarkFromStatic(string: UnsafePointer<gchar>?) -> GQuark","type":"func"},{"path":"\/documentation\/glib\/quarktostring(quark:)","title":"func quarkToString(quark: GQuark) -> String!","type":"func"},{"path":"\/documentation\/glib\/quarktry(string:)","title":"func quarkTry(string: UnsafePointer<gchar>?) -> GQuark","type":"func"},{"path":"\/documentation\/glib\/randomdouble()","title":"func randomDouble() -> Double","type":"func"},{"path":"\/documentation\/glib\/randomdoublerange(begin:end:)","title":"func randomDoubleRange(begin: Double, end: Double) -> Double","type":"func"},{"path":"\/documentation\/glib\/randomint()","title":"func randomInt() -> guint32","type":"func"},{"path":"\/documentation\/glib\/randomintrange(begin:end:)","title":"func randomIntRange(begin: gint32, end: gint32) -> gint32","type":"func"},{"path":"\/documentation\/glib\/randomset(seed:)","title":"func randomSet(seed: guint32)","type":"func"},{"path":"\/documentation\/glib\/rcboxacquire(memblock:)","title":"func rcBoxAcquire(memBlock: gpointer!) -> gpointer!","type":"func"},{"path":"\/documentation\/glib\/rcboxalloc(blocksize:)","title":"func rcBoxAlloc(blockSize: Int) -> gpointer!","type":"func"},{"path":"\/documentation\/glib\/rcboxalloc0(blocksize:)","title":"func rcBoxAlloc0(blockSize: Int) -> gpointer!","type":"func"},{"path":"\/documentation\/glib\/rcboxdup(blocksize:memblock:)","title":"func rcBoxDup(blockSize: Int, memBlock: gconstpointer?) -> gpointer!","type":"func"},{"path":"\/documentation\/glib\/rcboxgetsize(memblock:)","title":"func rcBoxGetSize(memBlock: gpointer!) -> Int","type":"func"},{"path":"\/documentation\/glib\/rcboxrelease(memblock:)","title":"func rcBoxRelease(memBlock: gpointer!)","type":"func"},{"path":"\/documentation\/glib\/rcboxreleasefull(memblock:clearfunc:)","title":"func rcBoxReleaseFull(memBlock: gpointer!, clearFunc: GDestroyNotify?)","type":"func"},{"path":"\/documentation\/glib\/realloc(mem:nbytes:)","title":"func realloc(mem: gpointer?, nBytes: Int) -> gpointer?","type":"func"},{"path":"\/documentation\/glib\/reallocn(mem:nblocks:nblockbytes:)","title":"func reallocN(mem: gpointer?, nBlocks: Int, nBlockBytes: Int) -> gpointer?","type":"func"},{"path":"\/documentation\/glib\/refcountcompare(rc:val:)","title":"func refCountCompare(rc: UnsafeMutablePointer<grefcount>!, val: Int) -> Bool","type":"func"},{"path":"\/documentation\/glib\/refcountdec(rc:)","title":"func refCountDec(rc: UnsafeMutablePointer<grefcount>!) -> Bool","type":"func"},{"path":"\/documentation\/glib\/refcountinc(rc:)","title":"func refCountInc(rc: UnsafeMutablePointer<grefcount>!)","type":"func"},{"path":"\/documentation\/glib\/refstringacquire(str:)","title":"func refStringAcquire(str: UnsafeMutablePointer<CChar>!) -> String!","type":"func"},{"path":"\/documentation\/glib\/refstringlength(str:)","title":"func refStringLength(str: UnsafeMutablePointer<CChar>!) -> Int","type":"func"},{"path":"\/documentation\/glib\/refstringnew(str:)","title":"func refStringNew(str: UnsafePointer<CChar>!) -> String!","type":"func"},{"path":"\/documentation\/glib\/refstringnewintern(str:)","title":"func refStringNewIntern(str: UnsafePointer<CChar>!) -> String!","type":"func"},{"path":"\/documentation\/glib\/refstringnewlen(str:len:)","title":"func refStringNewLen(str: UnsafePointer<CChar>!, len: gssize) -> String!","type":"func"},{"path":"\/documentation\/glib\/refstringrelease(str:)","title":"func refStringRelease(str: UnsafeMutablePointer<CChar>!)","type":"func"},{"path":"\/documentation\/glib\/regexcheck(replacement:hasreferences:)","title":"func regexCheck(replacement: UnsafePointer<gchar>!, hasReferences: UnsafeMutablePointer<gboolean>!) throws -> Bool","type":"func"},{"path":"\/documentation\/glib\/regexerrorquark()","title":"func regexErrorQuark() -> GQuark","type":"func"},{"path":"\/documentation\/glib\/regexescape(string:length:)","title":"func regexEscape(string: UnsafePointer<gchar>!, length: Int) -> String!","type":"func"},{"path":"\/documentation\/glib\/regexescapenul(string:length:)","title":"func regexEscapeNul(string: UnsafePointer<gchar>!, length: Int) -> String!","type":"func"},{"path":"\/documentation\/glib\/regexmatchsimple(pattern:string:compileoptions:matchoptions:)","title":"func regexMatchSimple(pattern: UnsafePointer<gchar>!, string: UnsafePointer<gchar>!, compileOptions: RegexCompileFlags, matchOptions: RegexMatchFlags) -> Bool","type":"func"},{"path":"\/documentation\/glib\/regexsplitsimple(pattern:string:compileoptions:matchoptions:)","title":"func regexSplitSimple(pattern: UnsafePointer<gchar>!, string: UnsafePointer<gchar>!, compileOptions: RegexCompileFlags, matchOptions: RegexMatchFlags) -> UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!","type":"func"},{"path":"\/documentation\/glib\/reloaduserspecialdirscache()","title":"func reloadUserSpecialDirsCache()","type":"func"},{"path":"\/documentation\/glib\/remove(filename:)","title":"func remove(filename: UnsafePointer<gchar>!) -> Int","type":"func"},{"path":"\/documentation\/glib\/rename(oldfilename:newfilename:)","title":"func rename(oldfilename: UnsafePointer<gchar>!, newfilename: UnsafePointer<gchar>!) -> Int","type":"func"},{"path":"\/documentation\/glib\/returniffailwarning(logdomain:prettyfunction:expression:)","title":"func returnIfFailWarning(logDomain: UnsafePointer<CChar>?, prettyFunction: UnsafePointer<CChar>!, expression: UnsafePointer<CChar>?)","type":"func"},{"path":"\/documentation\/glib\/rmdir(filename:)","title":"func rmdir(filename: UnsafePointer<gchar>!) -> Int","type":"func"},{"path":"\/documentation\/glib\/sequenceforeachrange(begin:end:func:userdata:)","title":"func sequenceForeachRange<SequenceIterT>(begin: SequenceIterT, end: SequenceIterT, func: GFunc?, userData: gpointer?)","type":"func"},{"path":"\/documentation\/glib\/sequenceget(iter:)","title":"func sequenceGet<SequenceIterT>(iter: SequenceIterT) -> gpointer?","type":"func"},{"path":"\/documentation\/glib\/sequenceinsertbefore(iter:data:)","title":"func sequenceInsertBefore<SequenceIterT>(iter: SequenceIterT, data: gpointer?) -> SequenceIterRef!","type":"func"},{"path":"\/documentation\/glib\/sequencemove(src:dest:)","title":"func sequenceMove<SequenceIterT>(src: SequenceIterT, dest: SequenceIterT)","type":"func"},{"path":"\/documentation\/glib\/sequencemoverange(dest:begin:end:)","title":"func sequenceMoveRange<SequenceIterT>(dest: SequenceIterT, begin: SequenceIterT, end: SequenceIterT)","type":"func"},{"path":"\/documentation\/glib\/sequencerangegetmidpoint(begin:end:)","title":"func sequenceRangeGetMidpoint<SequenceIterT>(begin: SequenceIterT, end: SequenceIterT) -> SequenceIterRef!","type":"func"},{"path":"\/documentation\/glib\/sequenceremove(iter:)","title":"func sequenceRemove<SequenceIterT>(iter: SequenceIterT)","type":"func"},{"path":"\/documentation\/glib\/sequenceremoverange(begin:end:)","title":"func sequenceRemoveRange<SequenceIterT>(begin: SequenceIterT, end: SequenceIterT)","type":"func"},{"path":"\/documentation\/glib\/sequenceset(iter:data:)","title":"func sequenceSet<SequenceIterT>(iter: SequenceIterT, data: gpointer?)","type":"func"},{"path":"\/documentation\/glib\/sequencesortchanged(iter:cmpfunc:cmpdata:)","title":"func sequenceSortChanged<SequenceIterT>(iter: SequenceIterT, cmpFunc: GCompareDataFunc?, cmpData: gpointer?)","type":"func"},{"path":"\/documentation\/glib\/sequencesortchanged(iter:itercmp:cmpdata:)","title":"func sequenceSortChanged<SequenceIterT>(iter: SequenceIterT, iterCmp: GSequenceIterCompareFunc?, cmpData: gpointer?)","type":"func"},{"path":"\/documentation\/glib\/sequenceswap(a:b:)","title":"func sequenceSwap<SequenceIterT>(a: SequenceIterT, b: SequenceIterT)","type":"func"},{"path":"\/documentation\/glib\/set(applicationname:)","title":"func set(applicationName: UnsafePointer<gchar>!)","type":"func"},{"path":"\/documentation\/glib\/set(prgname:)","title":"func set(prgname: UnsafePointer<gchar>!)","type":"func"},{"path":"\/documentation\/glib\/seterrorliteral(err:domain:code:message:)","title":"func setErrorLiteral(err: UnsafeMutablePointer<UnsafeMutablePointer<GError>?>!, domain: GQuark, code: Int, message: UnsafePointer<gchar>!)","type":"func"},{"path":"\/documentation\/glib\/setprinthandler(func:)","title":"func setPrintHandler(func: GPrintFunc?) -> GPrintFunc!","type":"func"},{"path":"\/documentation\/glib\/setprinterrhandler(func:)","title":"func setPrinterrHandler(func: GPrintFunc?) -> GPrintFunc!","type":"func"},{"path":"\/documentation\/glib\/setenv(variable:value:overwrite:)","title":"func setenv(variable: UnsafePointer<gchar>!, value: UnsafePointer<gchar>!, overwrite: Bool) -> Bool","type":"func"},{"path":"\/documentation\/glib\/shellerrorquark()","title":"func shellErrorQuark() -> GQuark","type":"func"},{"path":"\/documentation\/glib\/shellparseargv(commandline:argcp:argvp:)","title":"func shellParseArgv(commandLine: UnsafePointer<gchar>!, argcp: UnsafeMutablePointer<gint>!, argvp: UnsafeMutablePointer<UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>?>!) throws -> Bool","type":"func"},{"path":"\/documentation\/glib\/shellquote(unquotedstring:)","title":"func shellQuote(unquotedString: UnsafePointer<gchar>!) -> String!","type":"func"},{"path":"\/documentation\/glib\/shellunquote(quotedstring:)","title":"func shellUnquote(quotedString: UnsafePointer<gchar>!) throws -> String!","type":"func"},{"path":"\/documentation\/glib\/slicealloc(blocksize:)","title":"func sliceAlloc(blockSize: Int) -> gpointer?","type":"func"},{"path":"\/documentation\/glib\/slicealloc0(blocksize:)","title":"func sliceAlloc0(blockSize: Int) -> gpointer?","type":"func"},{"path":"\/documentation\/glib\/slicecopy(blocksize:memblock:)","title":"func sliceCopy(blockSize: Int, memBlock: gconstpointer?) -> gpointer?","type":"func"},{"path":"\/documentation\/glib\/slicefree1(blocksize:memblock:)","title":"func sliceFree1(blockSize: Int, memBlock: gpointer?)","type":"func"},{"path":"\/documentation\/glib\/slicefreechainwithoffset(blocksize:memchain:nextoffset:)","title":"func sliceFreeChainWithOffset(blockSize: Int, memChain: gpointer?, nextOffset: Int)","type":"func"},{"path":"\/documentation\/glib\/slicegetconfig(ckey:)","title":"func sliceGetConfig(ckey: GSliceConfig) -> gint64","type":"func"},{"path":"\/documentation\/glib\/slicegetconfigstate(ckey:address:nvalues:)","title":"func sliceGetConfigState(ckey: GSliceConfig, address: gint64, nValues: UnsafeMutablePointer<guint>!) -> UnsafeMutablePointer<gint64>!","type":"func"},{"path":"\/documentation\/glib\/slicesetconfig(ckey:value:)","title":"func sliceSetConfig(ckey: GSliceConfig, value: gint64)","type":"func"},{"path":"\/documentation\/glib\/slistpopallocator()","title":"func slistPopAllocator()","type":"func"},{"path":"\/documentation\/glib\/slistpush(allocator:)","title":"func slistPush<AllocatorT>(allocator: AllocatorT)","type":"func"},{"path":"\/documentation\/glib\/sort(array:nelements:elementsize:comparefunc:userdata:)","title":"func sort(array: UnsafeMutableRawPointer!, nElements: size_t, elementSize: size_t, compareFunc: GCompareDataFunc?, userData: UnsafeMutableRawPointer?)","type":"func"},{"path":"\/documentation\/glib\/sourceremoveby(userdata:)","title":"func sourceRemoveBy(userData: gpointer?) -> Bool","type":"func"},{"path":"\/documentation\/glib\/sourceremovebyfuncsuserdata(funcs:userdata:)","title":"func sourceRemoveByFuncsUserData<SourceFuncsT>(funcs: SourceFuncsT, userData: gpointer?) -> Bool","type":"func"},{"path":"\/documentation\/glib\/sourcesetnamebyid(tag:name:)","title":"func sourceSetNameByID(tag: Int, name: UnsafePointer<CChar>!)","type":"func"},{"path":"\/documentation\/glib\/spacedprimesclosest(num:)","title":"func spacedPrimesClosest(num: Int) -> Int","type":"func"},{"path":"\/documentation\/glib\/spawnasync(workingdirectory:argv:envp:flags:childsetup:userdata:childpid:)","title":"func spawnAsync(workingDirectory: UnsafePointer<gchar>?, argv: UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!, envp: UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!, flags: SpawnFlags, childSetup: GSpawnChildSetupFunc?, userData: gpointer?, childPid: UnsafeMutablePointer<GPid>!) throws -> Bool","type":"func"},{"path":"\/documentation\/glib\/spawnasyncwithfds(workingdirectory:argv:envp:flags:childsetup:userdata:childpid:stdinfd:stdoutfd:stderrfd:)","title":"func spawnAsyncWithFds(workingDirectory: UnsafePointer<gchar>?, argv: UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!, envp: UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!, flags: SpawnFlags, childSetup: GSpawnChildSetupFunc?, userData: gpointer?, childPid: UnsafeMutablePointer<GPid>!, stdinFd: Int, stdoutFd: Int, stderrFd: Int) throws -> Bool","type":"func"},{"path":"\/documentation\/glib\/spawnasyncwithpipes(workingdirectory:argv:envp:flags:childsetup:userdata:childpid:standardinput:standardoutput:standarderror:)","title":"func spawnAsyncWithPipes(workingDirectory: UnsafePointer<gchar>?, argv: UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!, envp: UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!, flags: SpawnFlags, childSetup: GSpawnChildSetupFunc?, userData: gpointer?, childPid: UnsafeMutablePointer<GPid>!, standardInput: UnsafeMutablePointer<gint>!, standardOutput: UnsafeMutablePointer<gint>!, standardError: UnsafeMutablePointer<gint>!) throws -> Bool","type":"func"},{"path":"\/documentation\/glib\/spawnasyncwithpipesandfds(workingdirectory:argv:envp:flags:childsetup:userdata:stdinfd:stdoutfd:stderrfd:sourcefds:targetfds:nfds:childpidout:stdinpipeout:stdoutpipeout:stderrpipeout:)","title":"func spawnAsyncWithPipesAndFds(workingDirectory: UnsafePointer<gchar>?, argv: UnsafePointer<UnsafePointer<gchar>?>!, envp: UnsafePointer<UnsafePointer<gchar>?>!, flags: SpawnFlags, childSetup: GSpawnChildSetupFunc?, userData: gpointer?, stdinFd: Int, stdoutFd: Int, stderrFd: Int, sourceFds: UnsafePointer<gint>!, targetFds: UnsafePointer<gint>!, nFds: Int, childPidOut: UnsafeMutablePointer<GPid>!, stdinPipeOut: UnsafeMutablePointer<gint>!, stdoutPipeOut: UnsafeMutablePointer<gint>!, stderrPipeOut: UnsafeMutablePointer<gint>!) throws -> Bool","type":"func"},{"path":"\/documentation\/glib\/spawncheck(waitstatus:)","title":"func spawnCheck(waitStatus: Int) throws -> Bool","type":"func"},{"path":"\/documentation\/glib\/spawncheckexitstatus(waitstatus:)","title":"func spawnCheckExitStatus(waitStatus: Int) throws -> Bool","type":"func"},{"path":"\/documentation\/glib\/spawnclose(pid:)","title":"func spawnClose(pid: GPid)","type":"func"},{"path":"\/documentation\/glib\/spawncommandlineasync(commandline:)","title":"func spawnCommandLineAsync(commandLine: UnsafePointer<gchar>!) throws -> Bool","type":"func"},{"path":"\/documentation\/glib\/spawncommandlinesync(commandline:standardoutput:standarderror:waitstatus:)","title":"func spawnCommandLineSync(commandLine: UnsafePointer<gchar>!, standardOutput: UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!, standardError: UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!, waitStatus: UnsafeMutablePointer<gint>!) throws -> Bool","type":"func"},{"path":"\/documentation\/glib\/spawnerrorquark()","title":"func spawnErrorQuark() -> GQuark","type":"func"},{"path":"\/documentation\/glib\/spawnexiterrorquark()","title":"func spawnExitErrorQuark() -> GQuark","type":"func"},{"path":"\/documentation\/glib\/spawnsync(workingdirectory:argv:envp:flags:childsetup:userdata:standardoutput:standarderror:waitstatus:)","title":"func spawnSync(workingDirectory: UnsafePointer<gchar>?, argv: UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!, envp: UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!, flags: SpawnFlags, childSetup: GSpawnChildSetupFunc?, userData: gpointer?, standardOutput: UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!, standardError: UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!, waitStatus: UnsafeMutablePointer<gint>!) throws -> Bool","type":"func"},{"path":"\/documentation\/glib\/stat(filename:buf:)","title":"func stat<StatBufT>(filename: UnsafePointer<gchar>!, buf: StatBufT) -> Int","type":"func"},{"path":"\/documentation\/glib\/stpcpy(dest:src:)","title":"func stpcpy(dest: UnsafeMutablePointer<gchar>!, src: UnsafePointer<CChar>!) -> String!","type":"func"},{"path":"\/documentation\/glib\/strequal(v1:v2:)","title":"func strEqual(v1: gconstpointer?, v2: gconstpointer?) -> Bool","type":"func"},{"path":"\/documentation\/glib\/strhasprefix(str:prefix:)","title":"func strHasPrefix(str: UnsafePointer<gchar>!, prefix: UnsafePointer<gchar>!) -> Bool","type":"func"},{"path":"\/documentation\/glib\/strhassuffix(str:suffix:)","title":"func strHasSuffix(str: UnsafePointer<gchar>!, suffix: UnsafePointer<gchar>!) -> Bool","type":"func"},{"path":"\/documentation\/glib\/strhash(v:)","title":"func strHash(v: gconstpointer?) -> Int","type":"func"},{"path":"\/documentation\/glib\/strisascii(str:)","title":"func strIsAscii(str: UnsafePointer<gchar>!) -> Bool","type":"func"},{"path":"\/documentation\/glib\/strmatchstring(searchterm:potentialhit:acceptalternates:)","title":"func strMatchString(searchTerm: UnsafePointer<gchar>!, potentialHit: UnsafePointer<gchar>!, acceptAlternates: Bool) -> Bool","type":"func"},{"path":"\/documentation\/glib\/strtoascii(str:from:)","title":"func strToAscii(str: UnsafePointer<gchar>!, from: UnsafePointer<gchar>?) -> String!","type":"func"},{"path":"\/documentation\/glib\/strtokenizeandfold(string:translitlocale:asciialternates:)","title":"func strTokenizeAndFold(string: UnsafePointer<gchar>!, translitLocale: UnsafePointer<gchar>?, asciiAlternates: UnsafeMutablePointer<UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>?>!) -> UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!","type":"func"},{"path":"\/documentation\/glib\/strcanon(string:validchars:substitutor:)","title":"func strcanon(string: UnsafeMutablePointer<gchar>!, validChars: UnsafePointer<gchar>!, substitutor: gchar) -> String!","type":"func"},{"path":"\/documentation\/glib\/strcasecmp(s1:s2:)","title":"func strcasecmp(s1: UnsafePointer<gchar>!, s2: UnsafePointer<gchar>!) -> Int","type":"func"},{"path":"\/documentation\/glib\/strchomp(string:)","title":"func strchomp(string: UnsafeMutablePointer<gchar>!) -> String!","type":"func"},{"path":"\/documentation\/glib\/strchug(string:)","title":"func strchug(string: UnsafeMutablePointer<gchar>!) -> String!","type":"func"},{"path":"\/documentation\/glib\/strcmp0(str1:str2:)","title":"func strcmp0(str1: UnsafePointer<CChar>?, str2: UnsafePointer<CChar>?) -> Int","type":"func"},{"path":"\/documentation\/glib\/strcompress(source:)","title":"func strcompress(source: UnsafePointer<gchar>!) -> String!","type":"func"},{"path":"\/documentation\/glib\/strdelimit(string:delimiters:newdelimiter:)","title":"func strdelimit(string: UnsafeMutablePointer<gchar>!, delimiters: UnsafePointer<gchar>?, newDelimiter: gchar) -> String!","type":"func"},{"path":"\/documentation\/glib\/strdown(string:)","title":"func strdown(string: UnsafeMutablePointer<gchar>!) -> String!","type":"func"},{"path":"\/documentation\/glib\/strdup(str:)","title":"func strdup(str: UnsafePointer<gchar>?) -> String!","type":"func"},{"path":"\/documentation\/glib\/strdupvprintf(format:args:)","title":"func strdupVprintf(format: UnsafePointer<gchar>!, args: CVaListPointer) -> String!","type":"func"},{"path":"\/documentation\/glib\/strdupv(strarray:)","title":"func strdupv(strArray: UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!) -> UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!","type":"func"},{"path":"\/documentation\/glib\/strerror(errnum:)","title":"func strerror(errnum: Int) -> String!","type":"func"},{"path":"\/documentation\/glib\/strescape(source:exceptions:)","title":"func strescape(source: UnsafePointer<gchar>!, exceptions: UnsafePointer<gchar>?) -> String!","type":"func"},{"path":"\/documentation\/glib\/strfreev(strarray:)","title":"func strfreev(strArray: UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!)","type":"func"},{"path":"\/documentation\/glib\/stripcontext(msgid:msgval:)","title":"func stripContext(msgid: UnsafePointer<gchar>!, msgval: UnsafePointer<gchar>!) -> String!","type":"func"},{"path":"\/documentation\/glib\/strjoinv(separator:strarray:)","title":"func strjoinv(separator: UnsafePointer<gchar>?, strArray: UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!) -> String!","type":"func"},{"path":"\/documentation\/glib\/strlcat(dest:src:destsize:)","title":"func strlcat(dest: UnsafeMutablePointer<gchar>!, src: UnsafePointer<gchar>!, destSize: Int) -> Int","type":"func"},{"path":"\/documentation\/glib\/strlcpy(dest:src:destsize:)","title":"func strlcpy(dest: UnsafeMutablePointer<gchar>!, src: UnsafePointer<gchar>!, destSize: Int) -> Int","type":"func"},{"path":"\/documentation\/glib\/strncasecmp(s1:s2:n:)","title":"func strncasecmp(s1: UnsafePointer<gchar>!, s2: UnsafePointer<gchar>!, n: Int) -> Int","type":"func"},{"path":"\/documentation\/glib\/strndup(str:n:)","title":"func strndup(str: UnsafePointer<gchar>?, n: Int) -> String!","type":"func"},{"path":"\/documentation\/glib\/strnfill(length:fillchar:)","title":"func strnfill(length: Int, fillChar: gchar) -> String!","type":"func"},{"path":"\/documentation\/glib\/strreverse(string:)","title":"func strreverse(string: UnsafeMutablePointer<gchar>!) -> String!","type":"func"},{"path":"\/documentation\/glib\/strrstr(haystack:needle:)","title":"func strrstr(haystack: UnsafePointer<gchar>!, needle: UnsafePointer<gchar>!) -> String!","type":"func"},{"path":"\/documentation\/glib\/strrstrlen(haystack:haystacklen:needle:)","title":"func strrstrLen(haystack: UnsafePointer<gchar>!, haystackLen: gssize, needle: UnsafePointer<gchar>!) -> String!","type":"func"},{"path":"\/documentation\/glib\/strsignal(signum:)","title":"func strsignal(signum: Int) -> String!","type":"func"},{"path":"\/documentation\/glib\/strsplit(string:delimiter:maxtokens:)","title":"func strsplit(string: UnsafePointer<gchar>!, delimiter: UnsafePointer<gchar>!, maxTokens: Int) -> UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!","type":"func"},{"path":"\/documentation\/glib\/strsplitset(string:delimiters:maxtokens:)","title":"func strsplitSet(string: UnsafePointer<gchar>!, delimiters: UnsafePointer<gchar>!, maxTokens: Int) -> UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!","type":"func"},{"path":"\/documentation\/glib\/strstrlen(haystack:haystacklen:needle:)","title":"func strstrLen(haystack: UnsafePointer<gchar>!, haystackLen: gssize, needle: UnsafePointer<gchar>!) -> String!","type":"func"},{"path":"\/documentation\/glib\/strtod(nptr:endptr:)","title":"func strtod(nptr: UnsafePointer<gchar>!, endptr: UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!) -> Double","type":"func"},{"path":"\/documentation\/glib\/strup(string:)","title":"func strup(string: UnsafeMutablePointer<gchar>!) -> String!","type":"func"},{"path":"\/documentation\/glib\/strvcontains(strv:str:)","title":"func strvContains(strv: UnsafePointer<UnsafePointer<gchar>?>!, str: UnsafePointer<gchar>!) -> Bool","type":"func"},{"path":"\/documentation\/glib\/strvequal(strv1:strv2:)","title":"func strvEqual(strv1: UnsafePointer<UnsafePointer<gchar>?>!, strv2: UnsafePointer<UnsafePointer<gchar>?>!) -> Bool","type":"func"},{"path":"\/documentation\/glib\/strvgettype()","title":"func strvGetType() -> GType","type":"func"},{"path":"\/documentation\/glib\/strvlength(strarray:)","title":"func strvLength(strArray: UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!) -> Int","type":"func"},{"path":"\/documentation\/glib\/test(summary:)","title":"func test(summary: UnsafePointer<CChar>!)","type":"func"},{"path":"\/documentation\/glib\/testadddatafunc(testpath:testdata:testfunc:)","title":"func testAddDataFunc(testpath: UnsafePointer<CChar>!, testData: gconstpointer?, testFunc: GTestDataFunc?)","type":"func"},{"path":"\/documentation\/glib\/testadddatafuncfull(testpath:testdata:testfunc:datafreefunc:)","title":"func testAddDataFuncFull(testpath: UnsafePointer<CChar>!, testData: gpointer?, testFunc: GTestDataFunc?, dataFreeFunc: GDestroyNotify?)","type":"func"},{"path":"\/documentation\/glib\/testaddfunc(testpath:testfunc:)","title":"func testAddFunc(testpath: UnsafePointer<CChar>!, testFunc: GTestFunc?)","type":"func"},{"path":"\/documentation\/glib\/testaddvtable(testpath:datasize:testdata:datasetup:datatest:datateardown:)","title":"func testAddVtable(testpath: UnsafePointer<CChar>!, dataSize: Int, testData: gconstpointer?, dataSetup: GTestFixtureFunc?, dataTest: GTestFixtureFunc?, dataTeardown: GTestFixtureFunc?)","type":"func"},{"path":"\/documentation\/glib\/testassertexpectedmessagesinternal(domain:file:line:func:)","title":"func testAssertExpectedMessagesInternal(domain: UnsafePointer<CChar>!, file: UnsafePointer<CChar>!, line: Int, func: UnsafePointer<CChar>!)","type":"func"},{"path":"\/documentation\/glib\/testbug(bugurisnippet:)","title":"func testBug(bugURISnippet: UnsafePointer<CChar>!)","type":"func"},{"path":"\/documentation\/glib\/testbugbase(uripattern:)","title":"func testBugBase(uriPattern: UnsafePointer<CChar>!)","type":"func"},{"path":"\/documentation\/glib\/testcreatecase(testname:datasize:testdata:datasetup:datatest:datateardown:)","title":"func testCreateCase(testName: UnsafePointer<CChar>!, dataSize: Int, testData: gconstpointer?, dataSetup: GTestFixtureFunc?, dataTest: GTestFixtureFunc?, dataTeardown: GTestFixtureFunc?) -> TestCaseRef!","type":"func"},{"path":"\/documentation\/glib\/testcreatesuite(suitename:)","title":"func testCreateSuite(suiteName: UnsafePointer<CChar>!) -> TestSuiteRef!","type":"func"},{"path":"\/documentation\/glib\/testdisablecrashreporting()","title":"func testDisableCrashReporting()","type":"func"},{"path":"\/documentation\/glib\/testexpectmessage(logdomain:loglevel:pattern:)","title":"func testExpectMessage(logDomain: UnsafePointer<gchar>?, logLevel: LogLevelFlags, pattern: UnsafePointer<gchar>!)","type":"func"},{"path":"\/documentation\/glib\/testfail()","title":"func testFail()","type":"func"},{"path":"\/documentation\/glib\/testfailed()","title":"func testFailed() -> Bool","type":"func"},{"path":"\/documentation\/glib\/testgetdir(filetype:)","title":"func testGetDir(fileType: GTestFileType) -> String!","type":"func"},{"path":"\/documentation\/glib\/testgetpath()","title":"func testGetPath() -> String!","type":"func"},{"path":"\/documentation\/glib\/testgetroot()","title":"func testGetRoot() -> TestSuiteRef!","type":"func"},{"path":"\/documentation\/glib\/testincomplete(msg:)","title":"func testIncomplete(msg: UnsafePointer<gchar>?)","type":"func"},{"path":"\/documentation\/glib\/testlogsetfatalhandler(logfunc:userdata:)","title":"func testLogSetFatalHandler(logFunc: GTestLogFatalFunc?, userData: gpointer?)","type":"func"},{"path":"\/documentation\/glib\/testlogtypename(logtype:)","title":"func testLogTypeName(logType: GTestLogType) -> String!","type":"func"},{"path":"\/documentation\/glib\/testqueuedestroy(destroyfunc:destroydata:)","title":"func testQueueDestroy(destroyFunc: GDestroyNotify?, destroyData: gpointer?)","type":"func"},{"path":"\/documentation\/glib\/testqueuefree(gfreepointer:)","title":"func testQueueFree(gfreePointer: gpointer?)","type":"func"},{"path":"\/documentation\/glib\/testranddouble()","title":"func testRandDouble() -> CDouble","type":"func"},{"path":"\/documentation\/glib\/testranddoublerange(rangestart:rangeend:)","title":"func testRandDoubleRange(rangeStart: CDouble, rangeEnd: CDouble) -> CDouble","type":"func"},{"path":"\/documentation\/glib\/testrandint()","title":"func testRandInt() -> gint32","type":"func"},{"path":"\/documentation\/glib\/testrandintrange(begin:end:)","title":"func testRandIntRange(begin: gint32, end: gint32) -> gint32","type":"func"},{"path":"\/documentation\/glib\/testrun()","title":"func testRun() -> Int","type":"func"},{"path":"\/documentation\/glib\/testrun(suite:)","title":"func testRun<TestSuiteT>(suite: TestSuiteT) -> Int","type":"func"},{"path":"\/documentation\/glib\/testsetnonfatalassertions()","title":"func testSetNonfatalAssertions()","type":"func"},{"path":"\/documentation\/glib\/testskip(msg:)","title":"func testSkip(msg: UnsafePointer<gchar>?)","type":"func"},{"path":"\/documentation\/glib\/testsubprocess()","title":"func testSubprocess() -> Bool","type":"func"},{"path":"\/documentation\/glib\/testtimerelapsed()","title":"func testTimerElapsed() -> CDouble","type":"func"},{"path":"\/documentation\/glib\/testtimerlast()","title":"func testTimerLast() -> CDouble","type":"func"},{"path":"\/documentation\/glib\/testtimerstart()","title":"func testTimerStart()","type":"func"},{"path":"\/documentation\/glib\/testtrapassertions(domain:file:line:func:assertionflags:pattern:)","title":"func testTrapAssertions(domain: UnsafePointer<CChar>!, file: UnsafePointer<CChar>!, line: Int, func: UnsafePointer<CChar>!, assertionFlags: guint64, pattern: UnsafePointer<CChar>!)","type":"func"},{"path":"\/documentation\/glib\/testtrapfork(usectimeout:testtrapflags:)","title":"func testTrapFork(usecTimeout: guint64, testTrapFlags: TestTrapFlags) -> Bool","type":"func"},{"path":"\/documentation\/glib\/testtraphaspassed()","title":"func testTrapHasPassed() -> Bool","type":"func"},{"path":"\/documentation\/glib\/testtrapreachedtimeout()","title":"func testTrapReachedTimeout() -> Bool","type":"func"},{"path":"\/documentation\/glib\/testtrapsubprocess(testpath:usectimeout:testflags:)","title":"func testTrapSubprocess(testPath: UnsafePointer<CChar>?, usecTimeout: guint64, testFlags: TestSubprocessFlags)","type":"func"},{"path":"\/documentation\/glib\/testtrapsubprocesswithenvp(testpath:envp:usectimeout:testflags:)","title":"func testTrapSubprocessWithEnvp(testPath: UnsafePointer<CChar>?, envp: UnsafePointer<UnsafePointer<CChar>?>!, usecTimeout: guint64, testFlags: TestSubprocessFlags)","type":"func"},{"path":"\/documentation\/glib\/threadcreate(func:data:joinable:)","title":"func threadCreate(func: GThreadFunc?, data: gpointer?, joinable: Bool) throws -> ThreadRef!","type":"func"},{"path":"\/documentation\/glib\/threadcreatefull(func:data:stacksize:joinable:bound:priority:)","title":"func threadCreateFull(func: GThreadFunc?, data: gpointer?, stackSize: Int, joinable: Bool, bound: Bool, priority: GThreadPriority) throws -> ThreadRef!","type":"func"},{"path":"\/documentation\/glib\/threaderrorquark()","title":"func threadErrorQuark() -> GQuark","type":"func"},{"path":"\/documentation\/glib\/threadexit(retval:)","title":"func threadExit(retval: gpointer?)","type":"func"},{"path":"\/documentation\/glib\/threadforeach(threadfunc:userdata:)","title":"func threadForeach(threadFunc: GFunc?, userData: gpointer?)","type":"func"},{"path":"\/documentation\/glib\/threadgetinitialized()","title":"func threadGetInitialized() -> Bool","type":"func"},{"path":"\/documentation\/glib\/threadinit(vtable:)","title":"func threadInit(vtable: gpointer?)","type":"func"},{"path":"\/documentation\/glib\/threadinitwitherrorcheckmutexes(vtable:)","title":"func threadInitWithErrorcheckMutexes(vtable: gpointer?)","type":"func"},{"path":"\/documentation\/glib\/threadpoolgetmaxidletime()","title":"func threadPoolGetMaxIdleTime() -> Int","type":"func"},{"path":"\/documentation\/glib\/threadpoolgetmaxunusedthreads()","title":"func threadPoolGetMaxUnusedThreads() -> Int","type":"func"},{"path":"\/documentation\/glib\/threadpoolgetnumunusedthreads()","title":"func threadPoolGetNumUnusedThreads() -> Int","type":"func"},{"path":"\/documentation\/glib\/threadpoolsetmaxidletime(interval:)","title":"func threadPoolSetMaxIdleTime(interval: Int)","type":"func"},{"path":"\/documentation\/glib\/threadpoolsetmaxunusedthreads(maxthreads:)","title":"func threadPoolSetMaxUnusedThreads(maxThreads: Int)","type":"func"},{"path":"\/documentation\/glib\/threadpoolstopunusedthreads()","title":"func threadPoolStopUnusedThreads()","type":"func"},{"path":"\/documentation\/glib\/threadself()","title":"func threadSelf() -> ThreadRef!","type":"func"},{"path":"\/documentation\/glib\/threadyield()","title":"func threadYield()","type":"func"},{"path":"\/documentation\/glib\/timevalfromiso8601(isodate:time:)","title":"func timeValFromIso8601<TimeValT>(isoDate: UnsafePointer<gchar>!, time: TimeValT) -> Bool","type":"func"},{"path":"\/documentation\/glib\/timeout(add:priority:handler:)","title":"func timeout(add: Int, priority: Int, handler: () -> Bool) -> Int","type":"func"},{"path":"\/documentation\/glib\/timeoutadd(interval:function:data:)","title":"func timeoutAdd(interval: Int, function: GSourceFunc?, data: gpointer?) -> Int","type":"func"},{"path":"\/documentation\/glib\/timeoutaddfull(priority:interval:function:data:notify:)","title":"func timeoutAddFull(priority: Int, interval: Int, function: GSourceFunc?, data: gpointer?, notify: GDestroyNotify?) -> Int","type":"func"},{"path":"\/documentation\/glib\/timeoutaddonce(interval:function:data:)","title":"func timeoutAddOnce(interval: Int, function: GSourceOnceFunc?, data: gpointer?) -> Int","type":"func"},{"path":"\/documentation\/glib\/timeoutaddseconds(interval:function:data:)","title":"func timeoutAddSeconds(interval: Int, function: GSourceFunc?, data: gpointer?) -> Int","type":"func"},{"path":"\/documentation\/glib\/timeoutaddsecondsfull(priority:interval:function:data:notify:)","title":"func timeoutAddSecondsFull(priority: Int, interval: Int, function: GSourceFunc?, data: gpointer?, notify: GDestroyNotify?) -> Int","type":"func"},{"path":"\/documentation\/glib\/timeoutaddsecondsonce(interval:function:data:)","title":"func timeoutAddSecondsOnce(interval: Int, function: GSourceOnceFunc?, data: gpointer?) -> Int","type":"func"},{"path":"\/documentation\/glib\/timeoutsourcenew(interval:)","title":"func timeoutSourceNew(interval: Int) -> SourceRef!","type":"func"},{"path":"\/documentation\/glib\/timeoutsourcenewseconds(interval:)","title":"func timeoutSourceNewSeconds(interval: Int) -> SourceRef!","type":"func"},{"path":"\/documentation\/glib\/trashstackheight(stackp:)","title":"func trashStackHeight(stackP: UnsafeMutablePointer<UnsafeMutablePointer<GTrashStack>?>!) -> Int","type":"func"},{"path":"\/documentation\/glib\/trashstackpeek(stackp:)","title":"func trashStackPeek(stackP: UnsafeMutablePointer<UnsafeMutablePointer<GTrashStack>?>!) -> gpointer?","type":"func"},{"path":"\/documentation\/glib\/trashstackpop(stackp:)","title":"func trashStackPop(stackP: UnsafeMutablePointer<UnsafeMutablePointer<GTrashStack>?>!) -> gpointer?","type":"func"},{"path":"\/documentation\/glib\/trashstackpush(stackp:datap:)","title":"func trashStackPush(stackP: UnsafeMutablePointer<UnsafeMutablePointer<GTrashStack>?>!, dataP: gpointer!)","type":"func"},{"path":"\/documentation\/glib\/trymalloc(nbytes:)","title":"func tryMalloc(nBytes: Int) -> gpointer?","type":"func"},{"path":"\/documentation\/glib\/trymalloc0(nbytes:)","title":"func tryMalloc0(nBytes: Int) -> gpointer?","type":"func"},{"path":"\/documentation\/glib\/trymalloc0n(nblocks:nblockbytes:)","title":"func tryMalloc0N(nBlocks: Int, nBlockBytes: Int) -> gpointer?","type":"func"},{"path":"\/documentation\/glib\/trymallocn(nblocks:nblockbytes:)","title":"func tryMallocN(nBlocks: Int, nBlockBytes: Int) -> gpointer?","type":"func"},{"path":"\/documentation\/glib\/tryrealloc(mem:nbytes:)","title":"func tryRealloc(mem: gpointer?, nBytes: Int) -> gpointer?","type":"func"},{"path":"\/documentation\/glib\/tryreallocn(mem:nblocks:nblockbytes:)","title":"func tryReallocN(mem: gpointer?, nBlocks: Int, nBlockBytes: Int) -> gpointer?","type":"func"},{"path":"\/documentation\/glib\/ucs4toutf16(str:len:itemsread:itemswritten:)","title":"func ucs4ToUTF16(str: UnsafePointer<gunichar>!, len: Int, itemsRead: UnsafeMutablePointer<glong>!, itemsWritten: UnsafeMutablePointer<glong>!) throws -> UnsafeMutablePointer<gunichar2>!","type":"func"},{"path":"\/documentation\/glib\/ucs4toutf8(str:len:itemsread:itemswritten:)","title":"func ucs4ToUTF8(str: UnsafePointer<gunichar>!, len: Int, itemsRead: UnsafeMutablePointer<glong>!, itemsWritten: UnsafeMutablePointer<glong>!) throws -> String!","type":"func"},{"path":"\/documentation\/glib\/unicharbreaktype(c:)","title":"func unicharBreakType(c: gunichar) -> GUnicodeBreakType","type":"func"},{"path":"\/documentation\/glib\/unicharcombiningclass(uc:)","title":"func unicharCombiningClass(uc: gunichar) -> Int","type":"func"},{"path":"\/documentation\/glib\/unicharcompose(a:b:ch:)","title":"func unicharCompose(a: gunichar, b: gunichar, ch: UnsafeMutablePointer<gunichar>!) -> Bool","type":"func"},{"path":"\/documentation\/glib\/unichardecompose(ch:a:b:)","title":"func unicharDecompose(ch: gunichar, a: UnsafeMutablePointer<gunichar>!, b: UnsafeMutablePointer<gunichar>!) -> Bool","type":"func"},{"path":"\/documentation\/glib\/unichardigitvalue(c:)","title":"func unicharDigitValue(c: gunichar) -> Int","type":"func"},{"path":"\/documentation\/glib\/unicharfullydecompose(ch:compat:result:resultlen:)","title":"func unicharFullyDecompose(ch: gunichar, compat: Bool, result: UnsafeMutablePointer<gunichar>!, resultLen: Int) -> Int","type":"func"},{"path":"\/documentation\/glib\/unichargetmirrorchar(ch:mirroredch:)","title":"func unicharGetMirrorChar(ch: gunichar, mirroredCh: UnsafeMutablePointer<gunichar>!) -> Bool","type":"func"},{"path":"\/documentation\/glib\/unichargetscript(ch:)","title":"func unicharGetScript(ch: gunichar) -> GUnicodeScript","type":"func"},{"path":"\/documentation\/glib\/unicharisalnum(c:)","title":"func unicharIsalnum(c: gunichar) -> Bool","type":"func"},{"path":"\/documentation\/glib\/unicharisalpha(c:)","title":"func unicharIsalpha(c: gunichar) -> Bool","type":"func"},{"path":"\/documentation\/glib\/unichariscntrl(c:)","title":"func unicharIscntrl(c: gunichar) -> Bool","type":"func"},{"path":"\/documentation\/glib\/unicharisdefined(c:)","title":"func unicharIsdefined(c: gunichar) -> Bool","type":"func"},{"path":"\/documentation\/glib\/unicharisdigit(c:)","title":"func unicharIsdigit(c: gunichar) -> Bool","type":"func"},{"path":"\/documentation\/glib\/unicharisgraph(c:)","title":"func unicharIsgraph(c: gunichar) -> Bool","type":"func"},{"path":"\/documentation\/glib\/unicharislower(c:)","title":"func unicharIslower(c: gunichar) -> Bool","type":"func"},{"path":"\/documentation\/glib\/unicharismark(c:)","title":"func unicharIsmark(c: gunichar) -> Bool","type":"func"},{"path":"\/documentation\/glib\/unicharisprint(c:)","title":"func unicharIsprint(c: gunichar) -> Bool","type":"func"},{"path":"\/documentation\/glib\/unicharispunct(c:)","title":"func unicharIspunct(c: gunichar) -> Bool","type":"func"},{"path":"\/documentation\/glib\/unicharisspace(c:)","title":"func unicharIsspace(c: gunichar) -> Bool","type":"func"},{"path":"\/documentation\/glib\/unicharistitle(c:)","title":"func unicharIstitle(c: gunichar) -> Bool","type":"func"},{"path":"\/documentation\/glib\/unicharisupper(c:)","title":"func unicharIsupper(c: gunichar) -> Bool","type":"func"},{"path":"\/documentation\/glib\/unichariswide(c:)","title":"func unicharIswide(c: gunichar) -> Bool","type":"func"},{"path":"\/documentation\/glib\/unichariswidecjk(c:)","title":"func unicharIswideCjk(c: gunichar) -> Bool","type":"func"},{"path":"\/documentation\/glib\/unicharisxdigit(c:)","title":"func unicharIsxdigit(c: gunichar) -> Bool","type":"func"},{"path":"\/documentation\/glib\/unichariszerowidth(c:)","title":"func unicharIszerowidth(c: gunichar) -> Bool","type":"func"},{"path":"\/documentation\/glib\/unichartoutf8(c:outbuf:)","title":"func unicharToUTF8(c: gunichar, outbuf: UnsafeMutablePointer<gchar>!) -> Int","type":"func"},{"path":"\/documentation\/glib\/unichartolower(c:)","title":"func unicharTolower(c: gunichar) -> gunichar","type":"func"},{"path":"\/documentation\/glib\/unichartotitle(c:)","title":"func unicharTotitle(c: gunichar) -> gunichar","type":"func"},{"path":"\/documentation\/glib\/unichartoupper(c:)","title":"func unicharToupper(c: gunichar) -> gunichar","type":"func"},{"path":"\/documentation\/glib\/unichartype(c:)","title":"func unicharType(c: gunichar) -> GUnicodeType","type":"func"},{"path":"\/documentation\/glib\/unicharvalidate(ch:)","title":"func unicharValidate(ch: gunichar) -> Bool","type":"func"},{"path":"\/documentation\/glib\/unicharxdigitvalue(c:)","title":"func unicharXdigitValue(c: gunichar) -> Int","type":"func"},{"path":"\/documentation\/glib\/unicodecanonicaldecomposition(ch:resultlen:)","title":"func unicodeCanonicalDecomposition(ch: gunichar, resultLen: UnsafeMutablePointer<gsize>!) -> UnsafeMutablePointer<gunichar>!","type":"func"},{"path":"\/documentation\/glib\/unicodecanonicalordering(string:len:)","title":"func unicodeCanonicalOrdering(string: UnsafeMutablePointer<gunichar>!, len: Int)","type":"func"},{"path":"\/documentation\/glib\/unicodescriptfrom(iso15924:)","title":"func unicodeScriptFrom(iso15924: guint32) -> GUnicodeScript","type":"func"},{"path":"\/documentation\/glib\/unicodescripttoiso15924(script:)","title":"func unicodeScriptToIso15924(script: GUnicodeScript) -> guint32","type":"func"},{"path":"\/documentation\/glib\/unixerrorquark()","title":"func unixErrorQuark() -> GQuark","type":"func"},{"path":"\/documentation\/glib\/unixfdadd(fd:condition:function:userdata:)","title":"func unixFdAdd(fd: Int, condition: IOCondition, function: GUnixFDSourceFunc?, userData: gpointer?) -> Int","type":"func"},{"path":"\/documentation\/glib\/unixfdaddfull(priority:fd:condition:function:userdata:notify:)","title":"func unixFdAddFull(priority: Int, fd: Int, condition: IOCondition, function: GUnixFDSourceFunc?, userData: gpointer?, notify: GDestroyNotify?) -> Int","type":"func"},{"path":"\/documentation\/glib\/unixfdsourcenew(fd:condition:)","title":"func unixFdSourceNew(fd: Int, condition: IOCondition) -> SourceRef!","type":"func"},{"path":"\/documentation\/glib\/unixgetpasswdentry(username:)","title":"func unixGetPasswdEntry(userName: UnsafePointer<gchar>!) throws -> UnsafeMutablePointer<passwd>?","type":"func"},{"path":"\/documentation\/glib\/unixopenpipe(fds:flags:)","title":"func unixOpenPipe(fds: UnsafeMutablePointer<gint>!, flags: Int) throws -> Bool","type":"func"},{"path":"\/documentation\/glib\/unixsetfdnonblocking(fd:nonblock:)","title":"func unixSetFdNonblocking(fd: Int, nonblock: Bool) throws -> Bool","type":"func"},{"path":"\/documentation\/glib\/unixsignaladd(signum:handler:userdata:)","title":"func unixSignalAdd(signum: Int, handler: GSourceFunc?, userData: gpointer?) -> Int","type":"func"},{"path":"\/documentation\/glib\/unixsignaladdfull(priority:signum:handler:userdata:notify:)","title":"func unixSignalAddFull(priority: Int, signum: Int, handler: GSourceFunc?, userData: gpointer?, notify: GDestroyNotify?) -> Int","type":"func"},{"path":"\/documentation\/glib\/unixsignalsourcenew(signum:)","title":"func unixSignalSourceNew(signum: Int) -> SourceRef!","type":"func"},{"path":"\/documentation\/glib\/unlink(filename:)","title":"func unlink(filename: UnsafePointer<gchar>!) -> Int","type":"func"},{"path":"\/documentation\/glib\/unsetenv(variable:)","title":"func unsetenv(variable: UnsafePointer<gchar>!)","type":"func"},{"path":"\/documentation\/glib\/uribuild(flags:scheme:userinfo:host:port:path:query:fragment:)","title":"func uriBuild(flags: URIFlags, scheme: UnsafePointer<gchar>!, userinfo: UnsafePointer<gchar>?, host: UnsafePointer<gchar>?, port: Int, path: UnsafePointer<gchar>!, query: UnsafePointer<gchar>?, fragment: UnsafePointer<gchar>?) -> URIRef!","type":"func"},{"path":"\/documentation\/glib\/uribuildwithuser(flags:scheme:user:password:authparams:host:port:path:query:fragment:)","title":"func uriBuildWithUser(flags: URIFlags, scheme: UnsafePointer<gchar>!, user: UnsafePointer<gchar>?, password: UnsafePointer<gchar>?, authParams: UnsafePointer<gchar>?, host: UnsafePointer<gchar>?, port: Int, path: UnsafePointer<gchar>!, query: UnsafePointer<gchar>?, fragment: UnsafePointer<gchar>?) -> URIRef!","type":"func"},{"path":"\/documentation\/glib\/urierrorquark()","title":"func uriErrorQuark() -> GQuark","type":"func"},{"path":"\/documentation\/glib\/uriescapebytes(unescaped:length:reservedcharsallowed:)","title":"func uriEscapeBytes(unescaped: UnsafePointer<guint8>!, length: Int, reservedCharsAllowed: UnsafePointer<CChar>?) -> String!","type":"func"},{"path":"\/documentation\/glib\/uriescapestring(unescaped:reservedcharsallowed:allowutf8:)","title":"func uriEscapeString(unescaped: UnsafePointer<CChar>!, reservedCharsAllowed: UnsafePointer<CChar>?, allowUTF8: Bool) -> String!","type":"func"},{"path":"\/documentation\/glib\/uriisvalid(uristring:flags:)","title":"func uriIsValid(uriString: UnsafePointer<gchar>!, flags: URIFlags) throws -> Bool","type":"func"},{"path":"\/documentation\/glib\/urijoin(flags:scheme:userinfo:host:port:path:query:fragment:)","title":"func uriJoin(flags: URIFlags, scheme: UnsafePointer<gchar>?, userinfo: UnsafePointer<gchar>?, host: UnsafePointer<gchar>?, port: Int, path: UnsafePointer<gchar>!, query: UnsafePointer<gchar>?, fragment: UnsafePointer<gchar>?) -> String!","type":"func"},{"path":"\/documentation\/glib\/urijoinwithuser(flags:scheme:user:password:authparams:host:port:path:query:fragment:)","title":"func uriJoinWithUser(flags: URIFlags, scheme: UnsafePointer<gchar>?, user: UnsafePointer<gchar>?, password: UnsafePointer<gchar>?, authParams: UnsafePointer<gchar>?, host: UnsafePointer<gchar>?, port: Int, path: UnsafePointer<gchar>!, query: UnsafePointer<gchar>?, fragment: UnsafePointer<gchar>?) -> String!","type":"func"},{"path":"\/documentation\/glib\/urilistextracturis(urilist:)","title":"func uriListExtractURIs(uriList: UnsafePointer<gchar>!) -> UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!","type":"func"},{"path":"\/documentation\/glib\/uriparse(params:length:separators:flags:)","title":"func uriParse(params: UnsafePointer<gchar>!, length: gssize, separators: UnsafePointer<gchar>!, flags: URIParamsFlags) throws -> HashTableRef!","type":"func"},{"path":"\/documentation\/glib\/uriparse(uristring:flags:)","title":"func uriParse(uriString: UnsafePointer<gchar>!, flags: URIFlags) throws -> URIRef!","type":"func"},{"path":"\/documentation\/glib\/uriparsescheme(uri:)","title":"func uriParseScheme(uri: UnsafePointer<CChar>!) -> String!","type":"func"},{"path":"\/documentation\/glib\/uripeekscheme(uri:)","title":"func uriPeekScheme(uri: UnsafePointer<CChar>!) -> String!","type":"func"},{"path":"\/documentation\/glib\/uriresolverelative(baseuristring:uriref:flags:)","title":"func uriResolveRelative(baseURIString: UnsafePointer<gchar>?, uriRef: UnsafePointer<gchar>!, flags: URIFlags) throws -> String!","type":"func"},{"path":"\/documentation\/glib\/urisplit(uriref:flags:scheme:userinfo:host:port:path:query:fragment:)","title":"func uriSplit(uriRef: UnsafePointer<gchar>!, flags: URIFlags, scheme: UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>?, userinfo: UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>?, host: UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>?, port: UnsafeMutablePointer<gint>!, path: UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!, query: UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>?, fragment: UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>?) throws -> Bool","type":"func"},{"path":"\/documentation\/glib\/urisplitnetwork(uristring:flags:scheme:host:port:)","title":"func uriSplitNetwork(uriString: UnsafePointer<gchar>!, flags: URIFlags, scheme: UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>?, host: UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>?, port: UnsafeMutablePointer<gint>!) throws -> Bool","type":"func"},{"path":"\/documentation\/glib\/urisplitwithuser(uriref:flags:scheme:user:password:authparams:host:port:path:query:fragment:)","title":"func uriSplitWithUser(uriRef: UnsafePointer<gchar>!, flags: URIFlags, scheme: UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>?, user: UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>?, password: UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>?, authParams: UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>?, host: UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>?, port: UnsafeMutablePointer<gint>!, path: UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!, query: UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>?, fragment: UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>?) throws -> Bool","type":"func"},{"path":"\/documentation\/glib\/uriunescapebytes(escapedstring:length:illegalcharacters:)","title":"func uriUnescapeBytes(escapedString: UnsafePointer<CChar>!, length: gssize, illegalCharacters: UnsafePointer<CChar>?) throws -> BytesRef!","type":"func"},{"path":"\/documentation\/glib\/uriunescapesegment(escapedstring:escapedstringend:illegalcharacters:)","title":"func uriUnescapeSegment(escapedString: UnsafePointer<CChar>?, escapedStringEnd: UnsafePointer<CChar>?, illegalCharacters: UnsafePointer<CChar>?) -> String!","type":"func"},{"path":"\/documentation\/glib\/uriunescapestring(escapedstring:illegalcharacters:)","title":"func uriUnescapeString(escapedString: UnsafePointer<CChar>!, illegalCharacters: UnsafePointer<CChar>?) -> String!","type":"func"},{"path":"\/documentation\/glib\/usleep(microseconds:)","title":"func usleep(microseconds: Int)","type":"func"},{"path":"\/documentation\/glib\/utf16toucs4(str:len:itemsread:itemswritten:)","title":"func utf16ToUCS4(str: UnsafePointer<gunichar2>!, len: Int, itemsRead: UnsafeMutablePointer<glong>!, itemsWritten: UnsafeMutablePointer<glong>!) throws -> UnsafeMutablePointer<gunichar>!","type":"func"},{"path":"\/documentation\/glib\/utf16toutf8(str:len:itemsread:itemswritten:)","title":"func utf16ToUTF8(str: UnsafePointer<gunichar2>!, len: Int, itemsRead: UnsafeMutablePointer<glong>!, itemsWritten: UnsafeMutablePointer<glong>!) throws -> String!","type":"func"},{"path":"\/documentation\/glib\/utf8casefold(str:len:)","title":"func utf8Casefold(str: UnsafePointer<gchar>!, len: gssize) -> String!","type":"func"},{"path":"\/documentation\/glib\/utf8collate(str1:str2:)","title":"func utf8Collate(str1: UnsafePointer<gchar>!, str2: UnsafePointer<gchar>!) -> Int","type":"func"},{"path":"\/documentation\/glib\/utf8collatekey(str:len:)","title":"func utf8CollateKey(str: UnsafePointer<gchar>!, len: gssize) -> String!","type":"func"},{"path":"\/documentation\/glib\/utf8collatekeyforfilename(str:len:)","title":"func utf8CollateKeyForFilename(str: UnsafePointer<gchar>!, len: gssize) -> String!","type":"func"},{"path":"\/documentation\/glib\/utf8findnextchar(p:end:)","title":"func utf8FindNextChar(p: UnsafePointer<gchar>!, end: UnsafePointer<gchar>?) -> String!","type":"func"},{"path":"\/documentation\/glib\/utf8findprevchar(str:p:)","title":"func utf8FindPrevChar(str: UnsafePointer<gchar>!, p: UnsafePointer<gchar>!) -> String!","type":"func"},{"path":"\/documentation\/glib\/utf8getchar(p:)","title":"func utf8GetChar(p: UnsafePointer<gchar>!) -> gunichar","type":"func"},{"path":"\/documentation\/glib\/utf8getcharvalidated(p:maxlen:)","title":"func utf8GetCharValidated(p: UnsafePointer<gchar>!, maxLen: gssize) -> gunichar","type":"func"},{"path":"\/documentation\/glib\/utf8makevalid(str:len:)","title":"func utf8MakeValid(str: UnsafePointer<gchar>!, len: gssize) -> String!","type":"func"},{"path":"\/documentation\/glib\/utf8normalize(str:len:mode:)","title":"func utf8Normalize(str: UnsafePointer<gchar>!, len: gssize, mode: GNormalizeMode) -> String!","type":"func"},{"path":"\/documentation\/glib\/utf8offsettopointer(str:offset:)","title":"func utf8OffsetToPointer(str: UnsafePointer<gchar>!, offset: Int) -> String!","type":"func"},{"path":"\/documentation\/glib\/utf8pointertooffset(str:pos:)","title":"func utf8PointerToOffset(str: UnsafePointer<gchar>!, pos: UnsafePointer<gchar>!) -> Int","type":"func"},{"path":"\/documentation\/glib\/utf8prevchar(p:)","title":"func utf8PrevChar(p: UnsafePointer<gchar>!) -> String!","type":"func"},{"path":"\/documentation\/glib\/utf8strchr(p:len:c:)","title":"func utf8Strchr(p: UnsafePointer<gchar>!, len: gssize, c: gunichar) -> String!","type":"func"},{"path":"\/documentation\/glib\/utf8strdown(str:len:)","title":"func utf8Strdown(str: UnsafePointer<gchar>!, len: gssize) -> String!","type":"func"},{"path":"\/documentation\/glib\/utf8strlen(p:max:)","title":"func utf8Strlen(p: UnsafePointer<gchar>!, max: gssize) -> Int","type":"func"},{"path":"\/documentation\/glib\/utf8strncpy(dest:src:n:)","title":"func utf8Strncpy(dest: UnsafeMutablePointer<gchar>!, src: UnsafePointer<gchar>!, n: Int) -> String!","type":"func"},{"path":"\/documentation\/glib\/utf8strrchr(p:len:c:)","title":"func utf8Strrchr(p: UnsafePointer<gchar>!, len: gssize, c: gunichar) -> String!","type":"func"},{"path":"\/documentation\/glib\/utf8strreverse(str:len:)","title":"func utf8Strreverse(str: UnsafePointer<gchar>!, len: gssize) -> String!","type":"func"},{"path":"\/documentation\/glib\/utf8strup(str:len:)","title":"func utf8Strup(str: UnsafePointer<gchar>!, len: gssize) -> String!","type":"func"},{"path":"\/documentation\/glib\/utf8substring(str:startpos:endpos:)","title":"func utf8Substring(str: UnsafePointer<gchar>!, startPos: Int, endPos: Int) -> String!","type":"func"},{"path":"\/documentation\/glib\/utf8toucs4(str:len:itemsread:itemswritten:)","title":"func utf8ToUCS4(str: UnsafePointer<gchar>!, len: Int, itemsRead: UnsafeMutablePointer<glong>!, itemsWritten: UnsafeMutablePointer<glong>!) throws -> UnsafeMutablePointer<gunichar>!","type":"func"},{"path":"\/documentation\/glib\/utf8toucs4fast(str:len:itemswritten:)","title":"func utf8ToUCS4Fast(str: UnsafePointer<gchar>!, len: Int, itemsWritten: UnsafeMutablePointer<glong>!) -> UnsafeMutablePointer<gunichar>!","type":"func"},{"path":"\/documentation\/glib\/utf8toutf16(str:len:itemsread:itemswritten:)","title":"func utf8ToUTF16(str: UnsafePointer<gchar>!, len: Int, itemsRead: UnsafeMutablePointer<glong>!, itemsWritten: UnsafeMutablePointer<glong>!) throws -> UnsafeMutablePointer<gunichar2>!","type":"func"},{"path":"\/documentation\/glib\/utf8truncatemiddle(string:truncatelength:)","title":"func utf8TruncateMiddle(string: UnsafePointer<gchar>!, truncateLength: Int) -> String!","type":"func"},{"path":"\/documentation\/glib\/utf8validate(str:maxlen:end:)","title":"func utf8Validate(str: UnsafePointer<gchar>!, maxLen: gssize, end: UnsafeMutablePointer<UnsafePointer<gchar>?>!) -> Bool","type":"func"},{"path":"\/documentation\/glib\/utf8validatelen(str:maxlen:end:)","title":"func utf8ValidateLen(str: UnsafePointer<gchar>!, maxLen: Int, end: UnsafeMutablePointer<UnsafePointer<gchar>?>!) -> Bool","type":"func"},{"path":"\/documentation\/glib\/utime(filename:utb:)","title":"func utime(filename: UnsafePointer<gchar>!, utb: UnsafeMutablePointer<utimbuf>?) -> Int","type":"func"},{"path":"\/documentation\/glib\/uuidstringisvalid(str:)","title":"func uuidStringIsValid(str: UnsafePointer<gchar>!) -> Bool","type":"func"},{"path":"\/documentation\/glib\/uuidstringrandom()","title":"func uuidStringRandom() -> String!","type":"func"},{"path":"\/documentation\/glib\/variantgetgtype()","title":"func variantGetGtype() -> GType","type":"func"},{"path":"\/documentation\/glib\/variantisobjectpath(string:)","title":"func variantIsObjectPath(string: UnsafePointer<gchar>!) -> Bool","type":"func"},{"path":"\/documentation\/glib\/variantissignature(string:)","title":"func variantIsSignature(string: UnsafePointer<gchar>!) -> Bool","type":"func"},{"path":"\/documentation\/glib\/variantparse(type:text:limit:endptr:)-3p86p","title":"func variantParse<VariantTypeT>(type: VariantTypeT?, text: UnsafePointer<gchar>!, limit: UnsafePointer<gchar>?, endptr: UnsafeMutablePointer<UnsafePointer<gchar>?>?) throws -> VariantRef!","type":"func"},{"path":"\/documentation\/glib\/variantparse(type:text:limit:endptr:)-4ryby","title":"func variantParse(type: VariantTypeRef?, text: UnsafePointer<gchar>!, limit: UnsafePointer<gchar>?, endptr: UnsafeMutablePointer<UnsafePointer<gchar>?>?) throws -> VariantRef!","type":"func"},{"path":"\/documentation\/glib\/variantparseerrorprintcontext(error:sourcestr:)","title":"func variantParseErrorPrintContext<GLibErrorT>(error: GLibErrorT, sourceStr: UnsafePointer<gchar>!) -> String!","type":"func"},{"path":"\/documentation\/glib\/variantparseerrorquark()","title":"func variantParseErrorQuark() -> GQuark","type":"func"},{"path":"\/documentation\/glib\/variantparsergeterrorquark()","title":"func variantParserGetErrorQuark() -> GQuark","type":"func"},{"path":"\/documentation\/glib\/varianttypechecked(typestring:)","title":"func variantTypeChecked(typeString: UnsafePointer<gchar>!) -> VariantTypeRef!","type":"func"},{"path":"\/documentation\/glib\/varianttypestringgetdepth(typestring:)","title":"func variantTypeStringGetDepth(typeString: UnsafePointer<gchar>!) -> Int","type":"func"},{"path":"\/documentation\/glib\/varianttypestringisvalid(typestring:)","title":"func variantTypeStringIsValid(typeString: UnsafePointer<gchar>!) -> Bool","type":"func"},{"path":"\/documentation\/glib\/varianttypestringscan(string:limit:endptr:)","title":"func variantTypeStringScan(string: UnsafePointer<gchar>!, limit: UnsafePointer<gchar>?, endptr: UnsafeMutablePointer<UnsafePointer<gchar>?>!) -> Bool","type":"func"},{"path":"\/documentation\/glib\/vasprintf(string:format:args:)","title":"func vasprintf(string: UnsafeMutablePointer<UnsafeMutablePointer<gchar>?>!, format: UnsafePointer<gchar>!, args: CVaListPointer) -> Int","type":"func"},{"path":"\/documentation\/glib\/vfprintf(file:format:args:)","title":"func vfprintf(file: UnsafeMutablePointer<FILE>!, format: UnsafePointer<gchar>!, args: CVaListPointer) -> Int","type":"func"},{"path":"\/documentation\/glib\/vprintf(format:args:)","title":"func vprintf(format: UnsafePointer<gchar>!, args: CVaListPointer) -> Int","type":"func"},{"path":"\/documentation\/glib\/vsnprintf(string:n:format:args:)","title":"func vsnprintf(string: UnsafeMutablePointer<gchar>!, n: Int, format: UnsafePointer<gchar>!, args: CVaListPointer) -> Int","type":"func"},{"path":"\/documentation\/glib\/vsprintf(string:format:args:)","title":"func vsprintf(string: UnsafeMutablePointer<gchar>!, format: UnsafePointer<gchar>!, args: CVaListPointer) -> Int","type":"func"},{"path":"\/documentation\/glib\/warnmessage(domain:file:line:func:warnexpr:)","title":"func warnMessage(domain: UnsafePointer<CChar>?, file: UnsafePointer<CChar>!, line: Int, func: UnsafePointer<CChar>!, warnexpr: UnsafePointer<CChar>?)","type":"func"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/glib\/bookmarkfileerror","title":"BookmarkFileError","type":"typealias"},{"path":"\/documentation\/glib\/cachedestroyfunc","title":"CacheDestroyFunc","type":"typealias"},{"path":"\/documentation\/glib\/cachedupfunc","title":"CacheDupFunc","type":"typealias"},{"path":"\/documentation\/glib\/cachenewfunc","title":"CacheNewFunc","type":"typealias"},{"path":"\/documentation\/glib\/checksumtype","title":"ChecksumType","type":"typealias"},{"path":"\/documentation\/glib\/childwatchfunc","title":"ChildWatchFunc","type":"typealias"},{"path":"\/documentation\/glib\/clearhandlefunc","title":"ClearHandleFunc","type":"typealias"},{"path":"\/documentation\/glib\/comparedatafunc","title":"CompareDataFunc","type":"typealias"},{"path":"\/documentation\/glib\/comparefunc","title":"CompareFunc","type":"typealias"},{"path":"\/documentation\/glib\/completionfunc","title":"CompletionFunc","type":"typealias"},{"path":"\/documentation\/glib\/completionstrncmpfunc","title":"CompletionStrncmpFunc","type":"typealias"},{"path":"\/documentation\/glib\/converterror","title":"ConvertError","type":"typealias"},{"path":"\/documentation\/glib\/copyfunc","title":"CopyFunc","type":"typealias"},{"path":"\/documentation\/glib\/dataforeachfunc","title":"DataForeachFunc","type":"typealias"},{"path":"\/documentation\/glib\/datedmy","title":"DateDMY","type":"typealias"},{"path":"\/documentation\/glib\/dateday","title":"DateDay","type":"typealias"},{"path":"\/documentation\/glib\/datemonth","title":"DateMonth","type":"typealias"},{"path":"\/documentation\/glib\/dateweekday","title":"DateWeekday","type":"typealias"},{"path":"\/documentation\/glib\/dateyear","title":"DateYear","type":"typealias"},{"path":"\/documentation\/glib\/destroynotify","title":"DestroyNotify","type":"typealias"},{"path":"\/documentation\/glib\/duplicatefunc","title":"DuplicateFunc","type":"typealias"},{"path":"\/documentation\/glib\/equalfunc","title":"EqualFunc","type":"typealias"},{"path":"\/documentation\/glib\/equalfuncfull","title":"EqualFuncFull","type":"typealias"},{"path":"\/documentation\/glib\/errorclearfunc","title":"ErrorClearFunc","type":"typealias"},{"path":"\/documentation\/glib\/errorcopyfunc","title":"ErrorCopyFunc","type":"typealias"},{"path":"\/documentation\/glib\/errorinitfunc","title":"ErrorInitFunc","type":"typealias"},{"path":"\/documentation\/glib\/errortype","title":"ErrorType","type":"typealias"},{"path":"\/documentation\/glib\/fileerror","title":"FileError","type":"typealias"},{"path":"\/documentation\/glib\/freefunc","title":"FreeFunc","type":"typealias"},{"path":"\/documentation\/glib\/func","title":"Func","type":"typealias"},{"path":"\/documentation\/glib\/gliberrorprotocol","title":"GLibErrorProtocol","type":"typealias"},{"path":"\/documentation\/glib\/gliberrorref","title":"GLibErrorRef","type":"typealias"},{"path":"\/documentation\/glib\/hfunc","title":"HFunc","type":"typealias"},{"path":"\/documentation\/glib\/hrfunc","title":"HRFunc","type":"typealias"},{"path":"\/documentation\/glib\/hashfunc","title":"HashFunc","type":"typealias"},{"path":"\/documentation\/glib\/hookcheckfunc","title":"HookCheckFunc","type":"typealias"},{"path":"\/documentation\/glib\/hookcheckmarshaller","title":"HookCheckMarshaller","type":"typealias"},{"path":"\/documentation\/glib\/hookcomparefunc","title":"HookCompareFunc","type":"typealias"},{"path":"\/documentation\/glib\/hookfinalizefunc","title":"HookFinalizeFunc","type":"typealias"},{"path":"\/documentation\/glib\/hookfindfunc","title":"HookFindFunc","type":"typealias"},{"path":"\/documentation\/glib\/hookfunc","title":"HookFunc","type":"typealias"},{"path":"\/documentation\/glib\/hookmarshaller","title":"HookMarshaller","type":"typealias"},{"path":"\/documentation\/glib\/iochannelerror","title":"IOChannelError","type":"typealias"},{"path":"\/documentation\/glib\/ioerror","title":"IOError","type":"typealias"},{"path":"\/documentation\/glib\/iofunc","title":"IOFunc","type":"typealias"},{"path":"\/documentation\/glib\/iostatus","title":"IOStatus","type":"typealias"},{"path":"\/documentation\/glib\/keyfileerror","title":"KeyFileError","type":"typealias"},{"path":"\/documentation\/glib\/logfunc","title":"LogFunc","type":"typealias"},{"path":"\/documentation\/glib\/logwriterfunc","title":"LogWriterFunc","type":"typealias"},{"path":"\/documentation\/glib\/logwriteroutput","title":"LogWriterOutput","type":"typealias"},{"path":"\/documentation\/glib\/markuperror","title":"MarkupError","type":"typealias"},{"path":"\/documentation\/glib\/mutexlocker","title":"MutexLocker","type":"typealias"},{"path":"\/documentation\/glib\/nativesocketaddress","title":"NativeSocketAddress","type":"typealias"},{"path":"\/documentation\/glib\/nativesocketaddressclass","title":"NativeSocketAddressClass","type":"typealias"},{"path":"\/documentation\/glib\/nativesocketaddressprivate","title":"NativeSocketAddressPrivate","type":"typealias"},{"path":"\/documentation\/glib\/nodeforeachfunc","title":"NodeForeachFunc","type":"typealias"},{"path":"\/documentation\/glib\/nodetraversefunc","title":"NodeTraverseFunc","type":"typealias"},{"path":"\/documentation\/glib\/normalizemode","title":"NormalizeMode","type":"typealias"},{"path":"\/documentation\/glib\/numberparsererror","title":"NumberParserError","type":"typealias"},{"path":"\/documentation\/glib\/oncestatus","title":"OnceStatus","type":"typealias"},{"path":"\/documentation\/glib\/optionarg","title":"OptionArg","type":"typealias"},{"path":"\/documentation\/glib\/optionargfunc","title":"OptionArgFunc","type":"typealias"},{"path":"\/documentation\/glib\/optionerror","title":"OptionError","type":"typealias"},{"path":"\/documentation\/glib\/optionerrorfunc","title":"OptionErrorFunc","type":"typealias"},{"path":"\/documentation\/glib\/optionparsefunc","title":"OptionParseFunc","type":"typealias"},{"path":"\/documentation\/glib\/pid","title":"Pid","type":"typealias"},{"path":"\/documentation\/glib\/pollfunc","title":"PollFunc","type":"typealias"},{"path":"\/documentation\/glib\/printfunc","title":"PrintFunc","type":"typealias"},{"path":"\/documentation\/glib\/quark","title":"Quark","type":"typealias"},{"path":"\/documentation\/glib\/recmutexlocker","title":"RecMutexLocker","type":"typealias"},{"path":"\/documentation\/glib\/refstring","title":"RefString","type":"typealias"},{"path":"\/documentation\/glib\/regexerror","title":"RegexError","type":"typealias"},{"path":"\/documentation\/glib\/regexevalcallback","title":"RegexEvalCallback","type":"typealias"},{"path":"\/documentation\/glib\/scannermsgfunc","title":"ScannerMsgFunc","type":"typealias"},{"path":"\/documentation\/glib\/seektype","title":"SeekType","type":"typealias"},{"path":"\/documentation\/glib\/sequenceitercomparefunc","title":"SequenceIterCompareFunc","type":"typealias"},{"path":"\/documentation\/glib\/shellerror","title":"ShellError","type":"typealias"},{"path":"\/documentation\/glib\/sliceconfig","title":"SliceConfig","type":"typealias"},{"path":"\/documentation\/glib\/sourcedisposefunc","title":"SourceDisposeFunc","type":"typealias"},{"path":"\/documentation\/glib\/sourcedummymarshal","title":"SourceDummyMarshal","type":"typealias"},{"path":"\/documentation\/glib\/sourcefunc","title":"SourceFunc","type":"typealias"},{"path":"\/documentation\/glib\/sourcefuncscheckfunc","title":"SourceFuncsCheckFunc","type":"typealias"},{"path":"\/documentation\/glib\/sourcefuncsdispatchfunc","title":"SourceFuncsDispatchFunc","type":"typealias"},{"path":"\/documentation\/glib\/sourcefuncsfinalizefunc","title":"SourceFuncsFinalizeFunc","type":"typealias"},{"path":"\/documentation\/glib\/sourcefuncspreparefunc","title":"SourceFuncsPrepareFunc","type":"typealias"},{"path":"\/documentation\/glib\/sourceoncefunc","title":"SourceOnceFunc","type":"typealias"},{"path":"\/documentation\/glib\/spawnchildsetupfunc","title":"SpawnChildSetupFunc","type":"typealias"},{"path":"\/documentation\/glib\/spawnerror","title":"SpawnError","type":"typealias"},{"path":"\/documentation\/glib\/strv","title":"Strv","type":"typealias"},{"path":"\/documentation\/glib\/testdatafunc","title":"TestDataFunc","type":"typealias"},{"path":"\/documentation\/glib\/testfiletype","title":"TestFileType","type":"typealias"},{"path":"\/documentation\/glib\/testfixturefunc","title":"TestFixtureFunc","type":"typealias"},{"path":"\/documentation\/glib\/testfunc","title":"TestFunc","type":"typealias"},{"path":"\/documentation\/glib\/testlogfatalfunc","title":"TestLogFatalFunc","type":"typealias"},{"path":"\/documentation\/glib\/testlogtype","title":"TestLogType","type":"typealias"},{"path":"\/documentation\/glib\/testresult","title":"TestResult","type":"typealias"},{"path":"\/documentation\/glib\/threaderror","title":"ThreadError","type":"typealias"},{"path":"\/documentation\/glib\/threadfunc","title":"ThreadFunc","type":"typealias"},{"path":"\/documentation\/glib\/threadpriority","title":"ThreadPriority","type":"typealias"},{"path":"\/documentation\/glib\/time","title":"Time","type":"typealias"},{"path":"\/documentation\/glib\/timespan","title":"TimeSpan","type":"typealias"},{"path":"\/documentation\/glib\/timetype","title":"TimeType","type":"typealias"},{"path":"\/documentation\/glib\/tokentype","title":"TokenType","type":"typealias"},{"path":"\/documentation\/glib\/translatefunc","title":"TranslateFunc","type":"typealias"},{"path":"\/documentation\/glib\/traversefunc","title":"TraverseFunc","type":"typealias"},{"path":"\/documentation\/glib\/traversenodefunc","title":"TraverseNodeFunc","type":"typealias"},{"path":"\/documentation\/glib\/traversetype","title":"TraverseType","type":"typealias"},{"path":"\/documentation\/glib\/urierror","title":"URIError","type":"typealias"},{"path":"\/documentation\/glib\/unicodebreaktype","title":"UnicodeBreakType","type":"typealias"},{"path":"\/documentation\/glib\/unicodescript","title":"UnicodeScript","type":"typealias"},{"path":"\/documentation\/glib\/unicodetype","title":"UnicodeType","type":"typealias"},{"path":"\/documentation\/glib\/unixfdsourcefunc","title":"UnixFDSourceFunc","type":"typealias"},{"path":"\/documentation\/glib\/unixpipeend","title":"UnixPipeEnd","type":"typealias"},{"path":"\/documentation\/glib\/userdirectory","title":"UserDirectory","type":"typealias"},{"path":"\/documentation\/glib\/variantclass","title":"VariantClass","type":"typealias"},{"path":"\/documentation\/glib\/variantparseerror","title":"VariantParseError","type":"typealias"},{"path":"\/documentation\/glib\/voidfunc","title":"VoidFunc","type":"typealias"},{"title":"Extended Modules","type":"groupMarker"},{"children":[{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/cglib\/gbookmarkfileerror\/init(_:)","title":"init!<I>(I)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/cglib\/gbookmarkfileerror\/appnotregistered","title":"static let appNotRegistered: GBookmarkFileError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gbookmarkfileerror\/filenotfound","title":"static let fileNotFound: GBookmarkFileError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gbookmarkfileerror\/invaliduri","title":"static let invalidURI: GBookmarkFileError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gbookmarkfileerror\/invalidvalue","title":"static let invalidValue: GBookmarkFileError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gbookmarkfileerror\/read","title":"static let read: GBookmarkFileError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gbookmarkfileerror\/unknownencoding","title":"static let unknownEncoding: GBookmarkFileError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gbookmarkfileerror\/urinotfound","title":"static let uriNotFound: GBookmarkFileError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gbookmarkfileerror\/write","title":"static let write: GBookmarkFileError","type":"property"}],"path":"\/documentation\/glib\/cglib\/gbookmarkfileerror","title":"GBookmarkFileError","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/cglib\/gchecksumtype\/init(_:)","title":"init!<I>(I)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/cglib\/gchecksumtype\/md5","title":"static let md5: GChecksumType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gchecksumtype\/sha1","title":"static let sha1: GChecksumType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gchecksumtype\/sha256","title":"static let sha256: GChecksumType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gchecksumtype\/sha384","title":"static let sha384: GChecksumType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gchecksumtype\/sha512","title":"static let sha512: GChecksumType","type":"property"}],"path":"\/documentation\/glib\/cglib\/gchecksumtype","title":"GChecksumType","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/cglib\/gconverterror\/init(_:)","title":"init!<I>(I)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/cglib\/gconverterror\/baduri","title":"static let badURI: GConvertError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gconverterror\/embeddednul","title":"static let embeddedNul: GConvertError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gconverterror\/failed","title":"static let failed: GConvertError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gconverterror\/illegalsequence","title":"static let illegalSequence: GConvertError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gconverterror\/noconversion","title":"static let noConversion: GConvertError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gconverterror\/nomemory","title":"static let noMemory: GConvertError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gconverterror\/notabsolutepath","title":"static let notAbsolutePath: GConvertError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gconverterror\/partialinput","title":"static let partialInput: GConvertError","type":"property"}],"path":"\/documentation\/glib\/cglib\/gconverterror","title":"GConvertError","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/cglib\/gdatedmy\/init(_:)","title":"init!<I>(I)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/cglib\/gdatedmy\/day","title":"static let day: GDateDMY","type":"property"},{"path":"\/documentation\/glib\/cglib\/gdatedmy\/month","title":"static let month: GDateDMY","type":"property"},{"path":"\/documentation\/glib\/cglib\/gdatedmy\/year","title":"static let year: GDateDMY","type":"property"}],"path":"\/documentation\/glib\/cglib\/gdatedmy","title":"GDateDMY","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/cglib\/gdatemonth\/init(_:)","title":"init!<I>(I)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/cglib\/gdatemonth\/april","title":"static let april: GDateMonth","type":"property"},{"path":"\/documentation\/glib\/cglib\/gdatemonth\/august","title":"static let august: GDateMonth","type":"property"},{"path":"\/documentation\/glib\/cglib\/gdatemonth\/badmonth","title":"static let badMonth: GDateMonth","type":"property"},{"path":"\/documentation\/glib\/cglib\/gdatemonth\/december","title":"static let december: GDateMonth","type":"property"},{"path":"\/documentation\/glib\/cglib\/gdatemonth\/february","title":"static let february: GDateMonth","type":"property"},{"path":"\/documentation\/glib\/cglib\/gdatemonth\/january","title":"static let january: GDateMonth","type":"property"},{"path":"\/documentation\/glib\/cglib\/gdatemonth\/july","title":"static let july: GDateMonth","type":"property"},{"path":"\/documentation\/glib\/cglib\/gdatemonth\/june","title":"static let june: GDateMonth","type":"property"},{"path":"\/documentation\/glib\/cglib\/gdatemonth\/march","title":"static let march: GDateMonth","type":"property"},{"path":"\/documentation\/glib\/cglib\/gdatemonth\/may","title":"static let may: GDateMonth","type":"property"},{"path":"\/documentation\/glib\/cglib\/gdatemonth\/november","title":"static let november: GDateMonth","type":"property"},{"path":"\/documentation\/glib\/cglib\/gdatemonth\/october","title":"static let october: GDateMonth","type":"property"},{"path":"\/documentation\/glib\/cglib\/gdatemonth\/september","title":"static let september: GDateMonth","type":"property"}],"path":"\/documentation\/glib\/cglib\/gdatemonth","title":"GDateMonth","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/cglib\/gdateweekday\/init(_:)","title":"init!<I>(I)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/cglib\/gdateweekday\/badweekday","title":"static let badWeekday: GDateWeekday","type":"property"},{"path":"\/documentation\/glib\/cglib\/gdateweekday\/friday","title":"static let friday: GDateWeekday","type":"property"},{"path":"\/documentation\/glib\/cglib\/gdateweekday\/monday","title":"static let monday: GDateWeekday","type":"property"},{"path":"\/documentation\/glib\/cglib\/gdateweekday\/saturday","title":"static let saturday: GDateWeekday","type":"property"},{"path":"\/documentation\/glib\/cglib\/gdateweekday\/sunday","title":"static let sunday: GDateWeekday","type":"property"},{"path":"\/documentation\/glib\/cglib\/gdateweekday\/thursday","title":"static let thursday: GDateWeekday","type":"property"},{"path":"\/documentation\/glib\/cglib\/gdateweekday\/tuesday","title":"static let tuesday: GDateWeekday","type":"property"},{"path":"\/documentation\/glib\/cglib\/gdateweekday\/wednesday","title":"static let wednesday: GDateWeekday","type":"property"}],"path":"\/documentation\/glib\/cglib\/gdateweekday","title":"GDateWeekday","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/cglib\/gerrortype\/init(_:)","title":"init!<I>(I)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/cglib\/gerrortype\/digitradix","title":"static let digitRadix: GErrorType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gerrortype\/floatmalformed","title":"static let floatMalformed: GErrorType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gerrortype\/floatradix","title":"static let floatRadix: GErrorType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gerrortype\/nondigitinconst","title":"static let nonDigitInConst: GErrorType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gerrortype\/unexpectedeof","title":"static let unexpectedEOF: GErrorType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gerrortype\/unexpectedeofincomment","title":"static let unexpectedEOFInComment: GErrorType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gerrortype\/unexpectedeofinstring","title":"static let unexpectedEOFInString: GErrorType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gerrortype\/unknown","title":"static let unknown: GErrorType","type":"property"}],"path":"\/documentation\/glib\/cglib\/gerrortype","title":"GErrorType","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/cglib\/gfileerror\/init(_:)","title":"init!<I>(I)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/cglib\/gfileerror\/acces","title":"static let acces: GFileError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gfileerror\/again","title":"static let again: GFileError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gfileerror\/badf","title":"static let badf: GFileError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gfileerror\/exist","title":"static let exist: GFileError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gfileerror\/failed","title":"static let failed: GFileError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gfileerror\/fault","title":"static let fault: GFileError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gfileerror\/intr","title":"static let intr: GFileError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gfileerror\/inval","title":"static let inval: GFileError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gfileerror\/io","title":"static let io: GFileError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gfileerror\/isdir","title":"static let isdir: GFileError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gfileerror\/loop","title":"static let loop: GFileError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gfileerror\/mfile","title":"static let mfile: GFileError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gfileerror\/nametoolong","title":"static let nametoolong: GFileError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gfileerror\/nfile","title":"static let nfile: GFileError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gfileerror\/nodev","title":"static let nodev: GFileError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gfileerror\/noent","title":"static let noent: GFileError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gfileerror\/nomem","title":"static let nomem: GFileError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gfileerror\/nospc","title":"static let nospc: GFileError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gfileerror\/nosys","title":"static let nosys: GFileError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gfileerror\/notdir","title":"static let notdir: GFileError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gfileerror\/nxio","title":"static let nxio: GFileError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gfileerror\/perm","title":"static let perm: GFileError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gfileerror\/pipe","title":"static let pipe: GFileError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gfileerror\/rofs","title":"static let rofs: GFileError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gfileerror\/txtbsy","title":"static let txtbsy: GFileError","type":"property"}],"path":"\/documentation\/glib\/cglib\/gfileerror","title":"GFileError","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/cglib\/giochannelerror\/init(_:)","title":"init!<I>(I)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/cglib\/giochannelerror\/failed","title":"static let failed: GIOChannelError","type":"property"},{"path":"\/documentation\/glib\/cglib\/giochannelerror\/fbig","title":"static let fbig: GIOChannelError","type":"property"},{"path":"\/documentation\/glib\/cglib\/giochannelerror\/inval","title":"static let inval: GIOChannelError","type":"property"},{"path":"\/documentation\/glib\/cglib\/giochannelerror\/io","title":"static let io: GIOChannelError","type":"property"},{"path":"\/documentation\/glib\/cglib\/giochannelerror\/isdir","title":"static let isdir: GIOChannelError","type":"property"},{"path":"\/documentation\/glib\/cglib\/giochannelerror\/nospc","title":"static let nospc: GIOChannelError","type":"property"},{"path":"\/documentation\/glib\/cglib\/giochannelerror\/nxio","title":"static let nxio: GIOChannelError","type":"property"},{"path":"\/documentation\/glib\/cglib\/giochannelerror\/overflow","title":"static let overflow: GIOChannelError","type":"property"},{"path":"\/documentation\/glib\/cglib\/giochannelerror\/pipe","title":"static let pipe: GIOChannelError","type":"property"}],"path":"\/documentation\/glib\/cglib\/giochannelerror","title":"GIOChannelError","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/cglib\/gioerror\/init(_:)","title":"init!<I>(I)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/cglib\/gioerror\/again","title":"static let again: GIOError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gioerror\/inval","title":"static let inval: GIOError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gioerror\/none","title":"static let none: GIOError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gioerror\/unknown","title":"static let unknown: GIOError","type":"property"}],"path":"\/documentation\/glib\/cglib\/gioerror","title":"GIOError","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/cglib\/giostatus\/init(_:)","title":"init!<I>(I)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/cglib\/giostatus\/again","title":"static let again: GIOStatus","type":"property"},{"path":"\/documentation\/glib\/cglib\/giostatus\/eof","title":"static let eof: GIOStatus","type":"property"},{"path":"\/documentation\/glib\/cglib\/giostatus\/error","title":"static let error: GIOStatus","type":"property"},{"path":"\/documentation\/glib\/cglib\/giostatus\/normal","title":"static let normal: GIOStatus","type":"property"}],"path":"\/documentation\/glib\/cglib\/giostatus","title":"GIOStatus","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/cglib\/gkeyfileerror\/init(_:)","title":"init!<I>(I)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/cglib\/gkeyfileerror\/groupnotfound","title":"static let groupNotFound: GKeyFileError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gkeyfileerror\/invalidvalue","title":"static let invalidValue: GKeyFileError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gkeyfileerror\/keynotfound","title":"static let keyNotFound: GKeyFileError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gkeyfileerror\/notfound","title":"static let notFound: GKeyFileError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gkeyfileerror\/parse","title":"static let parse: GKeyFileError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gkeyfileerror\/unknownencoding","title":"static let unknownEncoding: GKeyFileError","type":"property"}],"path":"\/documentation\/glib\/cglib\/gkeyfileerror","title":"GKeyFileError","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/cglib\/glogwriteroutput\/init(_:)","title":"init!<I>(I)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/cglib\/glogwriteroutput\/handled","title":"static let handled: GLogWriterOutput","type":"property"},{"path":"\/documentation\/glib\/cglib\/glogwriteroutput\/unhandled","title":"static let unhandled: GLogWriterOutput","type":"property"}],"path":"\/documentation\/glib\/cglib\/glogwriteroutput","title":"GLogWriterOutput","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/cglib\/gmarkuperror\/init(_:)","title":"init!<I>(I)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/cglib\/gmarkuperror\/badutf8","title":"static let badUTF8: GMarkupError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gmarkuperror\/empty","title":"static let empty: GMarkupError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gmarkuperror\/invalidcontent","title":"static let invalidContent: GMarkupError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gmarkuperror\/missingattribute","title":"static let missingAttribute: GMarkupError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gmarkuperror\/parse","title":"static let parse: GMarkupError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gmarkuperror\/unknownattribute","title":"static let unknownAttribute: GMarkupError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gmarkuperror\/unknownelement","title":"static let unknownElement: GMarkupError","type":"property"}],"path":"\/documentation\/glib\/cglib\/gmarkuperror","title":"GMarkupError","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/cglib\/gnormalizemode\/init(_:)","title":"init!<I>(I)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/cglib\/gnormalizemode\/all","title":"static let all: GNormalizeMode","type":"property"},{"path":"\/documentation\/glib\/cglib\/gnormalizemode\/allcompose","title":"static let allCompose: GNormalizeMode","type":"property"},{"path":"\/documentation\/glib\/cglib\/gnormalizemode\/default","title":"static let `default`: GNormalizeMode","type":"property"},{"path":"\/documentation\/glib\/cglib\/gnormalizemode\/defaultcompose","title":"static let defaultCompose: GNormalizeMode","type":"property"},{"path":"\/documentation\/glib\/cglib\/gnormalizemode\/nfc","title":"static let nfc: GNormalizeMode","type":"property"},{"path":"\/documentation\/glib\/cglib\/gnormalizemode\/nfd","title":"static let nfd: GNormalizeMode","type":"property"},{"path":"\/documentation\/glib\/cglib\/gnormalizemode\/nfkc","title":"static let nfkc: GNormalizeMode","type":"property"},{"path":"\/documentation\/glib\/cglib\/gnormalizemode\/nfkd","title":"static let nfkd: GNormalizeMode","type":"property"}],"path":"\/documentation\/glib\/cglib\/gnormalizemode","title":"GNormalizeMode","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/cglib\/gnumberparsererror\/init(_:)","title":"init!<I>(I)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/cglib\/gnumberparsererror\/invalid","title":"static let invalid: GNumberParserError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gnumberparsererror\/outofbounds","title":"static let outOfBounds: GNumberParserError","type":"property"}],"path":"\/documentation\/glib\/cglib\/gnumberparsererror","title":"GNumberParserError","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/cglib\/goncestatus\/init(_:)","title":"init!<I>(I)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/cglib\/goncestatus\/notcalled","title":"static let notcalled: GOnceStatus","type":"property"},{"path":"\/documentation\/glib\/cglib\/goncestatus\/progress","title":"static let progress: GOnceStatus","type":"property"},{"path":"\/documentation\/glib\/cglib\/goncestatus\/ready","title":"static let ready: GOnceStatus","type":"property"}],"path":"\/documentation\/glib\/cglib\/goncestatus","title":"GOnceStatus","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/cglib\/goptionarg\/init(_:)","title":"init!<I>(I)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/cglib\/goptionarg\/callback","title":"static let callback: GOptionArg","type":"property"},{"path":"\/documentation\/glib\/cglib\/goptionarg\/double","title":"static let double: GOptionArg","type":"property"},{"path":"\/documentation\/glib\/cglib\/goptionarg\/filename","title":"static let filename: GOptionArg","type":"property"},{"path":"\/documentation\/glib\/cglib\/goptionarg\/filenamearray","title":"static let filenameArray: GOptionArg","type":"property"},{"path":"\/documentation\/glib\/cglib\/goptionarg\/int","title":"static let int: GOptionArg","type":"property"},{"path":"\/documentation\/glib\/cglib\/goptionarg\/int64","title":"static let int64: GOptionArg","type":"property"},{"path":"\/documentation\/glib\/cglib\/goptionarg\/none","title":"static let none: GOptionArg","type":"property"},{"path":"\/documentation\/glib\/cglib\/goptionarg\/string","title":"static let string: GOptionArg","type":"property"},{"path":"\/documentation\/glib\/cglib\/goptionarg\/stringarray","title":"static let stringArray: GOptionArg","type":"property"}],"path":"\/documentation\/glib\/cglib\/goptionarg","title":"GOptionArg","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/cglib\/goptionerror\/init(_:)","title":"init!<I>(I)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/cglib\/goptionerror\/badvalue","title":"static let badValue: GOptionError","type":"property"},{"path":"\/documentation\/glib\/cglib\/goptionerror\/failed","title":"static let failed: GOptionError","type":"property"},{"path":"\/documentation\/glib\/cglib\/goptionerror\/unknownoption","title":"static let unknownOption: GOptionError","type":"property"}],"path":"\/documentation\/glib\/cglib\/goptionerror","title":"GOptionError","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/cglib\/gregexerror\/init(_:)","title":"init!<I>(I)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/cglib\/gregexerror\/assertionexpected","title":"static let assertionExpected: GRegexError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gregexerror\/backtrackingcontrolverbargumentforbidden","title":"static let backtrackingControlVerbArgumentForbidden: GRegexError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gregexerror\/backtrackingcontrolverbargumentrequired","title":"static let backtrackingControlVerbArgumentRequired: GRegexError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gregexerror\/charactervaluetoolarge","title":"static let characterValueTooLarge: GRegexError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gregexerror\/compile","title":"static let compile: GRegexError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gregexerror\/definerepetion","title":"static let defineRepetion: GRegexError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gregexerror\/duplicatesubpatternname","title":"static let duplicateSubpatternName: GRegexError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gregexerror\/expressiontoolarge","title":"static let expressionTooLarge: GRegexError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gregexerror\/extrasubpatternname","title":"static let extraSubpatternName: GRegexError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gregexerror\/hexcodetoolarge","title":"static let hexCodeTooLarge: GRegexError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gregexerror\/inconsistentnewlineoptions","title":"static let inconsistentNewlineOptions: GRegexError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gregexerror\/inexistentsubpatternreference","title":"static let inexistentSubpatternReference: GRegexError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gregexerror\/infiniteloop","title":"static let infiniteLoop: GRegexError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gregexerror\/internal","title":"static let `internal`: GRegexError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gregexerror\/invalidcondition","title":"static let invalidCondition: GRegexError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gregexerror\/invalidcontrolchar","title":"static let invalidControlChar: GRegexError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gregexerror\/invaliddatacharacter","title":"static let invalidDataCharacter: GRegexError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gregexerror\/invalidescapeincharacterclass","title":"static let invalidEscapeInCharacterClass: GRegexError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gregexerror\/invalidoctalvalue","title":"static let invalidOctalValue: GRegexError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gregexerror\/invalidrelativereference","title":"static let invalidRelativeReference: GRegexError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gregexerror\/malformedcondition","title":"static let malformedCondition: GRegexError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gregexerror\/malformedproperty","title":"static let malformedProperty: GRegexError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gregexerror\/match","title":"static let match: GRegexError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gregexerror\/memoryerror","title":"static let memoryError: GRegexError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gregexerror\/missingbackreference","title":"static let missingBackReference: GRegexError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gregexerror\/missingcontrolchar","title":"static let missingControlChar: GRegexError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gregexerror\/missingdigit","title":"static let missingDigit: GRegexError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gregexerror\/missingname","title":"static let missingName: GRegexError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gregexerror\/missingsubpatternname","title":"static let missingSubpatternName: GRegexError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gregexerror\/missingsubpatternnameterminator","title":"static let missingSubpatternNameTerminator: GRegexError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gregexerror\/nametoolong","title":"static let nameTooLong: GRegexError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gregexerror\/notsupportedinclass","title":"static let notSupportedInClass: GRegexError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gregexerror\/nothingtorepeat","title":"static let nothingToRepeat: GRegexError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gregexerror\/numbertoobig","title":"static let numberTooBig: GRegexError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gregexerror\/optimize","title":"static let optimize: GRegexError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gregexerror\/posixcollatingelementsnotsupported","title":"static let posixCollatingElementsNotSupported: GRegexError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gregexerror\/posixnamedclassoutsideclass","title":"static let posixNamedClassOutsideClass: GRegexError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gregexerror\/quantifiertoobig","title":"static let quantifierTooBig: GRegexError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gregexerror\/quantifiersoutoforder","title":"static let quantifiersOutOfOrder: GRegexError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gregexerror\/rangeoutoforder","title":"static let rangeOutOfOrder: GRegexError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gregexerror\/replace","title":"static let replace: GRegexError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gregexerror\/singlebytematchinlookbehind","title":"static let singleByteMatchInLookbehind: GRegexError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gregexerror\/straybackslash","title":"static let strayBackslash: GRegexError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gregexerror\/subpatternnametoolong","title":"static let subpatternNameTooLong: GRegexError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gregexerror\/toomanybranchesindefine","title":"static let tooManyBranchesInDefine: GRegexError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gregexerror\/toomanyconditionalbranches","title":"static let tooManyConditionalBranches: GRegexError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gregexerror\/toomanyforwardreferences","title":"static let tooManyForwardReferences: GRegexError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gregexerror\/toomanysubpatterns","title":"static let tooManySubpatterns: GRegexError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gregexerror\/unknownbacktrackingcontrolverb","title":"static let unknownBacktrackingControlVerb: GRegexError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gregexerror\/unknownposixclassname","title":"static let unknownPosixClassName: GRegexError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gregexerror\/unknownproperty","title":"static let unknownProperty: GRegexError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gregexerror\/unmatchedparenthesis","title":"static let unmatchedParenthesis: GRegexError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gregexerror\/unrecognizedcharacter","title":"static let unrecognizedCharacter: GRegexError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gregexerror\/unrecognizedescape","title":"static let unrecognizedEscape: GRegexError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gregexerror\/unterminatedcharacterclass","title":"static let unterminatedCharacterClass: GRegexError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gregexerror\/unterminatedcomment","title":"static let unterminatedComment: GRegexError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gregexerror\/variablelengthlookbehind","title":"static let variableLengthLookbehind: GRegexError","type":"property"}],"path":"\/documentation\/glib\/cglib\/gregexerror","title":"GRegexError","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/cglib\/gseektype\/init(_:)","title":"init!<I>(I)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/cglib\/gseektype\/cur","title":"static let cur: GSeekType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gseektype\/end","title":"static let end: GSeekType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gseektype\/set","title":"static let set: GSeekType","type":"property"}],"path":"\/documentation\/glib\/cglib\/gseektype","title":"GSeekType","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/cglib\/gshellerror\/init(_:)","title":"init!<I>(I)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/cglib\/gshellerror\/badquoting","title":"static let badQuoting: GShellError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gshellerror\/emptystring","title":"static let emptyString: GShellError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gshellerror\/failed","title":"static let failed: GShellError","type":"property"}],"path":"\/documentation\/glib\/cglib\/gshellerror","title":"GShellError","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/cglib\/gsliceconfig\/init(_:)","title":"init!<I>(I)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/cglib\/gsliceconfig\/alwaysmalloc","title":"static let alwaysMalloc: GSliceConfig","type":"property"},{"path":"\/documentation\/glib\/cglib\/gsliceconfig\/bypassmagazines","title":"static let bypassMagazines: GSliceConfig","type":"property"},{"path":"\/documentation\/glib\/cglib\/gsliceconfig\/chunksizes","title":"static let chunkSizes: GSliceConfig","type":"property"},{"path":"\/documentation\/glib\/cglib\/gsliceconfig\/colorincrement","title":"static let colorIncrement: GSliceConfig","type":"property"},{"path":"\/documentation\/glib\/cglib\/gsliceconfig\/contentioncounter","title":"static let contentionCounter: GSliceConfig","type":"property"},{"path":"\/documentation\/glib\/cglib\/gsliceconfig\/workingsetmsecs","title":"static let workingSetMsecs: GSliceConfig","type":"property"}],"path":"\/documentation\/glib\/cglib\/gsliceconfig","title":"GSliceConfig","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/cglib\/gspawnerror\/init(_:)","title":"init!<I>(I)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/cglib\/gspawnerror\/acces","title":"static let acces: GSpawnError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gspawnerror\/chdir","title":"static let chdir: GSpawnError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gspawnerror\/failed","title":"static let failed: GSpawnError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gspawnerror\/fork","title":"static let fork: GSpawnError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gspawnerror\/inval","title":"static let inval: GSpawnError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gspawnerror\/io","title":"static let io: GSpawnError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gspawnerror\/isdir","title":"static let isdir: GSpawnError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gspawnerror\/libbad","title":"static let libbad: GSpawnError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gspawnerror\/loop","title":"static let loop: GSpawnError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gspawnerror\/mfile","title":"static let mfile: GSpawnError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gspawnerror\/nametoolong","title":"static let nametoolong: GSpawnError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gspawnerror\/nfile","title":"static let nfile: GSpawnError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gspawnerror\/noent","title":"static let noent: GSpawnError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gspawnerror\/noexec","title":"static let noexec: GSpawnError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gspawnerror\/nomem","title":"static let nomem: GSpawnError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gspawnerror\/notdir","title":"static let notdir: GSpawnError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gspawnerror\/perm","title":"static let perm: GSpawnError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gspawnerror\/read","title":"static let read: GSpawnError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gspawnerror\/toobig","title":"static let tooBig: GSpawnError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gspawnerror\/txtbusy","title":"static let txtbusy: GSpawnError","type":"property"}],"path":"\/documentation\/glib\/cglib\/gspawnerror","title":"GSpawnError","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/cglib\/gtestfiletype\/init(_:)","title":"init!<I>(I)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/cglib\/gtestfiletype\/built","title":"static let built: GTestFileType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gtestfiletype\/dist","title":"static let dist: GTestFileType","type":"property"}],"path":"\/documentation\/glib\/cglib\/gtestfiletype","title":"GTestFileType","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/cglib\/gtestlogtype\/init(_:)","title":"init!<I>(I)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/cglib\/gtestlogtype\/error","title":"static let error: GTestLogType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gtestlogtype\/listcase","title":"static let listCase: GTestLogType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gtestlogtype\/maxresult","title":"static let maxResult: GTestLogType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gtestlogtype\/message","title":"static let message: GTestLogType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gtestlogtype\/minresult","title":"static let minResult: GTestLogType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gtestlogtype\/none","title":"static let none: GTestLogType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gtestlogtype\/skipcase","title":"static let skipCase: GTestLogType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gtestlogtype\/startbinary","title":"static let startBinary: GTestLogType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gtestlogtype\/startcase","title":"static let startCase: GTestLogType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gtestlogtype\/startsuite","title":"static let startSuite: GTestLogType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gtestlogtype\/stopcase","title":"static let stopCase: GTestLogType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gtestlogtype\/stopsuite","title":"static let stopSuite: GTestLogType","type":"property"}],"path":"\/documentation\/glib\/cglib\/gtestlogtype","title":"GTestLogType","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/cglib\/gtestresult\/init(_:)","title":"init!<I>(I)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/cglib\/gtestresult\/failure","title":"static let failure: GTestResult","type":"property"},{"path":"\/documentation\/glib\/cglib\/gtestresult\/incomplete","title":"static let incomplete: GTestResult","type":"property"},{"path":"\/documentation\/glib\/cglib\/gtestresult\/skipped","title":"static let skipped: GTestResult","type":"property"},{"path":"\/documentation\/glib\/cglib\/gtestresult\/success","title":"static let success: GTestResult","type":"property"}],"path":"\/documentation\/glib\/cglib\/gtestresult","title":"GTestResult","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/cglib\/gthreaderror\/init(_:)","title":"init!<I>(I)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/cglib\/gthreaderror\/threaderroragain","title":"static let threadErrorAgain: GThreadError","type":"property"}],"path":"\/documentation\/glib\/cglib\/gthreaderror","title":"GThreadError","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/cglib\/gthreadpriority\/init(_:)","title":"init!<I>(I)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/cglib\/gthreadpriority\/high","title":"static let high: GThreadPriority","type":"property"},{"path":"\/documentation\/glib\/cglib\/gthreadpriority\/low","title":"static let low: GThreadPriority","type":"property"},{"path":"\/documentation\/glib\/cglib\/gthreadpriority\/normal","title":"static let normal: GThreadPriority","type":"property"},{"path":"\/documentation\/glib\/cglib\/gthreadpriority\/urgent","title":"static let urgent: GThreadPriority","type":"property"}],"path":"\/documentation\/glib\/cglib\/gthreadpriority","title":"GThreadPriority","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/cglib\/gtimetype\/init(_:)","title":"init!<I>(I)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/cglib\/gtimetype\/daylight","title":"static let daylight: GTimeType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gtimetype\/standard","title":"static let standard: GTimeType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gtimetype\/universal","title":"static let universal: GTimeType","type":"property"}],"path":"\/documentation\/glib\/cglib\/gtimetype","title":"GTimeType","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/cglib\/gtokentype\/init(_:)","title":"init!<I>(I)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/cglib\/gtokentype\/binary","title":"static let binary: GTokenType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gtokentype\/char","title":"static let char: GTokenType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gtokentype\/comma","title":"static let comma: GTokenType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gtokentype\/commentmulti","title":"static let commentMulti: GTokenType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gtokentype\/commentsingle","title":"static let commentSingle: GTokenType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gtokentype\/eof","title":"static let eof: GTokenType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gtokentype\/equalsign","title":"static let equalSign: GTokenType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gtokentype\/error","title":"static let error: GTokenType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gtokentype\/float","title":"static let float: GTokenType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gtokentype\/hex","title":"static let hex: GTokenType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gtokentype\/identifier","title":"static let identifier: GTokenType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gtokentype\/identifiernull","title":"static let identifierNull: GTokenType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gtokentype\/int","title":"static let int: GTokenType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gtokentype\/leftbrace","title":"static let leftBrace: GTokenType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gtokentype\/leftcurly","title":"static let leftCurly: GTokenType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gtokentype\/leftparen","title":"static let leftParen: GTokenType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gtokentype\/none","title":"static let none: GTokenType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gtokentype\/octal","title":"static let octal: GTokenType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gtokentype\/rightbrace","title":"static let rightBrace: GTokenType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gtokentype\/rightcurly","title":"static let rightCurly: GTokenType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gtokentype\/rightparen","title":"static let rightParen: GTokenType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gtokentype\/string","title":"static let string: GTokenType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gtokentype\/symbol","title":"static let symbol: GTokenType","type":"property"}],"path":"\/documentation\/glib\/cglib\/gtokentype","title":"GTokenType","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/cglib\/gtraversetype\/init(_:)","title":"init!<I>(I)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/cglib\/gtraversetype\/inorder","title":"static let inOrder: GTraverseType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gtraversetype\/levelorder","title":"static let levelOrder: GTraverseType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gtraversetype\/postorder","title":"static let postOrder: GTraverseType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gtraversetype\/preorder","title":"static let preOrder: GTraverseType","type":"property"}],"path":"\/documentation\/glib\/cglib\/gtraversetype","title":"GTraverseType","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/cglib\/gunicodebreaktype\/init(_:)","title":"init!<I>(I)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/cglib\/gunicodebreaktype\/after","title":"static let after: GUnicodeBreakType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodebreaktype\/aksara","title":"static let aksara: GUnicodeBreakType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodebreaktype\/aksaraprebase","title":"static let aksaraPreBase: GUnicodeBreakType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodebreaktype\/aksarastart","title":"static let aksaraStart: GUnicodeBreakType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodebreaktype\/alphabetic","title":"static let alphabetic: GUnicodeBreakType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodebreaktype\/ambiguous","title":"static let ambiguous: GUnicodeBreakType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodebreaktype\/before","title":"static let before: GUnicodeBreakType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodebreaktype\/beforeandafter","title":"static let beforeAndAfter: GUnicodeBreakType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodebreaktype\/carriagereturn","title":"static let carriageReturn: GUnicodeBreakType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodebreaktype\/closeparanthesis","title":"static let closeParanthesis: GUnicodeBreakType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodebreaktype\/closeparenthesis","title":"static let closeParenthesis: GUnicodeBreakType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodebreaktype\/closepunctuation","title":"static let closePunctuation: GUnicodeBreakType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodebreaktype\/combiningmark","title":"static let combiningMark: GUnicodeBreakType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodebreaktype\/complexcontext","title":"static let complexContext: GUnicodeBreakType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodebreaktype\/conditionaljapanesestarter","title":"static let conditionalJapaneseStarter: GUnicodeBreakType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodebreaktype\/contingent","title":"static let contingent: GUnicodeBreakType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodebreaktype\/emojibase","title":"static let emojiBase: GUnicodeBreakType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodebreaktype\/emojimodifier","title":"static let emojiModifier: GUnicodeBreakType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodebreaktype\/exclamation","title":"static let exclamation: GUnicodeBreakType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodebreaktype\/hangulljamo","title":"static let hangulLJamo: GUnicodeBreakType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodebreaktype\/hangullvsyllable","title":"static let hangulLvSyllable: GUnicodeBreakType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodebreaktype\/hangullvtsyllable","title":"static let hangulLvtSyllable: GUnicodeBreakType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodebreaktype\/hangultjamo","title":"static let hangulTJamo: GUnicodeBreakType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodebreaktype\/hangulvjamo","title":"static let hangulVJamo: GUnicodeBreakType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodebreaktype\/hebrewletter","title":"static let hebrewLetter: GUnicodeBreakType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodebreaktype\/hyphen","title":"static let hyphen: GUnicodeBreakType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodebreaktype\/ideographic","title":"static let ideographic: GUnicodeBreakType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodebreaktype\/infixseparator","title":"static let infixSeparator: GUnicodeBreakType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodebreaktype\/inseparable","title":"static let inseparable: GUnicodeBreakType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodebreaktype\/linefeed","title":"static let lineFeed: GUnicodeBreakType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodebreaktype\/mandatory","title":"static let mandatory: GUnicodeBreakType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodebreaktype\/nextline","title":"static let nextLine: GUnicodeBreakType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodebreaktype\/nonbreakingglue","title":"static let nonBreakingGlue: GUnicodeBreakType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodebreaktype\/nonstarter","title":"static let nonStarter: GUnicodeBreakType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodebreaktype\/numeric","title":"static let numeric: GUnicodeBreakType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodebreaktype\/openpunctuation","title":"static let openPunctuation: GUnicodeBreakType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodebreaktype\/postfix","title":"static let postfix: GUnicodeBreakType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodebreaktype\/prefix","title":"static let prefix: GUnicodeBreakType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodebreaktype\/quotation","title":"static let quotation: GUnicodeBreakType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodebreaktype\/regionalindicator","title":"static let regionalIndicator: GUnicodeBreakType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodebreaktype\/space","title":"static let space: GUnicodeBreakType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodebreaktype\/surrogate","title":"static let surrogate: GUnicodeBreakType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodebreaktype\/symbol","title":"static let symbol: GUnicodeBreakType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodebreaktype\/unknown","title":"static let unknown: GUnicodeBreakType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodebreaktype\/virama","title":"static let virama: GUnicodeBreakType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodebreaktype\/viramafinal","title":"static let viramaFinal: GUnicodeBreakType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodebreaktype\/wordjoiner","title":"static let wordJoiner: GUnicodeBreakType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodebreaktype\/zerowidthjoiner","title":"static let zeroWidthJoiner: GUnicodeBreakType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodebreaktype\/zerowidthspace","title":"static let zeroWidthSpace: GUnicodeBreakType","type":"property"}],"path":"\/documentation\/glib\/cglib\/gunicodebreaktype","title":"GUnicodeBreakType","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/init(_:)","title":"init!<I>(I)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/adlam","title":"static let adlam: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/ahom","title":"static let ahom: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/anatolianhieroglyphs","title":"static let anatolianHieroglyphs: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/arabic","title":"static let arabic: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/armenian","title":"static let armenian: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/avestan","title":"static let avestan: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/balinese","title":"static let balinese: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/bamum","title":"static let bamum: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/bassavah","title":"static let bassaVah: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/batak","title":"static let batak: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/bengali","title":"static let bengali: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/bhaiksuki","title":"static let bhaiksuki: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/bopomofo","title":"static let bopomofo: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/brahmi","title":"static let brahmi: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/braille","title":"static let braille: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/buginese","title":"static let buginese: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/buhid","title":"static let buhid: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/canadianaboriginal","title":"static let canadianAboriginal: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/carian","title":"static let carian: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/caucasianalbanian","title":"static let caucasianAlbanian: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/chakma","title":"static let chakma: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/cham","title":"static let cham: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/cherokee","title":"static let cherokee: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/chorasmian","title":"static let chorasmian: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/common","title":"static let common: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/coptic","title":"static let coptic: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/cuneiform","title":"static let cuneiform: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/cypriot","title":"static let cypriot: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/cyprominoan","title":"static let cyproMinoan: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/cyrillic","title":"static let cyrillic: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/deseret","title":"static let deseret: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/devanagari","title":"static let devanagari: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/divesakuru","title":"static let divesAkuru: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/dogra","title":"static let dogra: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/duployan","title":"static let duployan: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/egyptianhieroglyphs","title":"static let egyptianHieroglyphs: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/elbasan","title":"static let elbasan: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/elymaic","title":"static let elymaic: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/ethiopic","title":"static let ethiopic: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/georgian","title":"static let georgian: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/glagolitic","title":"static let glagolitic: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/gothic","title":"static let gothic: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/grantha","title":"static let grantha: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/greek","title":"static let greek: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/gujarati","title":"static let gujarati: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/gunjalagondi","title":"static let gunjalaGondi: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/gurmukhi","title":"static let gurmukhi: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/han","title":"static let han: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/hangul","title":"static let hangul: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/hanifirohingya","title":"static let hanifiRohingya: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/hanunoo","title":"static let hanunoo: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/hatran","title":"static let hatran: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/hebrew","title":"static let hebrew: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/hiragana","title":"static let hiragana: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/imperialaramaic","title":"static let imperialAramaic: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/inherited","title":"static let inherited: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/inscriptionalpahlavi","title":"static let inscriptionalPahlavi: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/inscriptionalparthian","title":"static let inscriptionalParthian: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/invalidcode","title":"static let invalidCode: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/javanese","title":"static let javanese: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/kaithi","title":"static let kaithi: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/kannada","title":"static let kannada: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/katakana","title":"static let katakana: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/kawi","title":"static let kawi: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/kayahli","title":"static let kayahLi: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/kharoshthi","title":"static let kharoshthi: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/khitansmallscript","title":"static let khitanSmallScript: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/khmer","title":"static let khmer: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/khojki","title":"static let khojki: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/khudawadi","title":"static let khudawadi: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/lao","title":"static let lao: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/latin","title":"static let latin: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/lepcha","title":"static let lepcha: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/limbu","title":"static let limbu: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/lineara","title":"static let linearA: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/linearb","title":"static let linearB: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/lisu","title":"static let lisu: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/lycian","title":"static let lycian: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/lydian","title":"static let lydian: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/mahajani","title":"static let mahajani: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/makasar","title":"static let makasar: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/malayalam","title":"static let malayalam: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/mandaic","title":"static let mandaic: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/manichaean","title":"static let manichaean: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/marchen","title":"static let marchen: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/masaramgondi","title":"static let masaramGondi: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/math","title":"static let math: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/medefaidrin","title":"static let medefaidrin: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/meeteimayek","title":"static let meeteiMayek: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/mendekikakui","title":"static let mendeKikakui: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/meroiticcursive","title":"static let meroiticCursive: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/meroitichieroglyphs","title":"static let meroiticHieroglyphs: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/miao","title":"static let miao: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/modi","title":"static let modi: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/mongolian","title":"static let mongolian: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/mro","title":"static let mro: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/multani","title":"static let multani: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/myanmar","title":"static let myanmar: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/nabataean","title":"static let nabataean: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/nagmundari","title":"static let nagMundari: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/nandinagari","title":"static let nandinagari: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/newtailue","title":"static let newTaiLue: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/newa","title":"static let newa: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/nko","title":"static let nko: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/nushu","title":"static let nushu: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/nyiakengpuachuehmong","title":"static let nyiakengPuachueHmong: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/ogham","title":"static let ogham: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/olchiki","title":"static let olChiki: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/oldhungarian","title":"static let oldHungarian: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/olditalic","title":"static let oldItalic: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/oldnortharabian","title":"static let oldNorthArabian: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/oldpermic","title":"static let oldPermic: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/oldpersian","title":"static let oldPersian: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/oldsogdian","title":"static let oldSogdian: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/oldsoutharabian","title":"static let oldSouthArabian: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/oldturkic","title":"static let oldTurkic: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/olduyghur","title":"static let oldUyghur: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/oriya","title":"static let oriya: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/osage","title":"static let osage: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/osmanya","title":"static let osmanya: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/pahawhhmong","title":"static let pahawhHmong: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/palmyrene","title":"static let palmyrene: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/paucinhau","title":"static let pauCinHau: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/phagspa","title":"static let phagsPa: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/phoenician","title":"static let phoenician: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/psalterpahlavi","title":"static let psalterPahlavi: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/rejang","title":"static let rejang: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/runic","title":"static let runic: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/samaritan","title":"static let samaritan: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/saurashtra","title":"static let saurashtra: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/sharada","title":"static let sharada: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/shavian","title":"static let shavian: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/siddham","title":"static let siddham: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/signwriting","title":"static let signwriting: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/sinhala","title":"static let sinhala: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/sogdian","title":"static let sogdian: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/sorasompeng","title":"static let soraSompeng: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/soyombo","title":"static let soyombo: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/sundanese","title":"static let sundanese: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/sylotinagri","title":"static let sylotiNagri: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/syriac","title":"static let syriac: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/tagalog","title":"static let tagalog: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/tagbanwa","title":"static let tagbanwa: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/taile","title":"static let taiLe: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/taitham","title":"static let taiTham: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/taiviet","title":"static let taiViet: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/takri","title":"static let takri: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/tamil","title":"static let tamil: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/tangsa","title":"static let tangsa: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/tangut","title":"static let tangut: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/telugu","title":"static let telugu: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/thaana","title":"static let thaana: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/thai","title":"static let thai: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/tibetan","title":"static let tibetan: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/tifinagh","title":"static let tifinagh: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/tirhuta","title":"static let tirhuta: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/toto","title":"static let toto: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/ugaritic","title":"static let ugaritic: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/unknown","title":"static let unknown: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/vai","title":"static let vai: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/vithkuqi","title":"static let vithkuqi: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/wancho","title":"static let wancho: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/warangciti","title":"static let warangCiti: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/yezidi","title":"static let yezidi: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/yi","title":"static let yi: GUnicodeScript","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodescript\/zanabazarsquare","title":"static let zanabazarSquare: GUnicodeScript","type":"property"}],"path":"\/documentation\/glib\/cglib\/gunicodescript","title":"GUnicodeScript","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/cglib\/gunicodetype\/init(_:)","title":"init!<I>(I)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/cglib\/gunicodetype\/closepunctuation","title":"static let closePunctuation: GUnicodeType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodetype\/connectpunctuation","title":"static let connectPunctuation: GUnicodeType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodetype\/control","title":"static let control: GUnicodeType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodetype\/currencysymbol","title":"static let currencySymbol: GUnicodeType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodetype\/dashpunctuation","title":"static let dashPunctuation: GUnicodeType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodetype\/decimalnumber","title":"static let decimalNumber: GUnicodeType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodetype\/enclosingmark","title":"static let enclosingMark: GUnicodeType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodetype\/finalpunctuation","title":"static let finalPunctuation: GUnicodeType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodetype\/format","title":"static let format: GUnicodeType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodetype\/initialpunctuation","title":"static let initialPunctuation: GUnicodeType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodetype\/letternumber","title":"static let letterNumber: GUnicodeType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodetype\/lineseparator","title":"static let lineSeparator: GUnicodeType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodetype\/lowercaseletter","title":"static let lowercaseLetter: GUnicodeType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodetype\/mathsymbol","title":"static let mathSymbol: GUnicodeType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodetype\/modifierletter","title":"static let modifierLetter: GUnicodeType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodetype\/modifiersymbol","title":"static let modifierSymbol: GUnicodeType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodetype\/nonspacingmark","title":"static let nonSpacingMark: GUnicodeType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodetype\/openpunctuation","title":"static let openPunctuation: GUnicodeType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodetype\/otherletter","title":"static let otherLetter: GUnicodeType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodetype\/othernumber","title":"static let otherNumber: GUnicodeType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodetype\/otherpunctuation","title":"static let otherPunctuation: GUnicodeType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodetype\/othersymbol","title":"static let otherSymbol: GUnicodeType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodetype\/paragraphseparator","title":"static let paragraphSeparator: GUnicodeType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodetype\/privateuse","title":"static let privateUse: GUnicodeType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodetype\/spaceseparator","title":"static let spaceSeparator: GUnicodeType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodetype\/spacingmark","title":"static let spacingMark: GUnicodeType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodetype\/surrogate","title":"static let surrogate: GUnicodeType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodetype\/titlecaseletter","title":"static let titlecaseLetter: GUnicodeType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodetype\/unassigned","title":"static let unassigned: GUnicodeType","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunicodetype\/uppercaseletter","title":"static let uppercaseLetter: GUnicodeType","type":"property"}],"path":"\/documentation\/glib\/cglib\/gunicodetype","title":"GUnicodeType","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/cglib\/gunixpipeend\/init(_:)","title":"init!<I>(I)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/cglib\/gunixpipeend\/read","title":"static let read: GUnixPipeEnd","type":"property"},{"path":"\/documentation\/glib\/cglib\/gunixpipeend\/write","title":"static let write: GUnixPipeEnd","type":"property"}],"path":"\/documentation\/glib\/cglib\/gunixpipeend","title":"GUnixPipeEnd","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/cglib\/gurierror\/init(_:)","title":"init!<I>(I)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/cglib\/gurierror\/badauthparams","title":"static let badAuthParams: GUriError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gurierror\/badfragment","title":"static let badFragment: GUriError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gurierror\/badhost","title":"static let badHost: GUriError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gurierror\/badpassword","title":"static let badPassword: GUriError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gurierror\/badpath","title":"static let badPath: GUriError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gurierror\/badport","title":"static let badPort: GUriError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gurierror\/badquery","title":"static let badQuery: GUriError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gurierror\/badscheme","title":"static let badScheme: GUriError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gurierror\/baduser","title":"static let badUser: GUriError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gurierror\/failed","title":"static let failed: GUriError","type":"property"}],"path":"\/documentation\/glib\/cglib\/gurierror","title":"GUriError","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/cglib\/guserdirectory\/init(_:)","title":"init!<I>(I)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/cglib\/guserdirectory\/directorydesktop","title":"static let directoryDesktop: GUserDirectory","type":"property"},{"path":"\/documentation\/glib\/cglib\/guserdirectory\/directorydocuments","title":"static let directoryDocuments: GUserDirectory","type":"property"},{"path":"\/documentation\/glib\/cglib\/guserdirectory\/directorydownload","title":"static let directoryDownload: GUserDirectory","type":"property"},{"path":"\/documentation\/glib\/cglib\/guserdirectory\/directorymusic","title":"static let directoryMusic: GUserDirectory","type":"property"},{"path":"\/documentation\/glib\/cglib\/guserdirectory\/directorypictures","title":"static let directoryPictures: GUserDirectory","type":"property"},{"path":"\/documentation\/glib\/cglib\/guserdirectory\/directorypublicshare","title":"static let directoryPublicShare: GUserDirectory","type":"property"},{"path":"\/documentation\/glib\/cglib\/guserdirectory\/directorytemplates","title":"static let directoryTemplates: GUserDirectory","type":"property"},{"path":"\/documentation\/glib\/cglib\/guserdirectory\/directoryvideos","title":"static let directoryVideos: GUserDirectory","type":"property"},{"path":"\/documentation\/glib\/cglib\/guserdirectory\/ndirectories","title":"static let nDirectories: GUserDirectory","type":"property"}],"path":"\/documentation\/glib\/cglib\/guserdirectory","title":"GUserDirectory","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/cglib\/gvariantclass\/init(_:)","title":"init!<I>(I)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/cglib\/gvariantclass\/array","title":"static let array: GVariantClass","type":"property"},{"path":"\/documentation\/glib\/cglib\/gvariantclass\/boolean","title":"static let boolean: GVariantClass","type":"property"},{"path":"\/documentation\/glib\/cglib\/gvariantclass\/byte","title":"static let byte: GVariantClass","type":"property"},{"path":"\/documentation\/glib\/cglib\/gvariantclass\/dictentry","title":"static let dictEntry: GVariantClass","type":"property"},{"path":"\/documentation\/glib\/cglib\/gvariantclass\/double","title":"static let double: GVariantClass","type":"property"},{"path":"\/documentation\/glib\/cglib\/gvariantclass\/handle","title":"static let handle: GVariantClass","type":"property"},{"path":"\/documentation\/glib\/cglib\/gvariantclass\/int16","title":"static let int16: GVariantClass","type":"property"},{"path":"\/documentation\/glib\/cglib\/gvariantclass\/int32","title":"static let int32: GVariantClass","type":"property"},{"path":"\/documentation\/glib\/cglib\/gvariantclass\/int64","title":"static let int64: GVariantClass","type":"property"},{"path":"\/documentation\/glib\/cglib\/gvariantclass\/maybe","title":"static let maybe: GVariantClass","type":"property"},{"path":"\/documentation\/glib\/cglib\/gvariantclass\/objectpath","title":"static let objectPath: GVariantClass","type":"property"},{"path":"\/documentation\/glib\/cglib\/gvariantclass\/signature","title":"static let signature: GVariantClass","type":"property"},{"path":"\/documentation\/glib\/cglib\/gvariantclass\/string","title":"static let string: GVariantClass","type":"property"},{"path":"\/documentation\/glib\/cglib\/gvariantclass\/tuple","title":"static let tuple: GVariantClass","type":"property"},{"path":"\/documentation\/glib\/cglib\/gvariantclass\/uint16","title":"static let uint16: GVariantClass","type":"property"},{"path":"\/documentation\/glib\/cglib\/gvariantclass\/uint32","title":"static let uint32: GVariantClass","type":"property"},{"path":"\/documentation\/glib\/cglib\/gvariantclass\/uint64","title":"static let uint64: GVariantClass","type":"property"},{"path":"\/documentation\/glib\/cglib\/gvariantclass\/variant","title":"static let variant: GVariantClass","type":"property"}],"path":"\/documentation\/glib\/cglib\/gvariantclass","title":"GVariantClass","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/glib\/cglib\/gvariantparseerror\/init(_:)","title":"init!<I>(I)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/cglib\/gvariantparseerror\/basictypeexpected","title":"static let basicTypeExpected: GVariantParseError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gvariantparseerror\/cannotinfertype","title":"static let cannotInferType: GVariantParseError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gvariantparseerror\/definitetypeexpected","title":"static let definiteTypeExpected: GVariantParseError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gvariantparseerror\/failed","title":"static let failed: GVariantParseError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gvariantparseerror\/inputnotatend","title":"static let inputNotAtEnd: GVariantParseError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gvariantparseerror\/invalidcharacter","title":"static let invalidCharacter: GVariantParseError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gvariantparseerror\/invalidformatstring","title":"static let invalidFormatString: GVariantParseError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gvariantparseerror\/invalidobjectpath","title":"static let invalidObjectPath: GVariantParseError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gvariantparseerror\/invalidsignature","title":"static let invalidSignature: GVariantParseError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gvariantparseerror\/invalidtypestring","title":"static let invalidTypeString: GVariantParseError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gvariantparseerror\/nocommontype","title":"static let noCommonType: GVariantParseError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gvariantparseerror\/numberoutofrange","title":"static let numberOutOfRange: GVariantParseError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gvariantparseerror\/numbertoobig","title":"static let numberTooBig: GVariantParseError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gvariantparseerror\/recursion","title":"static let recursion: GVariantParseError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gvariantparseerror\/typeerror","title":"static let typeError: GVariantParseError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gvariantparseerror\/unexpectedtoken","title":"static let unexpectedToken: GVariantParseError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gvariantparseerror\/unknownkeyword","title":"static let unknownKeyword: GVariantParseError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gvariantparseerror\/unterminatedstringconstant","title":"static let unterminatedStringConstant: GVariantParseError","type":"property"},{"path":"\/documentation\/glib\/cglib\/gvariantparseerror\/valueexpected","title":"static let valueExpected: GVariantParseError","type":"property"}],"path":"\/documentation\/glib\/cglib\/gvariantparseerror","title":"GVariantParseError","type":"extension"}],"path":"\/documentation\/glib\/cglib","title":"CGLib","type":"extension"},{"children":[{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/glib\/swift\/string\/g_string","title":"var g_string: StringClass","type":"property"},{"path":"\/documentation\/glib\/swift\/string\/g_string_ref","title":"var g_string_ref: StringRef","type":"property"},{"path":"\/documentation\/glib\/swift\/string\/gstring_ptr","title":"var gstring_ptr: UnsafeMutablePointer<GString>","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/glib\/swift\/string\/freeing(_:)-6fcha","title":"static func freeing(UnsafePointer<CChar>?) -> String!","type":"method"},{"path":"\/documentation\/glib\/swift\/string\/freeing(_:)-7ym8n","title":"static func freeing(UnsafePointer<CUnsignedChar>?) -> String!","type":"method"}],"path":"\/documentation\/glib\/swift\/string","title":"String","type":"extension"}],"path":"\/documentation\/glib\/swift","title":"Swift","type":"extension"}],"path":"\/documentation\/glib","title":"GLib","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":1}}