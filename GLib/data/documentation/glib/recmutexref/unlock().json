{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unlock"},{"kind":"text","text":"()"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Calling "},{"type":"codeVoice","code":"g_rec_mutex_unlock()"},{"type":"text","text":" on a recursive mutex that is not"},{"type":"text","text":" "},{"type":"text","text":"locked by the current thread leads to undefined behaviour."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/glib\/recmutexref\/unlock()"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/GLib\/documentation\/GLib\/RecMutexRef\/unlock()","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Unlocks "},{"type":"codeVoice","code":"recMutex"},{"type":"text","text":". If another thread is blocked in a"},{"type":"text","text":" "},{"type":"codeVoice","code":"g_rec_mutex_lock()"},{"type":"text","text":" call for "},{"type":"codeVoice","code":"recMutex"},{"type":"text","text":", it will become unblocked"},{"type":"text","text":" "},{"type":"text","text":"and can lock "},{"type":"codeVoice","code":"recMutex"},{"type":"text","text":" itself."}],"kind":"symbol","metadata":{"role":"symbol","title":"unlock()","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unlock"},{"kind":"text","text":"()"}],"symbolKind":"method","externalID":"s:4GLib16RecMutexProtocolPAAE6unlockyyF::SYNTHESIZED::s:4GLib11RecMutexRefV","extendedModule":"GLib","modules":[{"name":"GLib"}]},"hierarchy":{"paths":[["doc:\/\/GLib\/documentation\/GLib","doc:\/\/GLib\/documentation\/GLib\/RecMutexRef","doc:\/\/GLib\/documentation\/GLib\/RecMutexRef\/RecMutexProtocol-Implementations"]]},"references":{"doc://GLib/documentation/GLib/RecMutexRef":{"role":"symbol","title":"RecMutexRef","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RecMutexRef"}],"abstract":[{"type":"text","text":"The GRecMutex struct is an opaque data structure to represent a"},{"type":"text","text":" "},{"type":"text","text":"recursive mutex. It is similar to a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Mutex"},{"type":"text","text":" with the difference"},{"type":"text","text":" "},{"type":"text","text":"that it is possible to lock a GRecMutex multiple times in the same"},{"type":"text","text":" "},{"type":"text","text":"thread without deadlock. When doing so, care has to be taken to"},{"type":"text","text":" "},{"type":"text","text":"unlock the recursive mutex as often as it has been locked."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/RecMutexRef","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"RecMutexRef"}],"url":"\/documentation\/glib\/recmutexref"},"doc://GLib/documentation/GLib/Mutex":{"role":"symbol","title":"Mutex","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Mutex"}],"abstract":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Mutex"},{"type":"text","text":" struct is an opaque data structure to represent a mutex"},{"type":"text","text":" "},{"type":"text","text":"(mutual exclusion). It can be used to protect data against shared"},{"type":"text","text":" "},{"type":"text","text":"access."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/Mutex","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Mutex"}],"url":"\/documentation\/glib\/mutex"},"doc://GLib/documentation/GLib/RecMutexRef/RecMutexProtocol-Implementations":{"role":"collectionGroup","title":"RecMutexProtocol Implementations","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib\/RecMutexRef\/RecMutexProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/glib\/recmutexref\/recmutexprotocol-implementations"},"doc://GLib/documentation/GLib":{"role":"collection","title":"GLib","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib","kind":"symbol","type":"topic","url":"\/documentation\/glib"},"doc://GLib/documentation/GLib/RecMutexRef/unlock()":{"role":"symbol","title":"unlock()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unlock"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Unlocks "},{"type":"codeVoice","code":"recMutex"},{"type":"text","text":". If another thread is blocked in a"},{"type":"text","text":" "},{"type":"codeVoice","code":"g_rec_mutex_lock()"},{"type":"text","text":" call for "},{"type":"codeVoice","code":"recMutex"},{"type":"text","text":", it will become unblocked"},{"type":"text","text":" "},{"type":"text","text":"and can lock "},{"type":"codeVoice","code":"recMutex"},{"type":"text","text":" itself."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/RecMutexRef\/unlock()","kind":"symbol","type":"topic","url":"\/documentation\/glib\/recmutexref\/unlock()"}}}