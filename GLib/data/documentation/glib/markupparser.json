{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MarkupParser"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/MarkupParser"},{"type":"text","text":" type acts as an owner of an underlying "},{"type":"codeVoice","code":"GMarkupParser"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"It provides the methods that can operate on this data type through "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/MarkupParserProtocol"},{"type":"text","text":" conformance."},{"type":"text","text":" "},{"type":"text","text":"Use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/MarkupParser"},{"type":"text","text":" as a strong reference or owner of a "},{"type":"codeVoice","code":"GMarkupParser"},{"type":"text","text":" instance."}]},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/MarkupParserRef"},{"type":"text","text":" (instead of "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/MarkupParser"},{"type":"text","text":") for a lightweight Swift reference to an underlying "},{"type":"codeVoice","code":"GMarkupParser"},{"type":"text","text":" instance."}]}],"type":"aside","name":"Note"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/glib\/markupparser"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/GLib\/documentation\/GLib\/MarkupParserProtocol","doc:\/\/GLib\/documentation\/GLib\/PointerWrapper"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/GLib\/documentation\/GLib\/MarkupParser","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Any of the fields in "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/MarkupParser"},{"type":"text","text":" can be "},{"type":"codeVoice","code":"nil"},{"type":"text","text":", in which case they"},{"type":"text","text":" "},{"type":"text","text":"will be ignored. Except for the "},{"type":"codeVoice","code":"error"},{"type":"text","text":" function, any of these callbacks"},{"type":"text","text":" "},{"type":"text","text":"can set an error; in particular the "},{"type":"codeVoice","code":"unknownElement"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"codeVoice","code":"unknownAttribute"},{"type":"text","text":", and "},{"type":"codeVoice","code":"invalidContent"},{"type":"text","text":" "},{"type":"text","text":"errors are intended to be set from these callbacks. If you set an error"},{"type":"text","text":" "},{"type":"text","text":"from a callback, "},{"type":"codeVoice","code":"g_markup_parse_context_parse()"},{"type":"text","text":" will report that error"},{"type":"text","text":" "},{"type":"text","text":"back to its caller."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MarkupParser"}],"title":"MarkupParser","roleHeading":"Class","role":"symbol","symbolKind":"class","externalID":"s:4GLib12MarkupParserC","modules":[{"name":"GLib"}],"navigatorTitle":[{"kind":"identifier","text":"MarkupParser"}]},"hierarchy":{"paths":[["doc:\/\/GLib\/documentation\/GLib"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/GLib\/documentation\/GLib\/MarkupParser\/init(_:)-1hgu7","doc:\/\/GLib\/documentation\/GLib\/MarkupParser\/init(_:)-2xer1","doc:\/\/GLib\/documentation\/GLib\/MarkupParser\/init(_:)-5e2v3","doc:\/\/GLib\/documentation\/GLib\/MarkupParser\/init(_:)-64fyn","doc:\/\/GLib\/documentation\/GLib\/MarkupParser\/init(_:)-8drpd","doc:\/\/GLib\/documentation\/GLib\/MarkupParser\/init(cPointer:)","doc:\/\/GLib\/documentation\/GLib\/MarkupParser\/init(gconstpointer:)","doc:\/\/GLib\/documentation\/GLib\/MarkupParser\/init(gpointer:)","doc:\/\/GLib\/documentation\/GLib\/MarkupParser\/init(opaquePointer:)","doc:\/\/GLib\/documentation\/GLib\/MarkupParser\/init(raw:)-17zz","doc:\/\/GLib\/documentation\/GLib\/MarkupParser\/init(raw:)-23vmj","doc:\/\/GLib\/documentation\/GLib\/MarkupParser\/init(retaining:)","doc:\/\/GLib\/documentation\/GLib\/MarkupParser\/init(retainingCPointer:)","doc:\/\/GLib\/documentation\/GLib\/MarkupParser\/init(retainingOpaquePointer:)","doc:\/\/GLib\/documentation\/GLib\/MarkupParser\/init(retainingRaw:)-432te","doc:\/\/GLib\/documentation\/GLib\/MarkupParser\/init(retainingRaw:)-88b3"]},{"title":"Instance Properties","identifiers":["doc:\/\/GLib\/documentation\/GLib\/MarkupParser\/ptr"]}],"references":{"doc://GLib/documentation/GLib/MarkupParserRef":{"role":"symbol","title":"MarkupParserRef","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MarkupParserRef"}],"abstract":[{"type":"text","text":"Any of the fields in "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/MarkupParser"},{"type":"text","text":" can be "},{"type":"codeVoice","code":"nil"},{"type":"text","text":", in which case they"},{"type":"text","text":" "},{"type":"text","text":"will be ignored. Except for the "},{"type":"codeVoice","code":"error"},{"type":"text","text":" function, any of these callbacks"},{"type":"text","text":" "},{"type":"text","text":"can set an error; in particular the "},{"type":"codeVoice","code":"unknownElement"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"codeVoice","code":"unknownAttribute"},{"type":"text","text":", and "},{"type":"codeVoice","code":"invalidContent"},{"type":"text","text":" "},{"type":"text","text":"errors are intended to be set from these callbacks. If you set an error"},{"type":"text","text":" "},{"type":"text","text":"from a callback, "},{"type":"codeVoice","code":"g_markup_parse_context_parse()"},{"type":"text","text":" will report that error"},{"type":"text","text":" "},{"type":"text","text":"back to its caller."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/MarkupParserRef","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MarkupParserRef"}],"url":"\/documentation\/glib\/markupparserref"},"doc://GLib/documentation/GLib/MarkupParser/init(cPointer:)":{"role":"symbol","title":"init(cPointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"cPointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Unsafe typed initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/MarkupParserProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/MarkupParser\/init(cPointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/markupparser\/init(cpointer:)"},"doc://GLib/documentation/GLib/MarkupParser/init(_:)-8drpd":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GMarkupParser"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from a constant pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type."},{"type":"text","text":" "},{"type":"text","text":"This creates an instance without performing an unbalanced retain"},{"type":"text","text":" "},{"type":"text","text":"i.e., ownership is transferred to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/MarkupParser"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/MarkupParser\/init(_:)-8drpd","kind":"symbol","type":"topic","url":"\/documentation\/glib\/markupparser\/init(_:)-8drpd"},"doc://GLib/documentation/GLib/MarkupParser/init(raw:)-17zz":{"role":"symbol","title":"init(raw:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"raw"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutableRawPointer","preciseIdentifier":"s:Sv"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/MarkupParserProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/MarkupParser\/init(raw:)-17zz","kind":"symbol","type":"topic","url":"\/documentation\/glib\/markupparser\/init(raw:)-17zz"},"doc://GLib/documentation/GLib/MarkupParser/init(_:)-2xer1":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GMarkupParser"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Optional initialiser from a constant pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type."},{"type":"text","text":" "},{"type":"text","text":"This creates an instance without performing an unbalanced retain"},{"type":"text","text":" "},{"type":"text","text":"i.e., ownership is transferred to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/MarkupParser"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/MarkupParser\/init(_:)-2xer1","kind":"symbol","type":"topic","url":"\/documentation\/glib\/markupparser\/init(_:)-2xer1"},"doc://GLib/documentation/GLib/MarkupParser/ptr":{"role":"symbol","title":"ptr","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"ptr"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutableRawPointer","preciseIdentifier":"s:Sv"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Untyped pointer to the underlying "},{"type":"codeVoice","code":"GMarkupParser"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"For type-safe access, use the generated, typed pointer "},{"type":"codeVoice","code":"MarkupParserProtocol\/_ptr"},{"type":"text","text":" property instead."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/MarkupParser\/ptr","kind":"symbol","type":"topic","url":"\/documentation\/glib\/markupparser\/ptr"},"doc://GLib/documentation/GLib/MarkupParser/init(retainingCPointer:)":{"role":"symbol","title":"init(retainingCPointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"retainingCPointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Unsafe typed, retaining initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/MarkupParserProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/MarkupParser\/init(retainingCPointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/markupparser\/init(retainingcpointer:)"},"doc://GLib/documentation/GLib/MarkupParser":{"role":"symbol","title":"MarkupParser","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MarkupParser"}],"abstract":[{"type":"text","text":"Any of the fields in "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/MarkupParser"},{"type":"text","text":" can be "},{"type":"codeVoice","code":"nil"},{"type":"text","text":", in which case they"},{"type":"text","text":" "},{"type":"text","text":"will be ignored. Except for the "},{"type":"codeVoice","code":"error"},{"type":"text","text":" function, any of these callbacks"},{"type":"text","text":" "},{"type":"text","text":"can set an error; in particular the "},{"type":"codeVoice","code":"unknownElement"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"codeVoice","code":"unknownAttribute"},{"type":"text","text":", and "},{"type":"codeVoice","code":"invalidContent"},{"type":"text","text":" "},{"type":"text","text":"errors are intended to be set from these callbacks. If you set an error"},{"type":"text","text":" "},{"type":"text","text":"from a callback, "},{"type":"codeVoice","code":"g_markup_parse_context_parse()"},{"type":"text","text":" will report that error"},{"type":"text","text":" "},{"type":"text","text":"back to its caller."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/MarkupParser","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MarkupParser"}],"url":"\/documentation\/glib\/markupparser"},"doc://GLib/documentation/GLib/MarkupParser/init(gpointer:)":{"role":"symbol","title":"init(gpointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"externalParam","text":"gpointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Optional initialiser from a non-mutating "},{"type":"codeVoice","code":"gpointer"},{"type":"text","text":" to"},{"type":"text","text":" "},{"type":"text","text":"the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type."},{"type":"text","text":" "},{"type":"text","text":"This creates an instance without performing an unbalanced retain"},{"type":"text","text":" "},{"type":"text","text":"i.e., ownership is transferred to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/MarkupParser"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/MarkupParser\/init(gpointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/markupparser\/init(gpointer:)"},"doc://GLib/documentation/GLib/MarkupParser/init(opaquePointer:)":{"role":"symbol","title":"init(opaquePointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"opaquePointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"OpaquePointer","preciseIdentifier":"s:s13OpaquePointerV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/MarkupParserProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/MarkupParser\/init(opaquePointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/markupparser\/init(opaquepointer:)"},"doc://GLib/documentation/GLib/MarkupParser/init(_:)-5e2v3":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GMarkupParser"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Optional initialiser from the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type."},{"type":"text","text":" "},{"type":"text","text":"This creates an instance without performing an unbalanced retain"},{"type":"text","text":" "},{"type":"text","text":"i.e., ownership is transferred to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/MarkupParser"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/MarkupParser\/init(_:)-5e2v3","kind":"symbol","type":"topic","url":"\/documentation\/glib\/markupparser\/init(_:)-5e2v3"},"doc://GLib/documentation/GLib/MarkupParser/init(retaining:)":{"role":"symbol","title":"init(retaining:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"retaining"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GMarkupParser"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type."},{"type":"text","text":" "},{"type":"codeVoice","code":"GMarkupParser"},{"type":"text","text":" does not allow reference counting, so despite the name no actual retaining will occur."},{"type":"text","text":" "},{"type":"text","text":"i.e., ownership is transferred to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/MarkupParser"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/MarkupParser\/init(retaining:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/markupparser\/init(retaining:)"},"doc://GLib/documentation/GLib/MarkupParser/init(raw:)-23vmj":{"role":"symbol","title":"init(raw:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"raw"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeRawPointer","preciseIdentifier":"s:SV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/MarkupParserProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/MarkupParser\/init(raw:)-23vmj","kind":"symbol","type":"topic","url":"\/documentation\/glib\/markupparser\/init(raw:)-23vmj"},"doc://GLib/documentation/GLib/MarkupParser/init(retainingRaw:)-88b3":{"role":"symbol","title":"init(retainingRaw:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"retainingRaw"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeRawPointer","preciseIdentifier":"s:SV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped, retaining initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/MarkupParserProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/MarkupParser\/init(retainingRaw:)-88b3","kind":"symbol","type":"topic","url":"\/documentation\/glib\/markupparser\/init(retainingraw:)-88b3"},"doc://GLib/documentation/GLib/MarkupParser/init(retainingOpaquePointer:)":{"role":"symbol","title":"init(retainingOpaquePointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"retainingOpaquePointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"OpaquePointer","preciseIdentifier":"s:s13OpaquePointerV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped, retaining initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/MarkupParserProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/MarkupParser\/init(retainingOpaquePointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/markupparser\/init(retainingopaquepointer:)"},"doc://GLib/documentation/GLib/MarkupParser/init(_:)-64fyn":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Reference intialiser for a related type that implements "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/MarkupParserProtocol"},{"type":"text","text":" "},{"type":"codeVoice","code":"GMarkupParser"},{"type":"text","text":" does not allow reference counting."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/MarkupParser\/init(_:)-64fyn","kind":"symbol","type":"topic","url":"\/documentation\/glib\/markupparser\/init(_:)-64fyn"},"doc://GLib/documentation/GLib/MarkupParser/init(gconstpointer:)":{"role":"symbol","title":"init(gconstpointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"externalParam","text":"gconstpointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gconstpointer","preciseIdentifier":"c:@T@gconstpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Optional initialiser from a non-mutating "},{"type":"codeVoice","code":"gconstpointer"},{"type":"text","text":" to"},{"type":"text","text":" "},{"type":"text","text":"the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type."},{"type":"text","text":" "},{"type":"text","text":"This creates an instance without performing an unbalanced retain"},{"type":"text","text":" "},{"type":"text","text":"i.e., ownership is transferred to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/MarkupParser"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/MarkupParser\/init(gconstpointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/markupparser\/init(gconstpointer:)"},"doc://GLib/documentation/GLib/MarkupParser/init(_:)-1hgu7":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GMarkupParser"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type."},{"type":"text","text":" "},{"type":"text","text":"This creates an instance without performing an unbalanced retain"},{"type":"text","text":" "},{"type":"text","text":"i.e., ownership is transferred to the "},{"type":"codeVoice","code":"MarkupParser"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/MarkupParser\/init(_:)-1hgu7","kind":"symbol","type":"topic","url":"\/documentation\/glib\/markupparser\/init(_:)-1hgu7"},"doc://GLib/documentation/GLib/MarkupParserProtocol":{"role":"symbol","title":"MarkupParserProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MarkupParserProtocol"}],"abstract":[{"type":"text","text":"Any of the fields in "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/MarkupParser"},{"type":"text","text":" can be "},{"type":"codeVoice","code":"nil"},{"type":"text","text":", in which case they"},{"type":"text","text":" "},{"type":"text","text":"will be ignored. Except for the "},{"type":"codeVoice","code":"error"},{"type":"text","text":" function, any of these callbacks"},{"type":"text","text":" "},{"type":"text","text":"can set an error; in particular the "},{"type":"codeVoice","code":"unknownElement"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"codeVoice","code":"unknownAttribute"},{"type":"text","text":", and "},{"type":"codeVoice","code":"invalidContent"},{"type":"text","text":" "},{"type":"text","text":"errors are intended to be set from these callbacks. If you set an error"},{"type":"text","text":" "},{"type":"text","text":"from a callback, "},{"type":"codeVoice","code":"g_markup_parse_context_parse()"},{"type":"text","text":" will report that error"},{"type":"text","text":" "},{"type":"text","text":"back to its caller."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/MarkupParserProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MarkupParserProtocol"}],"url":"\/documentation\/glib\/markupparserprotocol"},"doc://GLib/documentation/GLib/PointerWrapper":{"role":"symbol","title":"PointerWrapper","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"PointerWrapper"}],"abstract":[{"type":"text","text":"Protocol for GLib types that wrap pointers."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/PointerWrapper","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PointerWrapper"}],"url":"\/documentation\/glib\/pointerwrapper"},"doc://GLib/documentation/GLib":{"role":"collection","title":"GLib","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib","kind":"symbol","type":"topic","url":"\/documentation\/glib"},"doc://GLib/documentation/GLib/MarkupParser/init(retainingRaw:)-432te":{"role":"symbol","title":"init(retainingRaw:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"retainingRaw"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutableRawPointer","preciseIdentifier":"s:Sv"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped, retaining initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/MarkupParserProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/MarkupParser\/init(retainingRaw:)-432te","kind":"symbol","type":"topic","url":"\/documentation\/glib\/markupparser\/init(retainingraw:)-432te"}}}