{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"spawnCheck"},{"kind":"text","text":"("},{"kind":"externalParam","text":"waitStatus"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"g_spawn_sync()"},{"type":"text","text":" and "},{"type":"codeVoice","code":"g_child_watch_add()"},{"type":"text","text":" family of APIs return the"},{"type":"text","text":" "},{"type":"text","text":"status of subprocesses encoded in a platform-specific way."},{"type":"text","text":" "},{"type":"text","text":"On Unix, this is guaranteed to be in the same format "},{"type":"codeVoice","code":"waitpid()"},{"type":"text","text":" returns,"},{"type":"text","text":" "},{"type":"text","text":"and on Windows it is guaranteed to be the result of "},{"type":"codeVoice","code":"GetExitCodeProcess()"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Prior to the introduction of this function in GLib 2.34, interpreting"},{"type":"text","text":" "},{"type":"codeVoice","code":"waitStatus"},{"type":"text","text":" required use of platform-specific APIs, which is problematic"},{"type":"text","text":" "},{"type":"text","text":"for software using GLib as a cross-platform layer."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Additionally, many programs simply want to determine whether or not"},{"type":"text","text":" "},{"type":"text","text":"the child exited successfully, and either propagate a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/GLibError"},{"type":"text","text":" or"},{"type":"text","text":" "},{"type":"text","text":"print a message to standard error. In that common case, this function"},{"type":"text","text":" "},{"type":"text","text":"can be used. Note that the error message in "},{"type":"codeVoice","code":"error"},{"type":"text","text":" will contain"},{"type":"text","text":" "},{"type":"text","text":"human-readable information about the wait status."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"domain"},{"type":"text","text":" and "},{"type":"codeVoice","code":"code"},{"type":"text","text":" of "},{"type":"codeVoice","code":"error"},{"type":"text","text":" have special semantics in the case"},{"type":"text","text":" "},{"type":"text","text":"where the process has an “exit code”, as opposed to being killed by"},{"type":"text","text":" "},{"type":"text","text":"a signal. On Unix, this happens if "},{"type":"codeVoice","code":"WIFEXITED()"},{"type":"text","text":" would be true of"},{"type":"text","text":" "},{"type":"codeVoice","code":"waitStatus"},{"type":"text","text":". On Windows, it is always the case."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The special semantics are that the actual exit code will be the"},{"type":"text","text":" "},{"type":"text","text":"code set in "},{"type":"codeVoice","code":"error"},{"type":"text","text":", and the domain will be "},{"type":"codeVoice","code":"G_SPAWN_EXIT_ERROR"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"This allows you to differentiate between different exit codes."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If the process was terminated by some means other than an exit"},{"type":"text","text":" "},{"type":"text","text":"status (for example if it was killed by a signal), the domain will be"},{"type":"text","text":" "},{"type":"codeVoice","code":"G_SPAWN_ERROR"},{"type":"text","text":" and the code will be "},{"type":"codeVoice","code":"failed"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This function just offers convenience; you can of course also check"},{"type":"text","text":" "},{"type":"text","text":"the available platform via a macro such as "},{"type":"codeVoice","code":"G_OS_UNIX"},{"type":"text","text":", and use"},{"type":"text","text":" "},{"type":"codeVoice","code":"WIFEXITED()"},{"type":"text","text":" and "},{"type":"codeVoice","code":"WEXITSTATUS()"},{"type":"text","text":" on "},{"type":"codeVoice","code":"waitStatus"},{"type":"text","text":" directly. Do not attempt"},{"type":"text","text":" "},{"type":"text","text":"to scan or parse the error message string; it may be translated and\/or"},{"type":"text","text":" "},{"type":"text","text":"change in future versions of GLib."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Prior to version 2.70, "},{"type":"codeVoice","code":"g_spawn_check_exit_status()"},{"type":"text","text":" provides the same"},{"type":"text","text":" "},{"type":"text","text":"functionality, although under a misleading name."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/glib\/spawncheck(waitstatus:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/GLib\/documentation\/GLib\/spawnCheck(waitStatus:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Set "},{"type":"codeVoice","code":"error"},{"type":"text","text":" if "},{"type":"codeVoice","code":"waitStatus"},{"type":"text","text":" indicates the child exited abnormally"},{"type":"text","text":" "},{"type":"text","text":"(e.g. with a nonzero exit code, or via a fatal signal)."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"spawnCheck"},{"kind":"text","text":"("},{"kind":"externalParam","text":"waitStatus"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"title":"spawnCheck(waitStatus:)","roleHeading":"Function","role":"symbol","symbolKind":"func","externalID":"s:4GLib10spawnCheck10waitStatusSbSi_tKF","modules":[{"name":"GLib"}]},"hierarchy":{"paths":[["doc:\/\/GLib\/documentation\/GLib"]]},"references":{"doc://GLib/documentation/GLib":{"role":"collection","title":"GLib","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib","kind":"symbol","type":"topic","url":"\/documentation\/glib"},"doc://GLib/documentation/GLib/GLibError":{"role":"symbol","title":"GLibError","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"GLibError"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"GError"},{"type":"text","text":" structure contains information about"},{"type":"text","text":" "},{"type":"text","text":"an error that has occurred."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/GLibError","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"GLibError"}],"url":"\/documentation\/glib\/gliberror"},"doc://GLib/documentation/GLib/spawnCheck(waitStatus:)":{"role":"symbol","title":"spawnCheck(waitStatus:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"spawnCheck"},{"kind":"text","text":"("},{"kind":"externalParam","text":"waitStatus"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Set "},{"type":"codeVoice","code":"error"},{"type":"text","text":" if "},{"type":"codeVoice","code":"waitStatus"},{"type":"text","text":" indicates the child exited abnormally"},{"type":"text","text":" "},{"type":"text","text":"(e.g. with a nonzero exit code, or via a fatal signal)."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/spawnCheck(waitStatus:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/spawncheck(waitstatus:)"}}}