{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"matchFull"},{"kind":"text","text":"("},{"kind":"externalParam","text":"string"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"stringLen"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gssize","preciseIdentifier":"c:@T@gssize"},{"kind":"text","text":", "},{"kind":"externalParam","text":"startPosition"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"matchOptions"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/GLib\/documentation\/GLib\/RegexMatchFlags","preciseIdentifier":"s:4GLib15RegexMatchFlagsV","text":"RegexMatchFlags"},{"kind":"text","text":", "},{"kind":"externalParam","text":"matchInfo"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GMatchInfo"},{"kind":"text","text":">?>! = nil) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Setting "},{"type":"codeVoice","code":"startPosition"},{"type":"text","text":" differs from just passing over a shortened"},{"type":"text","text":" "},{"type":"text","text":"string and setting "},{"type":"codeVoice","code":"notbol"},{"type":"text","text":" in the case of a pattern"},{"type":"text","text":" "},{"type":"text","text":"that begins with any kind of lookbehind assertion, such as “\\b”."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Unless "},{"type":"codeVoice","code":"raw"},{"type":"text","text":" is specified in the options, "},{"type":"codeVoice","code":"string"},{"type":"text","text":" must be valid UTF-8."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"A "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/MatchInfo"},{"type":"text","text":" structure, used to get information on the match, is"},{"type":"text","text":" "},{"type":"text","text":"stored in "},{"type":"codeVoice","code":"matchInfo"},{"type":"text","text":" if not "},{"type":"codeVoice","code":"nil"},{"type":"text","text":". Note that if "},{"type":"codeVoice","code":"matchInfo"},{"type":"text","text":" is"},{"type":"text","text":" "},{"type":"text","text":"not "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" then it is created even if the function returns "},{"type":"codeVoice","code":"false"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"i.e. you must free it regardless if regular expression actually"},{"type":"text","text":" "},{"type":"text","text":"matched."}]},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"string"},{"type":"text","text":" is not copied and is used in "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/MatchInfo"},{"type":"text","text":" internally. If"},{"type":"text","text":" "},{"type":"text","text":"you use any "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/MatchInfo"},{"type":"text","text":" method (except "},{"type":"codeVoice","code":"g_match_info_free()"},{"type":"text","text":") after"},{"type":"text","text":" "},{"type":"text","text":"freeing or modifying "},{"type":"codeVoice","code":"string"},{"type":"text","text":" then the behaviour is undefined."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To retrieve all the non-overlapping matches of the pattern in"},{"type":"text","text":" "},{"type":"text","text":"string you can use "},{"type":"codeVoice","code":"g_match_info_next()"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"(C Language Example):"}]},{"type":"codeListing","syntax":"C","code":["static void","print_uppercase_words (const gchar *string)","{","  \/\/ Print all uppercase-only words.","  GRegex *regex;","  GMatchInfo *match_info;","  GError *error = NULL;","  ","  regex = g_regex_new (\"[A-Z]+\", G_REGEX_DEFAULT, G_REGEX_MATCH_DEFAULT, NULL);","  g_regex_match_full (regex, string, -1, 0, 0, &match_info, &error);","  while (g_match_info_matches (match_info))","    {","      gchar *word = g_match_info_fetch (match_info, 0);","      g_print (\"Found: %s\\n\", word);","      g_free (word);","      g_match_info_next (match_info, &error);","    }","  g_match_info_free (match_info);","  g_regex_unref (regex);","  if (error != NULL)","    {","      g_printerr (\"Error while matching: %s\\n\", error->message);","      g_error_free (error);","    }","}"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/glib\/regexprotocol\/matchfull(string:stringlen:startposition:matchoptions:matchinfo:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/GLib\/documentation\/GLib\/RegexProtocol\/matchFull(string:stringLen:startPosition:matchOptions:matchInfo:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Scans for a match in "},{"type":"codeVoice","code":"string"},{"type":"text","text":" for the pattern in "},{"type":"codeVoice","code":"regex"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"The "},{"type":"codeVoice","code":"matchOptions"},{"type":"text","text":" are combined with the match options specified"},{"type":"text","text":" "},{"type":"text","text":"when the "},{"type":"codeVoice","code":"regex"},{"type":"text","text":" structure was created, letting you have more"},{"type":"text","text":" "},{"type":"text","text":"flexibility in reusing "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Regex"},{"type":"text","text":" structures."}],"kind":"symbol","metadata":{"role":"symbol","title":"matchFull(string:stringLen:startPosition:matchOptions:matchInfo:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"matchFull"},{"kind":"text","text":"("},{"kind":"externalParam","text":"string"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"stringLen"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gssize","preciseIdentifier":"c:@T@gssize"},{"kind":"text","text":", "},{"kind":"externalParam","text":"startPosition"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"matchOptions"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"RegexMatchFlags","preciseIdentifier":"s:4GLib15RegexMatchFlagsV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"matchInfo"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GMatchInfo"},{"kind":"text","text":">?>!) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"symbolKind":"method","externalID":"s:4GLib13RegexProtocolPAAE9matchFull6string0F3Len13startPosition0D7Options0D4InfoSbSPys4Int8VGSg_S2iAA0B10MatchFlagsVSpySpySo07_GMatchK0VGSgGSgtKF","extendedModule":"GLib","modules":[{"name":"GLib"}]},"hierarchy":{"paths":[["doc:\/\/GLib\/documentation\/GLib","doc:\/\/GLib\/documentation\/GLib\/RegexProtocol"]]},"references":{"doc://GLib/documentation/GLib/MatchInfo":{"role":"symbol","title":"MatchInfo","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MatchInfo"}],"abstract":[{"type":"text","text":"A GMatchInfo is an opaque struct used to return information about"},{"type":"text","text":" "},{"type":"text","text":"matches."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/MatchInfo","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MatchInfo"}],"url":"\/documentation\/glib\/matchinfo"},"doc://GLib/documentation/GLib/RegexProtocol":{"role":"symbol","title":"RegexProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RegexProtocol"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"GRegex"},{"type":"text","text":" is the “compiled” form of a regular expression pattern."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/RegexProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"RegexProtocol"}],"url":"\/documentation\/glib\/regexprotocol"},"doc://GLib/documentation/GLib/Regex":{"role":"symbol","title":"Regex","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Regex"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"GRegex"},{"type":"text","text":" is the “compiled” form of a regular expression pattern."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/Regex","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Regex"}],"url":"\/documentation\/glib\/regex"},"doc://GLib/documentation/GLib/RegexProtocol/matchFull(string:stringLen:startPosition:matchOptions:matchInfo:)":{"role":"symbol","title":"matchFull(string:stringLen:startPosition:matchOptions:matchInfo:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"matchFull"},{"kind":"text","text":"("},{"kind":"externalParam","text":"string"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"stringLen"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gssize","preciseIdentifier":"c:@T@gssize"},{"kind":"text","text":", "},{"kind":"externalParam","text":"startPosition"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"matchOptions"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"RegexMatchFlags","preciseIdentifier":"s:4GLib15RegexMatchFlagsV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"matchInfo"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GMatchInfo"},{"kind":"text","text":">?>!) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Scans for a match in "},{"type":"codeVoice","code":"string"},{"type":"text","text":" for the pattern in "},{"type":"codeVoice","code":"regex"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"The "},{"type":"codeVoice","code":"matchOptions"},{"type":"text","text":" are combined with the match options specified"},{"type":"text","text":" "},{"type":"text","text":"when the "},{"type":"codeVoice","code":"regex"},{"type":"text","text":" structure was created, letting you have more"},{"type":"text","text":" "},{"type":"text","text":"flexibility in reusing "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Regex"},{"type":"text","text":" structures."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/RegexProtocol\/matchFull(string:stringLen:startPosition:matchOptions:matchInfo:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/regexprotocol\/matchfull(string:stringlen:startposition:matchoptions:matchinfo:)"},"doc://GLib/documentation/GLib":{"role":"collection","title":"GLib","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib","kind":"symbol","type":"topic","url":"\/documentation\/glib"},"doc://GLib/documentation/GLib/RegexMatchFlags":{"role":"symbol","title":"RegexMatchFlags","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RegexMatchFlags"}],"abstract":[{"type":"text","text":"Flags specifying match-time options."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/RegexMatchFlags","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"RegexMatchFlags"}],"url":"\/documentation\/glib\/regexmatchflags"}}}