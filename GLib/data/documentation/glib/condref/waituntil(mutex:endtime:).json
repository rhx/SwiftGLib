{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"waitUntil"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"MutexT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"mutex"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"MutexT"},{"kind":"text","text":", "},{"kind":"externalParam","text":"endTime"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gint64","preciseIdentifier":"c:@T@gint64"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"MutexT"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/GLib\/documentation\/GLib\/MutexProtocol","preciseIdentifier":"s:4GLib13MutexProtocolP","text":"MutexProtocol"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"As with "},{"type":"codeVoice","code":"g_cond_wait()"},{"type":"text","text":" it is possible that a spurious or stolen wakeup"},{"type":"text","text":" "},{"type":"text","text":"could occur.  For that reason, waiting on a condition variable should"},{"type":"text","text":" "},{"type":"text","text":"always be in a loop, based on an explicitly-checked predicate."}]},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"true"},{"type":"text","text":" is returned if the condition variable was signalled (or in the"},{"type":"text","text":" "},{"type":"text","text":"case of a spurious wakeup).  "},{"type":"codeVoice","code":"false"},{"type":"text","text":" is returned if "},{"type":"codeVoice","code":"endTime"},{"type":"text","text":" has"},{"type":"text","text":" "},{"type":"text","text":"passed."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The following code shows how to correctly perform a timed wait on a"},{"type":"text","text":" "},{"type":"text","text":"condition variable (extending the example presented in the"},{"type":"text","text":" "},{"type":"text","text":"documentation for "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Cond"},{"type":"text","text":"):"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"(C Language Example):"}]},{"type":"codeListing","syntax":"C","code":["gpointer","pop_data_timed (void)","{","  gint64 end_time;","  gpointer data;","","  g_mutex_lock (&data_mutex);","","  end_time = g_get_monotonic_time () + 5 * G_TIME_SPAN_SECOND;","  while (!current_data)","    if (!g_cond_wait_until (&data_cond, &data_mutex, end_time))","      {","        \/\/ timeout has passed.","        g_mutex_unlock (&data_mutex);","        return NULL;","      }","","  \/\/ there is data for us","  data = current_data;","  current_data = NULL;","","  g_mutex_unlock (&data_mutex);","","  return data;","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Notice that the end time is calculated once, before entering the"},{"type":"text","text":" "},{"type":"text","text":"loop and reused.  This is the motivation behind the use of absolute"},{"type":"text","text":" "},{"type":"text","text":"time on this API â€“ if a relative time of 5 seconds were passed"},{"type":"text","text":" "},{"type":"text","text":"directly to the call and a spurious wakeup occurred, the program would"},{"type":"text","text":" "},{"type":"text","text":"have to start over waiting again (which would lead to a total wait"},{"type":"text","text":" "},{"type":"text","text":"time of more than 5 seconds)."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/glib\/condref\/waituntil(mutex:endtime:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/GLib\/documentation\/GLib\/CondRef\/waitUntil(mutex:endTime:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Waits until either "},{"type":"codeVoice","code":"cond"},{"type":"text","text":" is signalled or "},{"type":"codeVoice","code":"endTime"},{"type":"text","text":" has passed."}],"kind":"symbol","metadata":{"role":"symbol","title":"waitUntil(mutex:endTime:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"waitUntil"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"MutexT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"mutex"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"MutexT"},{"kind":"text","text":", "},{"kind":"externalParam","text":"endTime"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gint64","preciseIdentifier":"c:@T@gint64"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"symbolKind":"method","externalID":"s:4GLib12CondProtocolPAAE9waitUntil5mutex7endTimeSbqd___s5Int64VtAA05MutexC0Rd__lF::SYNTHESIZED::s:4GLib7CondRefV","extendedModule":"GLib","modules":[{"name":"GLib"}]},"hierarchy":{"paths":[["doc:\/\/GLib\/documentation\/GLib","doc:\/\/GLib\/documentation\/GLib\/CondRef","doc:\/\/GLib\/documentation\/GLib\/CondRef\/CondProtocol-Implementations"]]},"references":{"doc://GLib/documentation/GLib/MutexProtocol":{"role":"symbol","title":"MutexProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MutexProtocol"}],"abstract":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Mutex"},{"type":"text","text":" struct is an opaque data structure to represent a mutex"},{"type":"text","text":" "},{"type":"text","text":"(mutual exclusion). It can be used to protect data against shared"},{"type":"text","text":" "},{"type":"text","text":"access."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/MutexProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MutexProtocol"}],"url":"\/documentation\/glib\/mutexprotocol"},"doc://GLib/documentation/GLib/CondRef":{"role":"symbol","title":"CondRef","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CondRef"}],"abstract":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Cond"},{"type":"text","text":" struct is an opaque data structure that represents a"},{"type":"text","text":" "},{"type":"text","text":"condition. Threads can block on a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Cond"},{"type":"text","text":" if they find a certain"},{"type":"text","text":" "},{"type":"text","text":"condition to be false. If other threads change the state of this"},{"type":"text","text":" "},{"type":"text","text":"condition they signal the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Cond"},{"type":"text","text":", and that causes the waiting"},{"type":"text","text":" "},{"type":"text","text":"threads to be woken up."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/CondRef","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CondRef"}],"url":"\/documentation\/glib\/condref"},"doc://GLib/documentation/GLib/CondRef/waitUntil(mutex:endTime:)":{"role":"symbol","title":"waitUntil(mutex:endTime:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"waitUntil"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"MutexT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"mutex"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"MutexT"},{"kind":"text","text":", "},{"kind":"externalParam","text":"endTime"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gint64","preciseIdentifier":"c:@T@gint64"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Waits until either "},{"type":"codeVoice","code":"cond"},{"type":"text","text":" is signalled or "},{"type":"codeVoice","code":"endTime"},{"type":"text","text":" has passed."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/CondRef\/waitUntil(mutex:endTime:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/condref\/waituntil(mutex:endtime:)"},"doc://GLib/documentation/GLib":{"role":"collection","title":"GLib","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib","kind":"symbol","type":"topic","url":"\/documentation\/glib"},"doc://GLib/documentation/GLib/Mutex":{"role":"symbol","title":"Mutex","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Mutex"}],"abstract":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Mutex"},{"type":"text","text":" struct is an opaque data structure to represent a mutex"},{"type":"text","text":" "},{"type":"text","text":"(mutual exclusion). It can be used to protect data against shared"},{"type":"text","text":" "},{"type":"text","text":"access."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/Mutex","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Mutex"}],"url":"\/documentation\/glib\/mutex"},"doc://GLib/documentation/GLib/CondRef/CondProtocol-Implementations":{"role":"collectionGroup","title":"CondProtocol Implementations","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib\/CondRef\/CondProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/glib\/condref\/condprotocol-implementations"},"doc://GLib/documentation/GLib/Cond":{"role":"symbol","title":"Cond","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Cond"}],"abstract":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Cond"},{"type":"text","text":" struct is an opaque data structure that represents a"},{"type":"text","text":" "},{"type":"text","text":"condition. Threads can block on a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Cond"},{"type":"text","text":" if they find a certain"},{"type":"text","text":" "},{"type":"text","text":"condition to be false. If other threads change the state of this"},{"type":"text","text":" "},{"type":"text","text":"condition they signal the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Cond"},{"type":"text","text":", and that causes the waiting"},{"type":"text","text":" "},{"type":"text","text":"threads to be woken up."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/Cond","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Cond"}],"url":"\/documentation\/glib\/cond"}}}