{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"sort"},{"kind":"text","text":"("},{"kind":"externalParam","text":"func"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GCompareDataFunc","preciseIdentifier":"c:@T@GCompareDataFunc"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"userData"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"? = nil)"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The sort function "},{"type":"codeVoice","code":"func"},{"type":"text","text":" is passed two elements of the "},{"type":"codeVoice","code":"queue"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"It should return 0 if they are equal, a negative value if the"},{"type":"text","text":" "},{"type":"text","text":"first element should be higher in the "},{"type":"codeVoice","code":"queue"},{"type":"text","text":" or a positive value"},{"type":"text","text":" "},{"type":"text","text":"if the first element should be lower in the "},{"type":"codeVoice","code":"queue"},{"type":"text","text":" than the second"},{"type":"text","text":" "},{"type":"text","text":"element."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This function will lock "},{"type":"codeVoice","code":"queue"},{"type":"text","text":" before it sorts the queue and unlock"},{"type":"text","text":" "},{"type":"text","text":"it when it is finished."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you were sorting a list of priority numbers to make sure the"},{"type":"text","text":" "},{"type":"text","text":"lowest priority would be at the top of the queue, you could use:"},{"type":"text","text":" "},{"type":"text","text":"(C Language Example):"}]},{"type":"codeListing","syntax":"C","code":[" gint32 id1;"," gint32 id2;",""," id1 = GPOINTER_TO_INT (element1);"," id2 = GPOINTER_TO_INT (element2);",""," return (id1 > id2 ? +1 : id1 == id2 ? 0 : -1);"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/glib\/asyncqueueprotocol\/sort(func:userdata:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/GLib\/documentation\/GLib\/AsyncQueueProtocol\/sort(func:userData:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Sorts "},{"type":"codeVoice","code":"queue"},{"type":"text","text":" using "},{"type":"codeVoice","code":"func"},{"type":"text","text":"."}],"kind":"symbol","metadata":{"role":"symbol","title":"sort(func:userData:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"sort"},{"kind":"text","text":"("},{"kind":"externalParam","text":"func"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GCompareDataFunc","preciseIdentifier":"c:@T@GCompareDataFunc"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"userData"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?)"}],"symbolKind":"method","externalID":"s:4GLib18AsyncQueueProtocolPAAE4sort4func8userDatays5Int32VSVSg_AISvSgtXCSg_AJtF","extendedModule":"GLib","modules":[{"name":"GLib"}]},"hierarchy":{"paths":[["doc:\/\/GLib\/documentation\/GLib","doc:\/\/GLib\/documentation\/GLib\/AsyncQueueProtocol"]]},"references":{"doc://GLib/documentation/GLib/AsyncQueueProtocol/sort(func:userData:)":{"role":"symbol","title":"sort(func:userData:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"sort"},{"kind":"text","text":"("},{"kind":"externalParam","text":"func"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GCompareDataFunc","preciseIdentifier":"c:@T@GCompareDataFunc"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"userData"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Sorts "},{"type":"codeVoice","code":"queue"},{"type":"text","text":" using "},{"type":"codeVoice","code":"func"},{"type":"text","text":"."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/AsyncQueueProtocol\/sort(func:userData:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/asyncqueueprotocol\/sort(func:userdata:)"},"doc://GLib/documentation/GLib/AsyncQueueProtocol":{"role":"symbol","title":"AsyncQueueProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncQueueProtocol"}],"abstract":[{"type":"text","text":"An opaque data structure which represents an asynchronous queue."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/AsyncQueueProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AsyncQueueProtocol"}],"url":"\/documentation\/glib\/asyncqueueprotocol"},"doc://GLib/documentation/GLib":{"role":"collection","title":"GLib","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib","kind":"symbol","type":"topic","url":"\/documentation\/glib"}}}