{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Rand"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Rand"},{"type":"text","text":" type acts as an owner of an underlying "},{"type":"codeVoice","code":"GRand"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"It provides the methods that can operate on this data type through "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/RandProtocol"},{"type":"text","text":" conformance."},{"type":"text","text":" "},{"type":"text","text":"Use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Rand"},{"type":"text","text":" as a strong reference or owner of a "},{"type":"codeVoice","code":"GRand"},{"type":"text","text":" instance."}]},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/RandRef"},{"type":"text","text":" (instead of "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Rand"},{"type":"text","text":") for a lightweight Swift reference to an underlying "},{"type":"codeVoice","code":"GRand"},{"type":"text","text":" instance."}]}],"type":"aside","name":"Note"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/glib\/rand"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/GLib\/documentation\/GLib\/PointerWrapper","doc:\/\/GLib\/documentation\/GLib\/RandProtocol"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/GLib\/documentation\/GLib\/Rand","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"The GRand struct is an opaque data structure. It should only be"},{"type":"text","text":" "},{"type":"text","text":"accessed through the g_rand_* functions."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Rand"}],"title":"Rand","roleHeading":"Class","role":"symbol","symbolKind":"class","externalID":"s:4GLib4RandC","modules":[{"name":"GLib"}],"navigatorTitle":[{"kind":"identifier","text":"Rand"}]},"hierarchy":{"paths":[["doc:\/\/GLib\/documentation\/GLib"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/GLib\/documentation\/GLib\/Rand\/init()","doc:\/\/GLib\/documentation\/GLib\/Rand\/init(_:)-287uz","doc:\/\/GLib\/documentation\/GLib\/Rand\/init(_:)-5supm","doc:\/\/GLib\/documentation\/GLib\/Rand\/init(_:)-5vx96","doc:\/\/GLib\/documentation\/GLib\/Rand\/init(_:)-84qmw","doc:\/\/GLib\/documentation\/GLib\/Rand\/init(_:)-8w915","doc:\/\/GLib\/documentation\/GLib\/Rand\/init(cPointer:)","doc:\/\/GLib\/documentation\/GLib\/Rand\/init(gconstpointer:)","doc:\/\/GLib\/documentation\/GLib\/Rand\/init(gpointer:)","doc:\/\/GLib\/documentation\/GLib\/Rand\/init(opaquePointer:)","doc:\/\/GLib\/documentation\/GLib\/Rand\/init(raw:)-5aif2","doc:\/\/GLib\/documentation\/GLib\/Rand\/init(raw:)-7x2en","doc:\/\/GLib\/documentation\/GLib\/Rand\/init(retaining:)","doc:\/\/GLib\/documentation\/GLib\/Rand\/init(retainingCPointer:)","doc:\/\/GLib\/documentation\/GLib\/Rand\/init(retainingOpaquePointer:)","doc:\/\/GLib\/documentation\/GLib\/Rand\/init(retainingRaw:)-3t2d4","doc:\/\/GLib\/documentation\/GLib\/Rand\/init(retainingRaw:)-o2fv","doc:\/\/GLib\/documentation\/GLib\/Rand\/init(seed:)","doc:\/\/GLib\/documentation\/GLib\/Rand\/init(seedArray:seedLength:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/GLib\/documentation\/GLib\/Rand\/ptr"]},{"title":"Type Methods","identifiers":["doc:\/\/GLib\/documentation\/GLib\/Rand\/newWith(seed:)","doc:\/\/GLib\/documentation\/GLib\/Rand\/newWith(seedArray:seedLength:)"]},{"title":"Default Implementations","identifiers":["doc:\/\/GLib\/documentation\/GLib\/Rand\/RandProtocol-Implementations"],"generated":true}],"references":{"doc://GLib/documentation/GLib/PointerWrapper":{"role":"symbol","title":"PointerWrapper","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"PointerWrapper"}],"abstract":[{"type":"text","text":"Protocol for GLib types that wrap pointers."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/PointerWrapper","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PointerWrapper"}],"url":"\/documentation\/glib\/pointerwrapper"},"doc://GLib/documentation/GLib/Rand/newWith(seedArray:seedLength:)":{"role":"symbol","title":"newWith(seedArray:seedLength:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"newWith"},{"kind":"text","text":"("},{"kind":"externalParam","text":"seedArray"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"guint32","preciseIdentifier":"c:@T@guint32"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"seedLength"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Rand","preciseIdentifier":"s:4GLib4RandC"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Creates a new random number generator initialized with "},{"type":"codeVoice","code":"seed"},{"type":"text","text":"."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/Rand\/newWith(seedArray:seedLength:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/rand\/newwith(seedarray:seedlength:)"},"doc://GLib/documentation/GLib/Rand/init(opaquePointer:)":{"role":"symbol","title":"init(opaquePointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"opaquePointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"OpaquePointer","preciseIdentifier":"s:s13OpaquePointerV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/RandProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/Rand\/init(opaquePointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/rand\/init(opaquepointer:)"},"doc://GLib/documentation/GLib":{"role":"collection","title":"GLib","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib","kind":"symbol","type":"topic","url":"\/documentation\/glib"},"doc://GLib/documentation/GLib/Rand/init(retaining:)":{"role":"symbol","title":"init(retaining:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"retaining"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GRand"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type."},{"type":"text","text":" "},{"type":"codeVoice","code":"GRand"},{"type":"text","text":" does not allow reference counting, so despite the name no actual retaining will occur."},{"type":"text","text":" "},{"type":"text","text":"i.e., ownership is transferred to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Rand"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/Rand\/init(retaining:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/rand\/init(retaining:)"},"doc://GLib/documentation/GLib/Rand/init(cPointer:)":{"role":"symbol","title":"init(cPointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"cPointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Unsafe typed initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/RandProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/Rand\/init(cPointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/rand\/init(cpointer:)"},"doc://GLib/documentation/GLib/Rand/init(retainingRaw:)-o2fv":{"role":"symbol","title":"init(retainingRaw:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"retainingRaw"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutableRawPointer","preciseIdentifier":"s:Sv"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped, retaining initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/RandProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/Rand\/init(retainingRaw:)-o2fv","kind":"symbol","type":"topic","url":"\/documentation\/glib\/rand\/init(retainingraw:)-o2fv"},"doc://GLib/documentation/GLib/Rand/init(_:)-8w915":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GRand"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Optional initialiser from the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type."},{"type":"text","text":" "},{"type":"text","text":"This creates an instance without performing an unbalanced retain"},{"type":"text","text":" "},{"type":"text","text":"i.e., ownership is transferred to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Rand"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/Rand\/init(_:)-8w915","kind":"symbol","type":"topic","url":"\/documentation\/glib\/rand\/init(_:)-8w915"},"doc://GLib/documentation/GLib/Rand/init(_:)-5vx96":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GRand"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type."},{"type":"text","text":" "},{"type":"text","text":"This creates an instance without performing an unbalanced retain"},{"type":"text","text":" "},{"type":"text","text":"i.e., ownership is transferred to the "},{"type":"codeVoice","code":"Rand"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/Rand\/init(_:)-5vx96","kind":"symbol","type":"topic","url":"\/documentation\/glib\/rand\/init(_:)-5vx96"},"doc://GLib/documentation/GLib/Rand/init(gpointer:)":{"role":"symbol","title":"init(gpointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"externalParam","text":"gpointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Optional initialiser from a non-mutating "},{"type":"codeVoice","code":"gpointer"},{"type":"text","text":" to"},{"type":"text","text":" "},{"type":"text","text":"the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type."},{"type":"text","text":" "},{"type":"text","text":"This creates an instance without performing an unbalanced retain"},{"type":"text","text":" "},{"type":"text","text":"i.e., ownership is transferred to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Rand"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/Rand\/init(gpointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/rand\/init(gpointer:)"},"doc://GLib/documentation/GLib/RandProtocol":{"role":"symbol","title":"RandProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RandProtocol"}],"abstract":[{"type":"text","text":"The GRand struct is an opaque data structure. It should only be"},{"type":"text","text":" "},{"type":"text","text":"accessed through the g_rand_* functions."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/RandProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"RandProtocol"}],"url":"\/documentation\/glib\/randprotocol"},"doc://GLib/documentation/GLib/Rand/init(gconstpointer:)":{"role":"symbol","title":"init(gconstpointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"externalParam","text":"gconstpointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gconstpointer","preciseIdentifier":"c:@T@gconstpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Optional initialiser from a non-mutating "},{"type":"codeVoice","code":"gconstpointer"},{"type":"text","text":" to"},{"type":"text","text":" "},{"type":"text","text":"the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type."},{"type":"text","text":" "},{"type":"text","text":"This creates an instance without performing an unbalanced retain"},{"type":"text","text":" "},{"type":"text","text":"i.e., ownership is transferred to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Rand"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/Rand\/init(gconstpointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/rand\/init(gconstpointer:)"},"doc://GLib/documentation/GLib/Rand/init(retainingCPointer:)":{"role":"symbol","title":"init(retainingCPointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"retainingCPointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Unsafe typed, retaining initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/RandProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/Rand\/init(retainingCPointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/rand\/init(retainingcpointer:)"},"doc://GLib/documentation/GLib/Rand/init()":{"role":"symbol","title":"init()","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Creates a new random number generator initialized with a seed taken"},{"type":"text","text":" "},{"type":"text","text":"either from "},{"type":"codeVoice","code":"\/dev\/urandom"},{"type":"text","text":" (if existing) or from the current time"},{"type":"text","text":" "},{"type":"text","text":"(as a fallback)."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/Rand\/init()","kind":"symbol","type":"topic","url":"\/documentation\/glib\/rand\/init()"},"doc://GLib/documentation/GLib/Rand/init(retainingRaw:)-3t2d4":{"role":"symbol","title":"init(retainingRaw:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"retainingRaw"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeRawPointer","preciseIdentifier":"s:SV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped, retaining initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/RandProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/Rand\/init(retainingRaw:)-3t2d4","kind":"symbol","type":"topic","url":"\/documentation\/glib\/rand\/init(retainingraw:)-3t2d4"},"doc://GLib/documentation/GLib/RandProtocol/rand_ptr-9ym4x":{"defaultImplementations":1,"role":"symbol","title":"rand_ptr","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"rand_ptr"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GRand"},{"kind":"text","text":">!"}],"abstract":[{"type":"text","text":"Typed pointer to the underlying "},{"type":"codeVoice","code":"GRand"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/RandProtocol\/rand_ptr-9ym4x","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/glib\/randprotocol\/rand_ptr-9ym4x"},"doc://GLib/documentation/GLib/Rand/init(retainingOpaquePointer:)":{"role":"symbol","title":"init(retainingOpaquePointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"retainingOpaquePointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"OpaquePointer","preciseIdentifier":"s:s13OpaquePointerV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped, retaining initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/RandProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/Rand\/init(retainingOpaquePointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/rand\/init(retainingopaquepointer:)"},"doc://GLib/documentation/GLib/RandRef":{"role":"symbol","title":"RandRef","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RandRef"}],"abstract":[{"type":"text","text":"The GRand struct is an opaque data structure. It should only be"},{"type":"text","text":" "},{"type":"text","text":"accessed through the g_rand_* functions."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/RandRef","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"RandRef"}],"url":"\/documentation\/glib\/randref"},"doc://GLib/documentation/GLib/Rand/newWith(seed:)":{"role":"symbol","title":"newWith(seed:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"newWith"},{"kind":"text","text":"("},{"kind":"externalParam","text":"seed"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"guint32","preciseIdentifier":"c:@T@guint32"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Rand","preciseIdentifier":"s:4GLib4RandC"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Creates a new random number generator initialized with "},{"type":"codeVoice","code":"seed"},{"type":"text","text":"."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/Rand\/newWith(seed:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/rand\/newwith(seed:)"},"doc://GLib/documentation/GLib/Rand/init(raw:)-5aif2":{"role":"symbol","title":"init(raw:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"raw"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeRawPointer","preciseIdentifier":"s:SV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/RandProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/Rand\/init(raw:)-5aif2","kind":"symbol","type":"topic","url":"\/documentation\/glib\/rand\/init(raw:)-5aif2"},"doc://GLib/documentation/GLib/Rand/init(raw:)-7x2en":{"role":"symbol","title":"init(raw:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"raw"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutableRawPointer","preciseIdentifier":"s:Sv"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/RandProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/Rand\/init(raw:)-7x2en","kind":"symbol","type":"topic","url":"\/documentation\/glib\/rand\/init(raw:)-7x2en"},"doc://GLib/documentation/GLib/Rand/RandProtocol-Implementations":{"role":"collectionGroup","title":"RandProtocol Implementations","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib\/Rand\/RandProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/glib\/rand\/randprotocol-implementations"},"doc://GLib/documentation/GLib/Rand/init(_:)-5supm":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GRand"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from a constant pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type."},{"type":"text","text":" "},{"type":"text","text":"This creates an instance without performing an unbalanced retain"},{"type":"text","text":" "},{"type":"text","text":"i.e., ownership is transferred to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Rand"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/Rand\/init(_:)-5supm","kind":"symbol","type":"topic","url":"\/documentation\/glib\/rand\/init(_:)-5supm"},"doc://GLib/documentation/GLib/Rand/init(_:)-287uz":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GRand"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Optional initialiser from a constant pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type."},{"type":"text","text":" "},{"type":"text","text":"This creates an instance without performing an unbalanced retain"},{"type":"text","text":" "},{"type":"text","text":"i.e., ownership is transferred to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Rand"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/Rand\/init(_:)-287uz","kind":"symbol","type":"topic","url":"\/documentation\/glib\/rand\/init(_:)-287uz"},"doc://GLib/documentation/GLib/Rand/ptr":{"role":"symbol","title":"ptr","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"ptr"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutableRawPointer","preciseIdentifier":"s:Sv"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Untyped pointer to the underlying "},{"type":"codeVoice","code":"GRand"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"For type-safe access, use the generated, typed pointer "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/RandProtocol\/rand_ptr-9ym4x"},{"type":"text","text":" property instead."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/Rand\/ptr","kind":"symbol","type":"topic","url":"\/documentation\/glib\/rand\/ptr"},"doc://GLib/documentation/GLib/Rand":{"role":"symbol","title":"Rand","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Rand"}],"abstract":[{"type":"text","text":"The GRand struct is an opaque data structure. It should only be"},{"type":"text","text":" "},{"type":"text","text":"accessed through the g_rand_* functions."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/Rand","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Rand"}],"url":"\/documentation\/glib\/rand"},"doc://GLib/documentation/GLib/Rand/init(seedArray:seedLength:)":{"role":"symbol","title":"init(seedArray:seedLength:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"seedArray"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"guint32","preciseIdentifier":"c:@T@guint32"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"seedLength"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Creates a new random number generator initialized with "},{"type":"codeVoice","code":"seed"},{"type":"text","text":"."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/Rand\/init(seedArray:seedLength:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/rand\/init(seedarray:seedlength:)"},"doc://GLib/documentation/GLib/Rand/init(seed:)":{"role":"symbol","title":"init(seed:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"seed"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"guint32","preciseIdentifier":"c:@T@guint32"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Creates a new random number generator initialized with "},{"type":"codeVoice","code":"seed"},{"type":"text","text":"."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/Rand\/init(seed:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/rand\/init(seed:)"},"doc://GLib/documentation/GLib/Rand/init(_:)-84qmw":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Reference intialiser for a related type that implements "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/RandProtocol"},{"type":"text","text":" "},{"type":"codeVoice","code":"GRand"},{"type":"text","text":" does not allow reference counting."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/Rand\/init(_:)-84qmw","kind":"symbol","type":"topic","url":"\/documentation\/glib\/rand\/init(_:)-84qmw"}}}