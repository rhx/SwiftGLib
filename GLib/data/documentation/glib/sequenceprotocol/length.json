{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"length"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":" { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}],"languages":["swift"],"platforms":["macOS"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/glib\/sequenceprotocol\/length"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/GLib\/documentation\/GLib\/SequenceProtocol\/length","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Returns the positive length (>= 0) of "},{"type":"codeVoice","code":"seq"},{"type":"text","text":". Note that this method is"},{"type":"text","text":" "},{"type":"codeVoice","code":"O(h)"},{"type":"text","text":" where "},{"type":"codeVoice","code":"h' is the height of the tree. It is thus more efficient to use "},{"type":"text","text":"g_sequence_is_empty()` when comparing the length to zero."}],"kind":"symbol","metadata":{"role":"symbol","title":"length","roleHeading":"Instance Property","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"length"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"symbolKind":"property","externalID":"s:4GLib16SequenceProtocolPAAE6lengthSivp","extendedModule":"GLib","modules":[{"name":"GLib"}]},"hierarchy":{"paths":[["doc:\/\/GLib\/documentation\/GLib","doc:\/\/GLib\/documentation\/GLib\/SequenceProtocol"]]},"references":{"../Protocols/SequenceProtocol.html":{"title":"sequence","titleInlineContent":[{"type":"text","text":"sequence"}],"type":"link","identifier":"..\/Protocols\/SequenceProtocol.html","url":"..\/Protocols\/SequenceProtocol.html"},"doc://GLib/documentation/GLib":{"role":"collection","title":"GLib","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib","kind":"symbol","type":"topic","url":"\/documentation\/glib"},"doc://GLib/documentation/GLib/Sequence":{"role":"symbol","title":"Sequence","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Sequence"}],"abstract":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Sequence"},{"type":"text","text":" struct is an opaque data type representing a"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"..\/Protocols\/SequenceProtocol.html"},{"type":"text","text":" data type."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/Sequence","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Sequence"}],"url":"\/documentation\/glib\/sequence"},"doc://GLib/documentation/GLib/SequenceProtocol/length":{"role":"symbol","title":"length","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"length"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"abstract":[{"type":"text","text":"Returns the positive length (>= 0) of "},{"type":"codeVoice","code":"seq"},{"type":"text","text":". Note that this method is"},{"type":"text","text":" "},{"type":"codeVoice","code":"O(h)"},{"type":"text","text":" where "},{"type":"codeVoice","code":"h' is the height of the tree. It is thus more efficient to use "},{"type":"text","text":"g_sequence_is_empty()` when comparing the length to zero."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SequenceProtocol\/length","kind":"symbol","type":"topic","url":"\/documentation\/glib\/sequenceprotocol\/length"},"doc://GLib/documentation/GLib/SequenceProtocol":{"role":"symbol","title":"SequenceProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SequenceProtocol"}],"abstract":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Sequence"},{"type":"text","text":" struct is an opaque data type representing a"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"..\/Protocols\/SequenceProtocol.html"},{"type":"text","text":" data type."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SequenceProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SequenceProtocol"}],"url":"\/documentation\/glib\/sequenceprotocol"}}}