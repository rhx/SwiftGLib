{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SequenceProtocol"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/GLib\/documentation\/GLib\/PointerWrapper","preciseIdentifier":"s:4GLib14PointerWrapperP","text":"PointerWrapper"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/SequenceProtocol"},{"type":"text","text":" protocol exposes the methods and properties of an underlying "},{"type":"codeVoice","code":"GSequence"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"The default implementation of these can be found in the protocol extension below."},{"type":"text","text":" "},{"type":"text","text":"For a concrete class that implements these methods and properties, see "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Sequence"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Alternatively, use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/SequenceRef"},{"type":"text","text":" as a lighweight, "},{"type":"codeVoice","code":"unowned"},{"type":"text","text":" reference if you already have an instance you just want to use."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/glib\/sequenceprotocol"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/GLib\/documentation\/GLib\/PointerWrapper"],"kind":"relationships","title":"Inherits From","type":"inheritsFrom"},{"identifiers":["doc:\/\/GLib\/documentation\/GLib\/RefSequenceProtocol","doc:\/\/GLib\/documentation\/GLib\/ReferenceSequenceProtocol","doc:\/\/GLib\/documentation\/GLib\/TypedSequenceProtocol"],"kind":"relationships","title":"Inherited By","type":"inheritedBy"},{"identifiers":["doc:\/\/GLib\/documentation\/GLib\/RefSequence","doc:\/\/GLib\/documentation\/GLib\/RefSequenceRef","doc:\/\/GLib\/documentation\/GLib\/ReferenceSequence","doc:\/\/GLib\/documentation\/GLib\/ReferenceSequenceRef","doc:\/\/GLib\/documentation\/GLib\/Sequence","doc:\/\/GLib\/documentation\/GLib\/SequenceRef","doc:\/\/GLib\/documentation\/GLib\/TypedSequence","doc:\/\/GLib\/documentation\/GLib\/TypedSequenceRef"],"kind":"relationships","title":"Conforming Types","type":"conformingTypes"}],"identifier":{"url":"doc:\/\/GLib\/documentation\/GLib\/SequenceProtocol","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Sequence"},{"type":"text","text":" struct is an opaque data type representing a"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"..\/Protocols\/SequenceProtocol.html"},{"type":"text","text":" data type."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SequenceProtocol"}],"title":"SequenceProtocol","roleHeading":"Protocol","role":"symbol","symbolKind":"protocol","externalID":"s:4GLib16SequenceProtocolP","modules":[{"name":"GLib"}],"navigatorTitle":[{"kind":"identifier","text":"SequenceProtocol"}]},"hierarchy":{"paths":[["doc:\/\/GLib\/documentation\/GLib"]]},"topicSections":[{"title":"Instance Properties","identifiers":["doc:\/\/GLib\/documentation\/GLib\/SequenceProtocol\/beginIter","doc:\/\/GLib\/documentation\/GLib\/SequenceProtocol\/endIter","doc:\/\/GLib\/documentation\/GLib\/SequenceProtocol\/isEmpty","doc:\/\/GLib\/documentation\/GLib\/SequenceProtocol\/length"]},{"title":"Instance Methods","identifiers":["doc:\/\/GLib\/documentation\/GLib\/SequenceProtocol\/append(data:)","doc:\/\/GLib\/documentation\/GLib\/SequenceProtocol\/foreach(func:userData:)","doc:\/\/GLib\/documentation\/GLib\/SequenceProtocol\/free()","doc:\/\/GLib\/documentation\/GLib\/SequenceProtocol\/getBeginIter()","doc:\/\/GLib\/documentation\/GLib\/SequenceProtocol\/getEndIter()","doc:\/\/GLib\/documentation\/GLib\/SequenceProtocol\/getIterAt(pos:)","doc:\/\/GLib\/documentation\/GLib\/SequenceProtocol\/getLength()","doc:\/\/GLib\/documentation\/GLib\/SequenceProtocol\/insertSorted(data:cmpFunc:cmpData:)","doc:\/\/GLib\/documentation\/GLib\/SequenceProtocol\/insertSortedIter(data:iterCmp:cmpData:)","doc:\/\/GLib\/documentation\/GLib\/SequenceProtocol\/lookup(data:cmpFunc:cmpData:)","doc:\/\/GLib\/documentation\/GLib\/SequenceProtocol\/lookupIter(data:iterCmp:cmpData:)","doc:\/\/GLib\/documentation\/GLib\/SequenceProtocol\/prepend(data:)","doc:\/\/GLib\/documentation\/GLib\/SequenceProtocol\/search(data:cmpFunc:cmpData:)","doc:\/\/GLib\/documentation\/GLib\/SequenceProtocol\/searchIter(data:iterCmp:cmpData:)","doc:\/\/GLib\/documentation\/GLib\/SequenceProtocol\/sort(cmpFunc:cmpData:)","doc:\/\/GLib\/documentation\/GLib\/SequenceProtocol\/sortIter(cmpFunc:cmpData:)"]}],"references":{"doc://GLib/documentation/GLib/SequenceProtocol/isEmpty":{"role":"symbol","title":"isEmpty","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"isEmpty"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Returns "},{"type":"codeVoice","code":"true"},{"type":"text","text":" if the sequence contains zero items."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SequenceProtocol\/isEmpty","kind":"symbol","type":"topic","url":"\/documentation\/glib\/sequenceprotocol\/isempty"},"doc://GLib/documentation/GLib/SequenceProtocol/insertSortedIter(data:iterCmp:cmpData:)":{"role":"symbol","title":"insertSortedIter(data:iterCmp:cmpData:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"insertSortedIter"},{"kind":"text","text":"("},{"kind":"externalParam","text":"data"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"iterCmp"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GSequenceIterCompareFunc","preciseIdentifier":"c:@T@GSequenceIterCompareFunc"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"cmpData"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"SequenceIterRef","preciseIdentifier":"s:4GLib15SequenceIterRefV"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Like "},{"type":"codeVoice","code":"g_sequence_insert_sorted()"},{"type":"text","text":", but uses"},{"type":"text","text":" "},{"type":"text","text":"a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/SequenceIterCompareFunc"},{"type":"text","text":" instead of a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/CompareDataFunc"},{"type":"text","text":" as"},{"type":"text","text":" "},{"type":"text","text":"the compare function."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SequenceProtocol\/insertSortedIter(data:iterCmp:cmpData:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/sequenceprotocol\/insertsortediter(data:itercmp:cmpdata:)"},"doc://GLib/documentation/GLib/SequenceProtocol/length":{"role":"symbol","title":"length","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"length"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"abstract":[{"type":"text","text":"Returns the positive length (>= 0) of "},{"type":"codeVoice","code":"seq"},{"type":"text","text":". Note that this method is"},{"type":"text","text":" "},{"type":"codeVoice","code":"O(h)"},{"type":"text","text":" where "},{"type":"codeVoice","code":"h' is the height of the tree. It is thus more efficient to use "},{"type":"text","text":"g_sequence_is_empty()` when comparing the length to zero."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SequenceProtocol\/length","kind":"symbol","type":"topic","url":"\/documentation\/glib\/sequenceprotocol\/length"},"doc://GLib/documentation/GLib/PointerWrapper":{"role":"symbol","title":"PointerWrapper","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"PointerWrapper"}],"abstract":[{"type":"text","text":"Protocol for GLib types that wrap pointers."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/PointerWrapper","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PointerWrapper"}],"url":"\/documentation\/glib\/pointerwrapper"},"../Protocols/SequenceProtocol.html":{"title":"sequence","titleInlineContent":[{"type":"text","text":"sequence"}],"type":"link","identifier":"..\/Protocols\/SequenceProtocol.html","url":"..\/Protocols\/SequenceProtocol.html"},"doc://GLib/documentation/GLib/TypedSequence":{"role":"symbol","title":"TypedSequence","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"TypedSequence"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"TypedSequence"},{"type":"text","text":" class acts as a typed wrapper around "},{"type":"codeVoice","code":"GSequence"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"with the associated "},{"type":"codeVoice","code":"Element"},{"type":"text","text":" representing the type of"},{"type":"text","text":" "},{"type":"text","text":"the elements stored in the list."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/TypedSequence","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TypedSequence"}],"url":"\/documentation\/glib\/typedsequence"},"doc://GLib/documentation/GLib/SequenceProtocol/prepend(data:)":{"role":"symbol","title":"prepend(data:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"prepend"},{"kind":"text","text":"("},{"kind":"externalParam","text":"data"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"SequenceIterRef","preciseIdentifier":"s:4GLib15SequenceIterRefV"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Adds a new item to the front of seq"}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SequenceProtocol\/prepend(data:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/sequenceprotocol\/prepend(data:)"},"doc://GLib/documentation/GLib/SequenceProtocol/foreach(func:userData:)":{"role":"symbol","title":"foreach(func:userData:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"foreach"},{"kind":"text","text":"("},{"kind":"externalParam","text":"func"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GFunc","preciseIdentifier":"c:@T@GFunc"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"userData"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Calls "},{"type":"codeVoice","code":"func"},{"type":"text","text":" for each item in the sequence passing "},{"type":"codeVoice","code":"userData"},{"type":"text","text":" "},{"type":"text","text":"to the function. "},{"type":"codeVoice","code":"func"},{"type":"text","text":" must not modify the sequence itself."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SequenceProtocol\/foreach(func:userData:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/sequenceprotocol\/foreach(func:userdata:)"},"doc://GLib/documentation/GLib/RefSequence":{"role":"symbol","title":"RefSequence","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"RefSequence"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"RefSequence"},{"type":"text","text":" class acts as a Ref wrapper around "},{"type":"codeVoice","code":"GSequence"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"with the associated "},{"type":"codeVoice","code":"Element"},{"type":"text","text":" representing the type of"},{"type":"text","text":" "},{"type":"text","text":"the elements stored in the list."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/RefSequence","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"RefSequence"}],"url":"\/documentation\/glib\/refsequence"},"doc://GLib/documentation/GLib/Sequence":{"role":"symbol","title":"Sequence","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Sequence"}],"abstract":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Sequence"},{"type":"text","text":" struct is an opaque data type representing a"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"..\/Protocols\/SequenceProtocol.html"},{"type":"text","text":" data type."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/Sequence","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Sequence"}],"url":"\/documentation\/glib\/sequence"},"doc://GLib/documentation/GLib/SequenceProtocol/searchIter(data:iterCmp:cmpData:)":{"role":"symbol","title":"searchIter(data:iterCmp:cmpData:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"searchIter"},{"kind":"text","text":"("},{"kind":"externalParam","text":"data"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"iterCmp"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GSequenceIterCompareFunc","preciseIdentifier":"c:@T@GSequenceIterCompareFunc"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"cmpData"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"SequenceIterRef","preciseIdentifier":"s:4GLib15SequenceIterRefV"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Like "},{"type":"codeVoice","code":"g_sequence_search()"},{"type":"text","text":", but uses a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/SequenceIterCompareFunc"},{"type":"text","text":" "},{"type":"text","text":"instead of a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/CompareDataFunc"},{"type":"text","text":" as the compare function."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SequenceProtocol\/searchIter(data:iterCmp:cmpData:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/sequenceprotocol\/searchiter(data:itercmp:cmpdata:)"},"doc://GLib/documentation/GLib/SequenceProtocol/lookupIter(data:iterCmp:cmpData:)":{"role":"symbol","title":"lookupIter(data:iterCmp:cmpData:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"lookupIter"},{"kind":"text","text":"("},{"kind":"externalParam","text":"data"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"iterCmp"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GSequenceIterCompareFunc","preciseIdentifier":"c:@T@GSequenceIterCompareFunc"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"cmpData"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"SequenceIterRef","preciseIdentifier":"s:4GLib15SequenceIterRefV"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Like "},{"type":"codeVoice","code":"g_sequence_lookup()"},{"type":"text","text":", but uses a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/SequenceIterCompareFunc"},{"type":"text","text":" "},{"type":"text","text":"instead of a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/CompareDataFunc"},{"type":"text","text":" as the compare function."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SequenceProtocol\/lookupIter(data:iterCmp:cmpData:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/sequenceprotocol\/lookupiter(data:itercmp:cmpdata:)"},"doc://GLib/documentation/GLib/RefSequenceProtocol":{"role":"symbol","title":"RefSequenceProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RefSequenceProtocol"}],"abstract":[{"type":"text","text":"Protocol for a Ref "},{"type":"codeVoice","code":"Sequence"},{"type":"text","text":", representing each element in a sequence."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/RefSequenceProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"RefSequenceProtocol"}],"url":"\/documentation\/glib\/refsequenceprotocol"},"doc://GLib/documentation/GLib/SequenceProtocol/getLength()":{"role":"symbol","title":"getLength()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getLength"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"abstract":[{"type":"text","text":"Returns the positive length (>= 0) of "},{"type":"codeVoice","code":"seq"},{"type":"text","text":". Note that this method is"},{"type":"text","text":" "},{"type":"codeVoice","code":"O(h)"},{"type":"text","text":" where "},{"type":"codeVoice","code":"h' is the height of the tree. It is thus more efficient to use "},{"type":"text","text":"g_sequence_is_empty()` when comparing the length to zero."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SequenceProtocol\/getLength()","kind":"symbol","type":"topic","url":"\/documentation\/glib\/sequenceprotocol\/getlength()"},"doc://GLib/documentation/GLib/RefSequenceRef":{"role":"symbol","title":"RefSequenceRef","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RefSequenceRef"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"RefSequenceRef"},{"type":"text","text":" struct acts as a lightweight, Ref wrapper aroundptr "},{"type":"codeVoice","code":"GList"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"with the associated "},{"type":"codeVoice","code":"Element"},{"type":"text","text":" representing the type of"},{"type":"text","text":" "},{"type":"text","text":"the elements stored in the list."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/RefSequenceRef","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"RefSequenceRef"}],"url":"\/documentation\/glib\/refsequenceref"},"doc://GLib/documentation/GLib/SequenceProtocol/endIter":{"role":"symbol","title":"endIter","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"endIter"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SequenceIterRef","preciseIdentifier":"s:4GLib15SequenceIterRefV"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Returns the end iterator for seg"}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SequenceProtocol\/endIter","kind":"symbol","type":"topic","url":"\/documentation\/glib\/sequenceprotocol\/enditer"},"doc://GLib/documentation/GLib/SequenceProtocol/sort(cmpFunc:cmpData:)":{"role":"symbol","title":"sort(cmpFunc:cmpData:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"sort"},{"kind":"text","text":"("},{"kind":"externalParam","text":"cmpFunc"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GCompareDataFunc","preciseIdentifier":"c:@T@GCompareDataFunc"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"cmpData"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Sorts "},{"type":"codeVoice","code":"seq"},{"type":"text","text":" using "},{"type":"codeVoice","code":"cmpFunc"},{"type":"text","text":"."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SequenceProtocol\/sort(cmpFunc:cmpData:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/sequenceprotocol\/sort(cmpfunc:cmpdata:)"},"doc://GLib/documentation/GLib/SequenceProtocol":{"role":"symbol","title":"SequenceProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SequenceProtocol"}],"abstract":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Sequence"},{"type":"text","text":" struct is an opaque data type representing a"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"..\/Protocols\/SequenceProtocol.html"},{"type":"text","text":" data type."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SequenceProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SequenceProtocol"}],"url":"\/documentation\/glib\/sequenceprotocol"},"doc://GLib/documentation/GLib/SequenceProtocol/lookup(data:cmpFunc:cmpData:)":{"role":"symbol","title":"lookup(data:cmpFunc:cmpData:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"lookup"},{"kind":"text","text":"("},{"kind":"externalParam","text":"data"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"cmpFunc"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GCompareDataFunc","preciseIdentifier":"c:@T@GCompareDataFunc"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"cmpData"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"SequenceIterRef","preciseIdentifier":"s:4GLib15SequenceIterRefV"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Returns an iterator pointing to the position of the first item found"},{"type":"text","text":" "},{"type":"text","text":"equal to "},{"type":"codeVoice","code":"data"},{"type":"text","text":" according to "},{"type":"codeVoice","code":"cmpFunc"},{"type":"text","text":" and "},{"type":"codeVoice","code":"cmpData"},{"type":"text","text":". If more than one"},{"type":"text","text":" "},{"type":"text","text":"item is equal, it is not guaranteed that it is the first which is"},{"type":"text","text":" "},{"type":"text","text":"returned. In that case, you can use "},{"type":"codeVoice","code":"g_sequence_iter_next()"},{"type":"text","text":" and"},{"type":"text","text":" "},{"type":"codeVoice","code":"g_sequence_iter_prev()"},{"type":"text","text":" to get others."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SequenceProtocol\/lookup(data:cmpFunc:cmpData:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/sequenceprotocol\/lookup(data:cmpfunc:cmpdata:)"},"doc://GLib/documentation/GLib/SequenceProtocol/search(data:cmpFunc:cmpData:)":{"role":"symbol","title":"search(data:cmpFunc:cmpData:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"search"},{"kind":"text","text":"("},{"kind":"externalParam","text":"data"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"cmpFunc"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GCompareDataFunc","preciseIdentifier":"c:@T@GCompareDataFunc"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"cmpData"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"SequenceIterRef","preciseIdentifier":"s:4GLib15SequenceIterRefV"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Returns an iterator pointing to the position where "},{"type":"codeVoice","code":"data"},{"type":"text","text":" would"},{"type":"text","text":" "},{"type":"text","text":"be inserted according to "},{"type":"codeVoice","code":"cmpFunc"},{"type":"text","text":" and "},{"type":"codeVoice","code":"cmpData"},{"type":"text","text":"."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SequenceProtocol\/search(data:cmpFunc:cmpData:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/sequenceprotocol\/search(data:cmpfunc:cmpdata:)"},"doc://GLib/documentation/GLib/SequenceProtocol/append(data:)":{"role":"symbol","title":"append(data:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"append"},{"kind":"text","text":"("},{"kind":"externalParam","text":"data"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"SequenceIterRef","preciseIdentifier":"s:4GLib15SequenceIterRefV"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Adds a new item to the end of "},{"type":"codeVoice","code":"seq"},{"type":"text","text":"."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SequenceProtocol\/append(data:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/sequenceprotocol\/append(data:)"},"doc://GLib/documentation/GLib/SequenceIterCompareFunc":{"role":"symbol","title":"SequenceIterCompareFunc","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"SequenceIterCompareFunc"}],"abstract":[{"type":"text","text":"A "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/SequenceIterCompareFunc"},{"type":"text","text":" is a function used to compare iterators."},{"type":"text","text":" "},{"type":"text","text":"It must return zero if the iterators compare equal, a negative value"},{"type":"text","text":" "},{"type":"text","text":"if "},{"type":"codeVoice","code":"a"},{"type":"text","text":" comes before "},{"type":"codeVoice","code":"b"},{"type":"text","text":", and a positive value if "},{"type":"codeVoice","code":"b"},{"type":"text","text":" comes before "},{"type":"codeVoice","code":"a"},{"type":"text","text":"."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SequenceIterCompareFunc","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SequenceIterCompareFunc"}],"url":"\/documentation\/glib\/sequenceitercomparefunc"},"doc://GLib/documentation/GLib/SequenceProtocol/getIterAt(pos:)":{"role":"symbol","title":"getIterAt(pos:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getIterAt"},{"kind":"text","text":"("},{"kind":"externalParam","text":"pos"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"SequenceIterRef","preciseIdentifier":"s:4GLib15SequenceIterRefV"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Returns the iterator at position "},{"type":"codeVoice","code":"pos"},{"type":"text","text":". If "},{"type":"codeVoice","code":"pos"},{"type":"text","text":" is negative or larger"},{"type":"text","text":" "},{"type":"text","text":"than the number of items in "},{"type":"codeVoice","code":"seq"},{"type":"text","text":", the end iterator is returned."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SequenceProtocol\/getIterAt(pos:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/sequenceprotocol\/getiterat(pos:)"},"doc://GLib/documentation/GLib/ReferenceSequenceProtocol":{"role":"symbol","title":"ReferenceSequenceProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ReferenceSequenceProtocol"}],"abstract":[{"type":"text","text":"Protocol for a Reference "},{"type":"codeVoice","code":"Sequence"},{"type":"text","text":", representing each element in a sequence."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/ReferenceSequenceProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ReferenceSequenceProtocol"}],"url":"\/documentation\/glib\/referencesequenceprotocol"},"doc://GLib/documentation/GLib/SequenceProtocol/sortIter(cmpFunc:cmpData:)":{"role":"symbol","title":"sortIter(cmpFunc:cmpData:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"sortIter"},{"kind":"text","text":"("},{"kind":"externalParam","text":"cmpFunc"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GSequenceIterCompareFunc","preciseIdentifier":"c:@T@GSequenceIterCompareFunc"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"cmpData"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Like "},{"type":"codeVoice","code":"g_sequence_sort()"},{"type":"text","text":", but uses a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/SequenceIterCompareFunc"},{"type":"text","text":" instead"},{"type":"text","text":" "},{"type":"text","text":"of a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/CompareDataFunc"},{"type":"text","text":" as the compare function"}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SequenceProtocol\/sortIter(cmpFunc:cmpData:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/sequenceprotocol\/sortiter(cmpfunc:cmpdata:)"},"doc://GLib/documentation/GLib/SequenceProtocol/free()":{"role":"symbol","title":"free()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"free"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Frees the memory allocated for "},{"type":"codeVoice","code":"seq"},{"type":"text","text":". If "},{"type":"codeVoice","code":"seq"},{"type":"text","text":" has a data destroy"},{"type":"text","text":" "},{"type":"text","text":"function associated with it, that function is called on all items"},{"type":"text","text":" "},{"type":"text","text":"in "},{"type":"codeVoice","code":"seq"},{"type":"text","text":"."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SequenceProtocol\/free()","kind":"symbol","type":"topic","url":"\/documentation\/glib\/sequenceprotocol\/free()"},"doc://GLib/documentation/GLib/SequenceProtocol/insertSorted(data:cmpFunc:cmpData:)":{"role":"symbol","title":"insertSorted(data:cmpFunc:cmpData:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"insertSorted"},{"kind":"text","text":"("},{"kind":"externalParam","text":"data"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"cmpFunc"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GCompareDataFunc","preciseIdentifier":"c:@T@GCompareDataFunc"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"cmpData"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"SequenceIterRef","preciseIdentifier":"s:4GLib15SequenceIterRefV"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Inserts "},{"type":"codeVoice","code":"data"},{"type":"text","text":" into "},{"type":"codeVoice","code":"seq"},{"type":"text","text":" using "},{"type":"codeVoice","code":"cmpFunc"},{"type":"text","text":" to determine the new"},{"type":"text","text":" "},{"type":"text","text":"position. The sequence must already be sorted according to "},{"type":"codeVoice","code":"cmpFunc"},{"type":"text","text":";"},{"type":"text","text":" "},{"type":"text","text":"otherwise the new position of "},{"type":"codeVoice","code":"data"},{"type":"text","text":" is undefined."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SequenceProtocol\/insertSorted(data:cmpFunc:cmpData:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/sequenceprotocol\/insertsorted(data:cmpfunc:cmpdata:)"},"doc://GLib/documentation/GLib/TypedSequenceRef":{"role":"symbol","title":"TypedSequenceRef","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TypedSequenceRef"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"TypedSequenceRef"},{"type":"text","text":" struct acts as a lightweight, typed wrapper around "},{"type":"codeVoice","code":"GList"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"with the associated "},{"type":"codeVoice","code":"Element"},{"type":"text","text":" representing the type of"},{"type":"text","text":" "},{"type":"text","text":"the elements stored in the list."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/TypedSequenceRef","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TypedSequenceRef"}],"url":"\/documentation\/glib\/typedsequenceref"},"doc://GLib/documentation/GLib/SequenceProtocol/getBeginIter()":{"role":"symbol","title":"getBeginIter()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getBeginIter"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"SequenceIterRef","preciseIdentifier":"s:4GLib15SequenceIterRefV"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Returns the begin iterator for "},{"type":"codeVoice","code":"seq"},{"type":"text","text":"."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SequenceProtocol\/getBeginIter()","kind":"symbol","type":"topic","url":"\/documentation\/glib\/sequenceprotocol\/getbeginiter()"},"doc://GLib/documentation/GLib/ReferenceSequence":{"role":"symbol","title":"ReferenceSequence","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ReferenceSequence"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"ReferenceSequence"},{"type":"text","text":" class acts as a Reference wrapper around "},{"type":"codeVoice","code":"GSequence"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"with the associated "},{"type":"codeVoice","code":"Element"},{"type":"text","text":" representing the type of"},{"type":"text","text":" "},{"type":"text","text":"the elements stored in the list."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/ReferenceSequence","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ReferenceSequence"}],"url":"\/documentation\/glib\/referencesequence"},"doc://GLib/documentation/GLib/TypedSequenceProtocol":{"role":"symbol","title":"TypedSequenceProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"TypedSequenceProtocol"}],"abstract":[{"type":"text","text":"Protocol for a typed "},{"type":"codeVoice","code":"Sequence"},{"type":"text","text":", representing each element in a sequence"},{"type":"text","text":" "},{"type":"text","text":"with a pointer pointing to the element data."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/TypedSequenceProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TypedSequenceProtocol"}],"url":"\/documentation\/glib\/typedsequenceprotocol"},"doc://GLib/documentation/GLib/SequenceProtocol/beginIter":{"role":"symbol","title":"beginIter","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"beginIter"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SequenceIterRef","preciseIdentifier":"s:4GLib15SequenceIterRefV"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Returns the begin iterator for "},{"type":"codeVoice","code":"seq"},{"type":"text","text":"."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SequenceProtocol\/beginIter","kind":"symbol","type":"topic","url":"\/documentation\/glib\/sequenceprotocol\/beginiter"},"doc://GLib/documentation/GLib/SequenceProtocol/getEndIter()":{"role":"symbol","title":"getEndIter()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getEndIter"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"SequenceIterRef","preciseIdentifier":"s:4GLib15SequenceIterRefV"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Returns the end iterator for seg"}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SequenceProtocol\/getEndIter()","kind":"symbol","type":"topic","url":"\/documentation\/glib\/sequenceprotocol\/getenditer()"},"doc://GLib/documentation/GLib/SequenceRef":{"role":"symbol","title":"SequenceRef","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SequenceRef"}],"abstract":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Sequence"},{"type":"text","text":" struct is an opaque data type representing a"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"..\/Protocols\/SequenceProtocol.html"},{"type":"text","text":" data type."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SequenceRef","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SequenceRef"}],"url":"\/documentation\/glib\/sequenceref"},"doc://GLib/documentation/GLib":{"role":"collection","title":"GLib","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib","kind":"symbol","type":"topic","url":"\/documentation\/glib"},"doc://GLib/documentation/GLib/ReferenceSequenceRef":{"role":"symbol","title":"ReferenceSequenceRef","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ReferenceSequenceRef"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"ReferenceSequenceRef"},{"type":"text","text":" struct acts as a lightweight, Reference wrapper around "},{"type":"codeVoice","code":"GList"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"with the associated "},{"type":"codeVoice","code":"Element"},{"type":"text","text":" representing the type of"},{"type":"text","text":" "},{"type":"text","text":"the elements stored in the list."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/ReferenceSequenceRef","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ReferenceSequenceRef"}],"url":"\/documentation\/glib\/referencesequenceref"},"doc://GLib/documentation/GLib/CompareDataFunc":{"role":"symbol","title":"CompareDataFunc","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"CompareDataFunc"}],"abstract":[{"type":"text","text":"Specifies the type of a comparison function used to compare two"},{"type":"text","text":" "},{"type":"text","text":"values.  The function should return a negative integer if the first"},{"type":"text","text":" "},{"type":"text","text":"value comes before the second, 0 if they are equal, or a positive"},{"type":"text","text":" "},{"type":"text","text":"integer if the first value comes after the second."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/CompareDataFunc","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CompareDataFunc"}],"url":"\/documentation\/glib\/comparedatafunc"}}}