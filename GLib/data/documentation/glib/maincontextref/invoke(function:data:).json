{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"invoke"},{"kind":"text","text":"("},{"kind":"externalParam","text":"function"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GSourceFunc","preciseIdentifier":"c:@T@GSourceFunc"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"data"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"? = nil)"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If "},{"type":"codeVoice","code":"context"},{"type":"text","text":" is "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" then the global-default main context — as"},{"type":"text","text":" "},{"type":"text","text":"returned by [func"},{"type":"codeVoice","code":"GLib.MainContext.default"},{"type":"text","text":"] — is used."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If "},{"type":"codeVoice","code":"context"},{"type":"text","text":" is owned by the current thread, "},{"type":"codeVoice","code":"function"},{"type":"text","text":" is called"},{"type":"text","text":" "},{"type":"text","text":"directly.  Otherwise, if "},{"type":"codeVoice","code":"context"},{"type":"text","text":" is the thread-default main context"},{"type":"text","text":" "},{"type":"text","text":"of the current thread and [method"},{"type":"codeVoice","code":"GLib.MainContext.acquire"},{"type":"text","text":"] succeeds, then"},{"type":"text","text":" "},{"type":"codeVoice","code":"function"},{"type":"text","text":" is called and [method"},{"type":"codeVoice","code":"GLib.MainContext.release"},{"type":"text","text":"] is called"},{"type":"text","text":" "},{"type":"text","text":"afterwards."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In any other case, an idle source is created to call "},{"type":"codeVoice","code":"function"},{"type":"text","text":" and"},{"type":"text","text":" "},{"type":"text","text":"that source is attached to "},{"type":"codeVoice","code":"context"},{"type":"text","text":" (presumably to be run in another"},{"type":"text","text":" "},{"type":"text","text":"thread).  The idle source is attached with [const"},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/priorityDefault"},{"type":"text","text":"]"},{"type":"text","text":" "},{"type":"text","text":"priority.  If you want a different priority, use"},{"type":"text","text":" "},{"type":"text","text":"[method"},{"type":"codeVoice","code":"GLib.MainContext.invoke_full"},{"type":"text","text":"]."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Note that, as with normal idle functions, "},{"type":"codeVoice","code":"function"},{"type":"text","text":" should probably"},{"type":"text","text":" "},{"type":"text","text":"return "},{"type":"codeVoice","code":"false"},{"type":"text","text":".  If it returns "},{"type":"codeVoice","code":"true"},{"type":"text","text":", it will be continuously run in a"},{"type":"text","text":" "},{"type":"text","text":"loop (and may prevent this call from returning)."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/glib\/maincontextref\/invoke(function:data:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/GLib\/documentation\/GLib\/MainContextRef\/invoke(function:data:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Invokes a function in such a way that "},{"type":"codeVoice","code":"context"},{"type":"text","text":" is owned during the"},{"type":"text","text":" "},{"type":"text","text":"invocation of "},{"type":"codeVoice","code":"function"},{"type":"text","text":"."}],"kind":"symbol","metadata":{"role":"symbol","title":"invoke(function:data:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"invoke"},{"kind":"text","text":"("},{"kind":"externalParam","text":"function"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GSourceFunc","preciseIdentifier":"c:@T@GSourceFunc"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"data"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?)"}],"symbolKind":"method","externalID":"s:4GLib19MainContextProtocolPAAE6invoke8function4datays5Int32VSvSgXCSg_AItF::SYNTHESIZED::s:4GLib14MainContextRefV","extendedModule":"GLib","modules":[{"name":"GLib"}]},"hierarchy":{"paths":[["doc:\/\/GLib\/documentation\/GLib","doc:\/\/GLib\/documentation\/GLib\/MainContextRef","doc:\/\/GLib\/documentation\/GLib\/MainContextRef\/MainContextProtocol-Implementations"]]},"references":{"doc://GLib/documentation/GLib/MainContextRef/invoke(function:data:)":{"role":"symbol","title":"invoke(function:data:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"invoke"},{"kind":"text","text":"("},{"kind":"externalParam","text":"function"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GSourceFunc","preciseIdentifier":"c:@T@GSourceFunc"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"data"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Invokes a function in such a way that "},{"type":"codeVoice","code":"context"},{"type":"text","text":" is owned during the"},{"type":"text","text":" "},{"type":"text","text":"invocation of "},{"type":"codeVoice","code":"function"},{"type":"text","text":"."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/MainContextRef\/invoke(function:data:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/maincontextref\/invoke(function:data:)"},"doc://GLib/documentation/GLib/MainContextRef/MainContextProtocol-Implementations":{"role":"collectionGroup","title":"MainContextProtocol Implementations","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib\/MainContextRef\/MainContextProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/glib\/maincontextref\/maincontextprotocol-implementations"},"doc://GLib/documentation/GLib/MainContextRef":{"role":"symbol","title":"MainContextRef","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MainContextRef"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"GMainContext"},{"type":"text","text":" struct is an opaque data"},{"type":"text","text":" "},{"type":"text","text":"type representing a set of sources to be handled in a main loop."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/MainContextRef","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MainContextRef"}],"url":"\/documentation\/glib\/maincontextref"},"doc://GLib/documentation/GLib/priorityDefault":{"role":"symbol","title":"priorityDefault","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"priorityDefault"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int32","preciseIdentifier":"s:s5Int32V"}],"abstract":[{"type":"text","text":"Use this for default priority event sources."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/priorityDefault","kind":"symbol","type":"topic","url":"\/documentation\/glib\/prioritydefault"},"doc://GLib/documentation/GLib":{"role":"collection","title":"GLib","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib","kind":"symbol","type":"topic","url":"\/documentation\/glib"}}}