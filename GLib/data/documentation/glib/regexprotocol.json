{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RegexProtocol"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/GLib\/documentation\/GLib\/PointerWrapper","preciseIdentifier":"s:4GLib14PointerWrapperP","text":"PointerWrapper"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"GRegex"},{"type":"text","text":" implements regular expression pattern matching using syntax and"},{"type":"text","text":" "},{"type":"text","text":"semantics similar to Perl regular expression. See the"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"man:pcrepattern(3)"},{"type":"text","text":" for the syntax definition."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Some functions accept a "},{"type":"codeVoice","code":"start_position"},{"type":"text","text":" argument, setting it differs"},{"type":"text","text":" "},{"type":"text","text":"from just passing over a shortened string and setting "},{"type":"codeVoice","code":"notbol"},{"type":"text","text":" "},{"type":"text","text":"in the case of a pattern that begins with any kind of lookbehind assertion."},{"type":"text","text":" "},{"type":"text","text":"For example, consider the pattern “\\Biss\\B” which finds occurrences of “iss”"},{"type":"text","text":" "},{"type":"text","text":"in the middle of words. (”\\B” matches only if the current position in the"},{"type":"text","text":" "},{"type":"text","text":"subject is not a word boundary.) When applied to the string “Mississipi”"},{"type":"text","text":" "},{"type":"text","text":"from the fourth byte, namely “issipi”, it does not match, because “\\B” is"},{"type":"text","text":" "},{"type":"text","text":"always false at the start of the subject, which is deemed to be a word"},{"type":"text","text":" "},{"type":"text","text":"boundary. However, if the entire string is passed , but with"},{"type":"text","text":" "},{"type":"codeVoice","code":"start_position"},{"type":"text","text":" set to 4, it finds the second occurrence of “iss” because"},{"type":"text","text":" "},{"type":"text","text":"it is able to look behind the starting point to discover that it is"},{"type":"text","text":" "},{"type":"text","text":"preceded by a letter."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Note that, unless you set the "},{"type":"codeVoice","code":"raw"},{"type":"text","text":" flag, all the strings passed"},{"type":"text","text":" "},{"type":"text","text":"to these functions must be encoded in UTF-8. The lengths and the positions"},{"type":"text","text":" "},{"type":"text","text":"inside the strings are in bytes and not in characters, so, for instance,"},{"type":"text","text":" "},{"type":"text","text":"“\\xc3\\xa0” (i.e. “à”) is two bytes long but it is treated as a"},{"type":"text","text":" "},{"type":"text","text":"single character. If you set "},{"type":"codeVoice","code":"raw"},{"type":"text","text":" the strings can be non-valid"},{"type":"text","text":" "},{"type":"text","text":"UTF-8 strings and a byte is treated as a character, so “\\xc3\\xa0” is two"},{"type":"text","text":" "},{"type":"text","text":"bytes and two characters long."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"When matching a pattern, “\\n” matches only against a “\\n” character in"},{"type":"text","text":" "},{"type":"text","text":"the string, and “\\r” matches only a “\\r” character. To match any newline"},{"type":"text","text":" "},{"type":"text","text":"sequence use “\\R”. This particular group matches either the two-character"},{"type":"text","text":" "},{"type":"text","text":"sequence CR + LF (”\\r\\n”), or one of the single characters LF (linefeed,"},{"type":"text","text":" "},{"type":"text","text":"U+000A, “\\n”), VT vertical tab, U+000B, “\\v”), FF (formfeed, U+000C, “\\f”),"},{"type":"text","text":" "},{"type":"text","text":"CR (carriage return, U+000D, “\\r”), NEL (next line, U+0085), LS (line"},{"type":"text","text":" "},{"type":"text","text":"separator, U+2028), or PS (paragraph separator, U+2029)."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The behaviour of the dot, circumflex, and dollar metacharacters are"},{"type":"text","text":" "},{"type":"text","text":"affected by newline characters, the default is to recognize any newline"},{"type":"text","text":" "},{"type":"text","text":"character (the same characters recognized by “\\R”). This can be changed"},{"type":"text","text":" "},{"type":"text","text":"with "},{"type":"codeVoice","code":"G_REGEX_NEWLINE_CR"},{"type":"text","text":", "},{"type":"codeVoice","code":"G_REGEX_NEWLINE_LF"},{"type":"text","text":" and "},{"type":"codeVoice","code":"G_REGEX_NEWLINE_CRLF"},{"type":"text","text":" "},{"type":"text","text":"compile options, and with "},{"type":"codeVoice","code":"G_REGEX_MATCH_NEWLINE_ANY"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"codeVoice","code":"G_REGEX_MATCH_NEWLINE_CR"},{"type":"text","text":", "},{"type":"codeVoice","code":"G_REGEX_MATCH_NEWLINE_LF"},{"type":"text","text":" and"},{"type":"text","text":" "},{"type":"codeVoice","code":"G_REGEX_MATCH_NEWLINE_CRLF"},{"type":"text","text":" match options. These settings are also"},{"type":"text","text":" "},{"type":"text","text":"relevant when compiling a pattern if "},{"type":"codeVoice","code":"G_REGEX_EXTENDED"},{"type":"text","text":" is set, and an"},{"type":"text","text":" "},{"type":"text","text":"unescaped “#” outside a character class is encountered. This indicates"},{"type":"text","text":" "},{"type":"text","text":"a comment that lasts until after the next newline."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Creating and manipulating the same "},{"type":"codeVoice","code":"GRegex"},{"type":"text","text":" structure from different"},{"type":"text","text":" "},{"type":"text","text":"threads is not a problem as "},{"type":"codeVoice","code":"GRegex"},{"type":"text","text":" does not modify its internal"},{"type":"text","text":" "},{"type":"text","text":"state between creation and destruction, on the other hand "},{"type":"codeVoice","code":"GMatchInfo"},{"type":"text","text":" "},{"type":"text","text":"is not threadsafe."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The regular expressions low-level functionalities are obtained through"},{"type":"text","text":" "},{"type":"text","text":"the excellent "},{"type":"reference","isActive":true,"identifier":"http:\/\/www.pcre.org\/"},{"type":"text","text":" library written by Philip Hazel."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/RegexProtocol"},{"type":"text","text":" protocol exposes the methods and properties of an underlying "},{"type":"codeVoice","code":"GRegex"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"The default implementation of these can be found in the protocol extension below."},{"type":"text","text":" "},{"type":"text","text":"For a concrete class that implements these methods and properties, see "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Regex"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Alternatively, use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/RegexRef"},{"type":"text","text":" as a lighweight, "},{"type":"codeVoice","code":"unowned"},{"type":"text","text":" reference if you already have an instance you just want to use."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/glib\/regexprotocol"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/GLib\/documentation\/GLib\/PointerWrapper"],"kind":"relationships","title":"Inherits From","type":"inheritsFrom"},{"identifiers":["doc:\/\/GLib\/documentation\/GLib\/Regex","doc:\/\/GLib\/documentation\/GLib\/RegexRef"],"kind":"relationships","title":"Conforming Types","type":"conformingTypes"}],"identifier":{"url":"doc:\/\/GLib\/documentation\/GLib\/RegexProtocol","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"GRegex"},{"type":"text","text":" is the “compiled” form of a regular expression pattern."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RegexProtocol"}],"title":"RegexProtocol","roleHeading":"Protocol","role":"symbol","symbolKind":"protocol","externalID":"s:4GLib13RegexProtocolP","modules":[{"name":"GLib"}],"navigatorTitle":[{"kind":"identifier","text":"RegexProtocol"}]},"hierarchy":{"paths":[["doc:\/\/GLib\/documentation\/GLib"]]},"topicSections":[{"title":"Instance Properties","identifiers":["doc:\/\/GLib\/documentation\/GLib\/RegexProtocol\/captureCount","doc:\/\/GLib\/documentation\/GLib\/RegexProtocol\/compileFlags","doc:\/\/GLib\/documentation\/GLib\/RegexProtocol\/hasCrOrLf","doc:\/\/GLib\/documentation\/GLib\/RegexProtocol\/matchFlags","doc:\/\/GLib\/documentation\/GLib\/RegexProtocol\/maxBackref","doc:\/\/GLib\/documentation\/GLib\/RegexProtocol\/maxLookbehind","doc:\/\/GLib\/documentation\/GLib\/RegexProtocol\/pattern","doc:\/\/GLib\/documentation\/GLib\/RegexProtocol\/regex_ptr-66oa5"]},{"title":"Instance Methods","identifiers":["doc:\/\/GLib\/documentation\/GLib\/RegexProtocol\/getCaptureCount()","doc:\/\/GLib\/documentation\/GLib\/RegexProtocol\/getCompileFlags()","doc:\/\/GLib\/documentation\/GLib\/RegexProtocol\/getHasCrOrLf()","doc:\/\/GLib\/documentation\/GLib\/RegexProtocol\/getMatchFlags()","doc:\/\/GLib\/documentation\/GLib\/RegexProtocol\/getMaxBackref()","doc:\/\/GLib\/documentation\/GLib\/RegexProtocol\/getMaxLookbehind()","doc:\/\/GLib\/documentation\/GLib\/RegexProtocol\/getPattern()","doc:\/\/GLib\/documentation\/GLib\/RegexProtocol\/getStringNumber(name:)","doc:\/\/GLib\/documentation\/GLib\/RegexProtocol\/match(string:matchOptions:matchInfo:)","doc:\/\/GLib\/documentation\/GLib\/RegexProtocol\/matchAll(string:matchOptions:matchInfo:)","doc:\/\/GLib\/documentation\/GLib\/RegexProtocol\/matchAllFull(string:stringLen:startPosition:matchOptions:matchInfo:)","doc:\/\/GLib\/documentation\/GLib\/RegexProtocol\/matchFull(string:stringLen:startPosition:matchOptions:matchInfo:)","doc:\/\/GLib\/documentation\/GLib\/RegexProtocol\/ref()","doc:\/\/GLib\/documentation\/GLib\/RegexProtocol\/replace(string:stringLen:startPosition:replacement:matchOptions:)","doc:\/\/GLib\/documentation\/GLib\/RegexProtocol\/replaceEval(string:stringLen:startPosition:matchOptions:eval:userData:)","doc:\/\/GLib\/documentation\/GLib\/RegexProtocol\/replaceLiteral(string:stringLen:startPosition:replacement:matchOptions:)","doc:\/\/GLib\/documentation\/GLib\/RegexProtocol\/split(string:matchOptions:)","doc:\/\/GLib\/documentation\/GLib\/RegexProtocol\/splitFull(string:stringLen:startPosition:matchOptions:maxTokens:)","doc:\/\/GLib\/documentation\/GLib\/RegexProtocol\/unref()"]}],"references":{"doc://GLib/documentation/GLib/RegexProtocol/getStringNumber(name:)":{"role":"symbol","title":"getStringNumber(name:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getStringNumber"},{"kind":"text","text":"("},{"kind":"externalParam","text":"name"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">!) -> "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"abstract":[{"type":"text","text":"Retrieves the number of the subexpression named "},{"type":"codeVoice","code":"name"},{"type":"text","text":"."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/RegexProtocol\/getStringNumber(name:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/regexprotocol\/getstringnumber(name:)"},"man:pcrepattern(3)":{"title":"PCRE documentation","titleInlineContent":[{"type":"text","text":"PCRE documentation"}],"type":"link","identifier":"man:pcrepattern(3)","url":"man:pcrepattern(3)"},"doc://GLib/documentation/GLib/RegexProtocol/replaceLiteral(string:stringLen:startPosition:replacement:matchOptions:)":{"role":"symbol","title":"replaceLiteral(string:stringLen:startPosition:replacement:matchOptions:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"replaceLiteral"},{"kind":"text","text":"("},{"kind":"externalParam","text":"string"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"stringLen"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gssize","preciseIdentifier":"c:@T@gssize"},{"kind":"text","text":", "},{"kind":"externalParam","text":"startPosition"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"replacement"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"matchOptions"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"RegexMatchFlags","preciseIdentifier":"s:4GLib15RegexMatchFlagsV"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Replaces all occurrences of the pattern in "},{"type":"codeVoice","code":"regex"},{"type":"text","text":" with the"},{"type":"text","text":" "},{"type":"text","text":"replacement text. "},{"type":"codeVoice","code":"replacement"},{"type":"text","text":" is replaced literally, to"},{"type":"text","text":" "},{"type":"text","text":"include backreferences use "},{"type":"codeVoice","code":"g_regex_replace()"},{"type":"text","text":"."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/RegexProtocol\/replaceLiteral(string:stringLen:startPosition:replacement:matchOptions:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/regexprotocol\/replaceliteral(string:stringlen:startposition:replacement:matchoptions:)"},"doc://GLib/documentation/GLib/RegexProtocol/replaceEval(string:stringLen:startPosition:matchOptions:eval:userData:)":{"role":"symbol","title":"replaceEval(string:stringLen:startPosition:matchOptions:eval:userData:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"replaceEval"},{"kind":"text","text":"("},{"kind":"externalParam","text":"string"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"stringLen"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gssize","preciseIdentifier":"c:@T@gssize"},{"kind":"text","text":", "},{"kind":"externalParam","text":"startPosition"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"matchOptions"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"RegexMatchFlags","preciseIdentifier":"s:4GLib15RegexMatchFlagsV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"eval"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GRegexEvalCallback","preciseIdentifier":"c:@T@GRegexEvalCallback"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"userData"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Replaces occurrences of the pattern in regex with the output of"},{"type":"text","text":" "},{"type":"codeVoice","code":"eval"},{"type":"text","text":" for that occurrence."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/RegexProtocol\/replaceEval(string:stringLen:startPosition:matchOptions:eval:userData:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/regexprotocol\/replaceeval(string:stringlen:startposition:matchoptions:eval:userdata:)"},"doc://GLib/documentation/GLib/RegexProtocol/matchAll(string:matchOptions:matchInfo:)":{"role":"symbol","title":"matchAll(string:matchOptions:matchInfo:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"matchAll"},{"kind":"text","text":"("},{"kind":"externalParam","text":"string"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"matchOptions"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"RegexMatchFlags","preciseIdentifier":"s:4GLib15RegexMatchFlagsV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"matchInfo"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GMatchInfo"},{"kind":"text","text":">?>!) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Using the standard algorithm for regular expression matching only"},{"type":"text","text":" "},{"type":"text","text":"the longest match in the string is retrieved. This function uses"},{"type":"text","text":" "},{"type":"text","text":"a different algorithm so it can retrieve all the possible matches."},{"type":"text","text":" "},{"type":"text","text":"For more documentation see "},{"type":"codeVoice","code":"g_regex_match_all_full()"},{"type":"text","text":"."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/RegexProtocol\/matchAll(string:matchOptions:matchInfo:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/regexprotocol\/matchall(string:matchoptions:matchinfo:)"},"doc://GLib/documentation/GLib/RegexProtocol/matchFlags":{"role":"symbol","title":"matchFlags","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"matchFlags"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"RegexMatchFlags","preciseIdentifier":"s:4GLib15RegexMatchFlagsV"}],"abstract":[{"type":"text","text":"Returns the match options that "},{"type":"codeVoice","code":"regex"},{"type":"text","text":" was created with."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/RegexProtocol\/matchFlags","kind":"symbol","type":"topic","url":"\/documentation\/glib\/regexprotocol\/matchflags"},"doc://GLib/documentation/GLib/RegexProtocol/getCaptureCount()":{"role":"symbol","title":"getCaptureCount()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getCaptureCount"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"abstract":[{"type":"text","text":"Returns the number of capturing subpatterns in the pattern."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/RegexProtocol\/getCaptureCount()","kind":"symbol","type":"topic","url":"\/documentation\/glib\/regexprotocol\/getcapturecount()"},"doc://GLib/documentation/GLib/RegexProtocol/hasCrOrLf":{"role":"symbol","title":"hasCrOrLf","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"hasCrOrLf"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Checks whether the pattern contains explicit CR or LF references."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/RegexProtocol\/hasCrOrLf","kind":"symbol","type":"topic","url":"\/documentation\/glib\/regexprotocol\/hascrorlf"},"doc://GLib/documentation/GLib/RegexProtocol/replace(string:stringLen:startPosition:replacement:matchOptions:)":{"role":"symbol","title":"replace(string:stringLen:startPosition:replacement:matchOptions:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"replace"},{"kind":"text","text":"("},{"kind":"externalParam","text":"string"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"stringLen"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gssize","preciseIdentifier":"c:@T@gssize"},{"kind":"text","text":", "},{"kind":"externalParam","text":"startPosition"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"replacement"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"matchOptions"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"RegexMatchFlags","preciseIdentifier":"s:4GLib15RegexMatchFlagsV"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Replaces all occurrences of the pattern in "},{"type":"codeVoice","code":"regex"},{"type":"text","text":" with the"},{"type":"text","text":" "},{"type":"text","text":"replacement text. Backreferences of the form "},{"type":"codeVoice","code":"\\number"},{"type":"text","text":" or"},{"type":"text","text":" "},{"type":"codeVoice","code":"\\g<number>"},{"type":"text","text":" in the replacement text are interpolated by the"},{"type":"text","text":" "},{"type":"text","text":"number-th captured subexpression of the match, "},{"type":"codeVoice","code":"\\g<name>"},{"type":"text","text":" refers"},{"type":"text","text":" "},{"type":"text","text":"to the captured subexpression with the given name. "},{"type":"codeVoice","code":"\\0"},{"type":"text","text":" refers"},{"type":"text","text":" "},{"type":"text","text":"to the complete match, but "},{"type":"codeVoice","code":"\\0"},{"type":"text","text":" followed by a number is the octal"},{"type":"text","text":" "},{"type":"text","text":"representation of a character. To include a literal "},{"type":"codeVoice","code":"\\"},{"type":"text","text":" in the"},{"type":"text","text":" "},{"type":"text","text":"replacement, write "},{"type":"codeVoice","code":"\\\\\\\\"},{"type":"text","text":"."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/RegexProtocol\/replace(string:stringLen:startPosition:replacement:matchOptions:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/regexprotocol\/replace(string:stringlen:startposition:replacement:matchoptions:)"},"doc://GLib/documentation/GLib/RegexProtocol/unref()":{"role":"symbol","title":"unref()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unref"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Decreases reference count of "},{"type":"codeVoice","code":"regex"},{"type":"text","text":" by 1. When reference count drops"},{"type":"text","text":" "},{"type":"text","text":"to zero, it frees all the memory associated with the regex structure."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/RegexProtocol\/unref()","kind":"symbol","type":"topic","url":"\/documentation\/glib\/regexprotocol\/unref()"},"doc://GLib/documentation/GLib/RegexRef":{"role":"symbol","title":"RegexRef","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RegexRef"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"GRegex"},{"type":"text","text":" is the “compiled” form of a regular expression pattern."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/RegexRef","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"RegexRef"}],"url":"\/documentation\/glib\/regexref"},"doc://GLib/documentation/GLib/RegexProtocol/regex_ptr-66oa5":{"defaultImplementations":1,"role":"symbol","title":"regex_ptr","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"regex_ptr"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GRegex"},{"kind":"text","text":">!"}],"abstract":[{"type":"text","text":"Typed pointer to the underlying "},{"type":"codeVoice","code":"GRegex"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/RegexProtocol\/regex_ptr-66oa5","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/glib\/regexprotocol\/regex_ptr-66oa5"},"doc://GLib/documentation/GLib/RegexProtocol/getPattern()":{"role":"symbol","title":"getPattern()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getPattern"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Gets the pattern string associated with "},{"type":"codeVoice","code":"regex"},{"type":"text","text":", i.e. a copy of"},{"type":"text","text":" "},{"type":"text","text":"the string passed to "},{"type":"codeVoice","code":"g_regex_new()"},{"type":"text","text":"."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/RegexProtocol\/getPattern()","kind":"symbol","type":"topic","url":"\/documentation\/glib\/regexprotocol\/getpattern()"},"doc://GLib/documentation/GLib/RegexProtocol/maxLookbehind":{"role":"symbol","title":"maxLookbehind","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"maxLookbehind"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"abstract":[{"type":"text","text":"Gets the number of characters in the longest lookbehind assertion in the"},{"type":"text","text":" "},{"type":"text","text":"pattern. This information is useful when doing multi-segment matching using"},{"type":"text","text":" "},{"type":"text","text":"the partial matching facilities."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/RegexProtocol\/maxLookbehind","kind":"symbol","type":"topic","url":"\/documentation\/glib\/regexprotocol\/maxlookbehind"},"doc://GLib/documentation/GLib/RegexProtocol/splitFull(string:stringLen:startPosition:matchOptions:maxTokens:)":{"role":"symbol","title":"splitFull(string:stringLen:startPosition:matchOptions:maxTokens:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"splitFull"},{"kind":"text","text":"("},{"kind":"externalParam","text":"string"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"stringLen"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gssize","preciseIdentifier":"c:@T@gssize"},{"kind":"text","text":", "},{"kind":"externalParam","text":"startPosition"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"matchOptions"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"RegexMatchFlags","preciseIdentifier":"s:4GLib15RegexMatchFlagsV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"maxTokens"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">?>!"}],"abstract":[{"type":"text","text":"Breaks the string on the pattern, and returns an array of the tokens."},{"type":"text","text":" "},{"type":"text","text":"If the pattern contains capturing parentheses, then the text for each"},{"type":"text","text":" "},{"type":"text","text":"of the substrings will also be returned. If the pattern does not match"},{"type":"text","text":" "},{"type":"text","text":"anywhere in the string, then the whole string is returned as the first"},{"type":"text","text":" "},{"type":"text","text":"token."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/RegexProtocol\/splitFull(string:stringLen:startPosition:matchOptions:maxTokens:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/regexprotocol\/splitfull(string:stringlen:startposition:matchoptions:maxtokens:)"},"doc://GLib/documentation/GLib/RegexProtocol/compileFlags":{"role":"symbol","title":"compileFlags","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"compileFlags"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"RegexCompileFlags","preciseIdentifier":"s:4GLib17RegexCompileFlagsV"}],"abstract":[{"type":"text","text":"Returns the compile options that "},{"type":"codeVoice","code":"regex"},{"type":"text","text":" was created with."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/RegexProtocol\/compileFlags","kind":"symbol","type":"topic","url":"\/documentation\/glib\/regexprotocol\/compileflags"},"doc://GLib/documentation/GLib/RegexProtocol/split(string:matchOptions:)":{"role":"symbol","title":"split(string:matchOptions:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"split"},{"kind":"text","text":"("},{"kind":"externalParam","text":"string"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"matchOptions"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"RegexMatchFlags","preciseIdentifier":"s:4GLib15RegexMatchFlagsV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">?>!"}],"abstract":[{"type":"text","text":"Breaks the string on the pattern, and returns an array of the tokens."},{"type":"text","text":" "},{"type":"text","text":"If the pattern contains capturing parentheses, then the text for each"},{"type":"text","text":" "},{"type":"text","text":"of the substrings will also be returned. If the pattern does not match"},{"type":"text","text":" "},{"type":"text","text":"anywhere in the string, then the whole string is returned as the first"},{"type":"text","text":" "},{"type":"text","text":"token."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/RegexProtocol\/split(string:matchOptions:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/regexprotocol\/split(string:matchoptions:)"},"doc://GLib/documentation/GLib/RegexProtocol/ref()":{"role":"symbol","title":"ref()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"ref"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"RegexRef","preciseIdentifier":"s:4GLib8RegexRefV"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Increases reference count of "},{"type":"codeVoice","code":"regex"},{"type":"text","text":" by 1."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/RegexProtocol\/ref()","kind":"symbol","type":"topic","url":"\/documentation\/glib\/regexprotocol\/ref()"},"http://www.pcre.org/":{"title":"PCRE","titleInlineContent":[{"type":"text","text":"PCRE"}],"type":"link","identifier":"http:\/\/www.pcre.org\/","url":"http:\/\/www.pcre.org\/"},"doc://GLib/documentation/GLib/RegexProtocol/matchAllFull(string:stringLen:startPosition:matchOptions:matchInfo:)":{"role":"symbol","title":"matchAllFull(string:stringLen:startPosition:matchOptions:matchInfo:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"matchAllFull"},{"kind":"text","text":"("},{"kind":"externalParam","text":"string"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"stringLen"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gssize","preciseIdentifier":"c:@T@gssize"},{"kind":"text","text":", "},{"kind":"externalParam","text":"startPosition"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"matchOptions"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"RegexMatchFlags","preciseIdentifier":"s:4GLib15RegexMatchFlagsV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"matchInfo"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GMatchInfo"},{"kind":"text","text":">?>!) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Using the standard algorithm for regular expression matching only"},{"type":"text","text":" "},{"type":"text","text":"the longest match in the "},{"type":"codeVoice","code":"string"},{"type":"text","text":" is retrieved, it is not possible"},{"type":"text","text":" "},{"type":"text","text":"to obtain all the available matches. For instance matching"},{"type":"text","text":" "},{"type":"codeVoice","code":"\"<a> <b> <c>\""},{"type":"text","text":" against the pattern "},{"type":"codeVoice","code":"\"<.*>\""},{"type":"text","text":" "},{"type":"text","text":"you get "},{"type":"codeVoice","code":"\"<a> <b> <c>\""},{"type":"text","text":"."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/RegexProtocol\/matchAllFull(string:stringLen:startPosition:matchOptions:matchInfo:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/regexprotocol\/matchallfull(string:stringlen:startposition:matchoptions:matchinfo:)"},"doc://GLib/documentation/GLib/RegexProtocol":{"role":"symbol","title":"RegexProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RegexProtocol"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"GRegex"},{"type":"text","text":" is the “compiled” form of a regular expression pattern."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/RegexProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"RegexProtocol"}],"url":"\/documentation\/glib\/regexprotocol"},"doc://GLib/documentation/GLib/RegexProtocol/getCompileFlags()":{"role":"symbol","title":"getCompileFlags()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getCompileFlags"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"RegexCompileFlags","preciseIdentifier":"s:4GLib17RegexCompileFlagsV"}],"abstract":[{"type":"text","text":"Returns the compile options that "},{"type":"codeVoice","code":"regex"},{"type":"text","text":" was created with."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/RegexProtocol\/getCompileFlags()","kind":"symbol","type":"topic","url":"\/documentation\/glib\/regexprotocol\/getcompileflags()"},"doc://GLib/documentation/GLib/RegexProtocol/getMaxLookbehind()":{"role":"symbol","title":"getMaxLookbehind()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getMaxLookbehind"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"abstract":[{"type":"text","text":"Gets the number of characters in the longest lookbehind assertion in the"},{"type":"text","text":" "},{"type":"text","text":"pattern. This information is useful when doing multi-segment matching using"},{"type":"text","text":" "},{"type":"text","text":"the partial matching facilities."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/RegexProtocol\/getMaxLookbehind()","kind":"symbol","type":"topic","url":"\/documentation\/glib\/regexprotocol\/getmaxlookbehind()"},"doc://GLib/documentation/GLib/RegexProtocol/match(string:matchOptions:matchInfo:)":{"role":"symbol","title":"match(string:matchOptions:matchInfo:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"match"},{"kind":"text","text":"("},{"kind":"externalParam","text":"string"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"matchOptions"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"RegexMatchFlags","preciseIdentifier":"s:4GLib15RegexMatchFlagsV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"matchInfo"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GMatchInfo"},{"kind":"text","text":">?>!) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Scans for a match in "},{"type":"codeVoice","code":"string"},{"type":"text","text":" for the pattern in "},{"type":"codeVoice","code":"regex"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"The "},{"type":"codeVoice","code":"matchOptions"},{"type":"text","text":" are combined with the match options specified"},{"type":"text","text":" "},{"type":"text","text":"when the "},{"type":"codeVoice","code":"regex"},{"type":"text","text":" structure was created, letting you have more"},{"type":"text","text":" "},{"type":"text","text":"flexibility in reusing "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Regex"},{"type":"text","text":" structures."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/RegexProtocol\/match(string:matchOptions:matchInfo:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/regexprotocol\/match(string:matchoptions:matchinfo:)"},"doc://GLib/documentation/GLib/RegexProtocol/getMaxBackref()":{"role":"symbol","title":"getMaxBackref()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getMaxBackref"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"abstract":[{"type":"text","text":"Returns the number of the highest back reference"},{"type":"text","text":" "},{"type":"text","text":"in the pattern, or 0 if the pattern does not contain"},{"type":"text","text":" "},{"type":"text","text":"back references."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/RegexProtocol\/getMaxBackref()","kind":"symbol","type":"topic","url":"\/documentation\/glib\/regexprotocol\/getmaxbackref()"},"doc://GLib/documentation/GLib/Regex":{"role":"symbol","title":"Regex","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Regex"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"GRegex"},{"type":"text","text":" is the “compiled” form of a regular expression pattern."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/Regex","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Regex"}],"url":"\/documentation\/glib\/regex"},"doc://GLib/documentation/GLib":{"role":"collection","title":"GLib","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib","kind":"symbol","type":"topic","url":"\/documentation\/glib"},"doc://GLib/documentation/GLib/RegexProtocol/getHasCrOrLf()":{"role":"symbol","title":"getHasCrOrLf()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getHasCrOrLf"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Checks whether the pattern contains explicit CR or LF references."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/RegexProtocol\/getHasCrOrLf()","kind":"symbol","type":"topic","url":"\/documentation\/glib\/regexprotocol\/gethascrorlf()"},"doc://GLib/documentation/GLib/PointerWrapper":{"role":"symbol","title":"PointerWrapper","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"PointerWrapper"}],"abstract":[{"type":"text","text":"Protocol for GLib types that wrap pointers."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/PointerWrapper","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PointerWrapper"}],"url":"\/documentation\/glib\/pointerwrapper"},"doc://GLib/documentation/GLib/RegexProtocol/matchFull(string:stringLen:startPosition:matchOptions:matchInfo:)":{"role":"symbol","title":"matchFull(string:stringLen:startPosition:matchOptions:matchInfo:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"matchFull"},{"kind":"text","text":"("},{"kind":"externalParam","text":"string"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"stringLen"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gssize","preciseIdentifier":"c:@T@gssize"},{"kind":"text","text":", "},{"kind":"externalParam","text":"startPosition"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"matchOptions"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"RegexMatchFlags","preciseIdentifier":"s:4GLib15RegexMatchFlagsV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"matchInfo"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GMatchInfo"},{"kind":"text","text":">?>!) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Scans for a match in "},{"type":"codeVoice","code":"string"},{"type":"text","text":" for the pattern in "},{"type":"codeVoice","code":"regex"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"The "},{"type":"codeVoice","code":"matchOptions"},{"type":"text","text":" are combined with the match options specified"},{"type":"text","text":" "},{"type":"text","text":"when the "},{"type":"codeVoice","code":"regex"},{"type":"text","text":" structure was created, letting you have more"},{"type":"text","text":" "},{"type":"text","text":"flexibility in reusing "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Regex"},{"type":"text","text":" structures."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/RegexProtocol\/matchFull(string:stringLen:startPosition:matchOptions:matchInfo:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/regexprotocol\/matchfull(string:stringlen:startposition:matchoptions:matchinfo:)"},"doc://GLib/documentation/GLib/RegexProtocol/pattern":{"role":"symbol","title":"pattern","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"pattern"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Gets the pattern string associated with "},{"type":"codeVoice","code":"regex"},{"type":"text","text":", i.e. a copy of"},{"type":"text","text":" "},{"type":"text","text":"the string passed to "},{"type":"codeVoice","code":"g_regex_new()"},{"type":"text","text":"."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/RegexProtocol\/pattern","kind":"symbol","type":"topic","url":"\/documentation\/glib\/regexprotocol\/pattern"},"doc://GLib/documentation/GLib/RegexProtocol/getMatchFlags()":{"role":"symbol","title":"getMatchFlags()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getMatchFlags"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"RegexMatchFlags","preciseIdentifier":"s:4GLib15RegexMatchFlagsV"}],"abstract":[{"type":"text","text":"Returns the match options that "},{"type":"codeVoice","code":"regex"},{"type":"text","text":" was created with."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/RegexProtocol\/getMatchFlags()","kind":"symbol","type":"topic","url":"\/documentation\/glib\/regexprotocol\/getmatchflags()"},"doc://GLib/documentation/GLib/RegexProtocol/captureCount":{"role":"symbol","title":"captureCount","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"captureCount"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"abstract":[{"type":"text","text":"Returns the number of capturing subpatterns in the pattern."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/RegexProtocol\/captureCount","kind":"symbol","type":"topic","url":"\/documentation\/glib\/regexprotocol\/capturecount"},"doc://GLib/documentation/GLib/RegexProtocol/maxBackref":{"role":"symbol","title":"maxBackref","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"maxBackref"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"abstract":[{"type":"text","text":"Returns the number of the highest back reference"},{"type":"text","text":" "},{"type":"text","text":"in the pattern, or 0 if the pattern does not contain"},{"type":"text","text":" "},{"type":"text","text":"back references."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/RegexProtocol\/maxBackref","kind":"symbol","type":"topic","url":"\/documentation\/glib\/regexprotocol\/maxbackref"}}}