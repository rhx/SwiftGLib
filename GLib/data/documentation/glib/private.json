{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Private"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you don’t already know why you might want this functionality,"},{"type":"text","text":" "},{"type":"text","text":"then you probably don’t need it."}]},{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Private"},{"type":"text","text":" is a very limited resource (as far as 128 per program,"},{"type":"text","text":" "},{"type":"text","text":"shared between all libraries). It is also not possible to destroy a"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Private"},{"type":"text","text":" after it has been used. As such, it is only ever acceptable"},{"type":"text","text":" "},{"type":"text","text":"to use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Private"},{"type":"text","text":" in static scope, and even then sparingly so."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"See "},{"type":"codeVoice","code":"G_PRIVATE_INIT()"},{"type":"text","text":" for a couple of examples."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Private"},{"type":"text","text":" structure should be considered opaque.  It should only"},{"type":"text","text":" "},{"type":"text","text":"be accessed via the g_private_ functions."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Private"},{"type":"text","text":" type acts as an owner of an underlying "},{"type":"codeVoice","code":"GPrivate"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"It provides the methods that can operate on this data type through "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/PrivateProtocol"},{"type":"text","text":" conformance."},{"type":"text","text":" "},{"type":"text","text":"Use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Private"},{"type":"text","text":" as a strong reference or owner of a "},{"type":"codeVoice","code":"GPrivate"},{"type":"text","text":" instance."}]},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/PrivateRef"},{"type":"text","text":" (instead of "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Private"},{"type":"text","text":") for a lightweight Swift reference to an underlying "},{"type":"codeVoice","code":"GPrivate"},{"type":"text","text":" instance."}]}],"type":"aside","name":"Note"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/glib\/private"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/GLib\/documentation\/GLib\/PointerWrapper","doc:\/\/GLib\/documentation\/GLib\/PrivateProtocol"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/GLib\/documentation\/GLib\/Private","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Private"},{"type":"text","text":" struct is an opaque data structure to represent a"},{"type":"text","text":" "},{"type":"text","text":"thread-local data key. It is approximately equivalent to the"},{"type":"text","text":" "},{"type":"codeVoice","code":"pthread_setspecific()``\/pthread_getspecific()"},{"type":"text","text":" APIs on POSIX and to"},{"type":"text","text":" "},{"type":"codeVoice","code":"TlsSetValue()``\/TlsGetValue()"},{"type":"text","text":" on Windows."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Private"}],"title":"Private","roleHeading":"Class","role":"symbol","symbolKind":"class","externalID":"s:4GLib7PrivateC","modules":[{"name":"GLib"}],"navigatorTitle":[{"kind":"identifier","text":"Private"}]},"hierarchy":{"paths":[["doc:\/\/GLib\/documentation\/GLib"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/GLib\/documentation\/GLib\/Private\/init(_:)-43xct","doc:\/\/GLib\/documentation\/GLib\/Private\/init(_:)-59vu8","doc:\/\/GLib\/documentation\/GLib\/Private\/init(_:)-5h7m","doc:\/\/GLib\/documentation\/GLib\/Private\/init(_:)-7ag3n","doc:\/\/GLib\/documentation\/GLib\/Private\/init(_:)-8nnk5","doc:\/\/GLib\/documentation\/GLib\/Private\/init(cPointer:)","doc:\/\/GLib\/documentation\/GLib\/Private\/init(gconstpointer:)","doc:\/\/GLib\/documentation\/GLib\/Private\/init(gpointer:)","doc:\/\/GLib\/documentation\/GLib\/Private\/init(opaquePointer:)","doc:\/\/GLib\/documentation\/GLib\/Private\/init(raw:)-541qk","doc:\/\/GLib\/documentation\/GLib\/Private\/init(raw:)-8yw5l","doc:\/\/GLib\/documentation\/GLib\/Private\/init(retaining:)","doc:\/\/GLib\/documentation\/GLib\/Private\/init(retainingCPointer:)","doc:\/\/GLib\/documentation\/GLib\/Private\/init(retainingOpaquePointer:)","doc:\/\/GLib\/documentation\/GLib\/Private\/init(retainingRaw:)-1k20d","doc:\/\/GLib\/documentation\/GLib\/Private\/init(retainingRaw:)-5ewko"]},{"title":"Instance Properties","identifiers":["doc:\/\/GLib\/documentation\/GLib\/Private\/ptr"]},{"title":"Default Implementations","identifiers":["doc:\/\/GLib\/documentation\/GLib\/Private\/PrivateProtocol-Implementations"],"generated":true}],"references":{"doc://GLib/documentation/GLib/Private/init(cPointer:)":{"role":"symbol","title":"init(cPointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"cPointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Unsafe typed initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/PrivateProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/Private\/init(cPointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/private\/init(cpointer:)"},"doc://GLib/documentation/GLib/Private/init(opaquePointer:)":{"role":"symbol","title":"init(opaquePointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"opaquePointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"OpaquePointer","preciseIdentifier":"s:s13OpaquePointerV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/PrivateProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/Private\/init(opaquePointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/private\/init(opaquepointer:)"},"doc://GLib/documentation/GLib/Private/init(raw:)-541qk":{"role":"symbol","title":"init(raw:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"raw"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeRawPointer","preciseIdentifier":"s:SV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/PrivateProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/Private\/init(raw:)-541qk","kind":"symbol","type":"topic","url":"\/documentation\/glib\/private\/init(raw:)-541qk"},"doc://GLib/documentation/GLib/Private/init(gpointer:)":{"role":"symbol","title":"init(gpointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"externalParam","text":"gpointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Optional initialiser from a non-mutating "},{"type":"codeVoice","code":"gpointer"},{"type":"text","text":" to"},{"type":"text","text":" "},{"type":"text","text":"the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type."},{"type":"text","text":" "},{"type":"text","text":"This creates an instance without performing an unbalanced retain"},{"type":"text","text":" "},{"type":"text","text":"i.e., ownership is transferred to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Private"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/Private\/init(gpointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/private\/init(gpointer:)"},"doc://GLib/documentation/GLib/PrivateProtocol":{"role":"symbol","title":"PrivateProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"PrivateProtocol"}],"abstract":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Private"},{"type":"text","text":" struct is an opaque data structure to represent a"},{"type":"text","text":" "},{"type":"text","text":"thread-local data key. It is approximately equivalent to the"},{"type":"text","text":" "},{"type":"codeVoice","code":"pthread_setspecific()``\/pthread_getspecific()"},{"type":"text","text":" APIs on POSIX and to"},{"type":"text","text":" "},{"type":"codeVoice","code":"TlsSetValue()``\/TlsGetValue()"},{"type":"text","text":" on Windows."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/PrivateProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PrivateProtocol"}],"url":"\/documentation\/glib\/privateprotocol"},"doc://GLib/documentation/GLib/Private/init(raw:)-8yw5l":{"role":"symbol","title":"init(raw:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"raw"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutableRawPointer","preciseIdentifier":"s:Sv"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/PrivateProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/Private\/init(raw:)-8yw5l","kind":"symbol","type":"topic","url":"\/documentation\/glib\/private\/init(raw:)-8yw5l"},"doc://GLib/documentation/GLib/Private/init(_:)-7ag3n":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GPrivate"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Optional initialiser from a constant pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type."},{"type":"text","text":" "},{"type":"text","text":"This creates an instance without performing an unbalanced retain"},{"type":"text","text":" "},{"type":"text","text":"i.e., ownership is transferred to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Private"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/Private\/init(_:)-7ag3n","kind":"symbol","type":"topic","url":"\/documentation\/glib\/private\/init(_:)-7ag3n"},"doc://GLib/documentation/GLib/Private/init(retaining:)":{"role":"symbol","title":"init(retaining:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"retaining"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GPrivate"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type."},{"type":"text","text":" "},{"type":"codeVoice","code":"GPrivate"},{"type":"text","text":" does not allow reference counting, so despite the name no actual retaining will occur."},{"type":"text","text":" "},{"type":"text","text":"i.e., ownership is transferred to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Private"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/Private\/init(retaining:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/private\/init(retaining:)"},"doc://GLib/documentation/GLib/Private":{"role":"symbol","title":"Private","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Private"}],"abstract":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Private"},{"type":"text","text":" struct is an opaque data structure to represent a"},{"type":"text","text":" "},{"type":"text","text":"thread-local data key. It is approximately equivalent to the"},{"type":"text","text":" "},{"type":"codeVoice","code":"pthread_setspecific()``\/pthread_getspecific()"},{"type":"text","text":" APIs on POSIX and to"},{"type":"text","text":" "},{"type":"codeVoice","code":"TlsSetValue()``\/TlsGetValue()"},{"type":"text","text":" on Windows."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/Private","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Private"}],"url":"\/documentation\/glib\/private"},"doc://GLib/documentation/GLib/Private/init(retainingCPointer:)":{"role":"symbol","title":"init(retainingCPointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"retainingCPointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Unsafe typed, retaining initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/PrivateProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/Private\/init(retainingCPointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/private\/init(retainingcpointer:)"},"doc://GLib/documentation/GLib/PrivateRef":{"role":"symbol","title":"PrivateRef","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PrivateRef"}],"abstract":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Private"},{"type":"text","text":" struct is an opaque data structure to represent a"},{"type":"text","text":" "},{"type":"text","text":"thread-local data key. It is approximately equivalent to the"},{"type":"text","text":" "},{"type":"codeVoice","code":"pthread_setspecific()``\/pthread_getspecific()"},{"type":"text","text":" APIs on POSIX and to"},{"type":"text","text":" "},{"type":"codeVoice","code":"TlsSetValue()``\/TlsGetValue()"},{"type":"text","text":" on Windows."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/PrivateRef","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PrivateRef"}],"url":"\/documentation\/glib\/privateref"},"doc://GLib/documentation/GLib/Private/init(_:)-43xct":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Reference intialiser for a related type that implements "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/PrivateProtocol"},{"type":"text","text":" "},{"type":"codeVoice","code":"GPrivate"},{"type":"text","text":" does not allow reference counting."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/Private\/init(_:)-43xct","kind":"symbol","type":"topic","url":"\/documentation\/glib\/private\/init(_:)-43xct"},"doc://GLib/documentation/GLib":{"role":"collection","title":"GLib","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib","kind":"symbol","type":"topic","url":"\/documentation\/glib"},"doc://GLib/documentation/GLib/Private/ptr":{"role":"symbol","title":"ptr","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"ptr"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutableRawPointer","preciseIdentifier":"s:Sv"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Untyped pointer to the underlying "},{"type":"codeVoice","code":"GPrivate"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"For type-safe access, use the generated, typed pointer "},{"type":"codeVoice","code":"PrivateProtocol\/_ptr"},{"type":"text","text":" property instead."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/Private\/ptr","kind":"symbol","type":"topic","url":"\/documentation\/glib\/private\/ptr"},"doc://GLib/documentation/GLib/PointerWrapper":{"role":"symbol","title":"PointerWrapper","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"PointerWrapper"}],"abstract":[{"type":"text","text":"Protocol for GLib types that wrap pointers."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/PointerWrapper","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PointerWrapper"}],"url":"\/documentation\/glib\/pointerwrapper"},"doc://GLib/documentation/GLib/Private/PrivateProtocol-Implementations":{"role":"collectionGroup","title":"PrivateProtocol Implementations","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib\/Private\/PrivateProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/glib\/private\/privateprotocol-implementations"},"doc://GLib/documentation/GLib/Private/init(retainingRaw:)-1k20d":{"role":"symbol","title":"init(retainingRaw:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"retainingRaw"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutableRawPointer","preciseIdentifier":"s:Sv"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped, retaining initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/PrivateProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/Private\/init(retainingRaw:)-1k20d","kind":"symbol","type":"topic","url":"\/documentation\/glib\/private\/init(retainingraw:)-1k20d"},"doc://GLib/documentation/GLib/Private/init(_:)-59vu8":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GPrivate"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from a constant pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type."},{"type":"text","text":" "},{"type":"text","text":"This creates an instance without performing an unbalanced retain"},{"type":"text","text":" "},{"type":"text","text":"i.e., ownership is transferred to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Private"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/Private\/init(_:)-59vu8","kind":"symbol","type":"topic","url":"\/documentation\/glib\/private\/init(_:)-59vu8"},"doc://GLib/documentation/GLib/Private/init(retainingRaw:)-5ewko":{"role":"symbol","title":"init(retainingRaw:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"retainingRaw"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeRawPointer","preciseIdentifier":"s:SV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped, retaining initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/PrivateProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/Private\/init(retainingRaw:)-5ewko","kind":"symbol","type":"topic","url":"\/documentation\/glib\/private\/init(retainingraw:)-5ewko"},"doc://GLib/documentation/GLib/Private/init(_:)-8nnk5":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GPrivate"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Optional initialiser from the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type."},{"type":"text","text":" "},{"type":"text","text":"This creates an instance without performing an unbalanced retain"},{"type":"text","text":" "},{"type":"text","text":"i.e., ownership is transferred to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Private"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/Private\/init(_:)-8nnk5","kind":"symbol","type":"topic","url":"\/documentation\/glib\/private\/init(_:)-8nnk5"},"doc://GLib/documentation/GLib/Private/init(gconstpointer:)":{"role":"symbol","title":"init(gconstpointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"externalParam","text":"gconstpointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gconstpointer","preciseIdentifier":"c:@T@gconstpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Optional initialiser from a non-mutating "},{"type":"codeVoice","code":"gconstpointer"},{"type":"text","text":" to"},{"type":"text","text":" "},{"type":"text","text":"the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type."},{"type":"text","text":" "},{"type":"text","text":"This creates an instance without performing an unbalanced retain"},{"type":"text","text":" "},{"type":"text","text":"i.e., ownership is transferred to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Private"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/Private\/init(gconstpointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/private\/init(gconstpointer:)"},"doc://GLib/documentation/GLib/Private/init(_:)-5h7m":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GPrivate"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type."},{"type":"text","text":" "},{"type":"text","text":"This creates an instance without performing an unbalanced retain"},{"type":"text","text":" "},{"type":"text","text":"i.e., ownership is transferred to the "},{"type":"codeVoice","code":"Private"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/Private\/init(_:)-5h7m","kind":"symbol","type":"topic","url":"\/documentation\/glib\/private\/init(_:)-5h7m"},"doc://GLib/documentation/GLib/Private/init(retainingOpaquePointer:)":{"role":"symbol","title":"init(retainingOpaquePointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"retainingOpaquePointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"OpaquePointer","preciseIdentifier":"s:s13OpaquePointerV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped, retaining initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/PrivateProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/Private\/init(retainingOpaquePointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/private\/init(retainingopaquepointer:)"}}}