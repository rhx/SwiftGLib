{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"IOChannelProtocol"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/GLib\/documentation\/GLib\/PointerWrapper","preciseIdentifier":"s:4GLib14PointerWrapperP","text":"PointerWrapper"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"To create a new "},{"type":"codeVoice","code":"GIOChannel"},{"type":"text","text":" on UNIX systems use"},{"type":"text","text":" "},{"type":"text","text":"[ctor"},{"type":"codeVoice","code":"GLib.IOChannel.unix_new"},{"type":"text","text":"]. This works for plain file descriptors,"},{"type":"text","text":" "},{"type":"text","text":"pipes and sockets. Alternatively, a channel can be created for a"},{"type":"text","text":" "},{"type":"text","text":"file in a system independent manner using [ctor"},{"type":"codeVoice","code":"GLib.IOChannel.new_file"},{"type":"text","text":"]."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Once a "},{"type":"codeVoice","code":"GIOChannel"},{"type":"text","text":" has been created, it can be used in a generic"},{"type":"text","text":" "},{"type":"text","text":"manner with the functions [method"},{"type":"codeVoice","code":"GLib.IOChannel.read_chars"},{"type":"text","text":"],"},{"type":"text","text":" "},{"type":"text","text":"[method"},{"type":"codeVoice","code":"GLib.IOChannel.write_chars"},{"type":"text","text":"], [method"},{"type":"codeVoice","code":"GLib.IOChannel.seek_position"},{"type":"text","text":"],"},{"type":"text","text":" "},{"type":"text","text":"and [method"},{"type":"codeVoice","code":"GLib.IOChannel.shutdown"},{"type":"text","text":"]."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To add a "},{"type":"codeVoice","code":"GIOChannel"},{"type":"text","text":" to the main event loop, use [func"},{"type":"codeVoice","code":"GLib.io_add_watch"},{"type":"text","text":"] or"},{"type":"text","text":" "},{"type":"text","text":"[func"},{"type":"codeVoice","code":"GLib.io_add_watch_full"},{"type":"text","text":"]. Here you specify which events you are"},{"type":"text","text":" "},{"type":"text","text":"interested in on the "},{"type":"codeVoice","code":"GIOChannel"},{"type":"text","text":", and provide a function to be called"},{"type":"text","text":" "},{"type":"text","text":"whenever these events occur."}]},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"GIOChannel"},{"type":"text","text":" instances are created with an initial reference count of 1."},{"type":"text","text":" "},{"type":"text","text":"[method"},{"type":"codeVoice","code":"GLib.IOChannel.ref"},{"type":"text","text":"] and [method"},{"type":"codeVoice","code":"GLib.IOChannel.unref"},{"type":"text","text":"] can be used to"},{"type":"text","text":" "},{"type":"text","text":"increment or decrement the reference count respectively. When the"},{"type":"text","text":" "},{"type":"text","text":"reference count falls to 0, the "},{"type":"codeVoice","code":"GIOChannel"},{"type":"text","text":" is freed. (Though it"},{"type":"text","text":" "},{"type":"text","text":"isn’t closed automatically, unless it was created using"},{"type":"text","text":" "},{"type":"text","text":"[ctor"},{"type":"codeVoice","code":"GLib.IOChannel.new_file"},{"type":"text","text":"].) Using [func"},{"type":"codeVoice","code":"GLib.io_add_watch"},{"type":"text","text":"] or"},{"type":"text","text":" "},{"type":"text","text":"[func"},{"type":"codeVoice","code":"GLib.io_add_watch_full"},{"type":"text","text":"] increments a channel’s reference count."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The new functions [method"},{"type":"codeVoice","code":"GLib.IOChannel.read_chars"},{"type":"text","text":"],"},{"type":"text","text":" "},{"type":"text","text":"[method"},{"type":"codeVoice","code":"GLib.IOChannel.read_line"},{"type":"text","text":"], [method"},{"type":"codeVoice","code":"GLib.IOChannel.read_line_string"},{"type":"text","text":"],"},{"type":"text","text":" "},{"type":"text","text":"[method"},{"type":"codeVoice","code":"GLib.IOChannel.read_to_end"},{"type":"text","text":"], [method"},{"type":"codeVoice","code":"GLib.IOChannel.write_chars"},{"type":"text","text":"],"},{"type":"text","text":" "},{"type":"text","text":"[method"},{"type":"codeVoice","code":"GLib.IOChannel.seek_position"},{"type":"text","text":"], and [method"},{"type":"codeVoice","code":"GLib.IOChannel.flush"},{"type":"text","text":"]"},{"type":"text","text":" "},{"type":"text","text":"should not be mixed with the deprecated functions"},{"type":"text","text":" "},{"type":"text","text":"[method"},{"type":"codeVoice","code":"GLib.IOChannel.read"},{"type":"text","text":"], [method"},{"type":"codeVoice","code":"GLib.IOChannel.write"},{"type":"text","text":"], and"},{"type":"text","text":" "},{"type":"text","text":"[method"},{"type":"codeVoice","code":"GLib.IOChannel.seek"},{"type":"text","text":"] on the same channel."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannelProtocol"},{"type":"text","text":" protocol exposes the methods and properties of an underlying "},{"type":"codeVoice","code":"GIOChannel"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"The default implementation of these can be found in the protocol extension below."},{"type":"text","text":" "},{"type":"text","text":"For a concrete class that implements these methods and properties, see "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannel"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Alternatively, use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannelRef"},{"type":"text","text":" as a lighweight, "},{"type":"codeVoice","code":"unowned"},{"type":"text","text":" reference if you already have an instance you just want to use."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/glib\/iochannelprotocol"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/GLib\/documentation\/GLib\/PointerWrapper"],"kind":"relationships","title":"Inherits From","type":"inheritsFrom"},{"identifiers":["doc:\/\/GLib\/documentation\/GLib\/IOChannel","doc:\/\/GLib\/documentation\/GLib\/IOChannelRef"],"kind":"relationships","title":"Conforming Types","type":"conformingTypes"}],"identifier":{"url":"doc:\/\/GLib\/documentation\/GLib\/IOChannelProtocol","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"GIOChannel"},{"type":"text","text":" data type aims to provide a portable method for"},{"type":"text","text":" "},{"type":"text","text":"using file descriptors, pipes, and sockets, and integrating them"},{"type":"text","text":" "},{"type":"text","text":"into the main event loop (see [struct"},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/MainContext"},{"type":"text","text":"]). Currently,"},{"type":"text","text":" "},{"type":"text","text":"full support is available on UNIX platforms; support for Windows"},{"type":"text","text":" "},{"type":"text","text":"is only partially complete."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"IOChannelProtocol"}],"title":"IOChannelProtocol","roleHeading":"Protocol","role":"symbol","symbolKind":"protocol","externalID":"s:4GLib17IOChannelProtocolP","modules":[{"name":"GLib"}],"navigatorTitle":[{"kind":"identifier","text":"IOChannelProtocol"}]},"hierarchy":{"paths":[["doc:\/\/GLib\/documentation\/GLib"]]},"topicSections":[{"title":"Instance Properties","identifiers":["doc:\/\/GLib\/documentation\/GLib\/IOChannelProtocol\/bufferCondition","doc:\/\/GLib\/documentation\/GLib\/IOChannelProtocol\/bufferSize","doc:\/\/GLib\/documentation\/GLib\/IOChannelProtocol\/buffered","doc:\/\/GLib\/documentation\/GLib\/IOChannelProtocol\/closeOnUnref","doc:\/\/GLib\/documentation\/GLib\/IOChannelProtocol\/encoding","doc:\/\/GLib\/documentation\/GLib\/IOChannelProtocol\/flags","doc:\/\/GLib\/documentation\/GLib\/IOChannelProtocol\/io_channel_ptr-247yh"]},{"title":"Instance Methods","identifiers":["doc:\/\/GLib\/documentation\/GLib\/IOChannelProtocol\/close()","doc:\/\/GLib\/documentation\/GLib\/IOChannelProtocol\/flush()","doc:\/\/GLib\/documentation\/GLib\/IOChannelProtocol\/getBufferCondition()","doc:\/\/GLib\/documentation\/GLib\/IOChannelProtocol\/getBufferSize()","doc:\/\/GLib\/documentation\/GLib\/IOChannelProtocol\/getBuffered()","doc:\/\/GLib\/documentation\/GLib\/IOChannelProtocol\/getCloseOnUnref()","doc:\/\/GLib\/documentation\/GLib\/IOChannelProtocol\/getEncoding()","doc:\/\/GLib\/documentation\/GLib\/IOChannelProtocol\/getFlags()","doc:\/\/GLib\/documentation\/GLib\/IOChannelProtocol\/getLineTerm(length:)","doc:\/\/GLib\/documentation\/GLib\/IOChannelProtocol\/init_()","doc:\/\/GLib\/documentation\/GLib\/IOChannelProtocol\/ioAddWatch(condition:func:userData:)","doc:\/\/GLib\/documentation\/GLib\/IOChannelProtocol\/ioAddWatchFull(priority:condition:func:userData:notify:)","doc:\/\/GLib\/documentation\/GLib\/IOChannelProtocol\/ioCreateWatch(condition:)","doc:\/\/GLib\/documentation\/GLib\/IOChannelProtocol\/read(buf:count:bytesRead:)","doc:\/\/GLib\/documentation\/GLib\/IOChannelProtocol\/readChars(buf:count:bytesRead:)","doc:\/\/GLib\/documentation\/GLib\/IOChannelProtocol\/readLine(strReturn:length:terminatorPos:)","doc:\/\/GLib\/documentation\/GLib\/IOChannelProtocol\/readLineString(buffer:terminatorPos:)","doc:\/\/GLib\/documentation\/GLib\/IOChannelProtocol\/readToEnd(strReturn:length:)","doc:\/\/GLib\/documentation\/GLib\/IOChannelProtocol\/readUnichar(thechar:)","doc:\/\/GLib\/documentation\/GLib\/IOChannelProtocol\/ref()","doc:\/\/GLib\/documentation\/GLib\/IOChannelProtocol\/seek(offset:type:)","doc:\/\/GLib\/documentation\/GLib\/IOChannelProtocol\/seekPosition(offset:type:)","doc:\/\/GLib\/documentation\/GLib\/IOChannelProtocol\/set(buffered:)","doc:\/\/GLib\/documentation\/GLib\/IOChannelProtocol\/set(encoding:)","doc:\/\/GLib\/documentation\/GLib\/IOChannelProtocol\/set(flags:)","doc:\/\/GLib\/documentation\/GLib\/IOChannelProtocol\/set(lineTerm:length:)","doc:\/\/GLib\/documentation\/GLib\/IOChannelProtocol\/setBuffer(size:)","doc:\/\/GLib\/documentation\/GLib\/IOChannelProtocol\/setCloseOnUnref(doClose:)","doc:\/\/GLib\/documentation\/GLib\/IOChannelProtocol\/shutdown(flush:)","doc:\/\/GLib\/documentation\/GLib\/IOChannelProtocol\/unixGetFd()","doc:\/\/GLib\/documentation\/GLib\/IOChannelProtocol\/unref()","doc:\/\/GLib\/documentation\/GLib\/IOChannelProtocol\/write(buf:count:bytesWritten:)","doc:\/\/GLib\/documentation\/GLib\/IOChannelProtocol\/writeChars(buf:count:bytesWritten:)","doc:\/\/GLib\/documentation\/GLib\/IOChannelProtocol\/writeUnichar(thechar:)"]}],"references":{"doc://GLib/documentation/GLib/IOCondition":{"role":"symbol","title":"IOCondition","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"IOCondition"}],"abstract":[{"type":"text","text":"A bitwise combination representing a condition to watch for on an"},{"type":"text","text":" "},{"type":"text","text":"event source."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOCondition","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"IOCondition"}],"url":"\/documentation\/glib\/iocondition"},"doc://GLib/documentation/GLib/IOChannelProtocol/bufferCondition":{"role":"symbol","title":"bufferCondition","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"bufferCondition"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"IOCondition","preciseIdentifier":"s:4GLib11IOConditionV"}],"abstract":[{"type":"text","text":"This function returns a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOCondition"},{"type":"text","text":" depending on whether there"},{"type":"text","text":" "},{"type":"text","text":"is data to be read\/space to write data in the internal buffers in"},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannel"},{"type":"text","text":". Only the flags "},{"type":"codeVoice","code":"in"},{"type":"text","text":" and "},{"type":"codeVoice","code":"out"},{"type":"text","text":" may be set."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannelProtocol\/bufferCondition","kind":"symbol","type":"topic","url":"\/documentation\/glib\/iochannelprotocol\/buffercondition"},"doc://GLib/documentation/GLib/IOChannelProtocol/closeOnUnref":{"role":"symbol","title":"closeOnUnref","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"closeOnUnref"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Returns whether the file\/socket\/whatever associated with "},{"type":"codeVoice","code":"channel"},{"type":"text","text":" "},{"type":"text","text":"will be closed when "},{"type":"codeVoice","code":"channel"},{"type":"text","text":" receives its final unref and is"},{"type":"text","text":" "},{"type":"text","text":"destroyed. The default value of this is "},{"type":"codeVoice","code":"true"},{"type":"text","text":" for channels created"},{"type":"text","text":" "},{"type":"text","text":"by g_io_channel_new_file (), and "},{"type":"codeVoice","code":"false"},{"type":"text","text":" for all other channels."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannelProtocol\/closeOnUnref","kind":"symbol","type":"topic","url":"\/documentation\/glib\/iochannelprotocol\/closeonunref"},"doc://GLib/documentation/GLib/IOChannelProtocol/getCloseOnUnref()":{"role":"symbol","title":"getCloseOnUnref()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getCloseOnUnref"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Returns whether the file\/socket\/whatever associated with "},{"type":"codeVoice","code":"channel"},{"type":"text","text":" "},{"type":"text","text":"will be closed when "},{"type":"codeVoice","code":"channel"},{"type":"text","text":" receives its final unref and is"},{"type":"text","text":" "},{"type":"text","text":"destroyed. The default value of this is "},{"type":"codeVoice","code":"true"},{"type":"text","text":" for channels created"},{"type":"text","text":" "},{"type":"text","text":"by g_io_channel_new_file (), and "},{"type":"codeVoice","code":"false"},{"type":"text","text":" for all other channels."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannelProtocol\/getCloseOnUnref()","kind":"symbol","type":"topic","url":"\/documentation\/glib\/iochannelprotocol\/getcloseonunref()"},"doc://GLib/documentation/GLib/IOChannelProtocol/bufferSize":{"role":"symbol","title":"bufferSize","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"bufferSize"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"abstract":[{"type":"text","text":"Gets the buffer size."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannelProtocol\/bufferSize","kind":"symbol","type":"topic","url":"\/documentation\/glib\/iochannelprotocol\/buffersize"},"doc://GLib/documentation/GLib/IOChannelProtocol/readLineString(buffer:terminatorPos:)":{"role":"symbol","title":"readLineString(buffer:terminatorPos:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"readLineString"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"StringTypeT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"buffer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StringTypeT"},{"kind":"text","text":", "},{"kind":"externalParam","text":"terminatorPos"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gsize","preciseIdentifier":"c:@T@gsize"},{"kind":"text","text":">?) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"GIOStatus","preciseIdentifier":"c:@EA@GIOStatus"}],"abstract":[{"type":"text","text":"Reads a line from a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannel"},{"type":"text","text":", using a "},{"type":"codeVoice","code":"String"},{"type":"text","text":" as a buffer."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannelProtocol\/readLineString(buffer:terminatorPos:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/iochannelprotocol\/readlinestring(buffer:terminatorpos:)"},"doc://GLib/documentation/GLib/IOChannelProtocol/getBuffered()":{"role":"symbol","title":"getBuffered()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getBuffered"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Returns whether "},{"type":"codeVoice","code":"channel"},{"type":"text","text":" is buffered."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannelProtocol\/getBuffered()","kind":"symbol","type":"topic","url":"\/documentation\/glib\/iochannelprotocol\/getbuffered()"},"doc://GLib/documentation/GLib/IOChannelProtocol/set(lineTerm:length:)":{"role":"symbol","title":"set(lineTerm:length:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"set"},{"kind":"text","text":"("},{"kind":"externalParam","text":"lineTerm"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">?, "},{"kind":"externalParam","text":"length"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"This sets the string that "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannel"},{"type":"text","text":" uses to determine"},{"type":"text","text":" "},{"type":"text","text":"where in the file a line break occurs."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannelProtocol\/set(lineTerm:length:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/iochannelprotocol\/set(lineterm:length:)"},"doc://GLib/documentation/GLib/IOChannelRef":{"role":"symbol","title":"IOChannelRef","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"IOChannelRef"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"GIOChannel"},{"type":"text","text":" data type aims to provide a portable method for"},{"type":"text","text":" "},{"type":"text","text":"using file descriptors, pipes, and sockets, and integrating them"},{"type":"text","text":" "},{"type":"text","text":"into the main event loop (see [struct"},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/MainContext"},{"type":"text","text":"]). Currently,"},{"type":"text","text":" "},{"type":"text","text":"full support is available on UNIX platforms; support for Windows"},{"type":"text","text":" "},{"type":"text","text":"is only partially complete."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannelRef","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"IOChannelRef"}],"url":"\/documentation\/glib\/iochannelref"},"doc://GLib/documentation/GLib/IOChannelProtocol/writeUnichar(thechar:)":{"role":"symbol","title":"writeUnichar(thechar:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"writeUnichar"},{"kind":"text","text":"("},{"kind":"externalParam","text":"thechar"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gunichar","preciseIdentifier":"c:@T@gunichar"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"GIOStatus","preciseIdentifier":"c:@EA@GIOStatus"}],"abstract":[{"type":"text","text":"Writes a Unicode character to "},{"type":"codeVoice","code":"channel"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"This function cannot be called on a channel with "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" encoding."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannelProtocol\/writeUnichar(thechar:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/iochannelprotocol\/writeunichar(thechar:)"},"doc://GLib/documentation/GLib/IOChannelProtocol/setBuffer(size:)":{"role":"symbol","title":"setBuffer(size:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"setBuffer"},{"kind":"text","text":"("},{"kind":"externalParam","text":"size"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Sets the buffer size."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannelProtocol\/setBuffer(size:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/iochannelprotocol\/setbuffer(size:)"},"doc://GLib/documentation/GLib/IOChannelProtocol/getEncoding()":{"role":"symbol","title":"getEncoding()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getEncoding"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Gets the encoding for the input\/output of the channel."},{"type":"text","text":" "},{"type":"text","text":"The internal encoding is always UTF-8. The encoding "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" "},{"type":"text","text":"makes the channel safe for binary data."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannelProtocol\/getEncoding()","kind":"symbol","type":"topic","url":"\/documentation\/glib\/iochannelprotocol\/getencoding()"},"doc://GLib/documentation/GLib/IOChannelProtocol/readLine(strReturn:length:terminatorPos:)":{"role":"symbol","title":"readLine(strReturn:length:terminatorPos:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"readLine"},{"kind":"text","text":"("},{"kind":"externalParam","text":"strReturn"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">?>!, "},{"kind":"externalParam","text":"length"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gsize","preciseIdentifier":"c:@T@gsize"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"terminatorPos"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gsize","preciseIdentifier":"c:@T@gsize"},{"kind":"text","text":">!) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"GIOStatus","preciseIdentifier":"c:@EA@GIOStatus"}],"abstract":[{"type":"text","text":"Reads a line, including the terminating "},{"type":"codeVoice","code":"character(s)"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"from a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannel"},{"type":"text","text":" into a newly-allocated string."},{"type":"text","text":" "},{"type":"codeVoice","code":"strReturn"},{"type":"text","text":" will contain allocated memory if the return"},{"type":"text","text":" "},{"type":"text","text":"is "},{"type":"codeVoice","code":"normal"},{"type":"text","text":"."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannelProtocol\/readLine(strReturn:length:terminatorPos:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/iochannelprotocol\/readline(strreturn:length:terminatorpos:)"},"doc://GLib/documentation/GLib/IOChannelProtocol/shutdown(flush:)":{"role":"symbol","title":"shutdown(flush:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"shutdown"},{"kind":"text","text":"("},{"kind":"externalParam","text":"flush"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"GIOStatus","preciseIdentifier":"c:@EA@GIOStatus"}],"abstract":[{"type":"text","text":"Close an IO channel. Any pending data to be written will be"},{"type":"text","text":" "},{"type":"text","text":"flushed if "},{"type":"codeVoice","code":"flush"},{"type":"text","text":" is "},{"type":"codeVoice","code":"true"},{"type":"text","text":". The channel will not be freed until the"},{"type":"text","text":" "},{"type":"text","text":"last reference is dropped using "},{"type":"codeVoice","code":"g_io_channel_unref()"},{"type":"text","text":"."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannelProtocol\/shutdown(flush:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/iochannelprotocol\/shutdown(flush:)"},"doc://GLib/documentation/GLib/IOChannelProtocol/ref()":{"role":"symbol","title":"ref()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"ref"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"IOChannelRef","preciseIdentifier":"s:4GLib12IOChannelRefV"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Increments the reference count of a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannel"},{"type":"text","text":"."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannelProtocol\/ref()","kind":"symbol","type":"topic","url":"\/documentation\/glib\/iochannelprotocol\/ref()"},"doc://GLib/documentation/GLib/IOChannelProtocol/unixGetFd()":{"role":"symbol","title":"unixGetFd()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unixGetFd"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"abstract":[{"type":"text","text":"Returns the file descriptor of the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannel"},{"type":"text","text":"."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannelProtocol\/unixGetFd()","kind":"symbol","type":"topic","url":"\/documentation\/glib\/iochannelprotocol\/unixgetfd()"},"doc://GLib/documentation/GLib/IOChannelProtocol":{"role":"symbol","title":"IOChannelProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"IOChannelProtocol"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"GIOChannel"},{"type":"text","text":" data type aims to provide a portable method for"},{"type":"text","text":" "},{"type":"text","text":"using file descriptors, pipes, and sockets, and integrating them"},{"type":"text","text":" "},{"type":"text","text":"into the main event loop (see [struct"},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/MainContext"},{"type":"text","text":"]). Currently,"},{"type":"text","text":" "},{"type":"text","text":"full support is available on UNIX platforms; support for Windows"},{"type":"text","text":" "},{"type":"text","text":"is only partially complete."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannelProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"IOChannelProtocol"}],"url":"\/documentation\/glib\/iochannelprotocol"},"doc://GLib/documentation/GLib/IOChannelProtocol/read(buf:count:bytesRead:)":{"role":"symbol","title":"read(buf:count:bytesRead:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"read"},{"kind":"text","text":"("},{"kind":"externalParam","text":"buf"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"count"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"bytesRead"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gsize","preciseIdentifier":"c:@T@gsize"},{"kind":"text","text":">!) -> "},{"kind":"typeIdentifier","text":"GIOError","preciseIdentifier":"c:@EA@GIOError"}],"abstract":[{"type":"text","text":"Reads data from a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannel"},{"type":"text","text":"."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannelProtocol\/read(buf:count:bytesRead:)","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/glib\/iochannelprotocol\/read(buf:count:bytesread:)"},"doc://GLib/documentation/GLib/IOChannelProtocol/readToEnd(strReturn:length:)":{"role":"symbol","title":"readToEnd(strReturn:length:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"readToEnd"},{"kind":"text","text":"("},{"kind":"externalParam","text":"strReturn"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">?>!, "},{"kind":"externalParam","text":"length"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gsize","preciseIdentifier":"c:@T@gsize"},{"kind":"text","text":">!) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"GIOStatus","preciseIdentifier":"c:@EA@GIOStatus"}],"abstract":[{"type":"text","text":"Reads all the remaining data from the file."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannelProtocol\/readToEnd(strReturn:length:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/iochannelprotocol\/readtoend(strreturn:length:)"},"doc://GLib/documentation/GLib/MainContext":{"role":"symbol","title":"MainContext","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MainContext"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"GMainContext"},{"type":"text","text":" struct is an opaque data"},{"type":"text","text":" "},{"type":"text","text":"type representing a set of sources to be handled in a main loop."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/MainContext","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MainContext"}],"url":"\/documentation\/glib\/maincontext"},"doc://GLib/documentation/GLib/IOChannelProtocol/unref()":{"role":"symbol","title":"unref()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unref"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Decrements the reference count of a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannel"},{"type":"text","text":"."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannelProtocol\/unref()","kind":"symbol","type":"topic","url":"\/documentation\/glib\/iochannelprotocol\/unref()"},"doc://GLib/documentation/GLib/IOChannelProtocol/seekPosition(offset:type:)":{"role":"symbol","title":"seekPosition(offset:type:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"seekPosition"},{"kind":"text","text":"("},{"kind":"externalParam","text":"offset"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gint64","preciseIdentifier":"c:@T@gint64"},{"kind":"text","text":", "},{"kind":"externalParam","text":"type"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GSeekType","preciseIdentifier":"c:@EA@GSeekType"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"GIOStatus","preciseIdentifier":"c:@EA@GIOStatus"}],"abstract":[{"type":"text","text":"Replacement for "},{"type":"codeVoice","code":"g_io_channel_seek()"},{"type":"text","text":" with the new API."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannelProtocol\/seekPosition(offset:type:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/iochannelprotocol\/seekposition(offset:type:)"},"doc://GLib/documentation/GLib/IOChannelProtocol/readChars(buf:count:bytesRead:)":{"role":"symbol","title":"readChars(buf:count:bytesRead:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"readChars"},{"kind":"text","text":"("},{"kind":"externalParam","text":"buf"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"count"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"bytesRead"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gsize","preciseIdentifier":"c:@T@gsize"},{"kind":"text","text":">!) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"GIOStatus","preciseIdentifier":"c:@EA@GIOStatus"}],"abstract":[{"type":"text","text":"Replacement for "},{"type":"codeVoice","code":"g_io_channel_read()"},{"type":"text","text":" with the new API."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannelProtocol\/readChars(buf:count:bytesRead:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/iochannelprotocol\/readchars(buf:count:bytesread:)"},"doc://GLib/documentation/GLib/IOChannelProtocol/seek(offset:type:)":{"role":"symbol","title":"seek(offset:type:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"seek"},{"kind":"text","text":"("},{"kind":"externalParam","text":"offset"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gint64","preciseIdentifier":"c:@T@gint64"},{"kind":"text","text":", "},{"kind":"externalParam","text":"type"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GSeekType","preciseIdentifier":"c:@EA@GSeekType"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"GIOError","preciseIdentifier":"c:@EA@GIOError"}],"abstract":[{"type":"text","text":"Sets the current position in the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannel"},{"type":"text","text":", similar to the standard"},{"type":"text","text":" "},{"type":"text","text":"library function "},{"type":"codeVoice","code":"fseek()"},{"type":"text","text":"."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannelProtocol\/seek(offset:type:)","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/glib\/iochannelprotocol\/seek(offset:type:)"},"doc://GLib/documentation/GLib/IOChannel":{"role":"symbol","title":"IOChannel","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"IOChannel"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"GIOChannel"},{"type":"text","text":" data type aims to provide a portable method for"},{"type":"text","text":" "},{"type":"text","text":"using file descriptors, pipes, and sockets, and integrating them"},{"type":"text","text":" "},{"type":"text","text":"into the main event loop (see [struct"},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/MainContext"},{"type":"text","text":"]). Currently,"},{"type":"text","text":" "},{"type":"text","text":"full support is available on UNIX platforms; support for Windows"},{"type":"text","text":" "},{"type":"text","text":"is only partially complete."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannel","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"IOChannel"}],"url":"\/documentation\/glib\/iochannel"},"doc://GLib/documentation/GLib/IOChannelProtocol/writeChars(buf:count:bytesWritten:)":{"role":"symbol","title":"writeChars(buf:count:bytesWritten:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"writeChars"},{"kind":"text","text":"("},{"kind":"externalParam","text":"buf"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"count"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gssize","preciseIdentifier":"c:@T@gssize"},{"kind":"text","text":", "},{"kind":"externalParam","text":"bytesWritten"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gsize","preciseIdentifier":"c:@T@gsize"},{"kind":"text","text":">!) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"GIOStatus","preciseIdentifier":"c:@EA@GIOStatus"}],"abstract":[{"type":"text","text":"Replacement for "},{"type":"codeVoice","code":"g_io_channel_write()"},{"type":"text","text":" with the new API."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannelProtocol\/writeChars(buf:count:bytesWritten:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/iochannelprotocol\/writechars(buf:count:byteswritten:)"},"doc://GLib/documentation/GLib/IOChannelProtocol/setCloseOnUnref(doClose:)":{"role":"symbol","title":"setCloseOnUnref(doClose:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"setCloseOnUnref"},{"kind":"text","text":"("},{"kind":"externalParam","text":"doClose"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Whether to close the channel on the final unref of the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannel"},{"type":"text","text":" "},{"type":"text","text":"data structure. The default value of this is "},{"type":"codeVoice","code":"true"},{"type":"text","text":" for channels"},{"type":"text","text":" "},{"type":"text","text":"created by g_io_channel_new_file (), and "},{"type":"codeVoice","code":"false"},{"type":"text","text":" for all other channels."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannelProtocol\/setCloseOnUnref(doClose:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/iochannelprotocol\/setcloseonunref(doclose:)"},"doc://GLib/documentation/GLib/IOChannelProtocol/encoding":{"role":"symbol","title":"encoding","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"encoding"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Gets the encoding for the input\/output of the channel."},{"type":"text","text":" "},{"type":"text","text":"The internal encoding is always UTF-8. The encoding "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" "},{"type":"text","text":"makes the channel safe for binary data."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannelProtocol\/encoding","kind":"symbol","type":"topic","url":"\/documentation\/glib\/iochannelprotocol\/encoding"},"doc://GLib/documentation/GLib/PointerWrapper":{"role":"symbol","title":"PointerWrapper","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"PointerWrapper"}],"abstract":[{"type":"text","text":"Protocol for GLib types that wrap pointers."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/PointerWrapper","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PointerWrapper"}],"url":"\/documentation\/glib\/pointerwrapper"},"doc://GLib/documentation/GLib/IOChannelProtocol/getLineTerm(length:)":{"role":"symbol","title":"getLineTerm(length:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getLineTerm"},{"kind":"text","text":"("},{"kind":"externalParam","text":"length"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gint","preciseIdentifier":"c:@T@gint"},{"kind":"text","text":">!) -> "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"This returns the string that "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannel"},{"type":"text","text":" uses to determine"},{"type":"text","text":" "},{"type":"text","text":"where in the file a line break occurs. A value of "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" "},{"type":"text","text":"indicates autodetection."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannelProtocol\/getLineTerm(length:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/iochannelprotocol\/getlineterm(length:)"},"doc://GLib/documentation/GLib/IOChannelProtocol/flush()":{"role":"symbol","title":"flush()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"flush"},{"kind":"text","text":"() "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"GIOStatus","preciseIdentifier":"c:@EA@GIOStatus"}],"abstract":[{"type":"text","text":"Flushes the write buffer for the GIOChannel."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannelProtocol\/flush()","kind":"symbol","type":"topic","url":"\/documentation\/glib\/iochannelprotocol\/flush()"},"doc://GLib/documentation/GLib/IOChannelProtocol/close()":{"role":"symbol","title":"close()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"close"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Close an IO channel. Any pending data to be written will be"},{"type":"text","text":" "},{"type":"text","text":"flushed, ignoring errors. The channel will not be freed until the"},{"type":"text","text":" "},{"type":"text","text":"last reference is dropped using "},{"type":"codeVoice","code":"g_io_channel_unref()"},{"type":"text","text":"."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannelProtocol\/close()","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/glib\/iochannelprotocol\/close()"},"doc://GLib/documentation/GLib/IOChannelProtocol/set(buffered:)":{"role":"symbol","title":"set(buffered:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"set"},{"kind":"text","text":"("},{"kind":"externalParam","text":"buffered"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"The buffering state can only be set if the channel’s encoding"},{"type":"text","text":" "},{"type":"text","text":"is "},{"type":"codeVoice","code":"nil"},{"type":"text","text":". For any other encoding, the channel must be buffered."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannelProtocol\/set(buffered:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/iochannelprotocol\/set(buffered:)"},"doc://GLib/documentation/GLib/IOChannelProtocol/write(buf:count:bytesWritten:)":{"role":"symbol","title":"write(buf:count:bytesWritten:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"write"},{"kind":"text","text":"("},{"kind":"externalParam","text":"buf"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"count"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"bytesWritten"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gsize","preciseIdentifier":"c:@T@gsize"},{"kind":"text","text":">!) -> "},{"kind":"typeIdentifier","text":"GIOError","preciseIdentifier":"c:@EA@GIOError"}],"abstract":[{"type":"text","text":"Writes data to a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannel"},{"type":"text","text":"."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannelProtocol\/write(buf:count:bytesWritten:)","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/glib\/iochannelprotocol\/write(buf:count:byteswritten:)"},"doc://GLib/documentation/GLib/IOChannelProtocol/ioAddWatch(condition:func:userData:)":{"role":"symbol","title":"ioAddWatch(condition:func:userData:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"ioAddWatch"},{"kind":"text","text":"("},{"kind":"externalParam","text":"condition"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"IOCondition","preciseIdentifier":"s:4GLib11IOConditionV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"func"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GIOFunc","preciseIdentifier":"c:@T@GIOFunc"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"userData"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"abstract":[{"type":"text","text":"Adds the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannel"},{"type":"text","text":" into the default main loop context"},{"type":"text","text":" "},{"type":"text","text":"with the default priority."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannelProtocol\/ioAddWatch(condition:func:userData:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/iochannelprotocol\/ioaddwatch(condition:func:userdata:)"},"doc://GLib/documentation/GLib/IOChannelProtocol/ioCreateWatch(condition:)":{"role":"symbol","title":"ioCreateWatch(condition:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"ioCreateWatch"},{"kind":"text","text":"("},{"kind":"externalParam","text":"condition"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"IOCondition","preciseIdentifier":"s:4GLib11IOConditionV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"SourceRef","preciseIdentifier":"s:4GLib9SourceRefV"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Creates a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Source"},{"type":"text","text":" that’s dispatched when "},{"type":"codeVoice","code":"condition"},{"type":"text","text":" is met for the"},{"type":"text","text":" "},{"type":"text","text":"given "},{"type":"codeVoice","code":"channel"},{"type":"text","text":". For example, if condition is "},{"type":"codeVoice","code":"in"},{"type":"text","text":", the source will"},{"type":"text","text":" "},{"type":"text","text":"be dispatched when there’s data available for reading."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannelProtocol\/ioCreateWatch(condition:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/iochannelprotocol\/iocreatewatch(condition:)"},"doc://GLib/documentation/GLib/IOChannelProtocol/flags":{"role":"symbol","title":"flags","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"flags"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"IOFlags","preciseIdentifier":"s:4GLib7IOFlagsV"}],"abstract":[{"type":"text","text":"Gets the current flags for a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannel"},{"type":"text","text":", including read-only"},{"type":"text","text":" "},{"type":"text","text":"flags such as "},{"type":"codeVoice","code":"isReadable"},{"type":"text","text":"."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannelProtocol\/flags","kind":"symbol","type":"topic","url":"\/documentation\/glib\/iochannelprotocol\/flags"},"doc://GLib/documentation/GLib/IOChannelProtocol/readUnichar(thechar:)":{"role":"symbol","title":"readUnichar(thechar:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"readUnichar"},{"kind":"text","text":"("},{"kind":"externalParam","text":"thechar"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gunichar","preciseIdentifier":"c:@T@gunichar"},{"kind":"text","text":">!) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"GIOStatus","preciseIdentifier":"c:@EA@GIOStatus"}],"abstract":[{"type":"text","text":"Reads a Unicode character from "},{"type":"codeVoice","code":"channel"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"This function cannot be called on a channel with "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" encoding."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannelProtocol\/readUnichar(thechar:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/iochannelprotocol\/readunichar(thechar:)"},"doc://GLib/documentation/GLib/IOChannelProtocol/getBufferSize()":{"role":"symbol","title":"getBufferSize()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getBufferSize"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"abstract":[{"type":"text","text":"Gets the buffer size."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannelProtocol\/getBufferSize()","kind":"symbol","type":"topic","url":"\/documentation\/glib\/iochannelprotocol\/getbuffersize()"},"doc://GLib/documentation/GLib/IOChannelProtocol/ioAddWatchFull(priority:condition:func:userData:notify:)":{"role":"symbol","title":"ioAddWatchFull(priority:condition:func:userData:notify:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"ioAddWatchFull"},{"kind":"text","text":"("},{"kind":"externalParam","text":"priority"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"condition"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"IOCondition","preciseIdentifier":"s:4GLib11IOConditionV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"func"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GIOFunc","preciseIdentifier":"c:@T@GIOFunc"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"userData"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"notify"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GDestroyNotify","preciseIdentifier":"c:@T@GDestroyNotify"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"abstract":[{"type":"text","text":"Adds the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannel"},{"type":"text","text":" into the default main loop context"},{"type":"text","text":" "},{"type":"text","text":"with the given priority."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannelProtocol\/ioAddWatchFull(priority:condition:func:userData:notify:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/iochannelprotocol\/ioaddwatchfull(priority:condition:func:userdata:notify:)"},"doc://GLib/documentation/GLib/IOChannelProtocol/getBufferCondition()":{"role":"symbol","title":"getBufferCondition()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getBufferCondition"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"IOCondition","preciseIdentifier":"s:4GLib11IOConditionV"}],"abstract":[{"type":"text","text":"This function returns a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOCondition"},{"type":"text","text":" depending on whether there"},{"type":"text","text":" "},{"type":"text","text":"is data to be read\/space to write data in the internal buffers in"},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannel"},{"type":"text","text":". Only the flags "},{"type":"codeVoice","code":"in"},{"type":"text","text":" and "},{"type":"codeVoice","code":"out"},{"type":"text","text":" may be set."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannelProtocol\/getBufferCondition()","kind":"symbol","type":"topic","url":"\/documentation\/glib\/iochannelprotocol\/getbuffercondition()"},"doc://GLib/documentation/GLib/IOChannelProtocol/init_()":{"role":"symbol","title":"init_()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"init_"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Initializes a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannel"},{"type":"text","text":" struct."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannelProtocol\/init_()","kind":"symbol","type":"topic","url":"\/documentation\/glib\/iochannelprotocol\/init_()"},"doc://GLib/documentation/GLib/Source":{"role":"symbol","title":"Source","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Source"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"GSource"},{"type":"text","text":" struct is an opaque data type"},{"type":"text","text":" "},{"type":"text","text":"representing an event source."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/Source","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Source"}],"url":"\/documentation\/glib\/source"},"doc://GLib/documentation/GLib/IOChannelProtocol/io_channel_ptr-247yh":{"defaultImplementations":1,"role":"symbol","title":"io_channel_ptr","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"io_channel_ptr"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GIOChannel"},{"kind":"text","text":">!"}],"abstract":[{"type":"text","text":"Typed pointer to the underlying "},{"type":"codeVoice","code":"GIOChannel"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannelProtocol\/io_channel_ptr-247yh","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/glib\/iochannelprotocol\/io_channel_ptr-247yh"},"doc://GLib/documentation/GLib/IOChannelProtocol/set(flags:)":{"role":"symbol","title":"set(flags:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"set"},{"kind":"text","text":"("},{"kind":"externalParam","text":"flags"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"IOFlags","preciseIdentifier":"s:4GLib7IOFlagsV"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"GIOStatus","preciseIdentifier":"c:@EA@GIOStatus"}],"abstract":[{"type":"text","text":"Sets the (writeable) flags in "},{"type":"codeVoice","code":"channel"},{"type":"text","text":" to ("},{"type":"codeVoice","code":"flags"},{"type":"text","text":" & "},{"type":"codeVoice","code":"setMask"},{"type":"text","text":")."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannelProtocol\/set(flags:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/iochannelprotocol\/set(flags:)"},"doc://GLib/documentation/GLib/IOChannelProtocol/set(encoding:)":{"role":"symbol","title":"set(encoding:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"set"},{"kind":"text","text":"("},{"kind":"externalParam","text":"encoding"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">?) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"GIOStatus","preciseIdentifier":"c:@EA@GIOStatus"}],"abstract":[{"type":"text","text":"Sets the encoding for the input\/output of the channel."},{"type":"text","text":" "},{"type":"text","text":"The internal encoding is always UTF-8. The default encoding"},{"type":"text","text":" "},{"type":"text","text":"for the external file is UTF-8."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannelProtocol\/set(encoding:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/iochannelprotocol\/set(encoding:)"},"doc://GLib/documentation/GLib/IOChannelProtocol/getFlags()":{"role":"symbol","title":"getFlags()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getFlags"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"IOFlags","preciseIdentifier":"s:4GLib7IOFlagsV"}],"abstract":[{"type":"text","text":"Gets the current flags for a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannel"},{"type":"text","text":", including read-only"},{"type":"text","text":" "},{"type":"text","text":"flags such as "},{"type":"codeVoice","code":"isReadable"},{"type":"text","text":"."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannelProtocol\/getFlags()","kind":"symbol","type":"topic","url":"\/documentation\/glib\/iochannelprotocol\/getflags()"},"doc://GLib/documentation/GLib/IOChannelProtocol/buffered":{"role":"symbol","title":"buffered","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"buffered"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Returns whether "},{"type":"codeVoice","code":"channel"},{"type":"text","text":" is buffered."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannelProtocol\/buffered","kind":"symbol","type":"topic","url":"\/documentation\/glib\/iochannelprotocol\/buffered"},"doc://GLib/documentation/GLib":{"role":"collection","title":"GLib","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib","kind":"symbol","type":"topic","url":"\/documentation\/glib"}}}