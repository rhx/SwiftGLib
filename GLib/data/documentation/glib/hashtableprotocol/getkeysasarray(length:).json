{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getKeysAsArray"},{"kind":"text","text":"("},{"kind":"externalParam","text":"length"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"guint","preciseIdentifier":"c:@T@guint"},{"kind":"text","text":">! = nil) -> "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?>!"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The returned array is "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"-terminated but may contain "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" as a"},{"type":"text","text":" "},{"type":"text","text":"key.  Use "},{"type":"codeVoice","code":"length"},{"type":"text","text":" to determine the true length if itâ€™s possible that"},{"type":"text","text":" "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" was used as the value for a key."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Note: in the common case of a string-keyed "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTable"},{"type":"text","text":", the return"},{"type":"text","text":" "},{"type":"text","text":"value of this function can be conveniently cast to (const gchar **)."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This iterates over every entry in the hash table to build its return value."},{"type":"text","text":" "},{"type":"text","text":"To iterate over the entries in a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTable"},{"type":"text","text":" more efficiently, use a"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTableIter"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You should always free the return result with "},{"type":"codeVoice","code":"g_free()"},{"type":"text","text":".  In the"},{"type":"text","text":" "},{"type":"text","text":"above-mentioned case of a string-keyed hash table, it may be"},{"type":"text","text":" "},{"type":"text","text":"appropriate to use "},{"type":"codeVoice","code":"g_strfreev()"},{"type":"text","text":" if you call "},{"type":"codeVoice","code":"g_hash_table_steal_all()"},{"type":"text","text":" "},{"type":"text","text":"first to transfer ownership of the keys."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/glib\/hashtableprotocol\/getkeysasarray(length:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/GLib\/documentation\/GLib\/HashTableProtocol\/getKeysAsArray(length:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Retrieves every key inside "},{"type":"codeVoice","code":"hashTable"},{"type":"text","text":", as an array."}],"kind":"symbol","metadata":{"role":"symbol","title":"getKeysAsArray(length:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getKeysAsArray"},{"kind":"text","text":"("},{"kind":"externalParam","text":"length"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"guint","preciseIdentifier":"c:@T@guint"},{"kind":"text","text":">!) -> "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?>!"}],"symbolKind":"method","externalID":"s:4GLib17HashTableProtocolPAAE14getKeysAsArray6lengthSpySvSgGSgSpys6UInt32VGSg_tF","extendedModule":"GLib","modules":[{"name":"GLib"}]},"hierarchy":{"paths":[["doc:\/\/GLib\/documentation\/GLib","doc:\/\/GLib\/documentation\/GLib\/HashTableProtocol"]]},"references":{"doc://GLib/documentation/GLib/HashTableProtocol":{"role":"symbol","title":"HashTableProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HashTableProtocol"}],"abstract":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTable"},{"type":"text","text":" struct is an opaque data structure to represent a"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"..\/Protocols\/HashTableProtocol.html"},{"type":"text","text":". It should only be accessed via the"},{"type":"text","text":" "},{"type":"text","text":"following functions."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTableProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HashTableProtocol"}],"url":"\/documentation\/glib\/hashtableprotocol"},"doc://GLib/documentation/GLib/HashTableProtocol/getKeysAsArray(length:)":{"role":"symbol","title":"getKeysAsArray(length:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getKeysAsArray"},{"kind":"text","text":"("},{"kind":"externalParam","text":"length"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"guint","preciseIdentifier":"c:@T@guint"},{"kind":"text","text":">!) -> "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?>!"}],"abstract":[{"type":"text","text":"Retrieves every key inside "},{"type":"codeVoice","code":"hashTable"},{"type":"text","text":", as an array."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTableProtocol\/getKeysAsArray(length:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/hashtableprotocol\/getkeysasarray(length:)"},"doc://GLib/documentation/GLib/HashTable":{"role":"symbol","title":"HashTable","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HashTable"}],"abstract":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTable"},{"type":"text","text":" struct is an opaque data structure to represent a"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"..\/Protocols\/HashTableProtocol.html"},{"type":"text","text":". It should only be accessed via the"},{"type":"text","text":" "},{"type":"text","text":"following functions."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTable","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HashTable"}],"url":"\/documentation\/glib\/hashtable"},"doc://GLib/documentation/GLib":{"role":"collection","title":"GLib","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib","kind":"symbol","type":"topic","url":"\/documentation\/glib"},"../Protocols/HashTableProtocol.html":{"title":"Hash Table","titleInlineContent":[{"type":"text","text":"Hash Table"}],"type":"link","identifier":"..\/Protocols\/HashTableProtocol.html","url":"..\/Protocols\/HashTableProtocol.html"},"doc://GLib/documentation/GLib/HashTableIter":{"role":"symbol","title":"HashTableIter","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HashTableIter"}],"abstract":[{"type":"text","text":"A GHashTableIter structure represents an iterator that can be used"},{"type":"text","text":" "},{"type":"text","text":"to iterate over the elements of a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTable"},{"type":"text","text":". GHashTableIter"},{"type":"text","text":" "},{"type":"text","text":"structures are typically allocated on the stack and then initialized"},{"type":"text","text":" "},{"type":"text","text":"with "},{"type":"codeVoice","code":"g_hash_table_iter_init()"},{"type":"text","text":"."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTableIter","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HashTableIter"}],"url":"\/documentation\/glib\/hashtableiter"}}}