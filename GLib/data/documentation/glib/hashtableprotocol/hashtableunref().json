{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"hashTableUnref"},{"kind":"text","text":"()"}],"languages":["swift"],"platforms":["macOS"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/glib\/hashtableprotocol\/hashtableunref()"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/GLib\/documentation\/GLib\/HashTableProtocol\/hashTableUnref()","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Atomically decrements the reference count of "},{"type":"codeVoice","code":"hashTable"},{"type":"text","text":" by one."},{"type":"text","text":" "},{"type":"text","text":"If the reference count drops to 0, all keys and values will be"},{"type":"text","text":" "},{"type":"text","text":"destroyed, and all memory allocated by the hash table is released."},{"type":"text","text":" "},{"type":"text","text":"This function is MT-safe and may be called from any thread."}],"kind":"symbol","metadata":{"role":"symbol","title":"hashTableUnref()","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"hashTableUnref"},{"kind":"text","text":"()"}],"symbolKind":"method","externalID":"s:4GLib17HashTableProtocolPAAE04hashC5UnrefyyF","extendedModule":"GLib","modules":[{"name":"GLib"}]},"hierarchy":{"paths":[["doc:\/\/GLib\/documentation\/GLib","doc:\/\/GLib\/documentation\/GLib\/HashTableProtocol"]]},"references":{"../Protocols/HashTableProtocol.html":{"title":"Hash Table","titleInlineContent":[{"type":"text","text":"Hash Table"}],"type":"link","identifier":"..\/Protocols\/HashTableProtocol.html","url":"..\/Protocols\/HashTableProtocol.html"},"doc://GLib/documentation/GLib/HashTable":{"role":"symbol","title":"HashTable","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HashTable"}],"abstract":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTable"},{"type":"text","text":" struct is an opaque data structure to represent a"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"..\/Protocols\/HashTableProtocol.html"},{"type":"text","text":". It should only be accessed via the"},{"type":"text","text":" "},{"type":"text","text":"following functions."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTable","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HashTable"}],"url":"\/documentation\/glib\/hashtable"},"doc://GLib/documentation/GLib/HashTableProtocol/hashTableUnref()":{"role":"symbol","title":"hashTableUnref()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"hashTableUnref"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Atomically decrements the reference count of "},{"type":"codeVoice","code":"hashTable"},{"type":"text","text":" by one."},{"type":"text","text":" "},{"type":"text","text":"If the reference count drops to 0, all keys and values will be"},{"type":"text","text":" "},{"type":"text","text":"destroyed, and all memory allocated by the hash table is released."},{"type":"text","text":" "},{"type":"text","text":"This function is MT-safe and may be called from any thread."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTableProtocol\/hashTableUnref()","kind":"symbol","type":"topic","url":"\/documentation\/glib\/hashtableprotocol\/hashtableunref()"},"doc://GLib/documentation/GLib":{"role":"collection","title":"GLib","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib","kind":"symbol","type":"topic","url":"\/documentation\/glib"},"doc://GLib/documentation/GLib/HashTableProtocol":{"role":"symbol","title":"HashTableProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HashTableProtocol"}],"abstract":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTable"},{"type":"text","text":" struct is an opaque data structure to represent a"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"..\/Protocols\/HashTableProtocol.html"},{"type":"text","text":". It should only be accessed via the"},{"type":"text","text":" "},{"type":"text","text":"following functions."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTableProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HashTableProtocol"}],"url":"\/documentation\/glib\/hashtableprotocol"}}}