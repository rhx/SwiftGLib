{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"find"},{"kind":"text","text":"("},{"kind":"externalParam","text":"predicate"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GHRFunc","preciseIdentifier":"c:@T@GHRFunc"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"userData"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"? = nil) -> "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Note, that hash tables are really only optimized for forward"},{"type":"text","text":" "},{"type":"text","text":"lookups, i.e. "},{"type":"codeVoice","code":"g_hash_table_lookup()"},{"type":"text","text":". So code that frequently issues"},{"type":"text","text":" "},{"type":"codeVoice","code":"g_hash_table_find()"},{"type":"text","text":" or "},{"type":"codeVoice","code":"g_hash_table_foreach()"},{"type":"text","text":" (e.g. in the order of"},{"type":"text","text":" "},{"type":"text","text":"once per every entry in a hash table) should probably be reworked"},{"type":"text","text":" "},{"type":"text","text":"to use additional or different data structures for reverse lookups"},{"type":"text","text":" "},{"type":"text","text":"(keep in mind that an "},{"type":"codeVoice","code":"O(n)"},{"type":"text","text":" find\/foreach operation issued for all n"},{"type":"text","text":" "},{"type":"text","text":"values in a hash table ends up needing "},{"type":"codeVoice","code":"O(n*n)"},{"type":"text","text":" operations)."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/glib\/hashtableprotocol\/find(predicate:userdata:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/GLib\/documentation\/GLib\/HashTableProtocol\/find(predicate:userData:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Calls the given function for key\/value pairs in the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTable"},{"type":"text","text":" "},{"type":"text","text":"until "},{"type":"codeVoice","code":"predicate"},{"type":"text","text":" returns "},{"type":"codeVoice","code":"true"},{"type":"text","text":". The function is passed the key"},{"type":"text","text":" "},{"type":"text","text":"and value of each pair, and the given "},{"type":"codeVoice","code":"userData"},{"type":"text","text":" parameter. The"},{"type":"text","text":" "},{"type":"text","text":"hash table may not be modified while iterating over it (you can’t"},{"type":"text","text":" "},{"type":"text","text":"add\/remove items)."}],"kind":"symbol","metadata":{"role":"symbol","title":"find(predicate:userData:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"find"},{"kind":"text","text":"("},{"kind":"externalParam","text":"predicate"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GHRFunc","preciseIdentifier":"c:@T@GHRFunc"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"userData"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?"}],"symbolKind":"method","externalID":"s:4GLib17HashTableProtocolPAAE4find9predicate8userDataSvSgs5Int32VAG_A2GtXCSg_AGtF","extendedModule":"GLib","modules":[{"name":"GLib"}]},"hierarchy":{"paths":[["doc:\/\/GLib\/documentation\/GLib","doc:\/\/GLib\/documentation\/GLib\/HashTableProtocol"]]},"references":{"doc://GLib/documentation/GLib/HashTable":{"role":"symbol","title":"HashTable","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HashTable"}],"abstract":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTable"},{"type":"text","text":" struct is an opaque data structure to represent a"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"..\/Protocols\/HashTableProtocol.html"},{"type":"text","text":". It should only be accessed via the"},{"type":"text","text":" "},{"type":"text","text":"following functions."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTable","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HashTable"}],"url":"\/documentation\/glib\/hashtable"},"doc://GLib/documentation/GLib/HashTableProtocol/find(predicate:userData:)":{"role":"symbol","title":"find(predicate:userData:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"find"},{"kind":"text","text":"("},{"kind":"externalParam","text":"predicate"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GHRFunc","preciseIdentifier":"c:@T@GHRFunc"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"userData"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Calls the given function for key\/value pairs in the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTable"},{"type":"text","text":" "},{"type":"text","text":"until "},{"type":"codeVoice","code":"predicate"},{"type":"text","text":" returns "},{"type":"codeVoice","code":"true"},{"type":"text","text":". The function is passed the key"},{"type":"text","text":" "},{"type":"text","text":"and value of each pair, and the given "},{"type":"codeVoice","code":"userData"},{"type":"text","text":" parameter. The"},{"type":"text","text":" "},{"type":"text","text":"hash table may not be modified while iterating over it (you can’t"},{"type":"text","text":" "},{"type":"text","text":"add\/remove items)."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTableProtocol\/find(predicate:userData:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/hashtableprotocol\/find(predicate:userdata:)"},"doc://GLib/documentation/GLib/HashTableProtocol":{"role":"symbol","title":"HashTableProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HashTableProtocol"}],"abstract":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTable"},{"type":"text","text":" struct is an opaque data structure to represent a"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"..\/Protocols\/HashTableProtocol.html"},{"type":"text","text":". It should only be accessed via the"},{"type":"text","text":" "},{"type":"text","text":"following functions."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTableProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HashTableProtocol"}],"url":"\/documentation\/glib\/hashtableprotocol"},"../Protocols/HashTableProtocol.html":{"title":"Hash Table","titleInlineContent":[{"type":"text","text":"Hash Table"}],"type":"link","identifier":"..\/Protocols\/HashTableProtocol.html","url":"..\/Protocols\/HashTableProtocol.html"},"doc://GLib/documentation/GLib":{"role":"collection","title":"GLib","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib","kind":"symbol","type":"topic","url":"\/documentation\/glib"}}}