{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"bitLock"},{"kind":"text","text":"("},{"kind":"externalParam","text":"address"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gint","preciseIdentifier":"c:@T@gint"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"lockBit"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":")"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Attempting to lock on two different bits within the same integer is"},{"type":"text","text":" "},{"type":"text","text":"not supported and will very probably cause deadlocks."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The value of the bit that is set is (1u << "},{"type":"codeVoice","code":"bit"},{"type":"text","text":").  If "},{"type":"codeVoice","code":"bit"},{"type":"text","text":" is not"},{"type":"text","text":" "},{"type":"text","text":"between 0 and 31 then the result is undefined."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This function accesses "},{"type":"codeVoice","code":"address"},{"type":"text","text":" atomically.  All other accesses to"},{"type":"text","text":" "},{"type":"codeVoice","code":"address"},{"type":"text","text":" must be atomic in order for this function to work"},{"type":"text","text":" "},{"type":"text","text":"reliably. While "},{"type":"codeVoice","code":"address"},{"type":"text","text":" has a "},{"type":"codeVoice","code":"volatile"},{"type":"text","text":" qualifier, this is a historical"},{"type":"text","text":" "},{"type":"text","text":"artifact and the argument passed to it should not be "},{"type":"codeVoice","code":"volatile"},{"type":"text","text":"."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/glib\/bitlock(address:lockbit:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/GLib\/documentation\/GLib\/bitLock(address:lockBit:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Sets the indicated "},{"type":"codeVoice","code":"lockBit"},{"type":"text","text":" in "},{"type":"codeVoice","code":"address"},{"type":"text","text":".  If the bit is already"},{"type":"text","text":" "},{"type":"text","text":"set, this call will block until "},{"type":"codeVoice","code":"g_bit_unlock()"},{"type":"text","text":" unsets the"},{"type":"text","text":" "},{"type":"text","text":"corresponding bit."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"bitLock"},{"kind":"text","text":"("},{"kind":"externalParam","text":"address"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gint","preciseIdentifier":"c:@T@gint"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"lockBit"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":")"}],"title":"bitLock(address:lockBit:)","roleHeading":"Function","role":"symbol","symbolKind":"func","externalID":"s:4GLib7bitLock7address7lockBitySpys5Int32VGSg_SitF","modules":[{"name":"GLib"}]},"hierarchy":{"paths":[["doc:\/\/GLib\/documentation\/GLib"]]},"references":{"doc://GLib/documentation/GLib/bitLock(address:lockBit:)":{"role":"symbol","title":"bitLock(address:lockBit:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"bitLock"},{"kind":"text","text":"("},{"kind":"externalParam","text":"address"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gint","preciseIdentifier":"c:@T@gint"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"lockBit"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Sets the indicated "},{"type":"codeVoice","code":"lockBit"},{"type":"text","text":" in "},{"type":"codeVoice","code":"address"},{"type":"text","text":".  If the bit is already"},{"type":"text","text":" "},{"type":"text","text":"set, this call will block until "},{"type":"codeVoice","code":"g_bit_unlock()"},{"type":"text","text":" unsets the"},{"type":"text","text":" "},{"type":"text","text":"corresponding bit."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/bitLock(address:lockBit:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/bitlock(address:lockbit:)"},"doc://GLib/documentation/GLib":{"role":"collection","title":"GLib","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib","kind":"symbol","type":"topic","url":"\/documentation\/glib"}}}