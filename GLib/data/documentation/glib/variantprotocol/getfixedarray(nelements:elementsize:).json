{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getFixedArray"},{"kind":"text","text":"("},{"kind":"externalParam","text":"nElements"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gsize","preciseIdentifier":"c:@T@gsize"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"elementSize"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"gconstpointer","preciseIdentifier":"c:@T@gconstpointer"},{"kind":"text","text":"!"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"value"},{"type":"text","text":" must be an array with fixed-sized elements.  Numeric types are"},{"type":"text","text":" "},{"type":"text","text":"fixed-size, as are tuples containing only other fixed-sized types."}]},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"elementSize"},{"type":"text","text":" must be the size of a single element in the array,"},{"type":"text","text":" "},{"type":"text","text":"as given by the section on"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"struct.Variant.html#serialized-data-memory"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In particular, arrays of these fixed-sized types can be interpreted"},{"type":"text","text":" "},{"type":"text","text":"as an array of the given C type, with "},{"type":"codeVoice","code":"elementSize"},{"type":"text","text":" set to the size"},{"type":"text","text":" "},{"type":"text","text":"the appropriate type:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"G_VARIANT_TYPE_INT16"},{"type":"text","text":" (etc.): "},{"type":"codeVoice","code":"gint16"},{"type":"text","text":" (etc.)"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"G_VARIANT_TYPE_BOOLEAN:"},{"type":"text","text":" "},{"type":"codeVoice","code":"guchar"},{"type":"text","text":" (not "},{"type":"codeVoice","code":"gboolean"},{"type":"text","text":"!)"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"G_VARIANT_TYPE_BYTE:"},{"type":"text","text":" "},{"type":"codeVoice","code":"guint8"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"G_VARIANT_TYPE_HANDLE:"},{"type":"text","text":" "},{"type":"codeVoice","code":"guint32"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"G_VARIANT_TYPE_DOUBLE:"},{"type":"text","text":" "},{"type":"codeVoice","code":"gdouble"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example, if calling this function for an array of 32-bit integers,"},{"type":"text","text":" "},{"type":"text","text":"you might say "},{"type":"codeVoice","code":"sizeof(gint32)"},{"type":"text","text":". This value isn’t used except for the purpose"},{"type":"text","text":" "},{"type":"text","text":"of a double-check that the form of the serialized data matches the caller’s"},{"type":"text","text":" "},{"type":"text","text":"expectation."}]},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"nElements"},{"type":"text","text":", which must be non-"},{"type":"codeVoice","code":"nil"},{"type":"text","text":", is set equal to the number of"},{"type":"text","text":" "},{"type":"text","text":"items in the array."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/glib\/variantprotocol\/getfixedarray(nelements:elementsize:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/GLib\/documentation\/GLib\/VariantProtocol\/getFixedArray(nElements:elementSize:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Provides access to the serialized data for an array of fixed-sized"},{"type":"text","text":" "},{"type":"text","text":"items."}],"kind":"symbol","metadata":{"role":"symbol","title":"getFixedArray(nElements:elementSize:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getFixedArray"},{"kind":"text","text":"("},{"kind":"externalParam","text":"nElements"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gsize","preciseIdentifier":"c:@T@gsize"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"elementSize"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"gconstpointer","preciseIdentifier":"c:@T@gconstpointer"},{"kind":"text","text":"!"}],"symbolKind":"method","externalID":"s:4GLib15VariantProtocolPAAE13getFixedArray9nElements11elementSizeSVSgSpySuGSg_SitF","extendedModule":"GLib","modules":[{"name":"GLib"}]},"hierarchy":{"paths":[["doc:\/\/GLib\/documentation\/GLib","doc:\/\/GLib\/documentation\/GLib\/VariantProtocol"]]},"references":{"doc://GLib/documentation/GLib/VariantProtocol":{"role":"symbol","title":"VariantProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"VariantProtocol"}],"abstract":[{"type":"codeVoice","code":"GVariant"},{"type":"text","text":" is a variant datatype; it can contain one or more values"},{"type":"text","text":" "},{"type":"text","text":"along with information about the type of the values."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/VariantProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"VariantProtocol"}],"url":"\/documentation\/glib\/variantprotocol"},"doc://GLib/documentation/GLib":{"role":"collection","title":"GLib","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib","kind":"symbol","type":"topic","url":"\/documentation\/glib"},"doc://GLib/documentation/GLib/VariantProtocol/getFixedArray(nElements:elementSize:)":{"role":"symbol","title":"getFixedArray(nElements:elementSize:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getFixedArray"},{"kind":"text","text":"("},{"kind":"externalParam","text":"nElements"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gsize","preciseIdentifier":"c:@T@gsize"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"elementSize"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"gconstpointer","preciseIdentifier":"c:@T@gconstpointer"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Provides access to the serialized data for an array of fixed-sized"},{"type":"text","text":" "},{"type":"text","text":"items."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/VariantProtocol\/getFixedArray(nElements:elementSize:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/variantprotocol\/getfixedarray(nelements:elementsize:)"},"struct.Variant.html#serialized-data-memory":{"title":"serialized data memory","titleInlineContent":[{"type":"text","text":"serialized data memory"}],"type":"link","identifier":"struct.Variant.html#serialized-data-memory","url":"struct.Variant.html#serialized-data-memory"}}}