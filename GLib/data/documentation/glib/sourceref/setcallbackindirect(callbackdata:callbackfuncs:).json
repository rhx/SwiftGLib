{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"setCallbackIndirect"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"SourceCallbackFuncsT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"callbackData"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"? = nil, "},{"kind":"externalParam","text":"callbackFuncs"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SourceCallbackFuncsT"},{"kind":"text","text":") "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"SourceCallbackFuncsT"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceCallbackFuncsProtocol","preciseIdentifier":"s:4GLib27SourceCallbackFuncsProtocolP","text":"SourceCallbackFuncsProtocol"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"It is safe to call this function multiple times on a source which has already"},{"type":"text","text":" "},{"type":"text","text":"been attached to a context. The changes will take effect for the next time"},{"type":"text","text":" "},{"type":"text","text":"the source is dispatched after this call returns."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/glib\/sourceref\/setcallbackindirect(callbackdata:callbackfuncs:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/GLib\/documentation\/GLib\/SourceRef\/setCallbackIndirect(callbackData:callbackFuncs:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Sets the callback function storing the data as a refcounted callback"},{"type":"text","text":" "},{"type":"text","text":"“object”. This is used internally. Note that calling"},{"type":"text","text":" "},{"type":"text","text":"[method"},{"type":"codeVoice","code":"GLib.Source.set_callback_indirect"},{"type":"text","text":"] assumes"},{"type":"text","text":" "},{"type":"text","text":"an initial reference count on "},{"type":"codeVoice","code":"callbackData"},{"type":"text","text":", and thus"},{"type":"text","text":" "},{"type":"codeVoice","code":"callback_funcs-"},{"type":"text","text":">unref will eventually be called once more"},{"type":"text","text":" "},{"type":"text","text":"than "},{"type":"codeVoice","code":"callback_funcs-"},{"type":"text","text":">ref."}],"kind":"symbol","metadata":{"role":"symbol","title":"setCallbackIndirect(callbackData:callbackFuncs:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"setCallbackIndirect"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"SourceCallbackFuncsT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"callbackData"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"callbackFuncs"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SourceCallbackFuncsT"},{"kind":"text","text":")"}],"symbolKind":"method","externalID":"s:4GLib14SourceProtocolPAAE19setCallbackIndirect12callbackData0G5FuncsySvSg_qd__tAA0beiC0Rd__lF::SYNTHESIZED::s:4GLib9SourceRefV","extendedModule":"GLib","modules":[{"name":"GLib"}]},"hierarchy":{"paths":[["doc:\/\/GLib\/documentation\/GLib","doc:\/\/GLib\/documentation\/GLib\/SourceRef","doc:\/\/GLib\/documentation\/GLib\/SourceRef\/SourceProtocol-Implementations"]]},"references":{"doc://GLib/documentation/GLib":{"role":"collection","title":"GLib","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib","kind":"symbol","type":"topic","url":"\/documentation\/glib"},"doc://GLib/documentation/GLib/SourceCallbackFuncsProtocol":{"role":"symbol","title":"SourceCallbackFuncsProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SourceCallbackFuncsProtocol"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"GSourceCallbackFuncs"},{"type":"text","text":" struct contains"},{"type":"text","text":" "},{"type":"text","text":"functions for managing callback objects."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceCallbackFuncsProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SourceCallbackFuncsProtocol"}],"url":"\/documentation\/glib\/sourcecallbackfuncsprotocol"},"doc://GLib/documentation/GLib/SourceRef":{"role":"symbol","title":"SourceRef","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SourceRef"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"GSource"},{"type":"text","text":" struct is an opaque data type"},{"type":"text","text":" "},{"type":"text","text":"representing an event source."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceRef","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SourceRef"}],"url":"\/documentation\/glib\/sourceref"},"doc://GLib/documentation/GLib/SourceRef/SourceProtocol-Implementations":{"role":"collectionGroup","title":"SourceProtocol Implementations","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceRef\/SourceProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/glib\/sourceref\/sourceprotocol-implementations"},"doc://GLib/documentation/GLib/SourceRef/setCallbackIndirect(callbackData:callbackFuncs:)":{"role":"symbol","title":"setCallbackIndirect(callbackData:callbackFuncs:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"setCallbackIndirect"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"SourceCallbackFuncsT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"callbackData"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"callbackFuncs"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SourceCallbackFuncsT"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Sets the callback function storing the data as a refcounted callback"},{"type":"text","text":" "},{"type":"text","text":"“object”. This is used internally. Note that calling"},{"type":"text","text":" "},{"type":"text","text":"[method"},{"type":"codeVoice","code":"GLib.Source.set_callback_indirect"},{"type":"text","text":"] assumes"},{"type":"text","text":" "},{"type":"text","text":"an initial reference count on "},{"type":"codeVoice","code":"callbackData"},{"type":"text","text":", and thus"},{"type":"text","text":" "},{"type":"codeVoice","code":"callback_funcs-"},{"type":"text","text":">unref will eventually be called once more"},{"type":"text","text":" "},{"type":"text","text":"than "},{"type":"codeVoice","code":"callback_funcs-"},{"type":"text","text":">ref."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceRef\/setCallbackIndirect(callbackData:callbackFuncs:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/sourceref\/setcallbackindirect(callbackdata:callbackfuncs:)"}}}