{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"name"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">? = nil, "},{"kind":"externalParam","text":"func"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GThreadFunc","preciseIdentifier":"c:@T@GThreadFunc"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"data"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"? = nil)"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"name"},{"type":"text","text":" can be useful for discriminating threads in a debugger."},{"type":"text","text":" "},{"type":"text","text":"It is not used for other purposes and does not have to be unique."},{"type":"text","text":" "},{"type":"text","text":"Some systems restrict the length of "},{"type":"codeVoice","code":"name"},{"type":"text","text":" to 16 bytes."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If the thread can not be created the program aborts. See"},{"type":"text","text":" "},{"type":"codeVoice","code":"g_thread_try_new()"},{"type":"text","text":" if you want to attempt to deal with failures."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you are using threads to offload (potentially many) short-lived tasks,"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/ThreadPool"},{"type":"text","text":" may be more appropriate than manually spawning and tracking"},{"type":"text","text":" "},{"type":"text","text":"multiple "},{"type":"codeVoice","code":"GThreads"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To free the struct returned by this function, use "},{"type":"codeVoice","code":"g_thread_unref()"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Note that "},{"type":"codeVoice","code":"g_thread_join()"},{"type":"text","text":" implicitly unrefs the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Thread"},{"type":"text","text":" as well."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"New threads by default inherit their scheduler policy (POSIX) or thread"},{"type":"text","text":" "},{"type":"text","text":"priority (Windows) of the thread creating the new thread."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This behaviour changed in GLib 2.64: before threads on Windows were not"},{"type":"text","text":" "},{"type":"text","text":"inheriting the thread priority but were spawned with the default priority."},{"type":"text","text":" "},{"type":"text","text":"Starting with GLib 2.64 the behaviour is now consistent between Windows and"},{"type":"text","text":" "},{"type":"text","text":"POSIX and all threads inherit their parent threadâ€™s priority."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/glib\/thread\/init(name:func:data:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/GLib\/documentation\/GLib\/Thread\/init(name:func:data:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"This function creates a new thread. The new thread starts by invoking"},{"type":"text","text":" "},{"type":"codeVoice","code":"func"},{"type":"text","text":" with the argument data. The thread will run until "},{"type":"codeVoice","code":"func"},{"type":"text","text":" returns"},{"type":"text","text":" "},{"type":"text","text":"or until "},{"type":"codeVoice","code":"g_thread_exit()"},{"type":"text","text":" is called from the new thread. The return value"},{"type":"text","text":" "},{"type":"text","text":"of "},{"type":"codeVoice","code":"func"},{"type":"text","text":" becomes the return value of the thread, which can be obtained"},{"type":"text","text":" "},{"type":"text","text":"with "},{"type":"codeVoice","code":"g_thread_join()"},{"type":"text","text":"."}],"kind":"symbol","metadata":{"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"name"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">?, "},{"kind":"externalParam","text":"func"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GThreadFunc","preciseIdentifier":"c:@T@GThreadFunc"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"data"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?)"}],"title":"init(name:func:data:)","roleHeading":"Initializer","role":"symbol","symbolKind":"init","externalID":"s:4GLib6ThreadC4name4func4dataACSPys4Int8VGSg_SvSgAKXCSgAKtcfc","modules":[{"name":"GLib"}]},"hierarchy":{"paths":[["doc:\/\/GLib\/documentation\/GLib","doc:\/\/GLib\/documentation\/GLib\/Thread"]]},"references":{"doc://GLib/documentation/GLib":{"role":"collection","title":"GLib","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib","kind":"symbol","type":"topic","url":"\/documentation\/glib"},"doc://GLib/documentation/GLib/Thread/init(name:func:data:)":{"role":"symbol","title":"init(name:func:data:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"name"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">?, "},{"kind":"externalParam","text":"func"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GThreadFunc","preciseIdentifier":"c:@T@GThreadFunc"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"data"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"This function creates a new thread. The new thread starts by invoking"},{"type":"text","text":" "},{"type":"codeVoice","code":"func"},{"type":"text","text":" with the argument data. The thread will run until "},{"type":"codeVoice","code":"func"},{"type":"text","text":" returns"},{"type":"text","text":" "},{"type":"text","text":"or until "},{"type":"codeVoice","code":"g_thread_exit()"},{"type":"text","text":" is called from the new thread. The return value"},{"type":"text","text":" "},{"type":"text","text":"of "},{"type":"codeVoice","code":"func"},{"type":"text","text":" becomes the return value of the thread, which can be obtained"},{"type":"text","text":" "},{"type":"text","text":"with "},{"type":"codeVoice","code":"g_thread_join()"},{"type":"text","text":"."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/Thread\/init(name:func:data:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/thread\/init(name:func:data:)"},"doc://GLib/documentation/GLib/Thread":{"role":"symbol","title":"Thread","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Thread"}],"abstract":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Thread"},{"type":"text","text":" struct represents a running thread. This struct"},{"type":"text","text":" "},{"type":"text","text":"is returned by "},{"type":"codeVoice","code":"g_thread_new()"},{"type":"text","text":" or "},{"type":"codeVoice","code":"g_thread_try_new()"},{"type":"text","text":". You can"},{"type":"text","text":" "},{"type":"text","text":"obtain the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Thread"},{"type":"text","text":" struct representing the current thread by"},{"type":"text","text":" "},{"type":"text","text":"calling "},{"type":"codeVoice","code":"g_thread_self()"},{"type":"text","text":"."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/Thread","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Thread"}],"url":"\/documentation\/glib\/thread"},"doc://GLib/documentation/GLib/ThreadPool":{"role":"symbol","title":"ThreadPool","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ThreadPool"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"GThreadPool"},{"type":"text","text":" struct represents a thread pool."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/ThreadPool","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ThreadPool"}],"url":"\/documentation\/glib\/threadpool"}}}