{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"atomicIntCompareAndExchange"},{"kind":"text","text":"("},{"kind":"externalParam","text":"atomic"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gint","preciseIdentifier":"c:@T@gint"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"oldval"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"newval"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This compare and exchange is done atomically."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Think of this operation as an atomic version of"},{"type":"text","text":" "},{"type":"codeVoice","code":"{ if (*atomic == oldval) { *atomic = newval; return TRUE; } else return FALSE; }"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This call acts as a full compiler and hardware memory barrier."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"While "},{"type":"codeVoice","code":"atomic"},{"type":"text","text":" has a "},{"type":"codeVoice","code":"volatile"},{"type":"text","text":" qualifier, this is a historical artifact and"},{"type":"text","text":" "},{"type":"text","text":"the pointer passed to it should not be "},{"type":"codeVoice","code":"volatile"},{"type":"text","text":"."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/glib\/atomicintcompareandexchange(atomic:oldval:newval:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/GLib\/documentation\/GLib\/atomicIntCompareAndExchange(atomic:oldval:newval:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Compares "},{"type":"codeVoice","code":"atomic"},{"type":"text","text":" to "},{"type":"codeVoice","code":"oldval"},{"type":"text","text":" and, if equal, sets it to "},{"type":"codeVoice","code":"newval"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"If "},{"type":"codeVoice","code":"atomic"},{"type":"text","text":" was not equal to "},{"type":"codeVoice","code":"oldval"},{"type":"text","text":" then no change occurs."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"atomicIntCompareAndExchange"},{"kind":"text","text":"("},{"kind":"externalParam","text":"atomic"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gint","preciseIdentifier":"c:@T@gint"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"oldval"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"newval"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"title":"atomicIntCompareAndExchange(atomic:oldval:newval:)","roleHeading":"Function","role":"symbol","symbolKind":"func","externalID":"s:4GLib27atomicIntCompareAndExchange0B06oldval6newvalSbSpys5Int32VGSg_S2itF","modules":[{"name":"GLib"}]},"hierarchy":{"paths":[["doc:\/\/GLib\/documentation\/GLib"]]},"references":{"doc://GLib/documentation/GLib":{"role":"collection","title":"GLib","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib","kind":"symbol","type":"topic","url":"\/documentation\/glib"},"doc://GLib/documentation/GLib/atomicIntCompareAndExchange(atomic:oldval:newval:)":{"role":"symbol","title":"atomicIntCompareAndExchange(atomic:oldval:newval:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"atomicIntCompareAndExchange"},{"kind":"text","text":"("},{"kind":"externalParam","text":"atomic"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gint","preciseIdentifier":"c:@T@gint"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"oldval"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"newval"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Compares "},{"type":"codeVoice","code":"atomic"},{"type":"text","text":" to "},{"type":"codeVoice","code":"oldval"},{"type":"text","text":" and, if equal, sets it to "},{"type":"codeVoice","code":"newval"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"If "},{"type":"codeVoice","code":"atomic"},{"type":"text","text":" was not equal to "},{"type":"codeVoice","code":"oldval"},{"type":"text","text":" then no change occurs."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/atomicIntCompareAndExchange(atomic:oldval:newval:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/atomicintcompareandexchange(atomic:oldval:newval:)"}}}