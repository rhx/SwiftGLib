{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"prepare"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GSourceFuncsPrepareFunc","preciseIdentifier":"c:@T@GSourceFuncsPrepareFunc"},{"kind":"text","text":"! { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" "},{"kind":"keyword","text":"set"},{"kind":"text","text":" }"}],"languages":["swift"],"platforms":["macOS"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/glib\/sourcefuncs\/prepare"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/GLib\/documentation\/GLib\/SourceFuncs\/prepare","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Called before all the file descriptors are polled. If the"},{"type":"text","text":" "},{"type":"text","text":"source can determine that it is ready here (without waiting for the"},{"type":"text","text":" "},{"type":"text","text":"results of the "},{"type":"codeVoice","code":"poll()"},{"type":"text","text":" call) it should return "},{"type":"codeVoice","code":"true"},{"type":"text","text":". It can also return"},{"type":"text","text":" "},{"type":"text","text":"a "},{"type":"codeVoice","code":"timeout_"},{"type":"text","text":" value which should be the maximum timeout (in milliseconds)"},{"type":"text","text":" "},{"type":"text","text":"which should be passed to the "},{"type":"codeVoice","code":"poll()"},{"type":"text","text":" call. The actual timeout used will"},{"type":"text","text":" "},{"type":"text","text":"be -1 if all sources returned -1, or it will be the minimum of all"},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"codeVoice","code":"timeout_"},{"type":"text","text":" values returned which were >= 0.  Since 2.36 this may"},{"type":"text","text":" "},{"type":"text","text":"be "},{"type":"codeVoice","code":"nil"},{"type":"text","text":", in which case the effect is as if the function always returns"},{"type":"text","text":" "},{"type":"codeVoice","code":"false"},{"type":"text","text":" with a timeout of -1.  If "},{"type":"codeVoice","code":"prepare"},{"type":"text","text":" returns a"},{"type":"text","text":" "},{"type":"text","text":"timeout and the source also has a ready time set, then the"},{"type":"text","text":" "},{"type":"text","text":"lower of the two will be used."}],"kind":"symbol","metadata":{"role":"symbol","title":"prepare","roleHeading":"Instance Property","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"prepare"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GSourceFuncsPrepareFunc","preciseIdentifier":"c:@T@GSourceFuncsPrepareFunc"},{"kind":"text","text":"!"}],"symbolKind":"property","externalID":"s:4GLib19SourceFuncsProtocolPAAE7prepares5Int32VSpySo8_GSourceVGSg_SpyAFGSgtXCSgvp::SYNTHESIZED::s:4GLib11SourceFuncsC","extendedModule":"GLib","modules":[{"name":"GLib"}]},"hierarchy":{"paths":[["doc:\/\/GLib\/documentation\/GLib","doc:\/\/GLib\/documentation\/GLib\/SourceFuncs","doc:\/\/GLib\/documentation\/GLib\/SourceFuncs\/SourceFuncsProtocol-Implementations"]]},"references":{"doc://GLib/documentation/GLib":{"role":"collection","title":"GLib","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib","kind":"symbol","type":"topic","url":"\/documentation\/glib"},"doc://GLib/documentation/GLib/SourceFuncs/prepare":{"role":"symbol","title":"prepare","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"prepare"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GSourceFuncsPrepareFunc","preciseIdentifier":"c:@T@GSourceFuncsPrepareFunc"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Called before all the file descriptors are polled. If the"},{"type":"text","text":" "},{"type":"text","text":"source can determine that it is ready here (without waiting for the"},{"type":"text","text":" "},{"type":"text","text":"results of the "},{"type":"codeVoice","code":"poll()"},{"type":"text","text":" call) it should return "},{"type":"codeVoice","code":"true"},{"type":"text","text":". It can also return"},{"type":"text","text":" "},{"type":"text","text":"a "},{"type":"codeVoice","code":"timeout_"},{"type":"text","text":" value which should be the maximum timeout (in milliseconds)"},{"type":"text","text":" "},{"type":"text","text":"which should be passed to the "},{"type":"codeVoice","code":"poll()"},{"type":"text","text":" call. The actual timeout used will"},{"type":"text","text":" "},{"type":"text","text":"be -1 if all sources returned -1, or it will be the minimum of all"},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"codeVoice","code":"timeout_"},{"type":"text","text":" values returned which were >= 0.  Since 2.36 this may"},{"type":"text","text":" "},{"type":"text","text":"be "},{"type":"codeVoice","code":"nil"},{"type":"text","text":", in which case the effect is as if the function always returns"},{"type":"text","text":" "},{"type":"codeVoice","code":"false"},{"type":"text","text":" with a timeout of -1.  If "},{"type":"codeVoice","code":"prepare"},{"type":"text","text":" returns a"},{"type":"text","text":" "},{"type":"text","text":"timeout and the source also has a ready time set, then the"},{"type":"text","text":" "},{"type":"text","text":"lower of the two will be used."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceFuncs\/prepare","kind":"symbol","type":"topic","url":"\/documentation\/glib\/sourcefuncs\/prepare"},"doc://GLib/documentation/GLib/SourceFuncs/SourceFuncsProtocol-Implementations":{"role":"collectionGroup","title":"SourceFuncsProtocol Implementations","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceFuncs\/SourceFuncsProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/glib\/sourcefuncs\/sourcefuncsprotocol-implementations"},"doc://GLib/documentation/GLib/SourceFuncs":{"role":"symbol","title":"SourceFuncs","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"SourceFuncs"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"GSourceFuncs"},{"type":"text","text":" struct contains a table of"},{"type":"text","text":" "},{"type":"text","text":"functions used to handle event sources in a generic manner."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceFuncs","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SourceFuncs"}],"url":"\/documentation\/glib\/sourcefuncs"}}}