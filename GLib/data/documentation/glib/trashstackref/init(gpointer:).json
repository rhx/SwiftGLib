{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"!("},{"kind":"externalParam","text":"gpointer"},{"kind":"text","text":" "},{"kind":"internalParam","text":"g"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?)"}],"languages":["swift"],"platforms":["macOS"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/glib\/trashstackref\/init(gpointer:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/GLib\/documentation\/GLib\/TrashStackRef\/init(gpointer:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Conditional initialiser from an optional "},{"type":"codeVoice","code":"gpointer"}],"kind":"symbol","metadata":{"role":"symbol","title":"init(gpointer:)","roleHeading":"Initializer","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"externalParam","text":"gpointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?)"}],"symbolKind":"init","externalID":"s:4GLib13TrashStackRefV8gpointerACSgSvSg_tcfc","extendedModule":"GLib","modules":[{"name":"GLib"}]},"hierarchy":{"paths":[["doc:\/\/GLib\/documentation\/GLib","doc:\/\/GLib\/documentation\/GLib\/TrashStackRef"]]},"references":{"doc://GLib/documentation/GLib/TrashStackRef":{"role":"symbol","title":"TrashStackRef","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TrashStackRef"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"GTrashStack"},{"type":"text","text":" is an efficient way to keep a stack of unused allocated"},{"type":"text","text":" "},{"type":"text","text":"memory chunks. Each memory chunk is required to be large enough to hold"},{"type":"text","text":" "},{"type":"text","text":"a "},{"type":"codeVoice","code":"gpointer"},{"type":"text","text":". This allows the stack to be maintained without any space"},{"type":"text","text":" "},{"type":"text","text":"overhead, since the stack pointers can be stored inside the memory chunks."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/TrashStackRef","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TrashStackRef"}],"url":"\/documentation\/glib\/trashstackref"},"doc://GLib/documentation/GLib/TrashStackRef/init(gpointer:)":{"role":"symbol","title":"init(gpointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"externalParam","text":"gpointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional "},{"type":"codeVoice","code":"gpointer"}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/TrashStackRef\/init(gpointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/trashstackref\/init(gpointer:)"},"doc://GLib/documentation/GLib":{"role":"collection","title":"GLib","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib","kind":"symbol","type":"topic","url":"\/documentation\/glib"}}}