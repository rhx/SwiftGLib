{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"StringRef"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The emphasis of "},{"type":"codeVoice","code":"GString"},{"type":"text","text":" is on text, typically UTF-8. Crucially, the “str” member"},{"type":"text","text":" "},{"type":"text","text":"of a "},{"type":"codeVoice","code":"GString"},{"type":"text","text":" is guaranteed to have a trailing nul character, and it is therefore"},{"type":"text","text":" "},{"type":"text","text":"always safe to call functions such as "},{"type":"codeVoice","code":"strchr()"},{"type":"text","text":" or "},{"type":"codeVoice","code":"strdup()"},{"type":"text","text":" on it."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"However, a "},{"type":"codeVoice","code":"GString"},{"type":"text","text":" can also hold arbitrary binary data, because it has a “len” member,"},{"type":"text","text":" "},{"type":"text","text":"which includes any possible embedded nul characters in the data. Conceptually then,"},{"type":"text","text":" "},{"type":"codeVoice","code":"GString"},{"type":"text","text":" is like a "},{"type":"codeVoice","code":"GByteArray"},{"type":"text","text":" with the addition of many convenience methods for"},{"type":"text","text":" "},{"type":"text","text":"text, and a guaranteed nul terminator."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/StringRef"},{"type":"text","text":" type acts as a lightweight Swift reference to an underlying "},{"type":"codeVoice","code":"GString"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"It exposes methods that can operate on this data type through "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/StringProtocol"},{"type":"text","text":" conformance."},{"type":"text","text":" "},{"type":"text","text":"Use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/StringRef"},{"type":"text","text":" only as an "},{"type":"codeVoice","code":"unowned"},{"type":"text","text":" reference to an existing "},{"type":"codeVoice","code":"GString"},{"type":"text","text":" instance."}]},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/StringType"},{"type":"text","text":" (instead of "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/StringRef"},{"type":"text","text":") if you want to use Automatic Reference Counting for memory management of the underlying "},{"type":"codeVoice","code":"GString"},{"type":"text","text":" instance."}]}],"type":"aside","name":"Note"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/glib\/stringref"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/GLib\/documentation\/GLib\/PointerWrapper","doc:\/\/GLib\/documentation\/GLib\/StringProtocol"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/GLib\/documentation\/GLib\/StringRef","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"GString"},{"type":"text","text":" is an object that handles the memory management of a C string."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"StringRef"}],"title":"StringRef","roleHeading":"Structure","role":"symbol","symbolKind":"struct","externalID":"s:4GLib9StringRefV","modules":[{"name":"GLib"}],"navigatorTitle":[{"kind":"identifier","text":"StringRef"}]},"hierarchy":{"paths":[["doc:\/\/GLib\/documentation\/GLib"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/GLib\/documentation\/GLib\/StringRef\/init(_:)-1pbjp","doc:\/\/GLib\/documentation\/GLib\/StringRef\/init(_:)-2o263","doc:\/\/GLib\/documentation\/GLib\/StringRef\/init(_:)-3912m","doc:\/\/GLib\/documentation\/GLib\/StringRef\/init(_:)-3ubvq","doc:\/\/GLib\/documentation\/GLib\/StringRef\/init(_:)-79g9y","doc:\/\/GLib\/documentation\/GLib\/StringRef\/init(_:)-9tc42","doc:\/\/GLib\/documentation\/GLib\/StringRef\/init(cPointer:)","doc:\/\/GLib\/documentation\/GLib\/StringRef\/init(constPointer:)","doc:\/\/GLib\/documentation\/GLib\/StringRef\/init(gconstpointer:)","doc:\/\/GLib\/documentation\/GLib\/StringRef\/init(gpointer:)","doc:\/\/GLib\/documentation\/GLib\/StringRef\/init(init:)","doc:\/\/GLib\/documentation\/GLib\/StringRef\/init(len:len:)","doc:\/\/GLib\/documentation\/GLib\/StringRef\/init(mutating:)","doc:\/\/GLib\/documentation\/GLib\/StringRef\/init(opaquePointer:)","doc:\/\/GLib\/documentation\/GLib\/StringRef\/init(sized:)","doc:\/\/GLib\/documentation\/GLib\/StringRef\/init(take:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/GLib\/documentation\/GLib\/StringRef\/ptr"]},{"title":"Type Methods","identifiers":["doc:\/\/GLib\/documentation\/GLib\/StringRef\/new(len:len:)","doc:\/\/GLib\/documentation\/GLib\/StringRef\/new(take:)","doc:\/\/GLib\/documentation\/GLib\/StringRef\/sizedNew(sized:)"]},{"title":"Default Implementations","identifiers":["doc:\/\/GLib\/documentation\/GLib\/StringRef\/PointerWrapper-Implementations","doc:\/\/GLib\/documentation\/GLib\/StringRef\/StringProtocol-Implementations"],"generated":true}],"references":{"doc://GLib/documentation/GLib/StringRef/init(opaquePointer:)":{"role":"symbol","title":"init(opaquePointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"opaquePointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"OpaquePointer","preciseIdentifier":"s:s13OpaquePointerV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/StringProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/StringRef\/init(opaquePointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/stringref\/init(opaquepointer:)"},"doc://GLib/documentation/GLib/StringRef/init(sized:)":{"role":"symbol","title":"init(sized:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"sized"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Creates a new "},{"type":"codeVoice","code":"String"},{"type":"text","text":", with enough space for "},{"type":"codeVoice","code":"dflSize"},{"type":"text","text":" "},{"type":"text","text":"bytes. This is useful if you are going to add a lot of"},{"type":"text","text":" "},{"type":"text","text":"text to the string and don’t want it to be reallocated"},{"type":"text","text":" "},{"type":"text","text":"too often."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/StringRef\/init(sized:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/stringref\/init(sized:)"},"doc://GLib/documentation/GLib/StringRef/new(len:len:)":{"role":"symbol","title":"new(len:len:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"new"},{"kind":"text","text":"("},{"kind":"externalParam","text":"len"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"len"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gssize","preciseIdentifier":"c:@T@gssize"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"StringRef","preciseIdentifier":"s:4GLib9StringRefV"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Creates a new "},{"type":"codeVoice","code":"String"},{"type":"text","text":" with "},{"type":"codeVoice","code":"len"},{"type":"text","text":" bytes of the "},{"type":"codeVoice","code":"init"},{"type":"text","text":" buffer."},{"type":"text","text":" "},{"type":"text","text":"Because a length is provided, "},{"type":"codeVoice","code":"init"},{"type":"text","text":" need not be nul-terminated,"},{"type":"text","text":" "},{"type":"text","text":"and can contain embedded nul bytes."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/StringRef\/new(len:len:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/stringref\/new(len:len:)"},"doc://GLib/documentation/GLib/StringRef/PointerWrapper-Implementations":{"role":"collectionGroup","title":"PointerWrapper Implementations","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib\/StringRef\/PointerWrapper-Implementations","kind":"article","type":"topic","url":"\/documentation\/glib\/stringref\/pointerwrapper-implementations"},"doc://GLib/documentation/GLib/StringRef/init(cPointer:)":{"role":"symbol","title":"init(cPointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"cPointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Unsafe typed initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/StringProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/StringRef\/init(cPointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/stringref\/init(cpointer:)"},"doc://GLib/documentation/GLib/StringRef/StringProtocol-Implementations":{"role":"collectionGroup","title":"StringProtocol Implementations","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib\/StringRef\/StringProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/glib\/stringref\/stringprotocol-implementations"},"doc://GLib/documentation/GLib/PointerWrapper":{"role":"symbol","title":"PointerWrapper","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"PointerWrapper"}],"abstract":[{"type":"text","text":"Protocol for GLib types that wrap pointers."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/PointerWrapper","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PointerWrapper"}],"url":"\/documentation\/glib\/pointerwrapper"},"doc://GLib/documentation/GLib/StringRef/init(len:len:)":{"role":"symbol","title":"init(len:len:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"len"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"len"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gssize","preciseIdentifier":"c:@T@gssize"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Creates a new "},{"type":"codeVoice","code":"String"},{"type":"text","text":" with "},{"type":"codeVoice","code":"len"},{"type":"text","text":" bytes of the "},{"type":"codeVoice","code":"init"},{"type":"text","text":" buffer."},{"type":"text","text":" "},{"type":"text","text":"Because a length is provided, "},{"type":"codeVoice","code":"init"},{"type":"text","text":" need not be nul-terminated,"},{"type":"text","text":" "},{"type":"text","text":"and can contain embedded nul bytes."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/StringRef\/init(len:len:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/stringref\/init(len:len:)"},"doc://GLib/documentation/GLib/StringProtocol/gstring_ptr-1e9b4":{"defaultImplementations":1,"role":"symbol","title":"gstring_ptr","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"gstring_ptr"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GString"},{"kind":"text","text":">!"}],"abstract":[{"type":"text","text":"Typed pointer to the underlying "},{"type":"codeVoice","code":"GString"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/StringProtocol\/gstring_ptr-1e9b4","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/glib\/stringprotocol\/gstring_ptr-1e9b4"},"doc://GLib/documentation/GLib/StringProtocol":{"role":"symbol","title":"StringProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"StringProtocol"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"GString"},{"type":"text","text":" is an object that handles the memory management of a C string."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/StringProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"StringProtocol"}],"url":"\/documentation\/glib\/stringprotocol"},"doc://GLib/documentation/GLib":{"role":"collection","title":"GLib","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib","kind":"symbol","type":"topic","url":"\/documentation\/glib"},"doc://GLib/documentation/GLib/StringRef/init(constPointer:)":{"role":"symbol","title":"init(constPointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"constPointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Unsafe typed initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/StringProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/StringRef\/init(constPointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/stringref\/init(constpointer:)"},"doc://GLib/documentation/GLib/StringRef/init(take:)":{"role":"symbol","title":"init(take:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"take"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Creates a new "},{"type":"codeVoice","code":"String"},{"type":"text","text":", initialized with the given string."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/StringRef\/init(take:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/stringref\/init(take:)"},"doc://GLib/documentation/GLib/StringType":{"role":"symbol","title":"StringType","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"StringType"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"GString"},{"type":"text","text":" is an object that handles the memory management of a C string."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/StringType","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"StringType"}],"url":"\/documentation\/glib\/stringtype"},"doc://GLib/documentation/GLib/StringRef/sizedNew(sized:)":{"role":"symbol","title":"sizedNew(sized:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"sizedNew"},{"kind":"text","text":"("},{"kind":"externalParam","text":"sized"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"StringRef","preciseIdentifier":"s:4GLib9StringRefV"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Creates a new "},{"type":"codeVoice","code":"String"},{"type":"text","text":", with enough space for "},{"type":"codeVoice","code":"dflSize"},{"type":"text","text":" "},{"type":"text","text":"bytes. This is useful if you are going to add a lot of"},{"type":"text","text":" "},{"type":"text","text":"text to the string and don’t want it to be reallocated"},{"type":"text","text":" "},{"type":"text","text":"too often."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/StringRef\/sizedNew(sized:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/stringref\/sizednew(sized:)"},"doc://GLib/documentation/GLib/StringRef/init(_:)-1pbjp":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GString"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional, non-mutable pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/StringRef\/init(_:)-1pbjp","kind":"symbol","type":"topic","url":"\/documentation\/glib\/stringref\/init(_:)-1pbjp"},"doc://GLib/documentation/GLib/StringRef/init(_:)-3ubvq":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Reference intialiser for a related type that implements "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/StringProtocol"}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/StringRef\/init(_:)-3ubvq","kind":"symbol","type":"topic","url":"\/documentation\/glib\/stringref\/init(_:)-3ubvq"},"doc://GLib/documentation/GLib/StringRef/ptr":{"role":"symbol","title":"ptr","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"ptr"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutableRawPointer","preciseIdentifier":"s:Sv"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Untyped pointer to the underlying "},{"type":"codeVoice","code":"GString"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"For type-safe access, use the generated, typed pointer "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/StringProtocol\/gstring_ptr-1e9b4"},{"type":"text","text":" property instead."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/StringRef\/ptr","kind":"symbol","type":"topic","url":"\/documentation\/glib\/stringref\/ptr"},"doc://GLib/documentation/GLib/StringRef/init(_:)-9tc42":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GString"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from a constant pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/StringRef\/init(_:)-9tc42","kind":"symbol","type":"topic","url":"\/documentation\/glib\/stringref\/init(_:)-9tc42"},"doc://GLib/documentation/GLib/StringRef/init(_:)-3912m":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Construct a StringRef from a Swift string."},{"type":"text","text":" "},{"type":"text","text":"The returned string needs to be freed using free(free_segment: true)"}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/StringRef\/init(_:)-3912m","kind":"symbol","type":"topic","url":"\/documentation\/glib\/stringref\/init(_:)-3912m"},"doc://GLib/documentation/GLib/StringRef/init(init:)":{"role":"symbol","title":"init(init:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"init"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Creates a new "},{"type":"codeVoice","code":"String"},{"type":"text","text":", initialized with the given string."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/StringRef\/init(init:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/stringref\/init(init:)"},"doc://GLib/documentation/GLib/StringRef/init(mutating:)":{"role":"symbol","title":"init(mutating:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"mutating"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeRawPointer","preciseIdentifier":"s:SV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/StringProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/StringRef\/init(mutating:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/stringref\/init(mutating:)"},"doc://GLib/documentation/GLib/StringRef/init(gpointer:)":{"role":"symbol","title":"init(gpointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"externalParam","text":"gpointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional "},{"type":"codeVoice","code":"gpointer"}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/StringRef\/init(gpointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/stringref\/init(gpointer:)"},"doc://GLib/documentation/GLib/StringRef/init(gconstpointer:)":{"role":"symbol","title":"init(gconstpointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"externalParam","text":"gconstpointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gconstpointer","preciseIdentifier":"c:@T@gconstpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional, non-mutable "},{"type":"codeVoice","code":"gconstpointer"}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/StringRef\/init(gconstpointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/stringref\/init(gconstpointer:)"},"doc://GLib/documentation/GLib/StringRef/init(_:)-79g9y":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GString"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/StringRef\/init(_:)-79g9y","kind":"symbol","type":"topic","url":"\/documentation\/glib\/stringref\/init(_:)-79g9y"},"doc://GLib/documentation/GLib/StringRef/new(take:)":{"role":"symbol","title":"new(take:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"new"},{"kind":"text","text":"("},{"kind":"externalParam","text":"take"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">?) -> "},{"kind":"typeIdentifier","text":"StringRef","preciseIdentifier":"s:4GLib9StringRefV"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Creates a new "},{"type":"codeVoice","code":"String"},{"type":"text","text":", initialized with the given string."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/StringRef\/new(take:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/stringref\/new(take:)"},"doc://GLib/documentation/GLib/StringRef":{"role":"symbol","title":"StringRef","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"StringRef"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"GString"},{"type":"text","text":" is an object that handles the memory management of a C string."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/StringRef","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"StringRef"}],"url":"\/documentation\/glib\/stringref"},"doc://GLib/documentation/GLib/StringRef/init(_:)-2o263":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GString"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/StringRef\/init(_:)-2o263","kind":"symbol","type":"topic","url":"\/documentation\/glib\/stringref\/init(_:)-2o263"}}}