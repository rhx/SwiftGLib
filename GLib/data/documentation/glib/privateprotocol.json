{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"PrivateProtocol"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/GLib\/documentation\/GLib\/PointerWrapper","preciseIdentifier":"s:4GLib14PointerWrapperP","text":"PointerWrapper"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you don’t already know why you might want this functionality,"},{"type":"text","text":" "},{"type":"text","text":"then you probably don’t need it."}]},{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Private"},{"type":"text","text":" is a very limited resource (as far as 128 per program,"},{"type":"text","text":" "},{"type":"text","text":"shared between all libraries). It is also not possible to destroy a"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Private"},{"type":"text","text":" after it has been used. As such, it is only ever acceptable"},{"type":"text","text":" "},{"type":"text","text":"to use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Private"},{"type":"text","text":" in static scope, and even then sparingly so."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"See "},{"type":"codeVoice","code":"G_PRIVATE_INIT()"},{"type":"text","text":" for a couple of examples."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Private"},{"type":"text","text":" structure should be considered opaque.  It should only"},{"type":"text","text":" "},{"type":"text","text":"be accessed via the g_private_ functions."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/PrivateProtocol"},{"type":"text","text":" protocol exposes the methods and properties of an underlying "},{"type":"codeVoice","code":"GPrivate"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"The default implementation of these can be found in the protocol extension below."},{"type":"text","text":" "},{"type":"text","text":"For a concrete class that implements these methods and properties, see "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Private"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Alternatively, use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/PrivateRef"},{"type":"text","text":" as a lighweight, "},{"type":"codeVoice","code":"unowned"},{"type":"text","text":" reference if you already have an instance you just want to use."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/glib\/privateprotocol"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/GLib\/documentation\/GLib\/PointerWrapper"],"kind":"relationships","title":"Inherits From","type":"inheritsFrom"},{"identifiers":["doc:\/\/GLib\/documentation\/GLib\/Private","doc:\/\/GLib\/documentation\/GLib\/PrivateRef"],"kind":"relationships","title":"Conforming Types","type":"conformingTypes"}],"identifier":{"url":"doc:\/\/GLib\/documentation\/GLib\/PrivateProtocol","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Private"},{"type":"text","text":" struct is an opaque data structure to represent a"},{"type":"text","text":" "},{"type":"text","text":"thread-local data key. It is approximately equivalent to the"},{"type":"text","text":" "},{"type":"codeVoice","code":"pthread_setspecific()``\/pthread_getspecific()"},{"type":"text","text":" APIs on POSIX and to"},{"type":"text","text":" "},{"type":"codeVoice","code":"TlsSetValue()``\/TlsGetValue()"},{"type":"text","text":" on Windows."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"PrivateProtocol"}],"title":"PrivateProtocol","roleHeading":"Protocol","role":"symbol","symbolKind":"protocol","externalID":"s:4GLib15PrivateProtocolP","modules":[{"name":"GLib"}],"navigatorTitle":[{"kind":"identifier","text":"PrivateProtocol"}]},"hierarchy":{"paths":[["doc:\/\/GLib\/documentation\/GLib"]]},"topicSections":[{"title":"Instance Methods","identifiers":["doc:\/\/GLib\/documentation\/GLib\/PrivateProtocol\/get()","doc:\/\/GLib\/documentation\/GLib\/PrivateProtocol\/replace(value:)","doc:\/\/GLib\/documentation\/GLib\/PrivateProtocol\/set(value:)"]}],"references":{"doc://GLib/documentation/GLib/PrivateRef":{"role":"symbol","title":"PrivateRef","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PrivateRef"}],"abstract":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Private"},{"type":"text","text":" struct is an opaque data structure to represent a"},{"type":"text","text":" "},{"type":"text","text":"thread-local data key. It is approximately equivalent to the"},{"type":"text","text":" "},{"type":"codeVoice","code":"pthread_setspecific()``\/pthread_getspecific()"},{"type":"text","text":" APIs on POSIX and to"},{"type":"text","text":" "},{"type":"codeVoice","code":"TlsSetValue()``\/TlsGetValue()"},{"type":"text","text":" on Windows."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/PrivateRef","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PrivateRef"}],"url":"\/documentation\/glib\/privateref"},"doc://GLib/documentation/GLib/PrivateProtocol/get()":{"role":"symbol","title":"get()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"get"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Returns the current value of the thread local variable "},{"type":"codeVoice","code":"key"},{"type":"text","text":"."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/PrivateProtocol\/get()","kind":"symbol","type":"topic","url":"\/documentation\/glib\/privateprotocol\/get()"},"doc://GLib/documentation/GLib/PrivateProtocol":{"role":"symbol","title":"PrivateProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"PrivateProtocol"}],"abstract":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Private"},{"type":"text","text":" struct is an opaque data structure to represent a"},{"type":"text","text":" "},{"type":"text","text":"thread-local data key. It is approximately equivalent to the"},{"type":"text","text":" "},{"type":"codeVoice","code":"pthread_setspecific()``\/pthread_getspecific()"},{"type":"text","text":" APIs on POSIX and to"},{"type":"text","text":" "},{"type":"codeVoice","code":"TlsSetValue()``\/TlsGetValue()"},{"type":"text","text":" on Windows."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/PrivateProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PrivateProtocol"}],"url":"\/documentation\/glib\/privateprotocol"},"doc://GLib/documentation/GLib/Private":{"role":"symbol","title":"Private","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Private"}],"abstract":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Private"},{"type":"text","text":" struct is an opaque data structure to represent a"},{"type":"text","text":" "},{"type":"text","text":"thread-local data key. It is approximately equivalent to the"},{"type":"text","text":" "},{"type":"codeVoice","code":"pthread_setspecific()``\/pthread_getspecific()"},{"type":"text","text":" APIs on POSIX and to"},{"type":"text","text":" "},{"type":"codeVoice","code":"TlsSetValue()``\/TlsGetValue()"},{"type":"text","text":" on Windows."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/Private","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Private"}],"url":"\/documentation\/glib\/private"},"doc://GLib/documentation/GLib":{"role":"collection","title":"GLib","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib","kind":"symbol","type":"topic","url":"\/documentation\/glib"},"doc://GLib/documentation/GLib/PointerWrapper":{"role":"symbol","title":"PointerWrapper","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"PointerWrapper"}],"abstract":[{"type":"text","text":"Protocol for GLib types that wrap pointers."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/PointerWrapper","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PointerWrapper"}],"url":"\/documentation\/glib\/pointerwrapper"},"doc://GLib/documentation/GLib/PrivateProtocol/replace(value:)":{"role":"symbol","title":"replace(value:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"replace"},{"kind":"text","text":"("},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Sets the thread local variable "},{"type":"codeVoice","code":"key"},{"type":"text","text":" to have the value "},{"type":"codeVoice","code":"value"},{"type":"text","text":" in the"},{"type":"text","text":" "},{"type":"text","text":"current thread."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/PrivateProtocol\/replace(value:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/privateprotocol\/replace(value:)"},"doc://GLib/documentation/GLib/PrivateProtocol/set(value:)":{"role":"symbol","title":"set(value:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"set"},{"kind":"text","text":"("},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Sets the thread local variable "},{"type":"codeVoice","code":"key"},{"type":"text","text":" to have the value "},{"type":"codeVoice","code":"value"},{"type":"text","text":" in the"},{"type":"text","text":" "},{"type":"text","text":"current thread."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/PrivateProtocol\/set(value:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/privateprotocol\/set(value:)"}}}