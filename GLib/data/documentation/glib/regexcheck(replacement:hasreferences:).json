{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"regexCheck"},{"kind":"text","text":"("},{"kind":"externalParam","text":"replacement"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"hasReferences"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gboolean","preciseIdentifier":"c:@T@gboolean"},{"kind":"text","text":">! = nil) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If "},{"type":"codeVoice","code":"hasReferences"},{"type":"text","text":" is not "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" then "},{"type":"codeVoice","code":"replacement"},{"type":"text","text":" is checked"},{"type":"text","text":" "},{"type":"text","text":"for pattern references. For instance, replacement text ‘foo\\n’"},{"type":"text","text":" "},{"type":"text","text":"does not contain references and may be evaluated without information"},{"type":"text","text":" "},{"type":"text","text":"about actual match, but ‘\\0\\1’ (whole match followed by first"},{"type":"text","text":" "},{"type":"text","text":"subpattern) requires valid "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/MatchInfo"},{"type":"text","text":" object."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/glib\/regexcheck(replacement:hasreferences:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/GLib\/documentation\/GLib\/regexCheck(replacement:hasReferences:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Checks whether "},{"type":"codeVoice","code":"replacement"},{"type":"text","text":" is a valid replacement string"},{"type":"text","text":" "},{"type":"text","text":"(see "},{"type":"codeVoice","code":"g_regex_replace()"},{"type":"text","text":"), i.e. that all escape sequences in"},{"type":"text","text":" "},{"type":"text","text":"it are valid."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"regexCheck"},{"kind":"text","text":"("},{"kind":"externalParam","text":"replacement"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"hasReferences"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gboolean","preciseIdentifier":"c:@T@gboolean"},{"kind":"text","text":">!) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"title":"regexCheck(replacement:hasReferences:)","roleHeading":"Function","role":"symbol","symbolKind":"func","externalID":"s:4GLib10regexCheck11replacement13hasReferencesSbSPys4Int8VGSg_Spys5Int32VGSgtKF","modules":[{"name":"GLib"}]},"hierarchy":{"paths":[["doc:\/\/GLib\/documentation\/GLib"]]},"references":{"doc://GLib/documentation/GLib":{"role":"collection","title":"GLib","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib","kind":"symbol","type":"topic","url":"\/documentation\/glib"},"doc://GLib/documentation/GLib/MatchInfo":{"role":"symbol","title":"MatchInfo","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MatchInfo"}],"abstract":[{"type":"text","text":"A GMatchInfo is an opaque struct used to return information about"},{"type":"text","text":" "},{"type":"text","text":"matches."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/MatchInfo","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MatchInfo"}],"url":"\/documentation\/glib\/matchinfo"},"doc://GLib/documentation/GLib/regexCheck(replacement:hasReferences:)":{"role":"symbol","title":"regexCheck(replacement:hasReferences:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"regexCheck"},{"kind":"text","text":"("},{"kind":"externalParam","text":"replacement"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"hasReferences"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gboolean","preciseIdentifier":"c:@T@gboolean"},{"kind":"text","text":">!) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Checks whether "},{"type":"codeVoice","code":"replacement"},{"type":"text","text":" is a valid replacement string"},{"type":"text","text":" "},{"type":"text","text":"(see "},{"type":"codeVoice","code":"g_regex_replace()"},{"type":"text","text":"), i.e. that all escape sequences in"},{"type":"text","text":" "},{"type":"text","text":"it are valid."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/regexCheck(replacement:hasReferences:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/regexcheck(replacement:hasreferences:)"}}}