{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"insertNode"},{"kind":"text","text":"("},{"kind":"externalParam","text":"key"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"? = nil, "},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"? = nil) -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/GLib\/documentation\/GLib\/TreeNodeRef","preciseIdentifier":"s:4GLib11TreeNodeRefV","text":"TreeNodeRef"},{"kind":"text","text":"!"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If the given key already exists in the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Tree"},{"type":"text","text":" its corresponding value"},{"type":"text","text":" "},{"type":"text","text":"is set to the new value. If you supplied a "},{"type":"codeVoice","code":"value_destroy_func"},{"type":"text","text":" when"},{"type":"text","text":" "},{"type":"text","text":"creating the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Tree"},{"type":"text","text":", the old value is freed using that function. If"},{"type":"text","text":" "},{"type":"text","text":"you supplied a "},{"type":"codeVoice","code":"key_destroy_func"},{"type":"text","text":" when creating the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Tree"},{"type":"text","text":", the passed"},{"type":"text","text":" "},{"type":"text","text":"key is freed using that function."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The tree is automatically ‘balanced’ as new key\/value pairs are added,"},{"type":"text","text":" "},{"type":"text","text":"so that the distance from the root to every leaf is as small as possible."},{"type":"text","text":" "},{"type":"text","text":"The cost of maintaining a balanced tree while inserting new key\/value"},{"type":"text","text":" "},{"type":"text","text":"result in a "},{"type":"codeVoice","code":"O(n log(n)"},{"type":"text","text":") operation where most of the other operations"},{"type":"text","text":" "},{"type":"text","text":"are "},{"type":"codeVoice","code":"O(log(n)"},{"type":"text","text":")."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/glib\/treeref\/insertnode(key:value:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/GLib\/documentation\/GLib\/TreeRef\/insertNode(key:value:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Inserts a key\/value pair into a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Tree"},{"type":"text","text":"."}],"kind":"symbol","metadata":{"role":"symbol","title":"insertNode(key:value:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"insertNode"},{"kind":"text","text":"("},{"kind":"externalParam","text":"key"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"TreeNodeRef","preciseIdentifier":"s:4GLib11TreeNodeRefV"},{"kind":"text","text":"!"}],"symbolKind":"method","externalID":"s:4GLib12TreeProtocolPAAE10insertNode3key5valueAA0bE3RefVSgSvSg_AJtF::SYNTHESIZED::s:4GLib7TreeRefV","extendedModule":"GLib","modules":[{"name":"GLib"}]},"hierarchy":{"paths":[["doc:\/\/GLib\/documentation\/GLib","doc:\/\/GLib\/documentation\/GLib\/TreeRef","doc:\/\/GLib\/documentation\/GLib\/TreeRef\/TreeProtocol-Implementations"]]},"references":{"doc://GLib/documentation/GLib/TreeRef/insertNode(key:value:)":{"role":"symbol","title":"insertNode(key:value:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"insertNode"},{"kind":"text","text":"("},{"kind":"externalParam","text":"key"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"TreeNodeRef","preciseIdentifier":"s:4GLib11TreeNodeRefV"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Inserts a key\/value pair into a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Tree"},{"type":"text","text":"."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/TreeRef\/insertNode(key:value:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/treeref\/insertnode(key:value:)"},"doc://GLib/documentation/GLib/TreeRef/TreeProtocol-Implementations":{"role":"collectionGroup","title":"TreeProtocol Implementations","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib\/TreeRef\/TreeProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/glib\/treeref\/treeprotocol-implementations"},"doc://GLib/documentation/GLib":{"role":"collection","title":"GLib","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib","kind":"symbol","type":"topic","url":"\/documentation\/glib"},"../Protocols/TreeProtocol.html":{"title":"balanced binary tree","titleInlineContent":[{"type":"text","text":"balanced binary tree"}],"type":"link","identifier":"..\/Protocols\/TreeProtocol.html","url":"..\/Protocols\/TreeProtocol.html"},"doc://GLib/documentation/GLib/TreeRef":{"role":"symbol","title":"TreeRef","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TreeRef"}],"abstract":[{"type":"text","text":"The GTree struct is an opaque data structure representing a"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"..\/Protocols\/TreeProtocol.html"},{"type":"text","text":". It should be"},{"type":"text","text":" "},{"type":"text","text":"accessed only by using the following functions."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/TreeRef","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TreeRef"}],"url":"\/documentation\/glib\/treeref"},"doc://GLib/documentation/GLib/Tree":{"role":"symbol","title":"Tree","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Tree"}],"abstract":[{"type":"text","text":"The GTree struct is an opaque data structure representing a"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"..\/Protocols\/TreeProtocol.html"},{"type":"text","text":". It should be"},{"type":"text","text":" "},{"type":"text","text":"accessed only by using the following functions."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/Tree","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Tree"}],"url":"\/documentation\/glib\/tree"},"doc://GLib/documentation/GLib/TreeNodeRef":{"role":"symbol","title":"TreeNodeRef","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TreeNodeRef"}],"abstract":[{"type":"text","text":"An opaque type which identifies a specific node in a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Tree"},{"type":"text","text":"."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/TreeNodeRef","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TreeNodeRef"}],"url":"\/documentation\/glib\/treenoderef"}}}