{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"destroy"},{"kind":"text","text":"()"}],"languages":["swift"],"platforms":["macOS"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/glib\/treeref\/destroy()"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/GLib\/documentation\/GLib\/TreeRef\/destroy()","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Removes all keys and values from the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Tree"},{"type":"text","text":" and decreases its"},{"type":"text","text":" "},{"type":"text","text":"reference count by one. If keys and\/or values are dynamically"},{"type":"text","text":" "},{"type":"text","text":"allocated, you should either free them first or create the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Tree"},{"type":"text","text":" "},{"type":"text","text":"using "},{"type":"codeVoice","code":"g_tree_new_full()"},{"type":"text","text":". In the latter case the destroy functions"},{"type":"text","text":" "},{"type":"text","text":"you supplied will be called on all keys and values before destroying"},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Tree"},{"type":"text","text":"."}],"kind":"symbol","metadata":{"role":"symbol","title":"destroy()","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"destroy"},{"kind":"text","text":"()"}],"symbolKind":"method","externalID":"s:4GLib12TreeProtocolPAAE7destroyyyF::SYNTHESIZED::s:4GLib7TreeRefV","extendedModule":"GLib","modules":[{"name":"GLib"}]},"hierarchy":{"paths":[["doc:\/\/GLib\/documentation\/GLib","doc:\/\/GLib\/documentation\/GLib\/TreeRef","doc:\/\/GLib\/documentation\/GLib\/TreeRef\/TreeProtocol-Implementations"]]},"references":{"doc://GLib/documentation/GLib/TreeRef":{"role":"symbol","title":"TreeRef","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TreeRef"}],"abstract":[{"type":"text","text":"The GTree struct is an opaque data structure representing a"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"..\/Protocols\/TreeProtocol.html"},{"type":"text","text":". It should be"},{"type":"text","text":" "},{"type":"text","text":"accessed only by using the following functions."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/TreeRef","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TreeRef"}],"url":"\/documentation\/glib\/treeref"},"doc://GLib/documentation/GLib":{"role":"collection","title":"GLib","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib","kind":"symbol","type":"topic","url":"\/documentation\/glib"},"../Protocols/TreeProtocol.html":{"title":"balanced binary tree","titleInlineContent":[{"type":"text","text":"balanced binary tree"}],"type":"link","identifier":"..\/Protocols\/TreeProtocol.html","url":"..\/Protocols\/TreeProtocol.html"},"doc://GLib/documentation/GLib/TreeRef/destroy()":{"role":"symbol","title":"destroy()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"destroy"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Removes all keys and values from the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Tree"},{"type":"text","text":" and decreases its"},{"type":"text","text":" "},{"type":"text","text":"reference count by one. If keys and\/or values are dynamically"},{"type":"text","text":" "},{"type":"text","text":"allocated, you should either free them first or create the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Tree"},{"type":"text","text":" "},{"type":"text","text":"using "},{"type":"codeVoice","code":"g_tree_new_full()"},{"type":"text","text":". In the latter case the destroy functions"},{"type":"text","text":" "},{"type":"text","text":"you supplied will be called on all keys and values before destroying"},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Tree"},{"type":"text","text":"."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/TreeRef\/destroy()","kind":"symbol","type":"topic","url":"\/documentation\/glib\/treeref\/destroy()"},"doc://GLib/documentation/GLib/Tree":{"role":"symbol","title":"Tree","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Tree"}],"abstract":[{"type":"text","text":"The GTree struct is an opaque data structure representing a"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"..\/Protocols\/TreeProtocol.html"},{"type":"text","text":". It should be"},{"type":"text","text":" "},{"type":"text","text":"accessed only by using the following functions."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/Tree","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Tree"}],"url":"\/documentation\/glib\/tree"},"doc://GLib/documentation/GLib/TreeRef/TreeProtocol-Implementations":{"role":"collectionGroup","title":"TreeProtocol Implementations","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib\/TreeRef\/TreeProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/glib\/treeref\/treeprotocol-implementations"}}}