{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"IOChannelRef"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"To create a new "},{"type":"codeVoice","code":"GIOChannel"},{"type":"text","text":" on UNIX systems use"},{"type":"text","text":" "},{"type":"text","text":"[ctor"},{"type":"codeVoice","code":"GLib.IOChannel.unix_new"},{"type":"text","text":"]. This works for plain file descriptors,"},{"type":"text","text":" "},{"type":"text","text":"pipes and sockets. Alternatively, a channel can be created for a"},{"type":"text","text":" "},{"type":"text","text":"file in a system independent manner using [ctor"},{"type":"codeVoice","code":"GLib.IOChannel.new_file"},{"type":"text","text":"]."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Once a "},{"type":"codeVoice","code":"GIOChannel"},{"type":"text","text":" has been created, it can be used in a generic"},{"type":"text","text":" "},{"type":"text","text":"manner with the functions [method"},{"type":"codeVoice","code":"GLib.IOChannel.read_chars"},{"type":"text","text":"],"},{"type":"text","text":" "},{"type":"text","text":"[method"},{"type":"codeVoice","code":"GLib.IOChannel.write_chars"},{"type":"text","text":"], [method"},{"type":"codeVoice","code":"GLib.IOChannel.seek_position"},{"type":"text","text":"],"},{"type":"text","text":" "},{"type":"text","text":"and [method"},{"type":"codeVoice","code":"GLib.IOChannel.shutdown"},{"type":"text","text":"]."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To add a "},{"type":"codeVoice","code":"GIOChannel"},{"type":"text","text":" to the main event loop, use [func"},{"type":"codeVoice","code":"GLib.io_add_watch"},{"type":"text","text":"] or"},{"type":"text","text":" "},{"type":"text","text":"[func"},{"type":"codeVoice","code":"GLib.io_add_watch_full"},{"type":"text","text":"]. Here you specify which events you are"},{"type":"text","text":" "},{"type":"text","text":"interested in on the "},{"type":"codeVoice","code":"GIOChannel"},{"type":"text","text":", and provide a function to be called"},{"type":"text","text":" "},{"type":"text","text":"whenever these events occur."}]},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"GIOChannel"},{"type":"text","text":" instances are created with an initial reference count of 1."},{"type":"text","text":" "},{"type":"text","text":"[method"},{"type":"codeVoice","code":"GLib.IOChannel.ref"},{"type":"text","text":"] and [method"},{"type":"codeVoice","code":"GLib.IOChannel.unref"},{"type":"text","text":"] can be used to"},{"type":"text","text":" "},{"type":"text","text":"increment or decrement the reference count respectively. When the"},{"type":"text","text":" "},{"type":"text","text":"reference count falls to 0, the "},{"type":"codeVoice","code":"GIOChannel"},{"type":"text","text":" is freed. (Though it"},{"type":"text","text":" "},{"type":"text","text":"isn’t closed automatically, unless it was created using"},{"type":"text","text":" "},{"type":"text","text":"[ctor"},{"type":"codeVoice","code":"GLib.IOChannel.new_file"},{"type":"text","text":"].) Using [func"},{"type":"codeVoice","code":"GLib.io_add_watch"},{"type":"text","text":"] or"},{"type":"text","text":" "},{"type":"text","text":"[func"},{"type":"codeVoice","code":"GLib.io_add_watch_full"},{"type":"text","text":"] increments a channel’s reference count."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The new functions [method"},{"type":"codeVoice","code":"GLib.IOChannel.read_chars"},{"type":"text","text":"],"},{"type":"text","text":" "},{"type":"text","text":"[method"},{"type":"codeVoice","code":"GLib.IOChannel.read_line"},{"type":"text","text":"], [method"},{"type":"codeVoice","code":"GLib.IOChannel.read_line_string"},{"type":"text","text":"],"},{"type":"text","text":" "},{"type":"text","text":"[method"},{"type":"codeVoice","code":"GLib.IOChannel.read_to_end"},{"type":"text","text":"], [method"},{"type":"codeVoice","code":"GLib.IOChannel.write_chars"},{"type":"text","text":"],"},{"type":"text","text":" "},{"type":"text","text":"[method"},{"type":"codeVoice","code":"GLib.IOChannel.seek_position"},{"type":"text","text":"], and [method"},{"type":"codeVoice","code":"GLib.IOChannel.flush"},{"type":"text","text":"]"},{"type":"text","text":" "},{"type":"text","text":"should not be mixed with the deprecated functions"},{"type":"text","text":" "},{"type":"text","text":"[method"},{"type":"codeVoice","code":"GLib.IOChannel.read"},{"type":"text","text":"], [method"},{"type":"codeVoice","code":"GLib.IOChannel.write"},{"type":"text","text":"], and"},{"type":"text","text":" "},{"type":"text","text":"[method"},{"type":"codeVoice","code":"GLib.IOChannel.seek"},{"type":"text","text":"] on the same channel."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannelRef"},{"type":"text","text":" type acts as a lightweight Swift reference to an underlying "},{"type":"codeVoice","code":"GIOChannel"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"It exposes methods that can operate on this data type through "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannelProtocol"},{"type":"text","text":" conformance."},{"type":"text","text":" "},{"type":"text","text":"Use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannelRef"},{"type":"text","text":" only as an "},{"type":"codeVoice","code":"unowned"},{"type":"text","text":" reference to an existing "},{"type":"codeVoice","code":"GIOChannel"},{"type":"text","text":" instance."}]},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannel"},{"type":"text","text":" (instead of "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannelRef"},{"type":"text","text":") if you want to use Automatic Reference Counting for memory management of the underlying "},{"type":"codeVoice","code":"GIOChannel"},{"type":"text","text":" instance."}]}],"type":"aside","name":"Note"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/glib\/iochannelref"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/GLib\/documentation\/GLib\/IOChannelProtocol","doc:\/\/GLib\/documentation\/GLib\/PointerWrapper"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/GLib\/documentation\/GLib\/IOChannelRef","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"GIOChannel"},{"type":"text","text":" data type aims to provide a portable method for"},{"type":"text","text":" "},{"type":"text","text":"using file descriptors, pipes, and sockets, and integrating them"},{"type":"text","text":" "},{"type":"text","text":"into the main event loop (see [struct"},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/MainContext"},{"type":"text","text":"]). Currently,"},{"type":"text","text":" "},{"type":"text","text":"full support is available on UNIX platforms; support for Windows"},{"type":"text","text":" "},{"type":"text","text":"is only partially complete."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"IOChannelRef"}],"title":"IOChannelRef","roleHeading":"Structure","role":"symbol","symbolKind":"struct","externalID":"s:4GLib12IOChannelRefV","modules":[{"name":"GLib"}],"navigatorTitle":[{"kind":"identifier","text":"IOChannelRef"}]},"hierarchy":{"paths":[["doc:\/\/GLib\/documentation\/GLib"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/GLib\/documentation\/GLib\/IOChannelRef\/init(_:)-1gk9e","doc:\/\/GLib\/documentation\/GLib\/IOChannelRef\/init(_:)-5zd2z","doc:\/\/GLib\/documentation\/GLib\/IOChannelRef\/init(_:)-6dqka","doc:\/\/GLib\/documentation\/GLib\/IOChannelRef\/init(_:)-9nny2","doc:\/\/GLib\/documentation\/GLib\/IOChannelRef\/init(_:)-c1bf","doc:\/\/GLib\/documentation\/GLib\/IOChannelRef\/init(cPointer:)","doc:\/\/GLib\/documentation\/GLib\/IOChannelRef\/init(constPointer:)","doc:\/\/GLib\/documentation\/GLib\/IOChannelRef\/init(file:mode:)","doc:\/\/GLib\/documentation\/GLib\/IOChannelRef\/init(gconstpointer:)","doc:\/\/GLib\/documentation\/GLib\/IOChannelRef\/init(gpointer:)","doc:\/\/GLib\/documentation\/GLib\/IOChannelRef\/init(mutating:)","doc:\/\/GLib\/documentation\/GLib\/IOChannelRef\/init(opaquePointer:)","doc:\/\/GLib\/documentation\/GLib\/IOChannelRef\/init(unix:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/GLib\/documentation\/GLib\/IOChannelRef\/ptr"]},{"title":"Type Methods","identifiers":["doc:\/\/GLib\/documentation\/GLib\/IOChannelRef\/new(file:mode:)","doc:\/\/GLib\/documentation\/GLib\/IOChannelRef\/unixNew(unix:)"]},{"title":"Default Implementations","identifiers":["doc:\/\/GLib\/documentation\/GLib\/IOChannelRef\/IOChannelProtocol-Implementations","doc:\/\/GLib\/documentation\/GLib\/IOChannelRef\/PointerWrapper-Implementations"],"generated":true}],"references":{"doc://GLib/documentation/GLib/IOChannelRef/init(opaquePointer:)":{"role":"symbol","title":"init(opaquePointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"opaquePointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"OpaquePointer","preciseIdentifier":"s:s13OpaquePointerV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannelProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannelRef\/init(opaquePointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/iochannelref\/init(opaquepointer:)"},"doc://GLib/documentation/GLib/IOChannelRef/init(_:)-9nny2":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GIOChannel"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannelRef\/init(_:)-9nny2","kind":"symbol","type":"topic","url":"\/documentation\/glib\/iochannelref\/init(_:)-9nny2"},"doc://GLib/documentation/GLib/IOChannelRef/init(_:)-1gk9e":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GIOChannel"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannelRef\/init(_:)-1gk9e","kind":"symbol","type":"topic","url":"\/documentation\/glib\/iochannelref\/init(_:)-1gk9e"},"doc://GLib/documentation/GLib/IOChannelRef/init(gpointer:)":{"role":"symbol","title":"init(gpointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"externalParam","text":"gpointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional "},{"type":"codeVoice","code":"gpointer"}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannelRef\/init(gpointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/iochannelref\/init(gpointer:)"},"doc://GLib/documentation/GLib/PointerWrapper":{"role":"symbol","title":"PointerWrapper","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"PointerWrapper"}],"abstract":[{"type":"text","text":"Protocol for GLib types that wrap pointers."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/PointerWrapper","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PointerWrapper"}],"url":"\/documentation\/glib\/pointerwrapper"},"doc://GLib/documentation/GLib/IOChannelRef/init(gconstpointer:)":{"role":"symbol","title":"init(gconstpointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"externalParam","text":"gconstpointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gconstpointer","preciseIdentifier":"c:@T@gconstpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional, non-mutable "},{"type":"codeVoice","code":"gconstpointer"}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannelRef\/init(gconstpointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/iochannelref\/init(gconstpointer:)"},"doc://GLib/documentation/GLib/IOChannelRef/PointerWrapper-Implementations":{"role":"collectionGroup","title":"PointerWrapper Implementations","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannelRef\/PointerWrapper-Implementations","kind":"article","type":"topic","url":"\/documentation\/glib\/iochannelref\/pointerwrapper-implementations"},"doc://GLib/documentation/GLib/IOChannelRef/init(cPointer:)":{"role":"symbol","title":"init(cPointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"cPointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Unsafe typed initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannelProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannelRef\/init(cPointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/iochannelref\/init(cpointer:)"},"doc://GLib/documentation/GLib/IOChannelRef/init(mutating:)":{"role":"symbol","title":"init(mutating:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"mutating"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeRawPointer","preciseIdentifier":"s:SV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannelProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannelRef\/init(mutating:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/iochannelref\/init(mutating:)"},"doc://GLib/documentation/GLib/IOChannelRef/IOChannelProtocol-Implementations":{"role":"collectionGroup","title":"IOChannelProtocol Implementations","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannelRef\/IOChannelProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/glib\/iochannelref\/iochannelprotocol-implementations"},"doc://GLib/documentation/GLib/IOChannelProtocol":{"role":"symbol","title":"IOChannelProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"IOChannelProtocol"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"GIOChannel"},{"type":"text","text":" data type aims to provide a portable method for"},{"type":"text","text":" "},{"type":"text","text":"using file descriptors, pipes, and sockets, and integrating them"},{"type":"text","text":" "},{"type":"text","text":"into the main event loop (see [struct"},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/MainContext"},{"type":"text","text":"]). Currently,"},{"type":"text","text":" "},{"type":"text","text":"full support is available on UNIX platforms; support for Windows"},{"type":"text","text":" "},{"type":"text","text":"is only partially complete."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannelProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"IOChannelProtocol"}],"url":"\/documentation\/glib\/iochannelprotocol"},"doc://GLib/documentation/GLib":{"role":"collection","title":"GLib","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib","kind":"symbol","type":"topic","url":"\/documentation\/glib"},"doc://GLib/documentation/GLib/IOChannelRef/init(_:)-6dqka":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GIOChannel"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional, non-mutable pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannelRef\/init(_:)-6dqka","kind":"symbol","type":"topic","url":"\/documentation\/glib\/iochannelref\/init(_:)-6dqka"},"doc://GLib/documentation/GLib/IOChannelRef/new(file:mode:)":{"role":"symbol","title":"new(file:mode:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"new"},{"kind":"text","text":"("},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"mode"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">!) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"IOChannelRef","preciseIdentifier":"s:4GLib12IOChannelRefV"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Open a file "},{"type":"codeVoice","code":"filename"},{"type":"text","text":" as a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannel"},{"type":"text","text":" using mode "},{"type":"codeVoice","code":"mode"},{"type":"text","text":". This"},{"type":"text","text":" "},{"type":"text","text":"channel will be closed when the last reference to it is dropped,"},{"type":"text","text":" "},{"type":"text","text":"so there is no need to call "},{"type":"codeVoice","code":"g_io_channel_close()"},{"type":"text","text":" (though doing"},{"type":"text","text":" "},{"type":"text","text":"so will not cause problems, as long as no attempt is made to"},{"type":"text","text":" "},{"type":"text","text":"access the channel after it is closed)."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannelRef\/new(file:mode:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/iochannelref\/new(file:mode:)"},"doc://GLib/documentation/GLib/IOChannelRef/ptr":{"role":"symbol","title":"ptr","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"ptr"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutableRawPointer","preciseIdentifier":"s:Sv"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Untyped pointer to the underlying "},{"type":"codeVoice","code":"GIOChannel"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"For type-safe access, use the generated, typed pointer "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannelProtocol\/io_channel_ptr-247yh"},{"type":"text","text":" property instead."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannelRef\/ptr","kind":"symbol","type":"topic","url":"\/documentation\/glib\/iochannelref\/ptr"},"doc://GLib/documentation/GLib/IOChannelRef/init(_:)-5zd2z":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GIOChannel"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from a constant pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannelRef\/init(_:)-5zd2z","kind":"symbol","type":"topic","url":"\/documentation\/glib\/iochannelref\/init(_:)-5zd2z"},"doc://GLib/documentation/GLib/IOChannelProtocol/io_channel_ptr-247yh":{"defaultImplementations":1,"role":"symbol","title":"io_channel_ptr","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"io_channel_ptr"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GIOChannel"},{"kind":"text","text":">!"}],"abstract":[{"type":"text","text":"Typed pointer to the underlying "},{"type":"codeVoice","code":"GIOChannel"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannelProtocol\/io_channel_ptr-247yh","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/glib\/iochannelprotocol\/io_channel_ptr-247yh"},"doc://GLib/documentation/GLib/MainContext":{"role":"symbol","title":"MainContext","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MainContext"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"GMainContext"},{"type":"text","text":" struct is an opaque data"},{"type":"text","text":" "},{"type":"text","text":"type representing a set of sources to be handled in a main loop."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/MainContext","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MainContext"}],"url":"\/documentation\/glib\/maincontext"},"doc://GLib/documentation/GLib/IOChannel":{"role":"symbol","title":"IOChannel","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"IOChannel"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"GIOChannel"},{"type":"text","text":" data type aims to provide a portable method for"},{"type":"text","text":" "},{"type":"text","text":"using file descriptors, pipes, and sockets, and integrating them"},{"type":"text","text":" "},{"type":"text","text":"into the main event loop (see [struct"},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/MainContext"},{"type":"text","text":"]). Currently,"},{"type":"text","text":" "},{"type":"text","text":"full support is available on UNIX platforms; support for Windows"},{"type":"text","text":" "},{"type":"text","text":"is only partially complete."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannel","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"IOChannel"}],"url":"\/documentation\/glib\/iochannel"},"doc://GLib/documentation/GLib/IOChannelRef/init(unix:)":{"role":"symbol","title":"init(unix:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"unix"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Creates a new "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannel"},{"type":"text","text":" given a file descriptor. On UNIX systems"},{"type":"text","text":" "},{"type":"text","text":"this works for plain files, pipes, and sockets."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannelRef\/init(unix:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/iochannelref\/init(unix:)"},"doc://GLib/documentation/GLib/IOChannelRef/init(file:mode:)":{"role":"symbol","title":"init(file:mode:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"mode"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">!) "},{"kind":"keyword","text":"throws"}],"abstract":[{"type":"text","text":"Open a file "},{"type":"codeVoice","code":"filename"},{"type":"text","text":" as a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannel"},{"type":"text","text":" using mode "},{"type":"codeVoice","code":"mode"},{"type":"text","text":". This"},{"type":"text","text":" "},{"type":"text","text":"channel will be closed when the last reference to it is dropped,"},{"type":"text","text":" "},{"type":"text","text":"so there is no need to call "},{"type":"codeVoice","code":"g_io_channel_close()"},{"type":"text","text":" (though doing"},{"type":"text","text":" "},{"type":"text","text":"so will not cause problems, as long as no attempt is made to"},{"type":"text","text":" "},{"type":"text","text":"access the channel after it is closed)."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannelRef\/init(file:mode:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/iochannelref\/init(file:mode:)"},"doc://GLib/documentation/GLib/IOChannelRef":{"role":"symbol","title":"IOChannelRef","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"IOChannelRef"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"GIOChannel"},{"type":"text","text":" data type aims to provide a portable method for"},{"type":"text","text":" "},{"type":"text","text":"using file descriptors, pipes, and sockets, and integrating them"},{"type":"text","text":" "},{"type":"text","text":"into the main event loop (see [struct"},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/MainContext"},{"type":"text","text":"]). Currently,"},{"type":"text","text":" "},{"type":"text","text":"full support is available on UNIX platforms; support for Windows"},{"type":"text","text":" "},{"type":"text","text":"is only partially complete."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannelRef","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"IOChannelRef"}],"url":"\/documentation\/glib\/iochannelref"},"doc://GLib/documentation/GLib/IOChannelRef/init(constPointer:)":{"role":"symbol","title":"init(constPointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"constPointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Unsafe typed initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannelProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannelRef\/init(constPointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/iochannelref\/init(constpointer:)"},"doc://GLib/documentation/GLib/IOChannelRef/unixNew(unix:)":{"role":"symbol","title":"unixNew(unix:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unixNew"},{"kind":"text","text":"("},{"kind":"externalParam","text":"unix"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"IOChannelRef","preciseIdentifier":"s:4GLib12IOChannelRefV"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Creates a new "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannel"},{"type":"text","text":" given a file descriptor. On UNIX systems"},{"type":"text","text":" "},{"type":"text","text":"this works for plain files, pipes, and sockets."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannelRef\/unixNew(unix:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/iochannelref\/unixnew(unix:)"},"doc://GLib/documentation/GLib/IOChannelRef/init(_:)-c1bf":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Reference intialiser for a related type that implements "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannelProtocol"}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/IOChannelRef\/init(_:)-c1bf","kind":"symbol","type":"topic","url":"\/documentation\/glib\/iochannelref\/init(_:)-c1bf"}}}