{"variants":[{"paths":["\/documentation\/glib\/staticrwlockref\/staticrwlockprotocol-implementations"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"identifier":{"url":"doc:\/\/GLib\/documentation\/GLib\/StaticRWLockRef\/StaticRWLockProtocol-Implementations","interfaceLanguage":"swift"},"topicSections":[{"title":"Instance Methods","identifiers":["doc:\/\/GLib\/documentation\/GLib\/StaticRWLockRef\/free()","doc:\/\/GLib\/documentation\/GLib\/StaticRWLockRef\/init_()","doc:\/\/GLib\/documentation\/GLib\/StaticRWLockRef\/readerLock()","doc:\/\/GLib\/documentation\/GLib\/StaticRWLockRef\/readerTrylock()","doc:\/\/GLib\/documentation\/GLib\/StaticRWLockRef\/readerUnlock()","doc:\/\/GLib\/documentation\/GLib\/StaticRWLockRef\/writerLock()","doc:\/\/GLib\/documentation\/GLib\/StaticRWLockRef\/writerTrylock()","doc:\/\/GLib\/documentation\/GLib\/StaticRWLockRef\/writerUnlock()"],"generated":true}],"kind":"article","metadata":{"modules":[{"name":"GLib"}],"role":"collectionGroup","title":"StaticRWLockProtocol Implementations"},"hierarchy":{"paths":[["doc:\/\/GLib\/documentation\/GLib","doc:\/\/GLib\/documentation\/GLib\/StaticRWLockRef"]]},"references":{"doc://GLib/documentation/GLib/StaticRWLockRef":{"role":"symbol","title":"StaticRWLockRef","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"StaticRWLockRef"}],"abstract":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/StaticRWLock"},{"type":"text","text":" struct represents a read-write lock. A read-write"},{"type":"text","text":" "},{"type":"text","text":"lock can be used for protecting data that some portions of code only"},{"type":"text","text":" "},{"type":"text","text":"read from, while others also write. In such situations it is"},{"type":"text","text":" "},{"type":"text","text":"desirable that several readers can read at once, whereas of course"},{"type":"text","text":" "},{"type":"text","text":"only one writer may write at a time."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/StaticRWLockRef","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"StaticRWLockRef"}],"url":"\/documentation\/glib\/staticrwlockref"},"doc://GLib/documentation/GLib/StaticRWLockRef/init_()":{"role":"symbol","title":"init_()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"init_"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"A "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/StaticRWLock"},{"type":"text","text":" must be initialized with this function before it"},{"type":"text","text":" "},{"type":"text","text":"can be used. Alternatively you can initialize it with"},{"type":"text","text":" "},{"type":"codeVoice","code":"G_STATIC_RW_LOCK_INIT"},{"type":"text","text":"."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/StaticRWLockRef\/init_()","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/glib\/staticrwlockref\/init_()"},"doc://GLib/documentation/GLib/StaticRWLockRef/free()":{"role":"symbol","title":"free()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"free"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Releases all resources allocated to "},{"type":"codeVoice","code":"lock"},{"type":"text","text":"."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/StaticRWLockRef\/free()","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/glib\/staticrwlockref\/free()"},"doc://GLib/documentation/GLib/StaticRWLock":{"role":"symbol","title":"StaticRWLock","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"StaticRWLock"}],"abstract":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/StaticRWLock"},{"type":"text","text":" struct represents a read-write lock. A read-write"},{"type":"text","text":" "},{"type":"text","text":"lock can be used for protecting data that some portions of code only"},{"type":"text","text":" "},{"type":"text","text":"read from, while others also write. In such situations it is"},{"type":"text","text":" "},{"type":"text","text":"desirable that several readers can read at once, whereas of course"},{"type":"text","text":" "},{"type":"text","text":"only one writer may write at a time."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/StaticRWLock","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"StaticRWLock"}],"url":"\/documentation\/glib\/staticrwlock"},"doc://GLib/documentation/GLib/StaticRWLockRef/writerTrylock()":{"role":"symbol","title":"writerTrylock()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"writerTrylock"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Tries to lock "},{"type":"codeVoice","code":"lock"},{"type":"text","text":" for writing. If "},{"type":"codeVoice","code":"lock"},{"type":"text","text":" is already locked (for"},{"type":"text","text":" "},{"type":"text","text":"either reading or writing) by another thread, it immediately returns"},{"type":"text","text":" "},{"type":"codeVoice","code":"false"},{"type":"text","text":". Otherwise it locks "},{"type":"codeVoice","code":"lock"},{"type":"text","text":" for writing and returns "},{"type":"codeVoice","code":"true"},{"type":"text","text":". This"},{"type":"text","text":" "},{"type":"text","text":"lock has to be unlocked by "},{"type":"codeVoice","code":"g_static_rw_lock_writer_unlock()"},{"type":"text","text":"."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/StaticRWLockRef\/writerTrylock()","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/glib\/staticrwlockref\/writertrylock()"},"doc://GLib/documentation/GLib/StaticRWLockRef/readerTrylock()":{"role":"symbol","title":"readerTrylock()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"readerTrylock"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Tries to lock "},{"type":"codeVoice","code":"lock"},{"type":"text","text":" for reading. If "},{"type":"codeVoice","code":"lock"},{"type":"text","text":" is already locked for"},{"type":"text","text":" "},{"type":"text","text":"writing by another thread or if another thread is already waiting to"},{"type":"text","text":" "},{"type":"text","text":"lock "},{"type":"codeVoice","code":"lock"},{"type":"text","text":" for writing, immediately returns "},{"type":"codeVoice","code":"false"},{"type":"text","text":". Otherwise locks"},{"type":"text","text":" "},{"type":"codeVoice","code":"lock"},{"type":"text","text":" for reading and returns "},{"type":"codeVoice","code":"true"},{"type":"text","text":". This lock has to be unlocked by"},{"type":"text","text":" "},{"type":"codeVoice","code":"g_static_rw_lock_reader_unlock()"},{"type":"text","text":"."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/StaticRWLockRef\/readerTrylock()","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/glib\/staticrwlockref\/readertrylock()"},"doc://GLib/documentation/GLib/StaticRWLockRef/readerUnlock()":{"role":"symbol","title":"readerUnlock()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"readerUnlock"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Unlocks "},{"type":"codeVoice","code":"lock"},{"type":"text","text":". If a thread waits to lock "},{"type":"codeVoice","code":"lock"},{"type":"text","text":" for writing and all"},{"type":"text","text":" "},{"type":"text","text":"locks for reading have been unlocked, the waiting thread is woken up"},{"type":"text","text":" "},{"type":"text","text":"and can lock "},{"type":"codeVoice","code":"lock"},{"type":"text","text":" for writing."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/StaticRWLockRef\/readerUnlock()","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/glib\/staticrwlockref\/readerunlock()"},"doc://GLib/documentation/GLib":{"role":"collection","title":"GLib","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib","kind":"symbol","type":"topic","url":"\/documentation\/glib"},"doc://GLib/documentation/GLib/StaticRWLockRef/writerUnlock()":{"role":"symbol","title":"writerUnlock()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"writerUnlock"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Unlocks "},{"type":"codeVoice","code":"lock"},{"type":"text","text":". If a thread is waiting to lock "},{"type":"codeVoice","code":"lock"},{"type":"text","text":" for writing and"},{"type":"text","text":" "},{"type":"text","text":"all locks for reading have been unlocked, the waiting thread is"},{"type":"text","text":" "},{"type":"text","text":"woken up and can lock "},{"type":"codeVoice","code":"lock"},{"type":"text","text":" for writing. If no thread is waiting to"},{"type":"text","text":" "},{"type":"text","text":"lock "},{"type":"codeVoice","code":"lock"},{"type":"text","text":" for writing, and some thread or threads are waiting to"},{"type":"text","text":" "},{"type":"text","text":"lock "},{"type":"codeVoice","code":"lock"},{"type":"text","text":" for reading, the waiting threads are woken up and can"},{"type":"text","text":" "},{"type":"text","text":"lock "},{"type":"codeVoice","code":"lock"},{"type":"text","text":" for reading."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/StaticRWLockRef\/writerUnlock()","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/glib\/staticrwlockref\/writerunlock()"},"doc://GLib/documentation/GLib/StaticRWLockRef/writerLock()":{"role":"symbol","title":"writerLock()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"writerLock"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Locks "},{"type":"codeVoice","code":"lock"},{"type":"text","text":" for writing. If "},{"type":"codeVoice","code":"lock"},{"type":"text","text":" is already locked for writing or"},{"type":"text","text":" "},{"type":"text","text":"reading by other threads, this function will block until "},{"type":"codeVoice","code":"lock"},{"type":"text","text":" is"},{"type":"text","text":" "},{"type":"text","text":"completely unlocked and then lock "},{"type":"codeVoice","code":"lock"},{"type":"text","text":" for writing. While this"},{"type":"text","text":" "},{"type":"text","text":"functions waits to lock "},{"type":"codeVoice","code":"lock"},{"type":"text","text":", no other thread can lock "},{"type":"codeVoice","code":"lock"},{"type":"text","text":" for"},{"type":"text","text":" "},{"type":"text","text":"reading. When "},{"type":"codeVoice","code":"lock"},{"type":"text","text":" is locked for writing, no other thread can lock"},{"type":"text","text":" "},{"type":"codeVoice","code":"lock"},{"type":"text","text":" (neither for reading nor writing). This lock has to be"},{"type":"text","text":" "},{"type":"text","text":"unlocked by "},{"type":"codeVoice","code":"g_static_rw_lock_writer_unlock()"},{"type":"text","text":"."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/StaticRWLockRef\/writerLock()","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/glib\/staticrwlockref\/writerlock()"},"doc://GLib/documentation/GLib/StaticRWLockRef/readerLock()":{"role":"symbol","title":"readerLock()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"readerLock"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Locks "},{"type":"codeVoice","code":"lock"},{"type":"text","text":" for reading. There may be unlimited concurrent locks for"},{"type":"text","text":" "},{"type":"text","text":"reading of a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/StaticRWLock"},{"type":"text","text":" at the same time.  If "},{"type":"codeVoice","code":"lock"},{"type":"text","text":" is already"},{"type":"text","text":" "},{"type":"text","text":"locked for writing by another thread or if another thread is already"},{"type":"text","text":" "},{"type":"text","text":"waiting to lock "},{"type":"codeVoice","code":"lock"},{"type":"text","text":" for writing, this function will block until"},{"type":"text","text":" "},{"type":"codeVoice","code":"lock"},{"type":"text","text":" is unlocked by the other writing thread and no other writing"},{"type":"text","text":" "},{"type":"text","text":"threads want to lock "},{"type":"codeVoice","code":"lock"},{"type":"text","text":". This lock has to be unlocked by"},{"type":"text","text":" "},{"type":"codeVoice","code":"g_static_rw_lock_reader_unlock()"},{"type":"text","text":"."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/StaticRWLockRef\/readerLock()","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/glib\/staticrwlockref\/readerlock()"}}}