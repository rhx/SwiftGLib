{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"check"},{"kind":"text","text":"("},{"kind":"externalParam","text":"formatString"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"copyOnly"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If "},{"type":"codeVoice","code":"copyOnly"},{"type":"text","text":" is "},{"type":"codeVoice","code":"true"},{"type":"text","text":" then this function additionally checks that it"},{"type":"text","text":" "},{"type":"text","text":"would be safe to call "},{"type":"codeVoice","code":"g_variant_unref()"},{"type":"text","text":" on "},{"type":"codeVoice","code":"value"},{"type":"text","text":" immediately after"},{"type":"text","text":" "},{"type":"text","text":"the call to "},{"type":"codeVoice","code":"g_variant_get()"},{"type":"text","text":" without invalidating the result.  This is"},{"type":"text","text":" "},{"type":"text","text":"only possible if deep copies are made (ie: there are no pointers to"},{"type":"text","text":" "},{"type":"text","text":"the data inside of the soon-to-be-freed "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Variant"},{"type":"text","text":" instance).  If this"},{"type":"text","text":" "},{"type":"text","text":"check fails then a "},{"type":"codeVoice","code":"g_critical()"},{"type":"text","text":" is printed and "},{"type":"codeVoice","code":"false"},{"type":"text","text":" is returned."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This function is meant to be used by functions that wish to provide"},{"type":"text","text":" "},{"type":"text","text":"varargs accessors to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Variant"},{"type":"text","text":" values of uncertain values (eg:"},{"type":"text","text":" "},{"type":"codeVoice","code":"g_variant_lookup()"},{"type":"text","text":" or "},{"type":"codeVoice","code":"g_menu_model_get_item_attribute()"},{"type":"text","text":")."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/glib\/variant\/check(formatstring:copyonly:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/GLib\/documentation\/GLib\/Variant\/check(formatString:copyOnly:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Checks if calling "},{"type":"codeVoice","code":"g_variant_get()"},{"type":"text","text":" with "},{"type":"codeVoice","code":"formatString"},{"type":"text","text":" on "},{"type":"codeVoice","code":"value"},{"type":"text","text":" would"},{"type":"text","text":" "},{"type":"text","text":"be valid from a type-compatibility standpoint.  "},{"type":"codeVoice","code":"formatString"},{"type":"text","text":" is"},{"type":"text","text":" "},{"type":"text","text":"assumed to be a valid format string (from a syntactic standpoint)."}],"kind":"symbol","metadata":{"role":"symbol","title":"check(formatString:copyOnly:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"check"},{"kind":"text","text":"("},{"kind":"externalParam","text":"formatString"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"copyOnly"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"symbolKind":"method","externalID":"s:4GLib15VariantProtocolPAAE5check12formatString8copyOnlySbSPys4Int8VGSg_SbtF::SYNTHESIZED::s:4GLib7VariantC","extendedModule":"GLib","modules":[{"name":"GLib"}]},"hierarchy":{"paths":[["doc:\/\/GLib\/documentation\/GLib","doc:\/\/GLib\/documentation\/GLib\/Variant","doc:\/\/GLib\/documentation\/GLib\/Variant\/VariantProtocol-Implementations"]]},"references":{"doc://GLib/documentation/GLib/Variant":{"role":"symbol","title":"Variant","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Variant"}],"abstract":[{"type":"codeVoice","code":"GVariant"},{"type":"text","text":" is a variant datatype; it can contain one or more values"},{"type":"text","text":" "},{"type":"text","text":"along with information about the type of the values."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/Variant","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Variant"}],"url":"\/documentation\/glib\/variant"},"doc://GLib/documentation/GLib":{"role":"collection","title":"GLib","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib","kind":"symbol","type":"topic","url":"\/documentation\/glib"},"doc://GLib/documentation/GLib/Variant/VariantProtocol-Implementations":{"role":"collectionGroup","title":"VariantProtocol Implementations","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib\/Variant\/VariantProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/glib\/variant\/variantprotocol-implementations"},"doc://GLib/documentation/GLib/Variant/check(formatString:copyOnly:)":{"role":"symbol","title":"check(formatString:copyOnly:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"check"},{"kind":"text","text":"("},{"kind":"externalParam","text":"formatString"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"copyOnly"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Checks if calling "},{"type":"codeVoice","code":"g_variant_get()"},{"type":"text","text":" with "},{"type":"codeVoice","code":"formatString"},{"type":"text","text":" on "},{"type":"codeVoice","code":"value"},{"type":"text","text":" would"},{"type":"text","text":" "},{"type":"text","text":"be valid from a type-compatibility standpoint.  "},{"type":"codeVoice","code":"formatString"},{"type":"text","text":" is"},{"type":"text","text":" "},{"type":"text","text":"assumed to be a valid format string (from a syntactic standpoint)."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/Variant\/check(formatString:copyOnly:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/variant\/check(formatstring:copyonly:)"}}}