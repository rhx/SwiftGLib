{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"CondProtocol"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/GLib\/documentation\/GLib\/PointerWrapper","preciseIdentifier":"s:4GLib14PointerWrapperP","text":"PointerWrapper"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Consider the following example of a shared variable.  One or more"},{"type":"text","text":" "},{"type":"text","text":"threads can wait for data to be published to the variable and when"},{"type":"text","text":" "},{"type":"text","text":"another thread publishes the data, it can signal one of the waiting"},{"type":"text","text":" "},{"type":"text","text":"threads to wake up to collect the data."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Here is an example for using GCond to block a thread until a condition"},{"type":"text","text":" "},{"type":"text","text":"is satisfied:"},{"type":"text","text":" "},{"type":"text","text":"(C Language Example):"}]},{"type":"codeListing","syntax":"C","code":["  gpointer current_data = NULL;","  GMutex data_mutex;","  GCond data_cond;","","  void","  push_data (gpointer data)","  {","    g_mutex_lock (&data_mutex);","    current_data = data;","    g_cond_signal (&data_cond);","    g_mutex_unlock (&data_mutex);","  }","","  gpointer","  pop_data (void)","  {","    gpointer data;","","    g_mutex_lock (&data_mutex);","    while (!current_data)","      g_cond_wait (&data_cond, &data_mutex);","    data = current_data;","    current_data = NULL;","    g_mutex_unlock (&data_mutex);","","    return data;","  }"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Whenever a thread calls "},{"type":"codeVoice","code":"pop_data()"},{"type":"text","text":" now, it will wait until"},{"type":"text","text":" "},{"type":"text","text":"current_data is non-"},{"type":"codeVoice","code":"nil"},{"type":"text","text":", i.e. until some other thread"},{"type":"text","text":" "},{"type":"text","text":"has called "},{"type":"codeVoice","code":"push_data()"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The example shows that use of a condition variable must always be"},{"type":"text","text":" "},{"type":"text","text":"paired with a mutex.  Without the use of a mutex, there would be a"},{"type":"text","text":" "},{"type":"text","text":"race between the check of "},{"type":"codeVoice","code":"current_data"},{"type":"text","text":" by the while loop in"},{"type":"text","text":" "},{"type":"codeVoice","code":"pop_data()"},{"type":"text","text":" and waiting. Specifically, another thread could set"},{"type":"text","text":" "},{"type":"codeVoice","code":"current_data"},{"type":"text","text":" after the check, and signal the cond (with nobody"},{"type":"text","text":" "},{"type":"text","text":"waiting on it) before the first thread goes to sleep. "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Cond"},{"type":"text","text":" is"},{"type":"text","text":" "},{"type":"text","text":"specifically useful for its ability to release the mutex and go"},{"type":"text","text":" "},{"type":"text","text":"to sleep atomically."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"It is also important to use the "},{"type":"codeVoice","code":"g_cond_wait()"},{"type":"text","text":" and "},{"type":"codeVoice","code":"g_cond_wait_until()"},{"type":"text","text":" "},{"type":"text","text":"functions only inside a loop which checks for the condition to be"},{"type":"text","text":" "},{"type":"text","text":"true.  See "},{"type":"codeVoice","code":"g_cond_wait()"},{"type":"text","text":" for an explanation of why the condition may"},{"type":"text","text":" "},{"type":"text","text":"not be true even after it returns."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Cond"},{"type":"text","text":" is allocated in static storage then it can be used"},{"type":"text","text":" "},{"type":"text","text":"without initialisation.  Otherwise, you should call "},{"type":"codeVoice","code":"g_cond_init()"},{"type":"text","text":" "},{"type":"text","text":"on it and "},{"type":"codeVoice","code":"g_cond_clear()"},{"type":"text","text":" when done."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"A "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Cond"},{"type":"text","text":" should only be accessed via the g_cond_ functions."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/CondProtocol"},{"type":"text","text":" protocol exposes the methods and properties of an underlying "},{"type":"codeVoice","code":"GCond"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"The default implementation of these can be found in the protocol extension below."},{"type":"text","text":" "},{"type":"text","text":"For a concrete class that implements these methods and properties, see "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Cond"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Alternatively, use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/CondRef"},{"type":"text","text":" as a lighweight, "},{"type":"codeVoice","code":"unowned"},{"type":"text","text":" reference if you already have an instance you just want to use."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/glib\/condprotocol"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/GLib\/documentation\/GLib\/PointerWrapper"],"kind":"relationships","title":"Inherits From","type":"inheritsFrom"},{"identifiers":["doc:\/\/GLib\/documentation\/GLib\/Cond","doc:\/\/GLib\/documentation\/GLib\/CondRef"],"kind":"relationships","title":"Conforming Types","type":"conformingTypes"}],"identifier":{"url":"doc:\/\/GLib\/documentation\/GLib\/CondProtocol","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Cond"},{"type":"text","text":" struct is an opaque data structure that represents a"},{"type":"text","text":" "},{"type":"text","text":"condition. Threads can block on a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Cond"},{"type":"text","text":" if they find a certain"},{"type":"text","text":" "},{"type":"text","text":"condition to be false. If other threads change the state of this"},{"type":"text","text":" "},{"type":"text","text":"condition they signal the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Cond"},{"type":"text","text":", and that causes the waiting"},{"type":"text","text":" "},{"type":"text","text":"threads to be woken up."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"CondProtocol"}],"title":"CondProtocol","roleHeading":"Protocol","role":"symbol","symbolKind":"protocol","externalID":"s:4GLib12CondProtocolP","modules":[{"name":"GLib"}],"navigatorTitle":[{"kind":"identifier","text":"CondProtocol"}]},"hierarchy":{"paths":[["doc:\/\/GLib\/documentation\/GLib"]]},"topicSections":[{"title":"Instance Methods","identifiers":["doc:\/\/GLib\/documentation\/GLib\/CondProtocol\/broadcast()","doc:\/\/GLib\/documentation\/GLib\/CondProtocol\/clear()","doc:\/\/GLib\/documentation\/GLib\/CondProtocol\/free()","doc:\/\/GLib\/documentation\/GLib\/CondProtocol\/init_()","doc:\/\/GLib\/documentation\/GLib\/CondProtocol\/signal()","doc:\/\/GLib\/documentation\/GLib\/CondProtocol\/timedWait(mutex:absTime:)","doc:\/\/GLib\/documentation\/GLib\/CondProtocol\/wait(mutex:)","doc:\/\/GLib\/documentation\/GLib\/CondProtocol\/waitUntil(mutex:endTime:)"]}],"references":{"doc://GLib/documentation/GLib/CondProtocol/free()":{"role":"symbol","title":"free()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"free"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Destroys a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Cond"},{"type":"text","text":" that has been created with "},{"type":"codeVoice","code":"g_cond_new()"},{"type":"text","text":"."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/CondProtocol\/free()","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/glib\/condprotocol\/free()"},"doc://GLib/documentation/GLib/CondProtocol/signal()":{"role":"symbol","title":"signal()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"signal"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"If threads are waiting for "},{"type":"codeVoice","code":"cond"},{"type":"text","text":", at least one of them is unblocked."},{"type":"text","text":" "},{"type":"text","text":"If no threads are waiting for "},{"type":"codeVoice","code":"cond"},{"type":"text","text":", this function has no effect."},{"type":"text","text":" "},{"type":"text","text":"It is good practice to hold the same lock as the waiting thread"},{"type":"text","text":" "},{"type":"text","text":"while calling this function, though not required."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/CondProtocol\/signal()","kind":"symbol","type":"topic","url":"\/documentation\/glib\/condprotocol\/signal()"},"doc://GLib/documentation/GLib":{"role":"collection","title":"GLib","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib","kind":"symbol","type":"topic","url":"\/documentation\/glib"},"doc://GLib/documentation/GLib/PointerWrapper":{"role":"symbol","title":"PointerWrapper","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"PointerWrapper"}],"abstract":[{"type":"text","text":"Protocol for GLib types that wrap pointers."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/PointerWrapper","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PointerWrapper"}],"url":"\/documentation\/glib\/pointerwrapper"},"doc://GLib/documentation/GLib/CondProtocol/waitUntil(mutex:endTime:)":{"role":"symbol","title":"waitUntil(mutex:endTime:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"waitUntil"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"MutexT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"mutex"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"MutexT"},{"kind":"text","text":", "},{"kind":"externalParam","text":"endTime"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gint64","preciseIdentifier":"c:@T@gint64"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Waits until either "},{"type":"codeVoice","code":"cond"},{"type":"text","text":" is signalled or "},{"type":"codeVoice","code":"endTime"},{"type":"text","text":" has passed."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/CondProtocol\/waitUntil(mutex:endTime:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/condprotocol\/waituntil(mutex:endtime:)"},"doc://GLib/documentation/GLib/Cond":{"role":"symbol","title":"Cond","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Cond"}],"abstract":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Cond"},{"type":"text","text":" struct is an opaque data structure that represents a"},{"type":"text","text":" "},{"type":"text","text":"condition. Threads can block on a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Cond"},{"type":"text","text":" if they find a certain"},{"type":"text","text":" "},{"type":"text","text":"condition to be false. If other threads change the state of this"},{"type":"text","text":" "},{"type":"text","text":"condition they signal the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Cond"},{"type":"text","text":", and that causes the waiting"},{"type":"text","text":" "},{"type":"text","text":"threads to be woken up."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/Cond","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Cond"}],"url":"\/documentation\/glib\/cond"},"doc://GLib/documentation/GLib/CondProtocol/init_()":{"role":"symbol","title":"init_()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"init_"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Initialises a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Cond"},{"type":"text","text":" so that it can be used."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/CondProtocol\/init_()","kind":"symbol","type":"topic","url":"\/documentation\/glib\/condprotocol\/init_()"},"doc://GLib/documentation/GLib/CondProtocol/clear()":{"role":"symbol","title":"clear()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"clear"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Frees the resources allocated to a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Cond"},{"type":"text","text":" with "},{"type":"codeVoice","code":"g_cond_init()"},{"type":"text","text":"."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/CondProtocol\/clear()","kind":"symbol","type":"topic","url":"\/documentation\/glib\/condprotocol\/clear()"},"doc://GLib/documentation/GLib/CondRef":{"role":"symbol","title":"CondRef","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CondRef"}],"abstract":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Cond"},{"type":"text","text":" struct is an opaque data structure that represents a"},{"type":"text","text":" "},{"type":"text","text":"condition. Threads can block on a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Cond"},{"type":"text","text":" if they find a certain"},{"type":"text","text":" "},{"type":"text","text":"condition to be false. If other threads change the state of this"},{"type":"text","text":" "},{"type":"text","text":"condition they signal the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Cond"},{"type":"text","text":", and that causes the waiting"},{"type":"text","text":" "},{"type":"text","text":"threads to be woken up."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/CondRef","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CondRef"}],"url":"\/documentation\/glib\/condref"},"doc://GLib/documentation/GLib/CondProtocol":{"role":"symbol","title":"CondProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"CondProtocol"}],"abstract":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Cond"},{"type":"text","text":" struct is an opaque data structure that represents a"},{"type":"text","text":" "},{"type":"text","text":"condition. Threads can block on a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Cond"},{"type":"text","text":" if they find a certain"},{"type":"text","text":" "},{"type":"text","text":"condition to be false. If other threads change the state of this"},{"type":"text","text":" "},{"type":"text","text":"condition they signal the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Cond"},{"type":"text","text":", and that causes the waiting"},{"type":"text","text":" "},{"type":"text","text":"threads to be woken up."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/CondProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CondProtocol"}],"url":"\/documentation\/glib\/condprotocol"},"doc://GLib/documentation/GLib/CondProtocol/wait(mutex:)":{"role":"symbol","title":"wait(mutex:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"wait"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"MutexT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"mutex"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"MutexT"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Atomically releases "},{"type":"codeVoice","code":"mutex"},{"type":"text","text":" and waits until "},{"type":"codeVoice","code":"cond"},{"type":"text","text":" is signalled."},{"type":"text","text":" "},{"type":"text","text":"When this function returns, "},{"type":"codeVoice","code":"mutex"},{"type":"text","text":" is locked again and owned by the"},{"type":"text","text":" "},{"type":"text","text":"calling thread."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/CondProtocol\/wait(mutex:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/condprotocol\/wait(mutex:)"},"doc://GLib/documentation/GLib/CondProtocol/timedWait(mutex:absTime:)":{"role":"symbol","title":"timedWait(mutex:absTime:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"timedWait"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"MutexT"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"TimeValT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"mutex"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"MutexT"},{"kind":"text","text":", "},{"kind":"externalParam","text":"absTime"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TimeValT"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Waits until this thread is woken up on "},{"type":"codeVoice","code":"cond"},{"type":"text","text":", but not longer than"},{"type":"text","text":" "},{"type":"text","text":"until the time specified by "},{"type":"codeVoice","code":"absTime"},{"type":"text","text":". The "},{"type":"codeVoice","code":"mutex"},{"type":"text","text":" is unlocked before"},{"type":"text","text":" "},{"type":"text","text":"falling asleep and locked again before resuming."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/CondProtocol\/timedWait(mutex:absTime:)","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/glib\/condprotocol\/timedwait(mutex:abstime:)"},"doc://GLib/documentation/GLib/CondProtocol/broadcast()":{"role":"symbol","title":"broadcast()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"broadcast"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"If threads are waiting for "},{"type":"codeVoice","code":"cond"},{"type":"text","text":", all of them are unblocked."},{"type":"text","text":" "},{"type":"text","text":"If no threads are waiting for "},{"type":"codeVoice","code":"cond"},{"type":"text","text":", this function has no effect."},{"type":"text","text":" "},{"type":"text","text":"It is good practice to lock the same mutex as the waiting threads"},{"type":"text","text":" "},{"type":"text","text":"while calling this function, though not required."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/CondProtocol\/broadcast()","kind":"symbol","type":"topic","url":"\/documentation\/glib\/condprotocol\/broadcast()"}}}