{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RecMutexRef"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/RecMutex"},{"type":"text","text":" is allocated in static storage then it can be used"},{"type":"text","text":" "},{"type":"text","text":"without initialisation.  Otherwise, you should call"},{"type":"text","text":" "},{"type":"codeVoice","code":"g_rec_mutex_init()"},{"type":"text","text":" on it and "},{"type":"codeVoice","code":"g_rec_mutex_clear()"},{"type":"text","text":" when done."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"A GRecMutex should only be accessed with the"},{"type":"text","text":" "},{"type":"text","text":"g_rec_mutex_ functions."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/RecMutexRef"},{"type":"text","text":" type acts as a lightweight Swift reference to an underlying "},{"type":"codeVoice","code":"GRecMutex"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"It exposes methods that can operate on this data type through "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/RecMutexProtocol"},{"type":"text","text":" conformance."},{"type":"text","text":" "},{"type":"text","text":"Use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/RecMutexRef"},{"type":"text","text":" only as an "},{"type":"codeVoice","code":"unowned"},{"type":"text","text":" reference to an existing "},{"type":"codeVoice","code":"GRecMutex"},{"type":"text","text":" instance."}]},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/RecMutex"},{"type":"text","text":" (instead of "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/RecMutexRef"},{"type":"text","text":") if you want to use Automatic Reference Counting for memory management of the underlying "},{"type":"codeVoice","code":"GRecMutex"},{"type":"text","text":" instance."}]}],"type":"aside","name":"Note"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/glib\/recmutexref"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/GLib\/documentation\/GLib\/PointerWrapper","doc:\/\/GLib\/documentation\/GLib\/RecMutexProtocol"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/GLib\/documentation\/GLib\/RecMutexRef","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"The GRecMutex struct is an opaque data structure to represent a"},{"type":"text","text":" "},{"type":"text","text":"recursive mutex. It is similar to a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Mutex"},{"type":"text","text":" with the difference"},{"type":"text","text":" "},{"type":"text","text":"that it is possible to lock a GRecMutex multiple times in the same"},{"type":"text","text":" "},{"type":"text","text":"thread without deadlock. When doing so, care has to be taken to"},{"type":"text","text":" "},{"type":"text","text":"unlock the recursive mutex as often as it has been locked."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RecMutexRef"}],"title":"RecMutexRef","roleHeading":"Structure","role":"symbol","symbolKind":"struct","externalID":"s:4GLib11RecMutexRefV","modules":[{"name":"GLib"}],"navigatorTitle":[{"kind":"identifier","text":"RecMutexRef"}]},"hierarchy":{"paths":[["doc:\/\/GLib\/documentation\/GLib"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/GLib\/documentation\/GLib\/RecMutexRef\/init(_:)-24uz6","doc:\/\/GLib\/documentation\/GLib\/RecMutexRef\/init(_:)-7atx2","doc:\/\/GLib\/documentation\/GLib\/RecMutexRef\/init(_:)-7sxgv","doc:\/\/GLib\/documentation\/GLib\/RecMutexRef\/init(_:)-8gb8q","doc:\/\/GLib\/documentation\/GLib\/RecMutexRef\/init(_:)-97mim","doc:\/\/GLib\/documentation\/GLib\/RecMutexRef\/init(cPointer:)","doc:\/\/GLib\/documentation\/GLib\/RecMutexRef\/init(constPointer:)","doc:\/\/GLib\/documentation\/GLib\/RecMutexRef\/init(gconstpointer:)","doc:\/\/GLib\/documentation\/GLib\/RecMutexRef\/init(gpointer:)","doc:\/\/GLib\/documentation\/GLib\/RecMutexRef\/init(mutating:)","doc:\/\/GLib\/documentation\/GLib\/RecMutexRef\/init(opaquePointer:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/GLib\/documentation\/GLib\/RecMutexRef\/ptr"]},{"title":"Default Implementations","identifiers":["doc:\/\/GLib\/documentation\/GLib\/RecMutexRef\/PointerWrapper-Implementations","doc:\/\/GLib\/documentation\/GLib\/RecMutexRef\/RecMutexProtocol-Implementations"],"generated":true}],"references":{"doc://GLib/documentation/GLib/RecMutexProtocol":{"role":"symbol","title":"RecMutexProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RecMutexProtocol"}],"abstract":[{"type":"text","text":"The GRecMutex struct is an opaque data structure to represent a"},{"type":"text","text":" "},{"type":"text","text":"recursive mutex. It is similar to a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Mutex"},{"type":"text","text":" with the difference"},{"type":"text","text":" "},{"type":"text","text":"that it is possible to lock a GRecMutex multiple times in the same"},{"type":"text","text":" "},{"type":"text","text":"thread without deadlock. When doing so, care has to be taken to"},{"type":"text","text":" "},{"type":"text","text":"unlock the recursive mutex as often as it has been locked."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/RecMutexProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"RecMutexProtocol"}],"url":"\/documentation\/glib\/recmutexprotocol"},"doc://GLib/documentation/GLib/RecMutexRef/init(gpointer:)":{"role":"symbol","title":"init(gpointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"externalParam","text":"gpointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional "},{"type":"codeVoice","code":"gpointer"}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/RecMutexRef\/init(gpointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/recmutexref\/init(gpointer:)"},"doc://GLib/documentation/GLib/RecMutexRef/init(constPointer:)":{"role":"symbol","title":"init(constPointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"constPointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Unsafe typed initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/RecMutexProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/RecMutexRef\/init(constPointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/recmutexref\/init(constpointer:)"},"doc://GLib/documentation/GLib/RecMutexRef/init(mutating:)":{"role":"symbol","title":"init(mutating:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"mutating"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeRawPointer","preciseIdentifier":"s:SV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/RecMutexProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/RecMutexRef\/init(mutating:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/recmutexref\/init(mutating:)"},"doc://GLib/documentation/GLib/RecMutexRef/init(_:)-7sxgv":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GRecMutex"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from a constant pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/RecMutexRef\/init(_:)-7sxgv","kind":"symbol","type":"topic","url":"\/documentation\/glib\/recmutexref\/init(_:)-7sxgv"},"doc://GLib/documentation/GLib/RecMutexRef/PointerWrapper-Implementations":{"role":"collectionGroup","title":"PointerWrapper Implementations","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib\/RecMutexRef\/PointerWrapper-Implementations","kind":"article","type":"topic","url":"\/documentation\/glib\/recmutexref\/pointerwrapper-implementations"},"doc://GLib/documentation/GLib/RecMutexRef/init(gconstpointer:)":{"role":"symbol","title":"init(gconstpointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"externalParam","text":"gconstpointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gconstpointer","preciseIdentifier":"c:@T@gconstpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional, non-mutable "},{"type":"codeVoice","code":"gconstpointer"}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/RecMutexRef\/init(gconstpointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/recmutexref\/init(gconstpointer:)"},"doc://GLib/documentation/GLib/RecMutexRef/init(_:)-97mim":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GRecMutex"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/RecMutexRef\/init(_:)-97mim","kind":"symbol","type":"topic","url":"\/documentation\/glib\/recmutexref\/init(_:)-97mim"},"doc://GLib/documentation/GLib/RecMutexRef/init(cPointer:)":{"role":"symbol","title":"init(cPointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"cPointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Unsafe typed initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/RecMutexProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/RecMutexRef\/init(cPointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/recmutexref\/init(cpointer:)"},"doc://GLib/documentation/GLib":{"role":"collection","title":"GLib","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib","kind":"symbol","type":"topic","url":"\/documentation\/glib"},"doc://GLib/documentation/GLib/RecMutex":{"role":"symbol","title":"RecMutex","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"RecMutex"}],"abstract":[{"type":"text","text":"The GRecMutex struct is an opaque data structure to represent a"},{"type":"text","text":" "},{"type":"text","text":"recursive mutex. It is similar to a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Mutex"},{"type":"text","text":" with the difference"},{"type":"text","text":" "},{"type":"text","text":"that it is possible to lock a GRecMutex multiple times in the same"},{"type":"text","text":" "},{"type":"text","text":"thread without deadlock. When doing so, care has to be taken to"},{"type":"text","text":" "},{"type":"text","text":"unlock the recursive mutex as often as it has been locked."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/RecMutex","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"RecMutex"}],"url":"\/documentation\/glib\/recmutex"},"doc://GLib/documentation/GLib/PointerWrapper":{"role":"symbol","title":"PointerWrapper","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"PointerWrapper"}],"abstract":[{"type":"text","text":"Protocol for GLib types that wrap pointers."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/PointerWrapper","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PointerWrapper"}],"url":"\/documentation\/glib\/pointerwrapper"},"doc://GLib/documentation/GLib/RecMutexRef/init(opaquePointer:)":{"role":"symbol","title":"init(opaquePointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"opaquePointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"OpaquePointer","preciseIdentifier":"s:s13OpaquePointerV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/RecMutexProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/RecMutexRef\/init(opaquePointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/recmutexref\/init(opaquepointer:)"},"doc://GLib/documentation/GLib/Mutex":{"role":"symbol","title":"Mutex","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Mutex"}],"abstract":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Mutex"},{"type":"text","text":" struct is an opaque data structure to represent a mutex"},{"type":"text","text":" "},{"type":"text","text":"(mutual exclusion). It can be used to protect data against shared"},{"type":"text","text":" "},{"type":"text","text":"access."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/Mutex","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Mutex"}],"url":"\/documentation\/glib\/mutex"},"doc://GLib/documentation/GLib/RecMutexRef/init(_:)-7atx2":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Reference intialiser for a related type that implements "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/RecMutexProtocol"}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/RecMutexRef\/init(_:)-7atx2","kind":"symbol","type":"topic","url":"\/documentation\/glib\/recmutexref\/init(_:)-7atx2"},"doc://GLib/documentation/GLib/RecMutexRef/init(_:)-8gb8q":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GRecMutex"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/RecMutexRef\/init(_:)-8gb8q","kind":"symbol","type":"topic","url":"\/documentation\/glib\/recmutexref\/init(_:)-8gb8q"},"doc://GLib/documentation/GLib/RecMutexRef/init(_:)-24uz6":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GRecMutex"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional, non-mutable pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/RecMutexRef\/init(_:)-24uz6","kind":"symbol","type":"topic","url":"\/documentation\/glib\/recmutexref\/init(_:)-24uz6"},"doc://GLib/documentation/GLib/RecMutexRef":{"role":"symbol","title":"RecMutexRef","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RecMutexRef"}],"abstract":[{"type":"text","text":"The GRecMutex struct is an opaque data structure to represent a"},{"type":"text","text":" "},{"type":"text","text":"recursive mutex. It is similar to a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Mutex"},{"type":"text","text":" with the difference"},{"type":"text","text":" "},{"type":"text","text":"that it is possible to lock a GRecMutex multiple times in the same"},{"type":"text","text":" "},{"type":"text","text":"thread without deadlock. When doing so, care has to be taken to"},{"type":"text","text":" "},{"type":"text","text":"unlock the recursive mutex as often as it has been locked."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/RecMutexRef","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"RecMutexRef"}],"url":"\/documentation\/glib\/recmutexref"},"doc://GLib/documentation/GLib/RecMutexRef/ptr":{"role":"symbol","title":"ptr","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"ptr"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutableRawPointer","preciseIdentifier":"s:Sv"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Untyped pointer to the underlying "},{"type":"codeVoice","code":"GRecMutex"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"For type-safe access, use the generated, typed pointer "},{"type":"codeVoice","code":"RecMutexProtocol\/_ptr"},{"type":"text","text":" property instead."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/RecMutexRef\/ptr","kind":"symbol","type":"topic","url":"\/documentation\/glib\/recmutexref\/ptr"},"doc://GLib/documentation/GLib/RecMutexRef/RecMutexProtocol-Implementations":{"role":"collectionGroup","title":"RecMutexProtocol Implementations","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib\/RecMutexRef\/RecMutexProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/glib\/recmutexref\/recmutexprotocol-implementations"}}}