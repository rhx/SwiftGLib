{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"strsplitSet"},{"kind":"text","text":"("},{"kind":"externalParam","text":"string"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"delimiters"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"maxTokens"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">?>!"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example, the result of g_strsplit_set (“abc:def\/ghi”, “:\/”, -1) is an"},{"type":"text","text":" "},{"type":"text","text":"array containing the three strings “abc”, “def”, and “ghi”."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The result of g_strsplit_set (”:def\/ghi:”, “:\/”, -1) is an array containing"},{"type":"text","text":" "},{"type":"text","text":"the four strings “”, “def”, “ghi”, and “”."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"As a special case, the result of splitting the empty string “” is an empty"},{"type":"text","text":" "},{"type":"text","text":"array, not an array containing a single string. The reason for this"},{"type":"text","text":" "},{"type":"text","text":"special case is that being able to represent an empty array is typically"},{"type":"text","text":" "},{"type":"text","text":"more useful than consistent handling of empty elements. If you do need"},{"type":"text","text":" "},{"type":"text","text":"to represent empty elements, you’ll need to check for the empty string"},{"type":"text","text":" "},{"type":"text","text":"before calling "},{"type":"codeVoice","code":"g_strsplit_set()"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Note that this function works on bytes not characters, so it can’t be used"},{"type":"text","text":" "},{"type":"text","text":"to delimit UTF-8 strings for anything but ASCII characters."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/glib\/strsplitset(string:delimiters:maxtokens:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/GLib\/documentation\/GLib\/strsplitSet(string:delimiters:maxTokens:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Splits "},{"type":"codeVoice","code":"string"},{"type":"text","text":" into a number of tokens not containing any of the characters"},{"type":"text","text":" "},{"type":"text","text":"in "},{"type":"codeVoice","code":"delimiters"},{"type":"text","text":". A token is the (possibly empty) longest string that does not"},{"type":"text","text":" "},{"type":"text","text":"contain any of the characters in "},{"type":"codeVoice","code":"delimiters"},{"type":"text","text":". If "},{"type":"codeVoice","code":"maxTokens"},{"type":"text","text":" is reached, the"},{"type":"text","text":" "},{"type":"text","text":"remainder is appended to the last token."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"strsplitSet"},{"kind":"text","text":"("},{"kind":"externalParam","text":"string"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"delimiters"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"maxTokens"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">?>!"}],"title":"strsplitSet(string:delimiters:maxTokens:)","roleHeading":"Function","role":"symbol","symbolKind":"func","externalID":"s:4GLib11strsplitSet6string10delimiters9maxTokensSpySpys4Int8VGSgGSgSPyAGGSg_AMSitF","modules":[{"name":"GLib"}]},"hierarchy":{"paths":[["doc:\/\/GLib\/documentation\/GLib"]]},"references":{"doc://GLib/documentation/GLib/strsplitSet(string:delimiters:maxTokens:)":{"role":"symbol","title":"strsplitSet(string:delimiters:maxTokens:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"strsplitSet"},{"kind":"text","text":"("},{"kind":"externalParam","text":"string"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"delimiters"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"maxTokens"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">?>!"}],"abstract":[{"type":"text","text":"Splits "},{"type":"codeVoice","code":"string"},{"type":"text","text":" into a number of tokens not containing any of the characters"},{"type":"text","text":" "},{"type":"text","text":"in "},{"type":"codeVoice","code":"delimiters"},{"type":"text","text":". A token is the (possibly empty) longest string that does not"},{"type":"text","text":" "},{"type":"text","text":"contain any of the characters in "},{"type":"codeVoice","code":"delimiters"},{"type":"text","text":". If "},{"type":"codeVoice","code":"maxTokens"},{"type":"text","text":" is reached, the"},{"type":"text","text":" "},{"type":"text","text":"remainder is appended to the last token."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/strsplitSet(string:delimiters:maxTokens:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/strsplitset(string:delimiters:maxtokens:)"},"doc://GLib/documentation/GLib":{"role":"collection","title":"GLib","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib","kind":"symbol","type":"topic","url":"\/documentation\/glib"}}}