{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"lookupExtended"},{"kind":"text","text":"("},{"kind":"externalParam","text":"lookupKey"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gconstpointer","preciseIdentifier":"c:@T@gconstpointer"},{"kind":"text","text":"? = nil, "},{"kind":"externalParam","text":"origKey"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?>? = nil, "},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?>? = nil) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"languages":["swift"],"platforms":["macOS"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/glib\/treeprotocol\/lookupextended(lookupkey:origkey:value:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/GLib\/documentation\/GLib\/TreeProtocol\/lookupExtended(lookupKey:origKey:value:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Looks up a key in the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Tree"},{"type":"text","text":", returning the original key and the"},{"type":"text","text":" "},{"type":"text","text":"associated value. This is useful if you need to free the memory"},{"type":"text","text":" "},{"type":"text","text":"allocated for the original key, for example before calling"},{"type":"text","text":" "},{"type":"codeVoice","code":"g_tree_remove()"},{"type":"text","text":"."}],"kind":"symbol","metadata":{"role":"symbol","title":"lookupExtended(lookupKey:origKey:value:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"lookupExtended"},{"kind":"text","text":"("},{"kind":"externalParam","text":"lookupKey"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gconstpointer","preciseIdentifier":"c:@T@gconstpointer"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"origKey"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?>?, "},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?>?) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"symbolKind":"method","externalID":"s:4GLib12TreeProtocolPAAE14lookupExtended0D3Key04origF05valueSbSVSg_SpySvSgGSgAKtF","extendedModule":"GLib","modules":[{"name":"GLib"}]},"hierarchy":{"paths":[["doc:\/\/GLib\/documentation\/GLib","doc:\/\/GLib\/documentation\/GLib\/TreeProtocol"]]},"references":{"doc://GLib/documentation/GLib":{"role":"collection","title":"GLib","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib","kind":"symbol","type":"topic","url":"\/documentation\/glib"},"doc://GLib/documentation/GLib/TreeProtocol/lookupExtended(lookupKey:origKey:value:)":{"role":"symbol","title":"lookupExtended(lookupKey:origKey:value:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"lookupExtended"},{"kind":"text","text":"("},{"kind":"externalParam","text":"lookupKey"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gconstpointer","preciseIdentifier":"c:@T@gconstpointer"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"origKey"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?>?, "},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?>?) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Looks up a key in the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Tree"},{"type":"text","text":", returning the original key and the"},{"type":"text","text":" "},{"type":"text","text":"associated value. This is useful if you need to free the memory"},{"type":"text","text":" "},{"type":"text","text":"allocated for the original key, for example before calling"},{"type":"text","text":" "},{"type":"codeVoice","code":"g_tree_remove()"},{"type":"text","text":"."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/TreeProtocol\/lookupExtended(lookupKey:origKey:value:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/treeprotocol\/lookupextended(lookupkey:origkey:value:)"},"doc://GLib/documentation/GLib/TreeProtocol":{"role":"symbol","title":"TreeProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"TreeProtocol"}],"abstract":[{"type":"text","text":"The GTree struct is an opaque data structure representing a"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"..\/Protocols\/TreeProtocol.html"},{"type":"text","text":". It should be"},{"type":"text","text":" "},{"type":"text","text":"accessed only by using the following functions."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/TreeProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TreeProtocol"}],"url":"\/documentation\/glib\/treeprotocol"},"doc://GLib/documentation/GLib/Tree":{"role":"symbol","title":"Tree","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Tree"}],"abstract":[{"type":"text","text":"The GTree struct is an opaque data structure representing a"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"..\/Protocols\/TreeProtocol.html"},{"type":"text","text":". It should be"},{"type":"text","text":" "},{"type":"text","text":"accessed only by using the following functions."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/Tree","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Tree"}],"url":"\/documentation\/glib\/tree"},"../Protocols/TreeProtocol.html":{"title":"balanced binary tree","titleInlineContent":[{"type":"text","text":"balanced binary tree"}],"type":"link","identifier":"..\/Protocols\/TreeProtocol.html","url":"..\/Protocols\/TreeProtocol.html"}}}