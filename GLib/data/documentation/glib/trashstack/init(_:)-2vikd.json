{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"other"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/GLib\/documentation\/GLib\/TrashStackProtocol","preciseIdentifier":"s:4GLib18TrashStackProtocolP","text":"TrashStackProtocol"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"other","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"an instance of a related type that implements "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/TrashStackProtocol"}]}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/glib\/trashstack\/init(_:)-2vikd"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/GLib\/documentation\/GLib\/TrashStack\/init(_:)-2vikd","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Reference intialiser for a related type that implements "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/TrashStackProtocol"},{"type":"text","text":" "},{"type":"codeVoice","code":"GTrashStack"},{"type":"text","text":" does not allow reference counting."}],"kind":"symbol","metadata":{"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"title":"init(_:)","roleHeading":"Initializer","role":"symbol","symbolKind":"init","externalID":"s:4GLib10TrashStackCyACxcAA0bC8ProtocolRzlufc","modules":[{"name":"GLib"}]},"hierarchy":{"paths":[["doc:\/\/GLib\/documentation\/GLib","doc:\/\/GLib\/documentation\/GLib\/TrashStack"]]},"references":{"doc://GLib/documentation/GLib/TrashStack":{"role":"symbol","title":"TrashStack","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"TrashStack"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"GTrashStack"},{"type":"text","text":" is an efficient way to keep a stack of unused allocated"},{"type":"text","text":" "},{"type":"text","text":"memory chunks. Each memory chunk is required to be large enough to hold"},{"type":"text","text":" "},{"type":"text","text":"a "},{"type":"codeVoice","code":"gpointer"},{"type":"text","text":". This allows the stack to be maintained without any space"},{"type":"text","text":" "},{"type":"text","text":"overhead, since the stack pointers can be stored inside the memory chunks."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/TrashStack","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TrashStack"}],"url":"\/documentation\/glib\/trashstack"},"doc://GLib/documentation/GLib":{"role":"collection","title":"GLib","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib","kind":"symbol","type":"topic","url":"\/documentation\/glib"},"doc://GLib/documentation/GLib/TrashStack/init(_:)-2vikd":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Reference intialiser for a related type that implements "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/TrashStackProtocol"},{"type":"text","text":" "},{"type":"codeVoice","code":"GTrashStack"},{"type":"text","text":" does not allow reference counting."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/TrashStack\/init(_:)-2vikd","kind":"symbol","type":"topic","url":"\/documentation\/glib\/trashstack\/init(_:)-2vikd"},"doc://GLib/documentation/GLib/TrashStackProtocol":{"role":"symbol","title":"TrashStackProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"TrashStackProtocol"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"GTrashStack"},{"type":"text","text":" is an efficient way to keep a stack of unused allocated"},{"type":"text","text":" "},{"type":"text","text":"memory chunks. Each memory chunk is required to be large enough to hold"},{"type":"text","text":" "},{"type":"text","text":"a "},{"type":"codeVoice","code":"gpointer"},{"type":"text","text":". This allows the stack to be maintained without any space"},{"type":"text","text":" "},{"type":"text","text":"overhead, since the stack pointers can be stored inside the memory chunks."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/TrashStackProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TrashStackProtocol"}],"url":"\/documentation\/glib\/trashstackprotocol"}}}