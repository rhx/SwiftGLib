{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"hashTableAdd"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"HashTableT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"hashTable"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"HashTableT"},{"kind":"text","text":", "},{"kind":"externalParam","text":"key"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"? = nil) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"HashTableT"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTableProtocol","preciseIdentifier":"s:4GLib17HashTableProtocolP","text":"HashTableProtocol"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"In particular, this means that if "},{"type":"codeVoice","code":"key"},{"type":"text","text":" already exists in the hash table, then"},{"type":"text","text":" "},{"type":"text","text":"the old copy of "},{"type":"codeVoice","code":"key"},{"type":"text","text":" in the hash table is freed and "},{"type":"codeVoice","code":"key"},{"type":"text","text":" replaces it in the"},{"type":"text","text":" "},{"type":"text","text":"table."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"When a hash table only ever contains keys that have themselves as the"},{"type":"text","text":" "},{"type":"text","text":"corresponding value it is able to be stored more efficiently.  See"},{"type":"text","text":" "},{"type":"text","text":"the discussion in the section description."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Starting from GLib 2.40, this function returns a boolean value to"},{"type":"text","text":" "},{"type":"text","text":"indicate whether the newly added value was already in the hash table"},{"type":"text","text":" "},{"type":"text","text":"or not."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/glib\/hashtableadd(hashtable:key:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/GLib\/documentation\/GLib\/hashTableAdd(hashTable:key:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"This is a convenience function for using a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTable"},{"type":"text","text":" as a set.  It"},{"type":"text","text":" "},{"type":"text","text":"is equivalent to calling "},{"type":"codeVoice","code":"g_hash_table_replace()"},{"type":"text","text":" with "},{"type":"codeVoice","code":"key"},{"type":"text","text":" as both the"},{"type":"text","text":" "},{"type":"text","text":"key and the value."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"hashTableAdd"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"HashTableT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"hashTable"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"HashTableT"},{"kind":"text","text":", "},{"kind":"externalParam","text":"key"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"title":"hashTableAdd(hashTable:key:)","roleHeading":"Function","role":"symbol","symbolKind":"func","externalID":"s:4GLib12hashTableAdd0bC03keySbx_SvSgtAA04HashC8ProtocolRzlF","modules":[{"name":"GLib"}]},"hierarchy":{"paths":[["doc:\/\/GLib\/documentation\/GLib"]]},"references":{"doc://GLib/documentation/GLib":{"role":"collection","title":"GLib","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib","kind":"symbol","type":"topic","url":"\/documentation\/glib"},"doc://GLib/documentation/GLib/hashTableAdd(hashTable:key:)":{"role":"symbol","title":"hashTableAdd(hashTable:key:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"hashTableAdd"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"HashTableT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"hashTable"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"HashTableT"},{"kind":"text","text":", "},{"kind":"externalParam","text":"key"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"This is a convenience function for using a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTable"},{"type":"text","text":" as a set.  It"},{"type":"text","text":" "},{"type":"text","text":"is equivalent to calling "},{"type":"codeVoice","code":"g_hash_table_replace()"},{"type":"text","text":" with "},{"type":"codeVoice","code":"key"},{"type":"text","text":" as both the"},{"type":"text","text":" "},{"type":"text","text":"key and the value."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/hashTableAdd(hashTable:key:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/hashtableadd(hashtable:key:)"},"doc://GLib/documentation/GLib/HashTable":{"role":"symbol","title":"HashTable","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HashTable"}],"abstract":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTable"},{"type":"text","text":" struct is an opaque data structure to represent a"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"..\/Protocols\/HashTableProtocol.html"},{"type":"text","text":". It should only be accessed via the"},{"type":"text","text":" "},{"type":"text","text":"following functions."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTable","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HashTable"}],"url":"\/documentation\/glib\/hashtable"},"../Protocols/HashTableProtocol.html":{"title":"Hash Table","titleInlineContent":[{"type":"text","text":"Hash Table"}],"type":"link","identifier":"..\/Protocols\/HashTableProtocol.html","url":"..\/Protocols\/HashTableProtocol.html"},"doc://GLib/documentation/GLib/HashTableProtocol":{"role":"symbol","title":"HashTableProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HashTableProtocol"}],"abstract":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTable"},{"type":"text","text":" struct is an opaque data structure to represent a"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"..\/Protocols\/HashTableProtocol.html"},{"type":"text","text":". It should only be accessed via the"},{"type":"text","text":" "},{"type":"text","text":"following functions."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTableProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HashTableProtocol"}],"url":"\/documentation\/glib\/hashtableprotocol"}}}