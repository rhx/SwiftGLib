{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"KeyFileRef"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"GKeyFile"},{"type":"text","text":" lets you parse, edit or create files containing groups of"},{"type":"text","text":" "},{"type":"text","text":"key-value pairs, which we call “key files” for lack of a better name."},{"type":"text","text":" "},{"type":"text","text":"Several freedesktop.org specifications use key files now, e.g the"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"http:\/\/freedesktop.org\/Standards\/desktop-entry-spec"},{"type":"text","text":" "},{"type":"text","text":"and the "},{"type":"reference","isActive":true,"identifier":"http:\/\/freedesktop.org\/Standards\/icon-theme-spec"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The syntax of key files is described in detail in the"},{"type":"text","text":" "},{"overridingTitleInlineContent":[{"type":"text","text":"Desktop Entry Specification"}],"isActive":true,"type":"reference","identifier":"http:\/\/freedesktop.org\/Standards\/desktop-entry-spec","overridingTitle":"Desktop Entry Specification"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"here is a quick summary: Key files consists of groups of key-value pairs, interspersed"},{"type":"text","text":" "},{"type":"text","text":"with comments."}]},{"type":"codeListing","syntax":"txt","code":["# this is just an example","# there can be comments before the first group","","[First Group]","","Name=Key File Example\\tthis value shows\\nescaping","","# localized strings are stored in multiple key-value pairs","Welcome=Hello","Welcome[de]=Hallo","Welcome[fr_FR]=Bonjour","Welcome[it]=Ciao","","[Another Group]","","Numbers=2;20;-200;0","","Booleans=true;false;true;true"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Lines beginning with a ‘#’ and blank lines are considered comments."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Groups are started by a header line containing the group name enclosed"},{"type":"text","text":" "},{"type":"text","text":"in ‘[’ and ‘]’, and ended implicitly by the start of the next group or"},{"type":"text","text":" "},{"type":"text","text":"the end of the file. Each key-value pair must be contained in a group."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Key-value pairs generally have the form "},{"type":"codeVoice","code":"key=value"},{"type":"text","text":", with the exception"},{"type":"text","text":" "},{"type":"text","text":"of localized strings, which have the form "},{"type":"codeVoice","code":"key[locale]=value"},{"type":"text","text":", with a"},{"type":"text","text":" "},{"type":"text","text":"locale identifier of the form "},{"type":"codeVoice","code":"lang_COUNTRY"},{"type":"text","text":"MODIFIER`` where "},{"type":"codeVoice","code":"COUNTRY"},{"type":"text","text":" "},{"type":"text","text":"and `MODIFIER` are optional. Space before and after the ‘=’ character"},{"type":"text","text":" "},{"type":"text","text":"are ignored. Newline, tab, carriage return and backslash characters in"},{"type":"text","text":" "},{"type":"text","text":"value are escaped as `\\n`, `\\t`, `\\r`, and `\\\\`, respectively. To preserve"},{"type":"text","text":" "},{"type":"text","text":"leading spaces in values, these can also be escaped as `\\s`."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Key files can store strings (possibly with localized variants), integers,"},{"type":"text","text":" "},{"type":"text","text":"booleans and lists of these. Lists are separated by a separator character,"},{"type":"text","text":" "},{"type":"text","text":"typically ‘;’ or ‘,’. To use the list separator character in a value in"},{"type":"text","text":" "},{"type":"text","text":"a list, it has to be escaped by prefixing it with a backslash."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This syntax is obviously inspired by the .ini files commonly met"},{"type":"text","text":" "},{"type":"text","text":"on Windows, but there are some important differences:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":".ini files use the ‘;’ character to begin comments,"},{"type":"text","text":" "},{"type":"text","text":"key files use the ‘#’ character."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Key files do not allow for ungrouped keys meaning only"},{"type":"text","text":" "},{"type":"text","text":"comments can precede the first group."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Key files are always encoded in UTF-8."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Key and Group names are case-sensitive. For example, a group called"},{"type":"text","text":" "},{"type":"text","text":"[GROUP] is a different from [group]."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":".ini files don’t have a strongly typed boolean entry type,"},{"type":"text","text":" "},{"type":"text","text":"they only have "},{"type":"codeVoice","code":"GetProfileInt()"},{"type":"text","text":". In key files, only"},{"type":"text","text":" "},{"type":"text","text":"true and false (in lower case) are allowed."}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Note that in contrast to the"},{"type":"text","text":" "},{"overridingTitleInlineContent":[{"type":"text","text":"Desktop Entry Specification"}],"isActive":true,"type":"reference","identifier":"http:\/\/freedesktop.org\/Standards\/desktop-entry-spec","overridingTitle":"Desktop Entry Specification"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"groups in key files may contain the same key multiple times; the last entry wins."},{"type":"text","text":" "},{"type":"text","text":"Key files may also contain multiple groups with the same name; they are merged"},{"type":"text","text":" "},{"type":"text","text":"together. Another difference is that keys and group names in key files are not"},{"type":"text","text":" "},{"type":"text","text":"restricted to ASCII characters."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Here is an example of loading a key file and reading a value:"}]},{"type":"codeListing","syntax":"c","code":["`g_autoptr(GError)` error = NULL;","`g_autoptr(GKeyFile)` key_file = g_key_file_new ();","","if (!g_key_file_load_from_file (key_file, \"key-file.ini\", flags, &error))","  {","    if (!g_error_matches (error, G_FILE_ERROR, G_FILE_ERROR_NOENT))","      g_warning (\"Error loading key file: `s`\", error->message);","    return;","  }","","g_autofree gchar *val = g_key_file_get_string (key_file, \"Group Name\", \"SomeKey\", &error);","if (val == NULL &&","    !g_error_matches (error, G_KEY_FILE_ERROR, G_KEY_FILE_ERROR_KEY_NOT_FOUND))","  {","    g_warning (\"Error finding key in key file: `s`\", error->message);","    return;","  }","else if (val == NULL)","  {","    \/\/ Fall back to a default value.","    val = g_strdup (\"default-value\");","  }"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Here is an example of creating and saving a key file:"}]},{"type":"codeListing","syntax":"c","code":["`g_autoptr(GKeyFile)` key_file = g_key_file_new ();","const gchar *val = …;","`g_autoptr(GError)` error = NULL;","","g_key_file_set_string (key_file, \"Group Name\", \"SomeKey\", val);","","\/\/ Save as a file.","if (!g_key_file_save_to_file (key_file, \"key-file.ini\", &error))","  {","    g_warning (\"Error saving key file: `s`\", error->message);","    return;","  }","","\/\/ Or store to a GBytes for use elsewhere.","gsize data_len;","g_autofree guint8 *data = (guint8 *) g_key_file_to_data (key_file, &data_len, &error);","if (data == NULL)","  {","    g_warning (\"Error saving key file: `s`\", error->message);","    return;","  }","`g_autoptr(GBytes)` bytes = g_bytes_new_take (g_steal_pointer (&data), data_len);"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/KeyFileRef"},{"type":"text","text":" type acts as a lightweight Swift reference to an underlying "},{"type":"codeVoice","code":"GKeyFile"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"It exposes methods that can operate on this data type through "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/KeyFileProtocol"},{"type":"text","text":" conformance."},{"type":"text","text":" "},{"type":"text","text":"Use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/KeyFileRef"},{"type":"text","text":" only as an "},{"type":"codeVoice","code":"unowned"},{"type":"text","text":" reference to an existing "},{"type":"codeVoice","code":"GKeyFile"},{"type":"text","text":" instance."}]},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/KeyFile"},{"type":"text","text":" (instead of "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/KeyFileRef"},{"type":"text","text":") if you want to use Automatic Reference Counting for memory management of the underlying "},{"type":"codeVoice","code":"GKeyFile"},{"type":"text","text":" instance."}]}],"type":"aside","name":"Note"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/glib\/keyfileref"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/GLib\/documentation\/GLib\/KeyFileProtocol","doc:\/\/GLib\/documentation\/GLib\/PointerWrapper"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/GLib\/documentation\/GLib\/KeyFileRef","interfaceLanguage":"swift"},"abstract":[{"type":"codeVoice","code":"GKeyFile"},{"type":"text","text":" parses .ini-like config files."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"KeyFileRef"}],"title":"KeyFileRef","roleHeading":"Structure","role":"symbol","symbolKind":"struct","externalID":"s:4GLib10KeyFileRefV","modules":[{"name":"GLib"}],"navigatorTitle":[{"kind":"identifier","text":"KeyFileRef"}]},"hierarchy":{"paths":[["doc:\/\/GLib\/documentation\/GLib"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/GLib\/documentation\/GLib\/KeyFileRef\/init()","doc:\/\/GLib\/documentation\/GLib\/KeyFileRef\/init(_:)-5cs5o","doc:\/\/GLib\/documentation\/GLib\/KeyFileRef\/init(_:)-766bl","doc:\/\/GLib\/documentation\/GLib\/KeyFileRef\/init(_:)-776w8","doc:\/\/GLib\/documentation\/GLib\/KeyFileRef\/init(_:)-7qdi8","doc:\/\/GLib\/documentation\/GLib\/KeyFileRef\/init(_:)-935ll","doc:\/\/GLib\/documentation\/GLib\/KeyFileRef\/init(cPointer:)","doc:\/\/GLib\/documentation\/GLib\/KeyFileRef\/init(constPointer:)","doc:\/\/GLib\/documentation\/GLib\/KeyFileRef\/init(gconstpointer:)","doc:\/\/GLib\/documentation\/GLib\/KeyFileRef\/init(gpointer:)","doc:\/\/GLib\/documentation\/GLib\/KeyFileRef\/init(mutating:)","doc:\/\/GLib\/documentation\/GLib\/KeyFileRef\/init(opaquePointer:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/GLib\/documentation\/GLib\/KeyFileRef\/ptr"]},{"title":"Default Implementations","identifiers":["doc:\/\/GLib\/documentation\/GLib\/KeyFileRef\/KeyFileProtocol-Implementations","doc:\/\/GLib\/documentation\/GLib\/KeyFileRef\/PointerWrapper-Implementations"],"generated":true}],"references":{"doc://GLib/documentation/GLib/KeyFileRef/init(cPointer:)":{"role":"symbol","title":"init(cPointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"cPointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Unsafe typed initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/KeyFileProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/KeyFileRef\/init(cPointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/keyfileref\/init(cpointer:)"},"http://freedesktop.org/Standards/icon-theme-spec":{"title":"Icon Theme Specification","titleInlineContent":[{"type":"text","text":"Icon Theme Specification"}],"type":"link","identifier":"http:\/\/freedesktop.org\/Standards\/icon-theme-spec","url":"http:\/\/freedesktop.org\/Standards\/icon-theme-spec"},"doc://GLib/documentation/GLib/KeyFileProtocol":{"role":"symbol","title":"KeyFileProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"KeyFileProtocol"}],"abstract":[{"type":"codeVoice","code":"GKeyFile"},{"type":"text","text":" parses .ini-like config files."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/KeyFileProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"KeyFileProtocol"}],"url":"\/documentation\/glib\/keyfileprotocol"},"doc://GLib/documentation/GLib/KeyFileRef/ptr":{"role":"symbol","title":"ptr","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"ptr"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutableRawPointer","preciseIdentifier":"s:Sv"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Untyped pointer to the underlying "},{"type":"codeVoice","code":"GKeyFile"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"For type-safe access, use the generated, typed pointer "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/KeyFileProtocol\/key_file_ptr-4bsh2"},{"type":"text","text":" property instead."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/KeyFileRef\/ptr","kind":"symbol","type":"topic","url":"\/documentation\/glib\/keyfileref\/ptr"},"doc://GLib/documentation/GLib/KeyFileRef/init(mutating:)":{"role":"symbol","title":"init(mutating:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"mutating"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeRawPointer","preciseIdentifier":"s:SV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/KeyFileProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/KeyFileRef\/init(mutating:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/keyfileref\/init(mutating:)"},"doc://GLib/documentation/GLib/KeyFileRef/init(_:)-935ll":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GKeyFile"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/KeyFileRef\/init(_:)-935ll","kind":"symbol","type":"topic","url":"\/documentation\/glib\/keyfileref\/init(_:)-935ll"},"doc://GLib/documentation/GLib/KeyFileRef/KeyFileProtocol-Implementations":{"role":"collectionGroup","title":"KeyFileProtocol Implementations","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib\/KeyFileRef\/KeyFileProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/glib\/keyfileref\/keyfileprotocol-implementations"},"doc://GLib/documentation/GLib/KeyFileRef/init(gconstpointer:)":{"role":"symbol","title":"init(gconstpointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"externalParam","text":"gconstpointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gconstpointer","preciseIdentifier":"c:@T@gconstpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional, non-mutable "},{"type":"codeVoice","code":"gconstpointer"}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/KeyFileRef\/init(gconstpointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/keyfileref\/init(gconstpointer:)"},"doc://GLib/documentation/GLib/KeyFileProtocol/key_file_ptr-4bsh2":{"defaultImplementations":1,"role":"symbol","title":"key_file_ptr","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"key_file_ptr"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GKeyFile"},{"kind":"text","text":">!"}],"abstract":[{"type":"text","text":"Typed pointer to the underlying "},{"type":"codeVoice","code":"GKeyFile"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/KeyFileProtocol\/key_file_ptr-4bsh2","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/glib\/keyfileprotocol\/key_file_ptr-4bsh2"},"doc://GLib/documentation/GLib/PointerWrapper":{"role":"symbol","title":"PointerWrapper","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"PointerWrapper"}],"abstract":[{"type":"text","text":"Protocol for GLib types that wrap pointers."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/PointerWrapper","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PointerWrapper"}],"url":"\/documentation\/glib\/pointerwrapper"},"doc://GLib/documentation/GLib/KeyFileRef/init(gpointer:)":{"role":"symbol","title":"init(gpointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"externalParam","text":"gpointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional "},{"type":"codeVoice","code":"gpointer"}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/KeyFileRef\/init(gpointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/keyfileref\/init(gpointer:)"},"doc://GLib/documentation/GLib/KeyFileRef/init(_:)-5cs5o":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GKeyFile"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from a constant pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/KeyFileRef\/init(_:)-5cs5o","kind":"symbol","type":"topic","url":"\/documentation\/glib\/keyfileref\/init(_:)-5cs5o"},"doc://GLib/documentation/GLib/KeyFileRef/init(_:)-766bl":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Reference intialiser for a related type that implements "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/KeyFileProtocol"}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/KeyFileRef\/init(_:)-766bl","kind":"symbol","type":"topic","url":"\/documentation\/glib\/keyfileref\/init(_:)-766bl"},"doc://GLib/documentation/GLib/KeyFile":{"role":"symbol","title":"KeyFile","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"KeyFile"}],"abstract":[{"type":"codeVoice","code":"GKeyFile"},{"type":"text","text":" parses .ini-like config files."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/KeyFile","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"KeyFile"}],"url":"\/documentation\/glib\/keyfile"},"doc://GLib/documentation/GLib/KeyFileRef/init(opaquePointer:)":{"role":"symbol","title":"init(opaquePointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"opaquePointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"OpaquePointer","preciseIdentifier":"s:s13OpaquePointerV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/KeyFileProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/KeyFileRef\/init(opaquePointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/keyfileref\/init(opaquepointer:)"},"http://freedesktop.org/Standards/desktop-entry-spec":{"title":"Desktop Entry Specification","titleInlineContent":[{"type":"text","text":"Desktop Entry Specification"}],"type":"link","identifier":"http:\/\/freedesktop.org\/Standards\/desktop-entry-spec","url":"http:\/\/freedesktop.org\/Standards\/desktop-entry-spec"},"doc://GLib/documentation/GLib/KeyFileRef/init(_:)-776w8":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GKeyFile"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional, non-mutable pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/KeyFileRef\/init(_:)-776w8","kind":"symbol","type":"topic","url":"\/documentation\/glib\/keyfileref\/init(_:)-776w8"},"doc://GLib/documentation/GLib/KeyFileRef/PointerWrapper-Implementations":{"role":"collectionGroup","title":"PointerWrapper Implementations","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib\/KeyFileRef\/PointerWrapper-Implementations","kind":"article","type":"topic","url":"\/documentation\/glib\/keyfileref\/pointerwrapper-implementations"},"doc://GLib/documentation/GLib/KeyFileRef/init(constPointer:)":{"role":"symbol","title":"init(constPointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"constPointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Unsafe typed initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/KeyFileProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/KeyFileRef\/init(constPointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/keyfileref\/init(constpointer:)"},"doc://GLib/documentation/GLib/KeyFileRef/init()":{"role":"symbol","title":"init()","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Creates a new empty "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/KeyFile"},{"type":"text","text":" object. Use"},{"type":"text","text":" "},{"type":"codeVoice","code":"g_key_file_load_from_file()"},{"type":"text","text":", "},{"type":"codeVoice","code":"g_key_file_load_from_data()"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"codeVoice","code":"g_key_file_load_from_dirs()"},{"type":"text","text":" or "},{"type":"codeVoice","code":"g_key_file_load_from_data_dirs()"},{"type":"text","text":" to"},{"type":"text","text":" "},{"type":"text","text":"read an existing key file."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/KeyFileRef\/init()","kind":"symbol","type":"topic","url":"\/documentation\/glib\/keyfileref\/init()"},"doc://GLib/documentation/GLib/KeyFileRef":{"role":"symbol","title":"KeyFileRef","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"KeyFileRef"}],"abstract":[{"type":"codeVoice","code":"GKeyFile"},{"type":"text","text":" parses .ini-like config files."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/KeyFileRef","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"KeyFileRef"}],"url":"\/documentation\/glib\/keyfileref"},"doc://GLib/documentation/GLib":{"role":"collection","title":"GLib","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib","kind":"symbol","type":"topic","url":"\/documentation\/glib"},"doc://GLib/documentation/GLib/KeyFileRef/init(_:)-7qdi8":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GKeyFile"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/KeyFileRef\/init(_:)-7qdi8","kind":"symbol","type":"topic","url":"\/documentation\/glib\/keyfileref\/init(_:)-7qdi8"}}}