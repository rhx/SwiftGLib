{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"logWriterDefaultWouldDrop"},{"kind":"text","text":"("},{"kind":"externalParam","text":"logLevel"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/GLib\/documentation\/GLib\/LogLevelFlags","preciseIdentifier":"s:4GLib13LogLevelFlagsV","text":"LogLevelFlags"},{"kind":"text","text":", "},{"kind":"externalParam","text":"logDomain"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"CChar","preciseIdentifier":"s:s5CChara"},{"kind":"text","text":">? = nil) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"As with [func"},{"type":"codeVoice","code":"GLib.log_default_handler"},{"type":"text","text":"], this function drops debug and informational"},{"type":"text","text":" "},{"type":"text","text":"messages unless their log domain (or "},{"type":"codeVoice","code":"all"},{"type":"text","text":") is listed in the space-separated"},{"type":"text","text":" "},{"type":"codeVoice","code":"G_MESSAGES_DEBUG"},{"type":"text","text":" environment variable, or by [func"},{"type":"codeVoice","code":"GLib.log_writer_default_set_debug_domains"},{"type":"text","text":"]."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This can be used when implementing log writers with the same filtering"},{"type":"text","text":" "},{"type":"text","text":"behaviour as the default, but a different destination or output format:"}]},{"type":"codeListing","syntax":"c","code":["if (g_log_writer_default_would_drop (log_level, log_domain))","  return G_LOG_WRITER_HANDLED;","]|","","or to skip an expensive computation if it is only needed for a debugging","message, and `G_MESSAGES_DEBUG` is not set:","","```c","if (!g_log_writer_default_would_drop (G_LOG_LEVEL_DEBUG, G_LOG_DOMAIN))","  {","    g_autofree gchar *result = expensive_computation (my_object);","","    g_debug (\"my_object result: `s`\", result);","  }"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/glib\/logwriterdefaultwoulddrop(loglevel:logdomain:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/GLib\/documentation\/GLib\/logWriterDefaultWouldDrop(logLevel:logDomain:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Check whether [func"},{"type":"codeVoice","code":"GLib.log_writer_default"},{"type":"text","text":"] and [func"},{"type":"codeVoice","code":"GLib.log_default_handler"},{"type":"text","text":"] would"},{"type":"text","text":" "},{"type":"text","text":"ignore a message with the given domain and level."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"logWriterDefaultWouldDrop"},{"kind":"text","text":"("},{"kind":"externalParam","text":"logLevel"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"LogLevelFlags","preciseIdentifier":"s:4GLib13LogLevelFlagsV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"logDomain"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"CChar","preciseIdentifier":"s:s5CChara"},{"kind":"text","text":">?) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"title":"logWriterDefaultWouldDrop(logLevel:logDomain:)","roleHeading":"Function","role":"symbol","symbolKind":"func","externalID":"s:4GLib25logWriterDefaultWouldDrop0B5Level0B6DomainSbAA03LogG5FlagsV_SPys4Int8VGSgtF","modules":[{"name":"GLib"}]},"hierarchy":{"paths":[["doc:\/\/GLib\/documentation\/GLib"]]},"references":{"doc://GLib/documentation/GLib/LogLevelFlags":{"role":"symbol","title":"LogLevelFlags","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"LogLevelFlags"}],"abstract":[{"type":"text","text":"Flags specifying the level of log messages."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/LogLevelFlags","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"LogLevelFlags"}],"url":"\/documentation\/glib\/loglevelflags"},"doc://GLib/documentation/GLib/logWriterDefaultWouldDrop(logLevel:logDomain:)":{"role":"symbol","title":"logWriterDefaultWouldDrop(logLevel:logDomain:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"logWriterDefaultWouldDrop"},{"kind":"text","text":"("},{"kind":"externalParam","text":"logLevel"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"LogLevelFlags","preciseIdentifier":"s:4GLib13LogLevelFlagsV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"logDomain"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"CChar","preciseIdentifier":"s:s5CChara"},{"kind":"text","text":">?) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Check whether [func"},{"type":"codeVoice","code":"GLib.log_writer_default"},{"type":"text","text":"] and [func"},{"type":"codeVoice","code":"GLib.log_default_handler"},{"type":"text","text":"] would"},{"type":"text","text":" "},{"type":"text","text":"ignore a message with the given domain and level."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/logWriterDefaultWouldDrop(logLevel:logDomain:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/logwriterdefaultwoulddrop(loglevel:logdomain:)"},"doc://GLib/documentation/GLib":{"role":"collection","title":"GLib","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib","kind":"symbol","type":"topic","url":"\/documentation\/glib"}}}