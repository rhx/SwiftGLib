{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"SourceFuncs"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"For idle sources, the prepare and check functions always return "},{"type":"codeVoice","code":"true"},{"type":"text","text":" "},{"type":"text","text":"to indicate that the source is always ready to be processed. The prepare"},{"type":"text","text":" "},{"type":"text","text":"function also returns a timeout value of 0 to ensure that the "},{"type":"codeVoice","code":"poll()"},{"type":"text","text":" call"},{"type":"text","text":" "},{"type":"text","text":"doesn’t block (since that would be time wasted which could have been spent"},{"type":"text","text":" "},{"type":"text","text":"running the idle function)."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For timeout sources, the prepare and check functions both return "},{"type":"codeVoice","code":"true"},{"type":"text","text":" "},{"type":"text","text":"if the timeout interval has expired. The prepare function also returns"},{"type":"text","text":" "},{"type":"text","text":"a timeout value to ensure that the "},{"type":"codeVoice","code":"poll()"},{"type":"text","text":" call doesn’t block too long"},{"type":"text","text":" "},{"type":"text","text":"and miss the next timeout."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For file descriptor sources, the prepare function typically returns "},{"type":"codeVoice","code":"false"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"since it must wait until "},{"type":"codeVoice","code":"poll()"},{"type":"text","text":" has been called before it knows whether"},{"type":"text","text":" "},{"type":"text","text":"any events need to be processed. It sets the returned timeout to -1 to"},{"type":"text","text":" "},{"type":"text","text":"indicate that it doesn’t mind how long the "},{"type":"codeVoice","code":"poll()"},{"type":"text","text":" call blocks. In the"},{"type":"text","text":" "},{"type":"text","text":"check function, it tests the results of the "},{"type":"codeVoice","code":"poll()"},{"type":"text","text":" call to see if the"},{"type":"text","text":" "},{"type":"text","text":"required condition has been met, and returns "},{"type":"codeVoice","code":"true"},{"type":"text","text":" if so."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceFuncs"},{"type":"text","text":" type acts as an owner of an underlying "},{"type":"codeVoice","code":"GSourceFuncs"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"It provides the methods that can operate on this data type through "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceFuncsProtocol"},{"type":"text","text":" conformance."},{"type":"text","text":" "},{"type":"text","text":"Use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceFuncs"},{"type":"text","text":" as a strong reference or owner of a "},{"type":"codeVoice","code":"GSourceFuncs"},{"type":"text","text":" instance."}]},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceFuncsRef"},{"type":"text","text":" (instead of "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceFuncs"},{"type":"text","text":") for a lightweight Swift reference to an underlying "},{"type":"codeVoice","code":"GSourceFuncs"},{"type":"text","text":" instance."}]}],"type":"aside","name":"Note"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/glib\/sourcefuncs"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/GLib\/documentation\/GLib\/PointerWrapper","doc:\/\/GLib\/documentation\/GLib\/SourceFuncsProtocol"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/GLib\/documentation\/GLib\/SourceFuncs","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"GSourceFuncs"},{"type":"text","text":" struct contains a table of"},{"type":"text","text":" "},{"type":"text","text":"functions used to handle event sources in a generic manner."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"SourceFuncs"}],"title":"SourceFuncs","roleHeading":"Class","role":"symbol","symbolKind":"class","externalID":"s:4GLib11SourceFuncsC","modules":[{"name":"GLib"}],"navigatorTitle":[{"kind":"identifier","text":"SourceFuncs"}]},"hierarchy":{"paths":[["doc:\/\/GLib\/documentation\/GLib"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/GLib\/documentation\/GLib\/SourceFuncs\/init(_:)-17j5x","doc:\/\/GLib\/documentation\/GLib\/SourceFuncs\/init(_:)-5njpw","doc:\/\/GLib\/documentation\/GLib\/SourceFuncs\/init(_:)-5qwlr","doc:\/\/GLib\/documentation\/GLib\/SourceFuncs\/init(_:)-7tzdq","doc:\/\/GLib\/documentation\/GLib\/SourceFuncs\/init(_:)-q1vp","doc:\/\/GLib\/documentation\/GLib\/SourceFuncs\/init(cPointer:)","doc:\/\/GLib\/documentation\/GLib\/SourceFuncs\/init(gconstpointer:)","doc:\/\/GLib\/documentation\/GLib\/SourceFuncs\/init(gpointer:)","doc:\/\/GLib\/documentation\/GLib\/SourceFuncs\/init(opaquePointer:)","doc:\/\/GLib\/documentation\/GLib\/SourceFuncs\/init(raw:)-320me","doc:\/\/GLib\/documentation\/GLib\/SourceFuncs\/init(raw:)-ho2f","doc:\/\/GLib\/documentation\/GLib\/SourceFuncs\/init(retaining:)","doc:\/\/GLib\/documentation\/GLib\/SourceFuncs\/init(retainingCPointer:)","doc:\/\/GLib\/documentation\/GLib\/SourceFuncs\/init(retainingOpaquePointer:)","doc:\/\/GLib\/documentation\/GLib\/SourceFuncs\/init(retainingRaw:)-3r0wf","doc:\/\/GLib\/documentation\/GLib\/SourceFuncs\/init(retainingRaw:)-m0x8"]},{"title":"Instance Properties","identifiers":["doc:\/\/GLib\/documentation\/GLib\/SourceFuncs\/ptr"]},{"title":"Default Implementations","identifiers":["doc:\/\/GLib\/documentation\/GLib\/SourceFuncs\/SourceFuncsProtocol-Implementations"],"generated":true}],"references":{"doc://GLib/documentation/GLib/SourceFuncs/ptr":{"role":"symbol","title":"ptr","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"ptr"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutableRawPointer","preciseIdentifier":"s:Sv"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Untyped pointer to the underlying "},{"type":"codeVoice","code":"GSourceFuncs"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"For type-safe access, use the generated, typed pointer "},{"type":"codeVoice","code":"SourceFuncsProtocol\/_ptr"},{"type":"text","text":" property instead."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceFuncs\/ptr","kind":"symbol","type":"topic","url":"\/documentation\/glib\/sourcefuncs\/ptr"},"doc://GLib/documentation/GLib/SourceFuncs/init(retainingRaw:)-3r0wf":{"role":"symbol","title":"init(retainingRaw:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"retainingRaw"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeRawPointer","preciseIdentifier":"s:SV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped, retaining initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceFuncsProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceFuncs\/init(retainingRaw:)-3r0wf","kind":"symbol","type":"topic","url":"\/documentation\/glib\/sourcefuncs\/init(retainingraw:)-3r0wf"},"doc://GLib/documentation/GLib/SourceFuncs/init(retaining:)":{"role":"symbol","title":"init(retaining:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"retaining"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GSourceFuncs"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type."},{"type":"text","text":" "},{"type":"codeVoice","code":"GSourceFuncs"},{"type":"text","text":" does not allow reference counting, so despite the name no actual retaining will occur."},{"type":"text","text":" "},{"type":"text","text":"i.e., ownership is transferred to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceFuncs"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceFuncs\/init(retaining:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/sourcefuncs\/init(retaining:)"},"doc://GLib/documentation/GLib/SourceFuncs/init(_:)-q1vp":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Reference intialiser for a related type that implements "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceFuncsProtocol"},{"type":"text","text":" "},{"type":"codeVoice","code":"GSourceFuncs"},{"type":"text","text":" does not allow reference counting."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceFuncs\/init(_:)-q1vp","kind":"symbol","type":"topic","url":"\/documentation\/glib\/sourcefuncs\/init(_:)-q1vp"},"doc://GLib/documentation/GLib/SourceFuncs/init(opaquePointer:)":{"role":"symbol","title":"init(opaquePointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"opaquePointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"OpaquePointer","preciseIdentifier":"s:s13OpaquePointerV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceFuncsProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceFuncs\/init(opaquePointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/sourcefuncs\/init(opaquepointer:)"},"doc://GLib/documentation/GLib/SourceFuncs/init(raw:)-320me":{"role":"symbol","title":"init(raw:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"raw"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeRawPointer","preciseIdentifier":"s:SV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceFuncsProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceFuncs\/init(raw:)-320me","kind":"symbol","type":"topic","url":"\/documentation\/glib\/sourcefuncs\/init(raw:)-320me"},"doc://GLib/documentation/GLib/SourceFuncs/init(_:)-5qwlr":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GSourceFuncs"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type."},{"type":"text","text":" "},{"type":"text","text":"This creates an instance without performing an unbalanced retain"},{"type":"text","text":" "},{"type":"text","text":"i.e., ownership is transferred to the "},{"type":"codeVoice","code":"SourceFuncs"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceFuncs\/init(_:)-5qwlr","kind":"symbol","type":"topic","url":"\/documentation\/glib\/sourcefuncs\/init(_:)-5qwlr"},"doc://GLib/documentation/GLib/SourceFuncs/SourceFuncsProtocol-Implementations":{"role":"collectionGroup","title":"SourceFuncsProtocol Implementations","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceFuncs\/SourceFuncsProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/glib\/sourcefuncs\/sourcefuncsprotocol-implementations"},"doc://GLib/documentation/GLib/SourceFuncs/init(raw:)-ho2f":{"role":"symbol","title":"init(raw:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"raw"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutableRawPointer","preciseIdentifier":"s:Sv"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceFuncsProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceFuncs\/init(raw:)-ho2f","kind":"symbol","type":"topic","url":"\/documentation\/glib\/sourcefuncs\/init(raw:)-ho2f"},"doc://GLib/documentation/GLib/SourceFuncs/init(gconstpointer:)":{"role":"symbol","title":"init(gconstpointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"externalParam","text":"gconstpointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gconstpointer","preciseIdentifier":"c:@T@gconstpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Optional initialiser from a non-mutating "},{"type":"codeVoice","code":"gconstpointer"},{"type":"text","text":" to"},{"type":"text","text":" "},{"type":"text","text":"the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type."},{"type":"text","text":" "},{"type":"text","text":"This creates an instance without performing an unbalanced retain"},{"type":"text","text":" "},{"type":"text","text":"i.e., ownership is transferred to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceFuncs"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceFuncs\/init(gconstpointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/sourcefuncs\/init(gconstpointer:)"},"doc://GLib/documentation/GLib/SourceFuncs/init(_:)-7tzdq":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GSourceFuncs"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Optional initialiser from a constant pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type."},{"type":"text","text":" "},{"type":"text","text":"This creates an instance without performing an unbalanced retain"},{"type":"text","text":" "},{"type":"text","text":"i.e., ownership is transferred to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceFuncs"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceFuncs\/init(_:)-7tzdq","kind":"symbol","type":"topic","url":"\/documentation\/glib\/sourcefuncs\/init(_:)-7tzdq"},"doc://GLib/documentation/GLib/SourceFuncs":{"role":"symbol","title":"SourceFuncs","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"SourceFuncs"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"GSourceFuncs"},{"type":"text","text":" struct contains a table of"},{"type":"text","text":" "},{"type":"text","text":"functions used to handle event sources in a generic manner."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceFuncs","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SourceFuncs"}],"url":"\/documentation\/glib\/sourcefuncs"},"doc://GLib/documentation/GLib/SourceFuncs/init(cPointer:)":{"role":"symbol","title":"init(cPointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"cPointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Unsafe typed initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceFuncsProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceFuncs\/init(cPointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/sourcefuncs\/init(cpointer:)"},"doc://GLib/documentation/GLib/SourceFuncs/init(retainingOpaquePointer:)":{"role":"symbol","title":"init(retainingOpaquePointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"retainingOpaquePointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"OpaquePointer","preciseIdentifier":"s:s13OpaquePointerV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped, retaining initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceFuncsProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceFuncs\/init(retainingOpaquePointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/sourcefuncs\/init(retainingopaquepointer:)"},"doc://GLib/documentation/GLib/SourceFuncs/init(gpointer:)":{"role":"symbol","title":"init(gpointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"externalParam","text":"gpointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Optional initialiser from a non-mutating "},{"type":"codeVoice","code":"gpointer"},{"type":"text","text":" to"},{"type":"text","text":" "},{"type":"text","text":"the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type."},{"type":"text","text":" "},{"type":"text","text":"This creates an instance without performing an unbalanced retain"},{"type":"text","text":" "},{"type":"text","text":"i.e., ownership is transferred to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceFuncs"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceFuncs\/init(gpointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/sourcefuncs\/init(gpointer:)"},"doc://GLib/documentation/GLib/SourceFuncsRef":{"role":"symbol","title":"SourceFuncsRef","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SourceFuncsRef"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"GSourceFuncs"},{"type":"text","text":" struct contains a table of"},{"type":"text","text":" "},{"type":"text","text":"functions used to handle event sources in a generic manner."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceFuncsRef","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SourceFuncsRef"}],"url":"\/documentation\/glib\/sourcefuncsref"},"doc://GLib/documentation/GLib/SourceFuncsProtocol":{"role":"symbol","title":"SourceFuncsProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SourceFuncsProtocol"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"GSourceFuncs"},{"type":"text","text":" struct contains a table of"},{"type":"text","text":" "},{"type":"text","text":"functions used to handle event sources in a generic manner."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceFuncsProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SourceFuncsProtocol"}],"url":"\/documentation\/glib\/sourcefuncsprotocol"},"doc://GLib/documentation/GLib/PointerWrapper":{"role":"symbol","title":"PointerWrapper","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"PointerWrapper"}],"abstract":[{"type":"text","text":"Protocol for GLib types that wrap pointers."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/PointerWrapper","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PointerWrapper"}],"url":"\/documentation\/glib\/pointerwrapper"},"doc://GLib/documentation/GLib/SourceFuncs/init(_:)-17j5x":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GSourceFuncs"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Optional initialiser from the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type."},{"type":"text","text":" "},{"type":"text","text":"This creates an instance without performing an unbalanced retain"},{"type":"text","text":" "},{"type":"text","text":"i.e., ownership is transferred to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceFuncs"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceFuncs\/init(_:)-17j5x","kind":"symbol","type":"topic","url":"\/documentation\/glib\/sourcefuncs\/init(_:)-17j5x"},"doc://GLib/documentation/GLib/SourceFuncs/init(_:)-5njpw":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GSourceFuncs"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from a constant pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type."},{"type":"text","text":" "},{"type":"text","text":"This creates an instance without performing an unbalanced retain"},{"type":"text","text":" "},{"type":"text","text":"i.e., ownership is transferred to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceFuncs"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceFuncs\/init(_:)-5njpw","kind":"symbol","type":"topic","url":"\/documentation\/glib\/sourcefuncs\/init(_:)-5njpw"},"doc://GLib/documentation/GLib":{"role":"collection","title":"GLib","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib","kind":"symbol","type":"topic","url":"\/documentation\/glib"},"doc://GLib/documentation/GLib/SourceFuncs/init(retainingCPointer:)":{"role":"symbol","title":"init(retainingCPointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"retainingCPointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Unsafe typed, retaining initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceFuncsProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceFuncs\/init(retainingCPointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/sourcefuncs\/init(retainingcpointer:)"},"doc://GLib/documentation/GLib/SourceFuncs/init(retainingRaw:)-m0x8":{"role":"symbol","title":"init(retainingRaw:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"retainingRaw"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutableRawPointer","preciseIdentifier":"s:Sv"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped, retaining initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceFuncsProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceFuncs\/init(retainingRaw:)-m0x8","kind":"symbol","type":"topic","url":"\/documentation\/glib\/sourcefuncs\/init(retainingraw:)-m0x8"}}}