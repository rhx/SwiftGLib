{"variants":[{"paths":["\/documentation\/glib\/mutexref\/mutexprotocol-implementations"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"identifier":{"url":"doc:\/\/GLib\/documentation\/GLib\/MutexRef\/MutexProtocol-Implementations","interfaceLanguage":"swift"},"topicSections":[{"title":"Instance Methods","identifiers":["doc:\/\/GLib\/documentation\/GLib\/MutexRef\/clear()","doc:\/\/GLib\/documentation\/GLib\/MutexRef\/free()","doc:\/\/GLib\/documentation\/GLib\/MutexRef\/init_()","doc:\/\/GLib\/documentation\/GLib\/MutexRef\/lock()","doc:\/\/GLib\/documentation\/GLib\/MutexRef\/trylock()","doc:\/\/GLib\/documentation\/GLib\/MutexRef\/unlock()"],"generated":true}],"kind":"article","metadata":{"modules":[{"name":"GLib"}],"role":"collectionGroup","title":"MutexProtocol Implementations"},"hierarchy":{"paths":[["doc:\/\/GLib\/documentation\/GLib","doc:\/\/GLib\/documentation\/GLib\/MutexRef"]]},"references":{"doc://GLib/documentation/GLib":{"role":"collection","title":"GLib","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib","kind":"symbol","type":"topic","url":"\/documentation\/glib"},"doc://GLib/documentation/GLib/Mutex":{"role":"symbol","title":"Mutex","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Mutex"}],"abstract":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Mutex"},{"type":"text","text":" struct is an opaque data structure to represent a mutex"},{"type":"text","text":" "},{"type":"text","text":"(mutual exclusion). It can be used to protect data against shared"},{"type":"text","text":" "},{"type":"text","text":"access."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/Mutex","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Mutex"}],"url":"\/documentation\/glib\/mutex"},"doc://GLib/documentation/GLib/MutexRef":{"role":"symbol","title":"MutexRef","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MutexRef"}],"abstract":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Mutex"},{"type":"text","text":" struct is an opaque data structure to represent a mutex"},{"type":"text","text":" "},{"type":"text","text":"(mutual exclusion). It can be used to protect data against shared"},{"type":"text","text":" "},{"type":"text","text":"access."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/MutexRef","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MutexRef"}],"url":"\/documentation\/glib\/mutexref"},"doc://GLib/documentation/GLib/MutexRef/trylock()":{"role":"symbol","title":"trylock()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"trylock"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Tries to lock "},{"type":"codeVoice","code":"mutex"},{"type":"text","text":". If "},{"type":"codeVoice","code":"mutex"},{"type":"text","text":" is already locked by another thread,"},{"type":"text","text":" "},{"type":"text","text":"it immediately returns "},{"type":"codeVoice","code":"false"},{"type":"text","text":". Otherwise it locks "},{"type":"codeVoice","code":"mutex"},{"type":"text","text":" and returns"},{"type":"text","text":" "},{"type":"codeVoice","code":"true"},{"type":"text","text":"."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/MutexRef\/trylock()","kind":"symbol","type":"topic","url":"\/documentation\/glib\/mutexref\/trylock()"},"doc://GLib/documentation/GLib/MutexRef/lock()":{"role":"symbol","title":"lock()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"lock"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Locks "},{"type":"codeVoice","code":"mutex"},{"type":"text","text":". If "},{"type":"codeVoice","code":"mutex"},{"type":"text","text":" is already locked by another thread, the"},{"type":"text","text":" "},{"type":"text","text":"current thread will block until "},{"type":"codeVoice","code":"mutex"},{"type":"text","text":" is unlocked by the other"},{"type":"text","text":" "},{"type":"text","text":"thread."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/MutexRef\/lock()","kind":"symbol","type":"topic","url":"\/documentation\/glib\/mutexref\/lock()"},"doc://GLib/documentation/GLib/MutexRef/unlock()":{"role":"symbol","title":"unlock()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unlock"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Unlocks "},{"type":"codeVoice","code":"mutex"},{"type":"text","text":". If another thread is blocked in a "},{"type":"codeVoice","code":"g_mutex_lock()"},{"type":"text","text":" "},{"type":"text","text":"call for "},{"type":"codeVoice","code":"mutex"},{"type":"text","text":", it will become unblocked and can lock "},{"type":"codeVoice","code":"mutex"},{"type":"text","text":" itself."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/MutexRef\/unlock()","kind":"symbol","type":"topic","url":"\/documentation\/glib\/mutexref\/unlock()"},"doc://GLib/documentation/GLib/MutexRef/init_()":{"role":"symbol","title":"init_()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"init_"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Initializes a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Mutex"},{"type":"text","text":" so that it can be used."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/MutexRef\/init_()","kind":"symbol","type":"topic","url":"\/documentation\/glib\/mutexref\/init_()"},"doc://GLib/documentation/GLib/MutexRef/clear()":{"role":"symbol","title":"clear()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"clear"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Frees the resources allocated to a mutex with "},{"type":"codeVoice","code":"g_mutex_init()"},{"type":"text","text":"."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/MutexRef\/clear()","kind":"symbol","type":"topic","url":"\/documentation\/glib\/mutexref\/clear()"},"doc://GLib/documentation/GLib/MutexRef/free()":{"role":"symbol","title":"free()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"free"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Destroys a "},{"type":"codeVoice","code":"mutex"},{"type":"text","text":" that has been created with "},{"type":"codeVoice","code":"g_mutex_new()"},{"type":"text","text":"."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/MutexRef\/free()","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/glib\/mutexref\/free()"}}}