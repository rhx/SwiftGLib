{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MainContextProtocol"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/GLib\/documentation\/GLib\/PointerWrapper","preciseIdentifier":"s:4GLib14PointerWrapperP","text":"PointerWrapper"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/MainContextProtocol"},{"type":"text","text":" protocol exposes the methods and properties of an underlying "},{"type":"codeVoice","code":"GMainContext"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"The default implementation of these can be found in the protocol extension below."},{"type":"text","text":" "},{"type":"text","text":"For a concrete class that implements these methods and properties, see "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/MainContext"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Alternatively, use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/MainContextRef"},{"type":"text","text":" as a lighweight, "},{"type":"codeVoice","code":"unowned"},{"type":"text","text":" reference if you already have an instance you just want to use."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/glib\/maincontextprotocol"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/GLib\/documentation\/GLib\/PointerWrapper"],"kind":"relationships","title":"Inherits From","type":"inheritsFrom"},{"identifiers":["doc:\/\/GLib\/documentation\/GLib\/MainContext","doc:\/\/GLib\/documentation\/GLib\/MainContextRef"],"kind":"relationships","title":"Conforming Types","type":"conformingTypes"}],"identifier":{"url":"doc:\/\/GLib\/documentation\/GLib\/MainContextProtocol","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"GMainContext"},{"type":"text","text":" struct is an opaque data"},{"type":"text","text":" "},{"type":"text","text":"type representing a set of sources to be handled in a main loop."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MainContextProtocol"}],"title":"MainContextProtocol","roleHeading":"Protocol","role":"symbol","symbolKind":"protocol","externalID":"s:4GLib19MainContextProtocolP","modules":[{"name":"GLib"}],"navigatorTitle":[{"kind":"identifier","text":"MainContextProtocol"}]},"hierarchy":{"paths":[["doc:\/\/GLib\/documentation\/GLib"]]},"topicSections":[{"title":"Instance Properties","identifiers":["doc:\/\/GLib\/documentation\/GLib\/MainContextProtocol\/isOwner","doc:\/\/GLib\/documentation\/GLib\/MainContextProtocol\/main_context_ptr-4zgge","doc:\/\/GLib\/documentation\/GLib\/MainContextProtocol\/pollFunc"]},{"title":"Instance Methods","identifiers":["doc:\/\/GLib\/documentation\/GLib\/MainContextProtocol\/acquire()","doc:\/\/GLib\/documentation\/GLib\/MainContextProtocol\/addPoll(fd:priority:)","doc:\/\/GLib\/documentation\/GLib\/MainContextProtocol\/check(maxPriority:fds:nFds:)","doc:\/\/GLib\/documentation\/GLib\/MainContextProtocol\/dispatch()","doc:\/\/GLib\/documentation\/GLib\/MainContextProtocol\/findSourceBy(userData:)","doc:\/\/GLib\/documentation\/GLib\/MainContextProtocol\/findSourceByFuncsUserData(funcs:userData:)","doc:\/\/GLib\/documentation\/GLib\/MainContextProtocol\/findSourceByID(sourceID:)","doc:\/\/GLib\/documentation\/GLib\/MainContextProtocol\/getPollFunc()","doc:\/\/GLib\/documentation\/GLib\/MainContextProtocol\/invoke(function:data:)","doc:\/\/GLib\/documentation\/GLib\/MainContextProtocol\/invokeFull(priority:function:data:notify:)","doc:\/\/GLib\/documentation\/GLib\/MainContextProtocol\/iteration(mayBlock:)","doc:\/\/GLib\/documentation\/GLib\/MainContextProtocol\/pending()","doc:\/\/GLib\/documentation\/GLib\/MainContextProtocol\/popThreadDefault()","doc:\/\/GLib\/documentation\/GLib\/MainContextProtocol\/prepare(priority:)","doc:\/\/GLib\/documentation\/GLib\/MainContextProtocol\/pushThreadDefault()","doc:\/\/GLib\/documentation\/GLib\/MainContextProtocol\/query(maxPriority:timeout:fds:nFds:)","doc:\/\/GLib\/documentation\/GLib\/MainContextProtocol\/ref()","doc:\/\/GLib\/documentation\/GLib\/MainContextProtocol\/release()","doc:\/\/GLib\/documentation\/GLib\/MainContextProtocol\/removePoll(fd:)","doc:\/\/GLib\/documentation\/GLib\/MainContextProtocol\/setPollFunc(func:)","doc:\/\/GLib\/documentation\/GLib\/MainContextProtocol\/unref()","doc:\/\/GLib\/documentation\/GLib\/MainContextProtocol\/wait(cond:mutex:)","doc:\/\/GLib\/documentation\/GLib\/MainContextProtocol\/wakeup()"]}],"references":{"doc://GLib/documentation/GLib/MainContext":{"role":"symbol","title":"MainContext","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MainContext"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"GMainContext"},{"type":"text","text":" struct is an opaque data"},{"type":"text","text":" "},{"type":"text","text":"type representing a set of sources to be handled in a main loop."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/MainContext","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MainContext"}],"url":"\/documentation\/glib\/maincontext"},"doc://GLib/documentation/GLib/MainContextProtocol/setPollFunc(func:)":{"role":"symbol","title":"setPollFunc(func:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"setPollFunc"},{"kind":"text","text":"("},{"kind":"externalParam","text":"func"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GPollFunc","preciseIdentifier":"c:@T@GPollFunc"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Sets the function to use to handle polling of file descriptors. It"},{"type":"text","text":" "},{"type":"text","text":"will be used instead of the "},{"type":"codeVoice","code":"poll()"},{"type":"text","text":" system call"},{"type":"text","text":" "},{"type":"text","text":"(or GLib’s replacement function, which is used where"},{"type":"text","text":" "},{"type":"codeVoice","code":"poll()"},{"type":"text","text":" isn’t available)."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/MainContextProtocol\/setPollFunc(func:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/maincontextprotocol\/setpollfunc(func:)"},"doc://GLib/documentation/GLib/MainContextProtocol/check(maxPriority:fds:nFds:)":{"role":"symbol","title":"check(maxPriority:fds:nFds:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"check"},{"kind":"text","text":"("},{"kind":"externalParam","text":"maxPriority"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"fds"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GPollFD"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"nFds"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Passes the results of polling back to the main loop. You should be"},{"type":"text","text":" "},{"type":"text","text":"careful to pass "},{"type":"codeVoice","code":"fds"},{"type":"text","text":" and its length "},{"type":"codeVoice","code":"nFds"},{"type":"text","text":" as received from"},{"type":"text","text":" "},{"type":"text","text":"[method"},{"type":"codeVoice","code":"GLib.MainContext.query"},{"type":"text","text":"], as this functions relies on assumptions"},{"type":"text","text":" "},{"type":"text","text":"on how "},{"type":"codeVoice","code":"fds"},{"type":"text","text":" is filled."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/MainContextProtocol\/check(maxPriority:fds:nFds:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/maincontextprotocol\/check(maxpriority:fds:nfds:)"},"doc://GLib/documentation/GLib/MainContextProtocol/acquire()":{"role":"symbol","title":"acquire()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"acquire"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Tries to become the owner of the specified context."},{"type":"text","text":" "},{"type":"text","text":"If some other thread is the owner of the context,"},{"type":"text","text":" "},{"type":"text","text":"returns "},{"type":"codeVoice","code":"false"},{"type":"text","text":" immediately. Ownership is properly"},{"type":"text","text":" "},{"type":"text","text":"recursive: the owner can require ownership again"},{"type":"text","text":" "},{"type":"text","text":"and will release ownership when [method"},{"type":"codeVoice","code":"GLib.MainContext.release"},{"type":"text","text":"]"},{"type":"text","text":" "},{"type":"text","text":"is called as many times as [method"},{"type":"codeVoice","code":"GLib.MainContext.acquire"},{"type":"text","text":"]."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/MainContextProtocol\/acquire()","kind":"symbol","type":"topic","url":"\/documentation\/glib\/maincontextprotocol\/acquire()"},"doc://GLib/documentation/GLib/MainContextProtocol/pollFunc":{"role":"symbol","title":"pollFunc","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"pollFunc"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GPollFunc","preciseIdentifier":"c:@T@GPollFunc"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Gets the poll function set by [method"},{"type":"codeVoice","code":"GLib.MainContext.set_poll_func"},{"type":"text","text":"]."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/MainContextProtocol\/pollFunc","kind":"symbol","type":"topic","url":"\/documentation\/glib\/maincontextprotocol\/pollfunc"},"doc://GLib/documentation/GLib/MainContextProtocol/isOwner":{"role":"symbol","title":"isOwner","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"isOwner"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Determines whether this thread holds the (recursive)"},{"type":"text","text":" "},{"type":"text","text":"ownership of this [struct"},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/MainContext"},{"type":"text","text":"]. This is useful to"},{"type":"text","text":" "},{"type":"text","text":"know before waiting on another thread that may be"},{"type":"text","text":" "},{"type":"text","text":"blocking to get ownership of "},{"type":"codeVoice","code":"context"},{"type":"text","text":"."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/MainContextProtocol\/isOwner","kind":"symbol","type":"topic","url":"\/documentation\/glib\/maincontextprotocol\/isowner"},"doc://GLib/documentation/GLib/MainContextProtocol/pending()":{"role":"symbol","title":"pending()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"pending"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Checks if any sources have pending events for the given context."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/MainContextProtocol\/pending()","kind":"symbol","type":"topic","url":"\/documentation\/glib\/maincontextprotocol\/pending()"},"doc://GLib/documentation/GLib/MainContextProtocol/findSourceBy(userData:)":{"role":"symbol","title":"findSourceBy(userData:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"findSourceBy"},{"kind":"text","text":"("},{"kind":"externalParam","text":"userData"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"SourceRef","preciseIdentifier":"s:4GLib9SourceRefV"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Finds a source with the given user data for the callback.  If"},{"type":"text","text":" "},{"type":"text","text":"multiple sources exist with the same user data, the first"},{"type":"text","text":" "},{"type":"text","text":"one found will be returned."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/MainContextProtocol\/findSourceBy(userData:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/maincontextprotocol\/findsourceby(userdata:)"},"doc://GLib/documentation/GLib/MainContextProtocol/prepare(priority:)":{"role":"symbol","title":"prepare(priority:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"prepare"},{"kind":"text","text":"("},{"kind":"externalParam","text":"priority"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gint","preciseIdentifier":"c:@T@gint"},{"kind":"text","text":">!) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Prepares to poll sources within a main loop. The resulting information"},{"type":"text","text":" "},{"type":"text","text":"for polling is determined by calling [method"},{"type":"codeVoice","code":"GLib.MainContext.query"},{"type":"text","text":"]."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/MainContextProtocol\/prepare(priority:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/maincontextprotocol\/prepare(priority:)"},"doc://GLib/documentation/GLib/PointerWrapper":{"role":"symbol","title":"PointerWrapper","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"PointerWrapper"}],"abstract":[{"type":"text","text":"Protocol for GLib types that wrap pointers."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/PointerWrapper","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PointerWrapper"}],"url":"\/documentation\/glib\/pointerwrapper"},"doc://GLib/documentation/GLib/MainContextProtocol/removePoll(fd:)":{"role":"symbol","title":"removePoll(fd:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"removePoll"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"PollFDT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"fd"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"PollFDT"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Removes file descriptor from the set of file descriptors to be"},{"type":"text","text":" "},{"type":"text","text":"polled for a particular context."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/MainContextProtocol\/removePoll(fd:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/maincontextprotocol\/removepoll(fd:)"},"doc://GLib/documentation/GLib/MainContextProtocol/unref()":{"role":"symbol","title":"unref()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unref"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Decreases the reference count on a [struct"},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/MainContext"},{"type":"text","text":"] object by one."},{"type":"text","text":" "},{"type":"text","text":"If"},{"type":"text","text":" "},{"type":"text","text":"the result is zero, free the context and free all associated memory."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/MainContextProtocol\/unref()","kind":"symbol","type":"topic","url":"\/documentation\/glib\/maincontextprotocol\/unref()"},"doc://GLib/documentation/GLib/MainContextProtocol/findSourceByID(sourceID:)":{"role":"symbol","title":"findSourceByID(sourceID:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"findSourceByID"},{"kind":"text","text":"("},{"kind":"externalParam","text":"sourceID"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"SourceRef","preciseIdentifier":"s:4GLib9SourceRefV"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Finds a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Source"},{"type":"text","text":" given a pair of context and ID."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/MainContextProtocol\/findSourceByID(sourceID:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/maincontextprotocol\/findsourcebyid(sourceid:)"},"doc://GLib/documentation/GLib/MainContextProtocol/iteration(mayBlock:)":{"role":"symbol","title":"iteration(mayBlock:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"iteration"},{"kind":"text","text":"("},{"kind":"externalParam","text":"mayBlock"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Runs a single iteration for the given main loop. This involves"},{"type":"text","text":" "},{"type":"text","text":"checking to see if any event sources are ready to be processed,"},{"type":"text","text":" "},{"type":"text","text":"then if no events sources are ready and "},{"type":"codeVoice","code":"mayBlock"},{"type":"text","text":" is "},{"type":"codeVoice","code":"true"},{"type":"text","text":", waiting"},{"type":"text","text":" "},{"type":"text","text":"for a source to become ready, then dispatching the highest priority"},{"type":"text","text":" "},{"type":"text","text":"events sources that are ready. Otherwise, if "},{"type":"codeVoice","code":"mayBlock"},{"type":"text","text":" is "},{"type":"codeVoice","code":"false"},{"type":"text","text":" "},{"type":"text","text":"sources are not waited to become ready, only those highest priority"},{"type":"text","text":" "},{"type":"text","text":"events sources will be dispatched (if any), that are ready at this"},{"type":"text","text":" "},{"type":"text","text":"given moment without further waiting."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/MainContextProtocol\/iteration(mayBlock:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/maincontextprotocol\/iteration(mayblock:)"},"doc://GLib/documentation/GLib/MainContextRef":{"role":"symbol","title":"MainContextRef","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MainContextRef"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"GMainContext"},{"type":"text","text":" struct is an opaque data"},{"type":"text","text":" "},{"type":"text","text":"type representing a set of sources to be handled in a main loop."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/MainContextRef","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MainContextRef"}],"url":"\/documentation\/glib\/maincontextref"},"doc://GLib/documentation/GLib/MainContextProtocol/invoke(function:data:)":{"role":"symbol","title":"invoke(function:data:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"invoke"},{"kind":"text","text":"("},{"kind":"externalParam","text":"function"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GSourceFunc","preciseIdentifier":"c:@T@GSourceFunc"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"data"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Invokes a function in such a way that "},{"type":"codeVoice","code":"context"},{"type":"text","text":" is owned during the"},{"type":"text","text":" "},{"type":"text","text":"invocation of "},{"type":"codeVoice","code":"function"},{"type":"text","text":"."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/MainContextProtocol\/invoke(function:data:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/maincontextprotocol\/invoke(function:data:)"},"doc://GLib/documentation/GLib/MainContextProtocol/ref()":{"role":"symbol","title":"ref()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"ref"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"MainContextRef","preciseIdentifier":"s:4GLib14MainContextRefV"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Increases the reference count on a [struct"},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/MainContext"},{"type":"text","text":"] object by one."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/MainContextProtocol\/ref()","kind":"symbol","type":"topic","url":"\/documentation\/glib\/maincontextprotocol\/ref()"},"doc://GLib/documentation/GLib/MainContextProtocol/popThreadDefault()":{"role":"symbol","title":"popThreadDefault()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"popThreadDefault"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Pops "},{"type":"codeVoice","code":"context"},{"type":"text","text":" off the thread-default context stack (verifying that"},{"type":"text","text":" "},{"type":"text","text":"it was on the top of the stack)."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/MainContextProtocol\/popThreadDefault()","kind":"symbol","type":"topic","url":"\/documentation\/glib\/maincontextprotocol\/popthreaddefault()"},"doc://GLib/documentation/GLib/MainContextProtocol/query(maxPriority:timeout:fds:nFds:)":{"role":"symbol","title":"query(maxPriority:timeout:fds:nFds:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"query"},{"kind":"text","text":"("},{"kind":"externalParam","text":"maxPriority"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"timeout"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gint","preciseIdentifier":"c:@T@gint"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"fds"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GPollFD"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"nFds"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"abstract":[{"type":"text","text":"Determines information necessary to poll this main loop. You should"},{"type":"text","text":" "},{"type":"text","text":"be careful to pass the resulting "},{"type":"codeVoice","code":"fds"},{"type":"text","text":" array and its length "},{"type":"codeVoice","code":"nFds"},{"type":"text","text":" "},{"type":"text","text":"as is when calling [method"},{"type":"codeVoice","code":"GLib.MainContext.check"},{"type":"text","text":"], as this function relies"},{"type":"text","text":" "},{"type":"text","text":"on assumptions made when the array is filled."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/MainContextProtocol\/query(maxPriority:timeout:fds:nFds:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/maincontextprotocol\/query(maxpriority:timeout:fds:nfds:)"},"doc://GLib/documentation/GLib/MainContextProtocol/getPollFunc()":{"role":"symbol","title":"getPollFunc()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getPollFunc"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"GPollFunc","preciseIdentifier":"c:@T@GPollFunc"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Gets the poll function set by [method"},{"type":"codeVoice","code":"GLib.MainContext.set_poll_func"},{"type":"text","text":"]."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/MainContextProtocol\/getPollFunc()","kind":"symbol","type":"topic","url":"\/documentation\/glib\/maincontextprotocol\/getpollfunc()"},"doc://GLib/documentation/GLib/MainContextProtocol":{"role":"symbol","title":"MainContextProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MainContextProtocol"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"GMainContext"},{"type":"text","text":" struct is an opaque data"},{"type":"text","text":" "},{"type":"text","text":"type representing a set of sources to be handled in a main loop."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/MainContextProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MainContextProtocol"}],"url":"\/documentation\/glib\/maincontextprotocol"},"#gio":{"title":"gio","titleInlineContent":[{"type":"text","text":"gio"}],"type":"link","identifier":"#gio","url":"#gio"},"doc://GLib/documentation/GLib/MainContextProtocol/wakeup()":{"role":"symbol","title":"wakeup()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"wakeup"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"If "},{"type":"codeVoice","code":"context"},{"type":"text","text":" is currently blocking in [method"},{"type":"codeVoice","code":"GLib.MainContext.iteration"},{"type":"text","text":"]"},{"type":"text","text":" "},{"type":"text","text":"waiting for a source to become ready, cause it to stop blocking"},{"type":"text","text":" "},{"type":"text","text":"and return.  Otherwise, cause the next invocation of"},{"type":"text","text":" "},{"type":"text","text":"[method"},{"type":"codeVoice","code":"GLib.MainContext.iteration"},{"type":"text","text":"] to return without blocking."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/MainContextProtocol\/wakeup()","kind":"symbol","type":"topic","url":"\/documentation\/glib\/maincontextprotocol\/wakeup()"},"doc://GLib/documentation/GLib/MainContextProtocol/dispatch()":{"role":"symbol","title":"dispatch()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"dispatch"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Dispatches all pending sources."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/MainContextProtocol\/dispatch()","kind":"symbol","type":"topic","url":"\/documentation\/glib\/maincontextprotocol\/dispatch()"},"doc://GLib/documentation/GLib/MainContextProtocol/main_context_ptr-4zgge":{"defaultImplementations":1,"role":"symbol","title":"main_context_ptr","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"main_context_ptr"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GMainContext"},{"kind":"text","text":">!"}],"abstract":[{"type":"text","text":"Typed pointer to the underlying "},{"type":"codeVoice","code":"GMainContext"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/MainContextProtocol\/main_context_ptr-4zgge","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/glib\/maincontextprotocol\/main_context_ptr-4zgge"},"doc://GLib/documentation/GLib":{"role":"collection","title":"GLib","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib","kind":"symbol","type":"topic","url":"\/documentation\/glib"},"doc://GLib/documentation/GLib/MainContextProtocol/release()":{"role":"symbol","title":"release()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"release"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Releases ownership of a context previously acquired by this thread"},{"type":"text","text":" "},{"type":"text","text":"with [method"},{"type":"codeVoice","code":"GLib.MainContext.acquire"},{"type":"text","text":"]. If the context was acquired multiple"},{"type":"text","text":" "},{"type":"text","text":"times, the ownership will be released only when [method"},{"type":"codeVoice","code":"GLib.MainContext.release"},{"type":"text","text":"]"},{"type":"text","text":" "},{"type":"text","text":"is called as many times as it was acquired."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/MainContextProtocol\/release()","kind":"symbol","type":"topic","url":"\/documentation\/glib\/maincontextprotocol\/release()"},"doc://GLib/documentation/GLib/Source":{"role":"symbol","title":"Source","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Source"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"GSource"},{"type":"text","text":" struct is an opaque data type"},{"type":"text","text":" "},{"type":"text","text":"representing an event source."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/Source","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Source"}],"url":"\/documentation\/glib\/source"},"doc://GLib/documentation/GLib/MainContextProtocol/pushThreadDefault()":{"role":"symbol","title":"pushThreadDefault()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"pushThreadDefault"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Acquires "},{"type":"codeVoice","code":"context"},{"type":"text","text":" and sets it as the thread-default context for the"},{"type":"text","text":" "},{"type":"text","text":"current thread. This will cause certain asynchronous operations"},{"type":"text","text":" "},{"type":"text","text":"(such as most "},{"type":"reference","isActive":true,"identifier":"#gio"},{"type":"text","text":"-based I\/O) which are"},{"type":"text","text":" "},{"type":"text","text":"started in this thread to run under "},{"type":"codeVoice","code":"context"},{"type":"text","text":" and deliver their"},{"type":"text","text":" "},{"type":"text","text":"results to its main loop, rather than running under the global"},{"type":"text","text":" "},{"type":"text","text":"default main context in the main thread. Note that calling this function"},{"type":"text","text":" "},{"type":"text","text":"changes the context returned by [func"},{"type":"codeVoice","code":"GLib.MainContext.get_thread_default"},{"type":"text","text":"],"},{"type":"text","text":" "},{"type":"text","text":"not the one returned by [func"},{"type":"codeVoice","code":"GLib.MainContext.default"},{"type":"text","text":"], so it does not"},{"type":"text","text":" "},{"type":"text","text":"affect the context used by functions like [func"},{"type":"codeVoice","code":"GLib.idle_add"},{"type":"text","text":"]."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/MainContextProtocol\/pushThreadDefault()","kind":"symbol","type":"topic","url":"\/documentation\/glib\/maincontextprotocol\/pushthreaddefault()"},"doc://GLib/documentation/GLib/MainContextProtocol/findSourceByFuncsUserData(funcs:userData:)":{"role":"symbol","title":"findSourceByFuncsUserData(funcs:userData:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"findSourceByFuncsUserData"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"SourceFuncsT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"funcs"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SourceFuncsT"},{"kind":"text","text":", "},{"kind":"externalParam","text":"userData"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"SourceRef","preciseIdentifier":"s:4GLib9SourceRefV"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Finds a source with the given source functions and user data.  If"},{"type":"text","text":" "},{"type":"text","text":"multiple sources exist with the same source function and user data,"},{"type":"text","text":" "},{"type":"text","text":"the first one found will be returned."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/MainContextProtocol\/findSourceByFuncsUserData(funcs:userData:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/maincontextprotocol\/findsourcebyfuncsuserdata(funcs:userdata:)"},"doc://GLib/documentation/GLib/MainContextProtocol/invokeFull(priority:function:data:notify:)":{"role":"symbol","title":"invokeFull(priority:function:data:notify:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"invokeFull"},{"kind":"text","text":"("},{"kind":"externalParam","text":"priority"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"function"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GSourceFunc","preciseIdentifier":"c:@T@GSourceFunc"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"data"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"notify"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GDestroyNotify","preciseIdentifier":"c:@T@GDestroyNotify"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Invokes a function in such a way that "},{"type":"codeVoice","code":"context"},{"type":"text","text":" is owned during the"},{"type":"text","text":" "},{"type":"text","text":"invocation of "},{"type":"codeVoice","code":"function"},{"type":"text","text":"."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/MainContextProtocol\/invokeFull(priority:function:data:notify:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/maincontextprotocol\/invokefull(priority:function:data:notify:)"},"doc://GLib/documentation/GLib/MainContextProtocol/wait(cond:mutex:)":{"role":"symbol","title":"wait(cond:mutex:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"wait"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"CondT"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"MutexT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"cond"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CondT"},{"kind":"text","text":", "},{"kind":"externalParam","text":"mutex"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"MutexT"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Tries to become the owner of the specified context,"},{"type":"text","text":" "},{"type":"text","text":"as with [method"},{"type":"codeVoice","code":"GLib.MainContext.acquire"},{"type":"text","text":"]. But if another thread"},{"type":"text","text":" "},{"type":"text","text":"is the owner, atomically drop "},{"type":"codeVoice","code":"mutex"},{"type":"text","text":" and wait on "},{"type":"codeVoice","code":"cond"},{"type":"text","text":" until"},{"type":"text","text":" "},{"type":"text","text":"that owner releases ownership or until "},{"type":"codeVoice","code":"cond"},{"type":"text","text":" is signaled, then"},{"type":"text","text":" "},{"type":"text","text":"try again (once) to become the owner."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/MainContextProtocol\/wait(cond:mutex:)","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/glib\/maincontextprotocol\/wait(cond:mutex:)"},"doc://GLib/documentation/GLib/MainContextProtocol/addPoll(fd:priority:)":{"role":"symbol","title":"addPoll(fd:priority:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"addPoll"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"PollFDT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"fd"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"PollFDT"},{"kind":"text","text":", "},{"kind":"externalParam","text":"priority"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Adds a file descriptor to the set of file descriptors polled for"},{"type":"text","text":" "},{"type":"text","text":"this context. This will very seldom be used directly. Instead"},{"type":"text","text":" "},{"type":"text","text":"a typical event source will use "},{"type":"codeVoice","code":"g_source_add_unix_fd"},{"type":"text","text":" instead."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/MainContextProtocol\/addPoll(fd:priority:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/maincontextprotocol\/addpoll(fd:priority:)"}}}