{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"VariantTypeT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"type"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"VariantTypeT"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"text"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"limit"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">? = nil, "},{"kind":"externalParam","text":"endptr"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">?>? = nil) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/GLib\/documentation\/GLib\/VariantRef","preciseIdentifier":"s:4GLib10VariantRefV","text":"VariantRef"},{"kind":"text","text":"! "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"VariantTypeT"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/GLib\/documentation\/GLib\/VariantTypeProtocol","preciseIdentifier":"s:4GLib19VariantTypeProtocolP","text":"VariantTypeProtocol"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A single "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Variant"},{"type":"text","text":" is parsed from the content of "},{"type":"codeVoice","code":"text"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The format is described "},{"type":"reference","isActive":true,"identifier":"gvariant-text-format.html"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The memory at "},{"type":"codeVoice","code":"limit"},{"type":"text","text":" will never be accessed and the parser behaves as"},{"type":"text","text":" "},{"type":"text","text":"if the character at "},{"type":"codeVoice","code":"limit"},{"type":"text","text":" is the nul terminator.  This has the"},{"type":"text","text":" "},{"type":"text","text":"effect of bounding "},{"type":"codeVoice","code":"text"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If "},{"type":"codeVoice","code":"endptr"},{"type":"text","text":" is non-"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" then "},{"type":"codeVoice","code":"text"},{"type":"text","text":" is permitted to contain data"},{"type":"text","text":" "},{"type":"text","text":"following the value that this function parses and "},{"type":"codeVoice","code":"endptr"},{"type":"text","text":" will be"},{"type":"text","text":" "},{"type":"text","text":"updated to point to the first character past the end of the text"},{"type":"text","text":" "},{"type":"text","text":"parsed by this function.  If "},{"type":"codeVoice","code":"endptr"},{"type":"text","text":" is "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" and there is extra data"},{"type":"text","text":" "},{"type":"text","text":"then an error is returned."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If "},{"type":"codeVoice","code":"type"},{"type":"text","text":" is non-"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" then the value will be parsed to have that"},{"type":"text","text":" "},{"type":"text","text":"type.  This may result in additional parse errors (in the case that"},{"type":"text","text":" "},{"type":"text","text":"the parsed value doesn’t fit the type) but may also result in fewer"},{"type":"text","text":" "},{"type":"text","text":"errors (in the case that the type would have been ambiguous, such as"},{"type":"text","text":" "},{"type":"text","text":"with empty arrays)."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In the event that the parsing is successful, the resulting "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Variant"},{"type":"text","text":" "},{"type":"text","text":"is returned. It is never floating, and must be freed with"},{"type":"text","text":" "},{"type":"text","text":"[method"},{"type":"codeVoice","code":"GLib.Variant.unref"},{"type":"text","text":"]."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In case of any error, "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" will be returned.  If "},{"type":"codeVoice","code":"error"},{"type":"text","text":" is non-"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" "},{"type":"text","text":"then it will be set to reflect the error that occurred."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Officially, the language understood by the parser is “any string"},{"type":"text","text":" "},{"type":"text","text":"produced by [method"},{"type":"codeVoice","code":"GLib.Variant.print"},{"type":"text","text":"]”. This explicitly includes"},{"type":"text","text":" "},{"type":"codeVoice","code":"g_variant_print()"},{"type":"text","text":"’s annotated types like "},{"type":"codeVoice","code":"int64 -1000"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"There may be implementation specific restrictions on deeply nested values,"},{"type":"text","text":" "},{"type":"text","text":"which would result in a "},{"type":"codeVoice","code":"recursion"},{"type":"text","text":" error. "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Variant"},{"type":"text","text":" is"},{"type":"text","text":" "},{"type":"text","text":"guaranteed to handle nesting up to at least 64 levels."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/glib\/variantref\/parse(type:text:limit:endptr:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/GLib\/documentation\/GLib\/VariantRef\/parse(type:text:limit:endptr:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Parses a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Variant"},{"type":"text","text":" from a text representation."}],"kind":"symbol","metadata":{"role":"symbol","title":"parse(type:text:limit:endptr:)","roleHeading":"Type Method","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"VariantTypeT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"type"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"VariantTypeT"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"text"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"limit"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">?, "},{"kind":"externalParam","text":"endptr"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">?>?) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"VariantRef","preciseIdentifier":"s:4GLib10VariantRefV"},{"kind":"text","text":"!"}],"symbolKind":"method","externalID":"s:4GLib10VariantRefV5parse4type4text5limit6endptrACSgxSg_SPys4Int8VGSgANSpyANGSgtKAA0B12TypeProtocolRzlFZ","extendedModule":"GLib","modules":[{"name":"GLib"}]},"hierarchy":{"paths":[["doc:\/\/GLib\/documentation\/GLib","doc:\/\/GLib\/documentation\/GLib\/VariantRef"]]},"references":{"doc://GLib/documentation/GLib":{"role":"collection","title":"GLib","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib","kind":"symbol","type":"topic","url":"\/documentation\/glib"},"doc://GLib/documentation/GLib/Variant":{"role":"symbol","title":"Variant","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Variant"}],"abstract":[{"type":"codeVoice","code":"GVariant"},{"type":"text","text":" is a variant datatype; it can contain one or more values"},{"type":"text","text":" "},{"type":"text","text":"along with information about the type of the values."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/Variant","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Variant"}],"url":"\/documentation\/glib\/variant"},"doc://GLib/documentation/GLib/VariantTypeProtocol":{"role":"symbol","title":"VariantTypeProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"VariantTypeProtocol"}],"abstract":[{"type":"text","text":"A type in the [type"},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Variant"},{"type":"text","text":"] type system."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/VariantTypeProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"VariantTypeProtocol"}],"url":"\/documentation\/glib\/varianttypeprotocol"},"doc://GLib/documentation/GLib/VariantRef/parse(type:text:limit:endptr:)":{"role":"symbol","title":"parse(type:text:limit:endptr:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"VariantTypeT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"type"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"VariantTypeT"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"text"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"limit"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">?, "},{"kind":"externalParam","text":"endptr"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">?>?) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"VariantRef","preciseIdentifier":"s:4GLib10VariantRefV"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Parses a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Variant"},{"type":"text","text":" from a text representation."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/VariantRef\/parse(type:text:limit:endptr:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/variantref\/parse(type:text:limit:endptr:)"},"doc://GLib/documentation/GLib/VariantRef":{"role":"symbol","title":"VariantRef","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"VariantRef"}],"abstract":[{"type":"codeVoice","code":"GVariant"},{"type":"text","text":" is a variant datatype; it can contain one or more values"},{"type":"text","text":" "},{"type":"text","text":"along with information about the type of the values."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/VariantRef","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"VariantRef"}],"url":"\/documentation\/glib\/variantref"},"gvariant-text-format.html":{"title":"here","titleInlineContent":[{"type":"text","text":"here"}],"type":"link","identifier":"gvariant-text-format.html","url":"gvariant-text-format.html"}}}