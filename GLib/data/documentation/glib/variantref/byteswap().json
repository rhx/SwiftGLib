{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"byteswap"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/GLib\/documentation\/GLib\/VariantRef","preciseIdentifier":"s:4GLib10VariantRefV","text":"VariantRef"},{"kind":"text","text":"!"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This function is an identity mapping on any value that does not"},{"type":"text","text":" "},{"type":"text","text":"contain multi-byte numeric data.  That include strings, booleans,"},{"type":"text","text":" "},{"type":"text","text":"bytes and containers containing only these things (recursively)."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"While this function can safely handle untrusted, non-normal data, it is"},{"type":"text","text":" "},{"type":"text","text":"recommended to check whether the input is in normal form beforehand, using"},{"type":"text","text":" "},{"type":"codeVoice","code":"g_variant_is_normal_form()"},{"type":"text","text":", and to reject non-normal inputs if your"},{"type":"text","text":" "},{"type":"text","text":"application can be strict about what inputs it rejects."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The returned value is always in normal form and is marked as trusted."},{"type":"text","text":" "},{"type":"text","text":"A full, not floating, reference is returned."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/glib\/variantref\/byteswap()"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/GLib\/documentation\/GLib\/VariantRef\/byteswap()","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Performs a byteswapping operation on the contents of "},{"type":"codeVoice","code":"value"},{"type":"text","text":".  The"},{"type":"text","text":" "},{"type":"text","text":"result is that all multi-byte numeric data contained in "},{"type":"codeVoice","code":"value"},{"type":"text","text":" is"},{"type":"text","text":" "},{"type":"text","text":"byteswapped.  That includes 16, 32, and 64bit signed and unsigned"},{"type":"text","text":" "},{"type":"text","text":"integers as well as file handles and double precision floating point"},{"type":"text","text":" "},{"type":"text","text":"values."}],"kind":"symbol","metadata":{"role":"symbol","title":"byteswap()","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"byteswap"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"VariantRef","preciseIdentifier":"s:4GLib10VariantRefV"},{"kind":"text","text":"!"}],"symbolKind":"method","externalID":"s:4GLib15VariantProtocolPAAE8byteswapAA0B3RefVSgyF::SYNTHESIZED::s:4GLib10VariantRefV","extendedModule":"GLib","modules":[{"name":"GLib"}]},"hierarchy":{"paths":[["doc:\/\/GLib\/documentation\/GLib","doc:\/\/GLib\/documentation\/GLib\/VariantRef","doc:\/\/GLib\/documentation\/GLib\/VariantRef\/VariantProtocol-Implementations"]]},"references":{"doc://GLib/documentation/GLib/VariantRef/byteswap()":{"role":"symbol","title":"byteswap()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"byteswap"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"VariantRef","preciseIdentifier":"s:4GLib10VariantRefV"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Performs a byteswapping operation on the contents of "},{"type":"codeVoice","code":"value"},{"type":"text","text":".  The"},{"type":"text","text":" "},{"type":"text","text":"result is that all multi-byte numeric data contained in "},{"type":"codeVoice","code":"value"},{"type":"text","text":" is"},{"type":"text","text":" "},{"type":"text","text":"byteswapped.  That includes 16, 32, and 64bit signed and unsigned"},{"type":"text","text":" "},{"type":"text","text":"integers as well as file handles and double precision floating point"},{"type":"text","text":" "},{"type":"text","text":"values."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/VariantRef\/byteswap()","kind":"symbol","type":"topic","url":"\/documentation\/glib\/variantref\/byteswap()"},"doc://GLib/documentation/GLib":{"role":"collection","title":"GLib","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib","kind":"symbol","type":"topic","url":"\/documentation\/glib"},"doc://GLib/documentation/GLib/VariantRef":{"role":"symbol","title":"VariantRef","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"VariantRef"}],"abstract":[{"type":"codeVoice","code":"GVariant"},{"type":"text","text":" is a variant datatype; it can contain one or more values"},{"type":"text","text":" "},{"type":"text","text":"along with information about the type of the values."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/VariantRef","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"VariantRef"}],"url":"\/documentation\/glib\/variantref"},"doc://GLib/documentation/GLib/VariantRef/VariantProtocol-Implementations":{"role":"collectionGroup","title":"VariantProtocol Implementations","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib\/VariantRef\/VariantProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/glib\/variantref\/variantprotocol-implementations"}}}