{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"StringChunk"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"String chunks are used to store groups of strings. Memory is"},{"type":"text","text":" "},{"type":"text","text":"allocated in blocks, and as strings are added to the "},{"type":"codeVoice","code":"GStringChunk"},{"type":"text","text":" "},{"type":"text","text":"they are copied into the next free position in a block. When a block"},{"type":"text","text":" "},{"type":"text","text":"is full a new block is allocated."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"When storing a large number of strings, string chunks are more"},{"type":"text","text":" "},{"type":"text","text":"efficient than using [func"},{"type":"codeVoice","code":"GLib.strdup"},{"type":"text","text":"] since fewer calls to "},{"type":"codeVoice","code":"malloc()"},{"type":"text","text":" "},{"type":"text","text":"are needed, and less memory is wasted in memory allocation overheads."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"By adding strings with [method"},{"type":"codeVoice","code":"GLib.StringChunk.insert_const"},{"type":"text","text":"] it is also"},{"type":"text","text":" "},{"type":"text","text":"possible to remove duplicates."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To create a new "},{"type":"codeVoice","code":"GStringChunk"},{"type":"text","text":" use [func"},{"type":"codeVoice","code":"GLib.StringChunk.new"},{"type":"text","text":"]."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To add strings to a "},{"type":"codeVoice","code":"GStringChunk"},{"type":"text","text":" use [method"},{"type":"codeVoice","code":"GLib.StringChunk.insert"},{"type":"text","text":"]."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To add strings to a "},{"type":"codeVoice","code":"GStringChunk"},{"type":"text","text":", but without duplicating strings"},{"type":"text","text":" "},{"type":"text","text":"which are already in the "},{"type":"codeVoice","code":"GStringChunk"},{"type":"text","text":", use [method"},{"type":"codeVoice","code":"GLib.StringChunk.insert_const"},{"type":"text","text":"]."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To free the entire "},{"type":"codeVoice","code":"GStringChunk"},{"type":"text","text":" use [method"},{"type":"codeVoice","code":"GLib.StringChunk.free"},{"type":"text","text":"]."},{"type":"text","text":" "},{"type":"text","text":"It is not possible to free individual strings."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/StringChunk"},{"type":"text","text":" type acts as an owner of an underlying "},{"type":"codeVoice","code":"GStringChunk"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"It provides the methods that can operate on this data type through "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/StringChunkProtocol"},{"type":"text","text":" conformance."},{"type":"text","text":" "},{"type":"text","text":"Use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/StringChunk"},{"type":"text","text":" as a strong reference or owner of a "},{"type":"codeVoice","code":"GStringChunk"},{"type":"text","text":" instance."}]},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/StringChunkRef"},{"type":"text","text":" (instead of "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/StringChunk"},{"type":"text","text":") for a lightweight Swift reference to an underlying "},{"type":"codeVoice","code":"GStringChunk"},{"type":"text","text":" instance."}]}],"type":"aside","name":"Note"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/glib\/stringchunk"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/GLib\/documentation\/GLib\/PointerWrapper","doc:\/\/GLib\/documentation\/GLib\/StringChunkProtocol"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/GLib\/documentation\/GLib\/StringChunk","interfaceLanguage":"swift"},"abstract":[{"type":"codeVoice","code":"GStringChunk"},{"type":"text","text":" provides efficient storage of groups of strings"}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"StringChunk"}],"title":"StringChunk","roleHeading":"Class","role":"symbol","symbolKind":"class","externalID":"s:4GLib11StringChunkC","modules":[{"name":"GLib"}],"navigatorTitle":[{"kind":"identifier","text":"StringChunk"}]},"hierarchy":{"paths":[["doc:\/\/GLib\/documentation\/GLib"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/GLib\/documentation\/GLib\/StringChunk\/init(_:)-10hox","doc:\/\/GLib\/documentation\/GLib\/StringChunk\/init(_:)-22k60","doc:\/\/GLib\/documentation\/GLib\/StringChunk\/init(_:)-2tqkt","doc:\/\/GLib\/documentation\/GLib\/StringChunk\/init(_:)-7qzn9","doc:\/\/GLib\/documentation\/GLib\/StringChunk\/init(_:)-86bkx","doc:\/\/GLib\/documentation\/GLib\/StringChunk\/init(cPointer:)","doc:\/\/GLib\/documentation\/GLib\/StringChunk\/init(gconstpointer:)","doc:\/\/GLib\/documentation\/GLib\/StringChunk\/init(gpointer:)","doc:\/\/GLib\/documentation\/GLib\/StringChunk\/init(opaquePointer:)","doc:\/\/GLib\/documentation\/GLib\/StringChunk\/init(raw:)-7yaej","doc:\/\/GLib\/documentation\/GLib\/StringChunk\/init(raw:)-l95n","doc:\/\/GLib\/documentation\/GLib\/StringChunk\/init(retaining:)","doc:\/\/GLib\/documentation\/GLib\/StringChunk\/init(retainingCPointer:)","doc:\/\/GLib\/documentation\/GLib\/StringChunk\/init(retainingOpaquePointer:)","doc:\/\/GLib\/documentation\/GLib\/StringChunk\/init(retainingRaw:)-6l","doc:\/\/GLib\/documentation\/GLib\/StringChunk\/init(retainingRaw:)-9oe8n"]},{"title":"Instance Properties","identifiers":["doc:\/\/GLib\/documentation\/GLib\/StringChunk\/ptr"]},{"title":"Default Implementations","identifiers":["doc:\/\/GLib\/documentation\/GLib\/StringChunk\/StringChunkProtocol-Implementations"],"generated":true}],"references":{"doc://GLib/documentation/GLib/StringChunk/init(retainingOpaquePointer:)":{"role":"symbol","title":"init(retainingOpaquePointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"retainingOpaquePointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"OpaquePointer","preciseIdentifier":"s:s13OpaquePointerV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped, retaining initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/StringChunkProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/StringChunk\/init(retainingOpaquePointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/stringchunk\/init(retainingopaquepointer:)"},"doc://GLib/documentation/GLib/StringChunkRef":{"role":"symbol","title":"StringChunkRef","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"StringChunkRef"}],"abstract":[{"type":"codeVoice","code":"GStringChunk"},{"type":"text","text":" provides efficient storage of groups of strings"}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/StringChunkRef","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"StringChunkRef"}],"url":"\/documentation\/glib\/stringchunkref"},"doc://GLib/documentation/GLib/StringChunk/init(gconstpointer:)":{"role":"symbol","title":"init(gconstpointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"externalParam","text":"gconstpointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gconstpointer","preciseIdentifier":"c:@T@gconstpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Optional initialiser from a non-mutating "},{"type":"codeVoice","code":"gconstpointer"},{"type":"text","text":" to"},{"type":"text","text":" "},{"type":"text","text":"the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type."},{"type":"text","text":" "},{"type":"text","text":"This creates an instance without performing an unbalanced retain"},{"type":"text","text":" "},{"type":"text","text":"i.e., ownership is transferred to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/StringChunk"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/StringChunk\/init(gconstpointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/stringchunk\/init(gconstpointer:)"},"doc://GLib/documentation/GLib/StringChunkProtocol":{"role":"symbol","title":"StringChunkProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"StringChunkProtocol"}],"abstract":[{"type":"codeVoice","code":"GStringChunk"},{"type":"text","text":" provides efficient storage of groups of strings"}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/StringChunkProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"StringChunkProtocol"}],"url":"\/documentation\/glib\/stringchunkprotocol"},"doc://GLib/documentation/GLib/StringChunk/init(_:)-86bkx":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GStringChunk"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type."},{"type":"text","text":" "},{"type":"text","text":"This creates an instance without performing an unbalanced retain"},{"type":"text","text":" "},{"type":"text","text":"i.e., ownership is transferred to the "},{"type":"codeVoice","code":"StringChunk"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/StringChunk\/init(_:)-86bkx","kind":"symbol","type":"topic","url":"\/documentation\/glib\/stringchunk\/init(_:)-86bkx"},"doc://GLib/documentation/GLib/StringChunk/ptr":{"role":"symbol","title":"ptr","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"ptr"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutableRawPointer","preciseIdentifier":"s:Sv"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Untyped pointer to the underlying "},{"type":"codeVoice","code":"GStringChunk"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"For type-safe access, use the generated, typed pointer "},{"type":"codeVoice","code":"StringChunkProtocol\/_ptr"},{"type":"text","text":" property instead."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/StringChunk\/ptr","kind":"symbol","type":"topic","url":"\/documentation\/glib\/stringchunk\/ptr"},"doc://GLib/documentation/GLib/StringChunk/init(raw:)-l95n":{"role":"symbol","title":"init(raw:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"raw"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeRawPointer","preciseIdentifier":"s:SV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/StringChunkProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/StringChunk\/init(raw:)-l95n","kind":"symbol","type":"topic","url":"\/documentation\/glib\/stringchunk\/init(raw:)-l95n"},"doc://GLib/documentation/GLib/StringChunk/init(retainingRaw:)-6l":{"role":"symbol","title":"init(retainingRaw:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"retainingRaw"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutableRawPointer","preciseIdentifier":"s:Sv"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped, retaining initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/StringChunkProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/StringChunk\/init(retainingRaw:)-6l","kind":"symbol","type":"topic","url":"\/documentation\/glib\/stringchunk\/init(retainingraw:)-6l"},"doc://GLib/documentation/GLib/StringChunk":{"role":"symbol","title":"StringChunk","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"StringChunk"}],"abstract":[{"type":"codeVoice","code":"GStringChunk"},{"type":"text","text":" provides efficient storage of groups of strings"}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/StringChunk","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"StringChunk"}],"url":"\/documentation\/glib\/stringchunk"},"doc://GLib/documentation/GLib/StringChunk/init(_:)-2tqkt":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GStringChunk"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Optional initialiser from the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type."},{"type":"text","text":" "},{"type":"text","text":"This creates an instance without performing an unbalanced retain"},{"type":"text","text":" "},{"type":"text","text":"i.e., ownership is transferred to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/StringChunk"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/StringChunk\/init(_:)-2tqkt","kind":"symbol","type":"topic","url":"\/documentation\/glib\/stringchunk\/init(_:)-2tqkt"},"doc://GLib/documentation/GLib/StringChunk/init(raw:)-7yaej":{"role":"symbol","title":"init(raw:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"raw"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutableRawPointer","preciseIdentifier":"s:Sv"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/StringChunkProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/StringChunk\/init(raw:)-7yaej","kind":"symbol","type":"topic","url":"\/documentation\/glib\/stringchunk\/init(raw:)-7yaej"},"doc://GLib/documentation/GLib/StringChunk/init(_:)-10hox":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GStringChunk"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from a constant pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type."},{"type":"text","text":" "},{"type":"text","text":"This creates an instance without performing an unbalanced retain"},{"type":"text","text":" "},{"type":"text","text":"i.e., ownership is transferred to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/StringChunk"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/StringChunk\/init(_:)-10hox","kind":"symbol","type":"topic","url":"\/documentation\/glib\/stringchunk\/init(_:)-10hox"},"doc://GLib/documentation/GLib/StringChunk/init(opaquePointer:)":{"role":"symbol","title":"init(opaquePointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"opaquePointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"OpaquePointer","preciseIdentifier":"s:s13OpaquePointerV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/StringChunkProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/StringChunk\/init(opaquePointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/stringchunk\/init(opaquepointer:)"},"doc://GLib/documentation/GLib/StringChunk/StringChunkProtocol-Implementations":{"role":"collectionGroup","title":"StringChunkProtocol Implementations","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib\/StringChunk\/StringChunkProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/glib\/stringchunk\/stringchunkprotocol-implementations"},"doc://GLib/documentation/GLib/PointerWrapper":{"role":"symbol","title":"PointerWrapper","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"PointerWrapper"}],"abstract":[{"type":"text","text":"Protocol for GLib types that wrap pointers."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/PointerWrapper","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PointerWrapper"}],"url":"\/documentation\/glib\/pointerwrapper"},"doc://GLib/documentation/GLib/StringChunk/init(gpointer:)":{"role":"symbol","title":"init(gpointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"externalParam","text":"gpointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Optional initialiser from a non-mutating "},{"type":"codeVoice","code":"gpointer"},{"type":"text","text":" to"},{"type":"text","text":" "},{"type":"text","text":"the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type."},{"type":"text","text":" "},{"type":"text","text":"This creates an instance without performing an unbalanced retain"},{"type":"text","text":" "},{"type":"text","text":"i.e., ownership is transferred to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/StringChunk"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/StringChunk\/init(gpointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/stringchunk\/init(gpointer:)"},"doc://GLib/documentation/GLib/StringChunk/init(_:)-7qzn9":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Reference intialiser for a related type that implements "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/StringChunkProtocol"},{"type":"text","text":" "},{"type":"codeVoice","code":"GStringChunk"},{"type":"text","text":" does not allow reference counting."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/StringChunk\/init(_:)-7qzn9","kind":"symbol","type":"topic","url":"\/documentation\/glib\/stringchunk\/init(_:)-7qzn9"},"doc://GLib/documentation/GLib/StringChunk/init(retainingRaw:)-9oe8n":{"role":"symbol","title":"init(retainingRaw:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"retainingRaw"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeRawPointer","preciseIdentifier":"s:SV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped, retaining initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/StringChunkProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/StringChunk\/init(retainingRaw:)-9oe8n","kind":"symbol","type":"topic","url":"\/documentation\/glib\/stringchunk\/init(retainingraw:)-9oe8n"},"doc://GLib/documentation/GLib/StringChunk/init(_:)-22k60":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GStringChunk"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Optional initialiser from a constant pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type."},{"type":"text","text":" "},{"type":"text","text":"This creates an instance without performing an unbalanced retain"},{"type":"text","text":" "},{"type":"text","text":"i.e., ownership is transferred to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/StringChunk"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/StringChunk\/init(_:)-22k60","kind":"symbol","type":"topic","url":"\/documentation\/glib\/stringchunk\/init(_:)-22k60"},"doc://GLib/documentation/GLib":{"role":"collection","title":"GLib","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib","kind":"symbol","type":"topic","url":"\/documentation\/glib"},"doc://GLib/documentation/GLib/StringChunk/init(retainingCPointer:)":{"role":"symbol","title":"init(retainingCPointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"retainingCPointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Unsafe typed, retaining initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/StringChunkProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/StringChunk\/init(retainingCPointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/stringchunk\/init(retainingcpointer:)"},"doc://GLib/documentation/GLib/StringChunk/init(cPointer:)":{"role":"symbol","title":"init(cPointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"cPointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Unsafe typed initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/StringChunkProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/StringChunk\/init(cPointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/stringchunk\/init(cpointer:)"},"doc://GLib/documentation/GLib/StringChunk/init(retaining:)":{"role":"symbol","title":"init(retaining:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"retaining"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GStringChunk"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type."},{"type":"text","text":" "},{"type":"codeVoice","code":"GStringChunk"},{"type":"text","text":" does not allow reference counting, so despite the name no actual retaining will occur."},{"type":"text","text":" "},{"type":"text","text":"i.e., ownership is transferred to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/StringChunk"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/StringChunk\/init(retaining:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/stringchunk\/init(retaining:)"}}}