{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"VariantDictRef"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"It can be used for doing a sequence of dictionary lookups in an"},{"type":"text","text":" "},{"type":"text","text":"efficient way on an existing "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Variant"},{"type":"text","text":" dictionary or it can be used"},{"type":"text","text":" "},{"type":"text","text":"to construct new dictionaries with a hashtable-like interface.  It"},{"type":"text","text":" "},{"type":"text","text":"can also be used for taking existing dictionaries and modifying them"},{"type":"text","text":" "},{"type":"text","text":"in order to create new ones."}]},{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/VariantDict"},{"type":"text","text":" can only be used with "},{"type":"codeVoice","code":"G_VARIANT_TYPE_VARDICT"},{"type":"text","text":" "},{"type":"text","text":"dictionaries."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"It is possible to use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/VariantDict"},{"type":"text","text":" allocated on the stack or on the"},{"type":"text","text":" "},{"type":"text","text":"heap.  When using a stack-allocated "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/VariantDict"},{"type":"text","text":", you begin with a"},{"type":"text","text":" "},{"type":"text","text":"call to "},{"type":"codeVoice","code":"g_variant_dict_init()"},{"type":"text","text":" and free the resources with a call to"},{"type":"text","text":" "},{"type":"codeVoice","code":"g_variant_dict_clear()"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Heap-allocated "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/VariantDict"},{"type":"text","text":" follows normal refcounting rules: you"},{"type":"text","text":" "},{"type":"text","text":"allocate it with "},{"type":"codeVoice","code":"g_variant_dict_new()"},{"type":"text","text":" and use "},{"type":"codeVoice","code":"g_variant_dict_ref()"},{"type":"text","text":" "},{"type":"text","text":"and "},{"type":"codeVoice","code":"g_variant_dict_unref()"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"g_variant_dict_end()"},{"type":"text","text":" is used to convert the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/VariantDict"},{"type":"text","text":" back into a"},{"type":"text","text":" "},{"type":"text","text":"dictionary-type "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Variant"},{"type":"text","text":".  When used with stack-allocated instances,"},{"type":"text","text":" "},{"type":"text","text":"this also implicitly frees all associated memory, but for"},{"type":"text","text":" "},{"type":"text","text":"heap-allocated instances, you must still call "},{"type":"codeVoice","code":"g_variant_dict_unref()"},{"type":"text","text":" "},{"type":"text","text":"afterwards."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You will typically want to use a heap-allocated "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/VariantDict"},{"type":"text","text":" when"},{"type":"text","text":" "},{"type":"text","text":"you expose it as part of an API.  For most other uses, the"},{"type":"text","text":" "},{"type":"text","text":"stack-allocated form will be more convenient."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Consider the following two examples that do the same thing in each"},{"type":"text","text":" "},{"type":"text","text":"style: take an existing dictionary and look up the “count” uint32"},{"type":"text","text":" "},{"type":"text","text":"key, adding 1 to it if it is found, or returning an error if the"},{"type":"text","text":" "},{"type":"text","text":"key is not found.  Each returns the new dictionary as a floating"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Variant"},{"type":"text","text":"."}]},{"anchor":"Using-a-stack-allocated-GVariantDict","level":2,"type":"heading","text":"Using a stack-allocated GVariantDict"},{"type":"paragraph","inlineContent":[{"type":"text","text":"(C Language Example):"}]},{"type":"codeListing","syntax":"C","code":["  GVariant *","  add_to_count (GVariant  *orig,","                GError   **error)","  {","    GVariantDict dict;","    guint32 count;","","    g_variant_dict_init (&dict, orig);","    if (!g_variant_dict_lookup (&dict, \"count\", \"u\", &count))","      {","        g_set_error (...);","        g_variant_dict_clear (&dict);","        return NULL;","      }","","    g_variant_dict_insert (&dict, \"count\", \"u\", count + 1);","","    return g_variant_dict_end (&dict);","  }"]},{"anchor":"Using-heap-allocated-GVariantDict","level":2,"type":"heading","text":"Using heap-allocated GVariantDict"},{"type":"paragraph","inlineContent":[{"type":"text","text":"(C Language Example):"}]},{"type":"codeListing","syntax":"C","code":["  GVariant *","  add_to_count (GVariant  *orig,","                GError   **error)","  {","    GVariantDict *dict;","    GVariant *result;","    guint32 count;","","    dict = g_variant_dict_new (orig);","","    if (g_variant_dict_lookup (dict, \"count\", \"u\", &count))","      {","        g_variant_dict_insert (dict, \"count\", \"u\", count + 1);","        result = g_variant_dict_end (dict);","      }","    else","      {","        g_set_error (...);","        result = NULL;","      }","","    g_variant_dict_unref (dict);","","    return result;","  }"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/VariantDictRef"},{"type":"text","text":" type acts as a lightweight Swift reference to an underlying "},{"type":"codeVoice","code":"GVariantDict"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"It exposes methods that can operate on this data type through "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/VariantDictProtocol"},{"type":"text","text":" conformance."},{"type":"text","text":" "},{"type":"text","text":"Use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/VariantDictRef"},{"type":"text","text":" only as an "},{"type":"codeVoice","code":"unowned"},{"type":"text","text":" reference to an existing "},{"type":"codeVoice","code":"GVariantDict"},{"type":"text","text":" instance."}]},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/VariantDict"},{"type":"text","text":" (instead of "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/VariantDictRef"},{"type":"text","text":") if you want to use Automatic Reference Counting for memory management of the underlying "},{"type":"codeVoice","code":"GVariantDict"},{"type":"text","text":" instance."}]}],"type":"aside","name":"Note"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/glib\/variantdictref"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/GLib\/documentation\/GLib\/PointerWrapper","doc:\/\/GLib\/documentation\/GLib\/VariantDictProtocol"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/GLib\/documentation\/GLib\/VariantDictRef","interfaceLanguage":"swift"},"abstract":[{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/VariantDict"},{"type":"text","text":" is a mutable interface to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Variant"},{"type":"text","text":" dictionaries."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"VariantDictRef"}],"title":"VariantDictRef","roleHeading":"Structure","role":"symbol","symbolKind":"struct","externalID":"s:4GLib14VariantDictRefV","modules":[{"name":"GLib"}],"navigatorTitle":[{"kind":"identifier","text":"VariantDictRef"}]},"hierarchy":{"paths":[["doc:\/\/GLib\/documentation\/GLib"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/GLib\/documentation\/GLib\/VariantDictRef\/init(_:)-1m81v","doc:\/\/GLib\/documentation\/GLib\/VariantDictRef\/init(_:)-2ionc","doc:\/\/GLib\/documentation\/GLib\/VariantDictRef\/init(_:)-32bsf","doc:\/\/GLib\/documentation\/GLib\/VariantDictRef\/init(_:)-3gqla","doc:\/\/GLib\/documentation\/GLib\/VariantDictRef\/init(_:)-9l5r7","doc:\/\/GLib\/documentation\/GLib\/VariantDictRef\/init(asv:)","doc:\/\/GLib\/documentation\/GLib\/VariantDictRef\/init(cPointer:)","doc:\/\/GLib\/documentation\/GLib\/VariantDictRef\/init(constPointer:)","doc:\/\/GLib\/documentation\/GLib\/VariantDictRef\/init(gconstpointer:)","doc:\/\/GLib\/documentation\/GLib\/VariantDictRef\/init(gpointer:)","doc:\/\/GLib\/documentation\/GLib\/VariantDictRef\/init(mutating:)","doc:\/\/GLib\/documentation\/GLib\/VariantDictRef\/init(opaquePointer:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/GLib\/documentation\/GLib\/VariantDictRef\/ptr"]},{"title":"Default Implementations","identifiers":["doc:\/\/GLib\/documentation\/GLib\/VariantDictRef\/PointerWrapper-Implementations","doc:\/\/GLib\/documentation\/GLib\/VariantDictRef\/VariantDictProtocol-Implementations"],"generated":true}],"references":{"doc://GLib/documentation/GLib/VariantDictRef/init(_:)-3gqla":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GVariantDict"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/VariantDictRef\/init(_:)-3gqla","kind":"symbol","type":"topic","url":"\/documentation\/glib\/variantdictref\/init(_:)-3gqla"},"doc://GLib/documentation/GLib/VariantDictRef/VariantDictProtocol-Implementations":{"role":"collectionGroup","title":"VariantDictProtocol Implementations","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib\/VariantDictRef\/VariantDictProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/glib\/variantdictref\/variantdictprotocol-implementations"},"doc://GLib/documentation/GLib/VariantDictRef/init(asv:)":{"role":"symbol","title":"init(asv:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"VariantT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"asv"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"VariantT"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Allocates and initialises a new "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/VariantDict"},{"type":"text","text":"."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/VariantDictRef\/init(asv:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/variantdictref\/init(asv:)"},"doc://GLib/documentation/GLib/VariantDictProtocol":{"role":"symbol","title":"VariantDictProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"VariantDictProtocol"}],"abstract":[{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/VariantDict"},{"type":"text","text":" is a mutable interface to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Variant"},{"type":"text","text":" dictionaries."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/VariantDictProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"VariantDictProtocol"}],"url":"\/documentation\/glib\/variantdictprotocol"},"doc://GLib/documentation/GLib/VariantDictRef/ptr":{"role":"symbol","title":"ptr","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"ptr"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutableRawPointer","preciseIdentifier":"s:Sv"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Untyped pointer to the underlying "},{"type":"codeVoice","code":"GVariantDict"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"For type-safe access, use the generated, typed pointer "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/VariantDictProtocol\/variant_dict_ptr-6dgor"},{"type":"text","text":" property instead."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/VariantDictRef\/ptr","kind":"symbol","type":"topic","url":"\/documentation\/glib\/variantdictref\/ptr"},"doc://GLib/documentation/GLib/VariantDictRef/PointerWrapper-Implementations":{"role":"collectionGroup","title":"PointerWrapper Implementations","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib\/VariantDictRef\/PointerWrapper-Implementations","kind":"article","type":"topic","url":"\/documentation\/glib\/variantdictref\/pointerwrapper-implementations"},"doc://GLib/documentation/GLib/VariantDictRef/init(mutating:)":{"role":"symbol","title":"init(mutating:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"mutating"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeRawPointer","preciseIdentifier":"s:SV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/VariantDictProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/VariantDictRef\/init(mutating:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/variantdictref\/init(mutating:)"},"doc://GLib/documentation/GLib/VariantDictRef/init(_:)-32bsf":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GVariantDict"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional, non-mutable pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/VariantDictRef\/init(_:)-32bsf","kind":"symbol","type":"topic","url":"\/documentation\/glib\/variantdictref\/init(_:)-32bsf"},"doc://GLib/documentation/GLib/VariantDictProtocol/variant_dict_ptr-6dgor":{"defaultImplementations":1,"role":"symbol","title":"variant_dict_ptr","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"variant_dict_ptr"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GVariantDict"},{"kind":"text","text":">!"}],"abstract":[{"type":"text","text":"Typed pointer to the underlying "},{"type":"codeVoice","code":"GVariantDict"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/VariantDictProtocol\/variant_dict_ptr-6dgor","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/glib\/variantdictprotocol\/variant_dict_ptr-6dgor"},"doc://GLib/documentation/GLib/VariantDictRef/init(constPointer:)":{"role":"symbol","title":"init(constPointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"constPointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Unsafe typed initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/VariantDictProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/VariantDictRef\/init(constPointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/variantdictref\/init(constpointer:)"},"doc://GLib/documentation/GLib/VariantDictRef/init(gpointer:)":{"role":"symbol","title":"init(gpointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"externalParam","text":"gpointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional "},{"type":"codeVoice","code":"gpointer"}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/VariantDictRef\/init(gpointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/variantdictref\/init(gpointer:)"},"doc://GLib/documentation/GLib/VariantDict":{"role":"symbol","title":"VariantDict","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"VariantDict"}],"abstract":[{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/VariantDict"},{"type":"text","text":" is a mutable interface to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Variant"},{"type":"text","text":" dictionaries."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/VariantDict","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"VariantDict"}],"url":"\/documentation\/glib\/variantdict"},"doc://GLib/documentation/GLib/VariantDictRef/init(gconstpointer:)":{"role":"symbol","title":"init(gconstpointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"externalParam","text":"gconstpointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gconstpointer","preciseIdentifier":"c:@T@gconstpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional, non-mutable "},{"type":"codeVoice","code":"gconstpointer"}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/VariantDictRef\/init(gconstpointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/variantdictref\/init(gconstpointer:)"},"doc://GLib/documentation/GLib/Variant":{"role":"symbol","title":"Variant","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Variant"}],"abstract":[{"type":"codeVoice","code":"GVariant"},{"type":"text","text":" is a variant datatype; it can contain one or more values"},{"type":"text","text":" "},{"type":"text","text":"along with information about the type of the values."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/Variant","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Variant"}],"url":"\/documentation\/glib\/variant"},"doc://GLib/documentation/GLib/VariantDictRef/init(_:)-9l5r7":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GVariantDict"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/VariantDictRef\/init(_:)-9l5r7","kind":"symbol","type":"topic","url":"\/documentation\/glib\/variantdictref\/init(_:)-9l5r7"},"doc://GLib/documentation/GLib":{"role":"collection","title":"GLib","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib","kind":"symbol","type":"topic","url":"\/documentation\/glib"},"doc://GLib/documentation/GLib/VariantDictRef/init(cPointer:)":{"role":"symbol","title":"init(cPointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"cPointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Unsafe typed initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/VariantDictProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/VariantDictRef\/init(cPointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/variantdictref\/init(cpointer:)"},"doc://GLib/documentation/GLib/VariantDictRef/init(_:)-2ionc":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Reference intialiser for a related type that implements "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/VariantDictProtocol"}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/VariantDictRef\/init(_:)-2ionc","kind":"symbol","type":"topic","url":"\/documentation\/glib\/variantdictref\/init(_:)-2ionc"},"doc://GLib/documentation/GLib/VariantDictRef/init(_:)-1m81v":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GVariantDict"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from a constant pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/VariantDictRef\/init(_:)-1m81v","kind":"symbol","type":"topic","url":"\/documentation\/glib\/variantdictref\/init(_:)-1m81v"},"doc://GLib/documentation/GLib/VariantDictRef/init(opaquePointer:)":{"role":"symbol","title":"init(opaquePointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"opaquePointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"OpaquePointer","preciseIdentifier":"s:s13OpaquePointerV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/VariantDictProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/VariantDictRef\/init(opaquePointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/variantdictref\/init(opaquepointer:)"},"doc://GLib/documentation/GLib/PointerWrapper":{"role":"symbol","title":"PointerWrapper","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"PointerWrapper"}],"abstract":[{"type":"text","text":"Protocol for GLib types that wrap pointers."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/PointerWrapper","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PointerWrapper"}],"url":"\/documentation\/glib\/pointerwrapper"},"doc://GLib/documentation/GLib/VariantDictRef":{"role":"symbol","title":"VariantDictRef","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"VariantDictRef"}],"abstract":[{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/VariantDict"},{"type":"text","text":" is a mutable interface to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Variant"},{"type":"text","text":" dictionaries."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/VariantDictRef","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"VariantDictRef"}],"url":"\/documentation\/glib\/variantdictref"}}}