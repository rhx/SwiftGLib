{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SourceFuncsRef"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"For idle sources, the prepare and check functions always return "},{"type":"codeVoice","code":"true"},{"type":"text","text":" "},{"type":"text","text":"to indicate that the source is always ready to be processed. The prepare"},{"type":"text","text":" "},{"type":"text","text":"function also returns a timeout value of 0 to ensure that the "},{"type":"codeVoice","code":"poll()"},{"type":"text","text":" call"},{"type":"text","text":" "},{"type":"text","text":"doesn’t block (since that would be time wasted which could have been spent"},{"type":"text","text":" "},{"type":"text","text":"running the idle function)."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For timeout sources, the prepare and check functions both return "},{"type":"codeVoice","code":"true"},{"type":"text","text":" "},{"type":"text","text":"if the timeout interval has expired. The prepare function also returns"},{"type":"text","text":" "},{"type":"text","text":"a timeout value to ensure that the "},{"type":"codeVoice","code":"poll()"},{"type":"text","text":" call doesn’t block too long"},{"type":"text","text":" "},{"type":"text","text":"and miss the next timeout."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For file descriptor sources, the prepare function typically returns "},{"type":"codeVoice","code":"false"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"since it must wait until "},{"type":"codeVoice","code":"poll()"},{"type":"text","text":" has been called before it knows whether"},{"type":"text","text":" "},{"type":"text","text":"any events need to be processed. It sets the returned timeout to -1 to"},{"type":"text","text":" "},{"type":"text","text":"indicate that it doesn’t mind how long the "},{"type":"codeVoice","code":"poll()"},{"type":"text","text":" call blocks. In the"},{"type":"text","text":" "},{"type":"text","text":"check function, it tests the results of the "},{"type":"codeVoice","code":"poll()"},{"type":"text","text":" call to see if the"},{"type":"text","text":" "},{"type":"text","text":"required condition has been met, and returns "},{"type":"codeVoice","code":"true"},{"type":"text","text":" if so."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceFuncsRef"},{"type":"text","text":" type acts as a lightweight Swift reference to an underlying "},{"type":"codeVoice","code":"GSourceFuncs"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"It exposes methods that can operate on this data type through "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceFuncsProtocol"},{"type":"text","text":" conformance."},{"type":"text","text":" "},{"type":"text","text":"Use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceFuncsRef"},{"type":"text","text":" only as an "},{"type":"codeVoice","code":"unowned"},{"type":"text","text":" reference to an existing "},{"type":"codeVoice","code":"GSourceFuncs"},{"type":"text","text":" instance."}]},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceFuncs"},{"type":"text","text":" (instead of "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceFuncsRef"},{"type":"text","text":") if you want to use Automatic Reference Counting for memory management of the underlying "},{"type":"codeVoice","code":"GSourceFuncs"},{"type":"text","text":" instance."}]}],"type":"aside","name":"Note"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/glib\/sourcefuncsref"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/GLib\/documentation\/GLib\/PointerWrapper","doc:\/\/GLib\/documentation\/GLib\/SourceFuncsProtocol"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/GLib\/documentation\/GLib\/SourceFuncsRef","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"GSourceFuncs"},{"type":"text","text":" struct contains a table of"},{"type":"text","text":" "},{"type":"text","text":"functions used to handle event sources in a generic manner."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SourceFuncsRef"}],"title":"SourceFuncsRef","roleHeading":"Structure","role":"symbol","symbolKind":"struct","externalID":"s:4GLib14SourceFuncsRefV","modules":[{"name":"GLib"}],"navigatorTitle":[{"kind":"identifier","text":"SourceFuncsRef"}]},"hierarchy":{"paths":[["doc:\/\/GLib\/documentation\/GLib"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/GLib\/documentation\/GLib\/SourceFuncsRef\/init(_:)-1il83","doc:\/\/GLib\/documentation\/GLib\/SourceFuncsRef\/init(_:)-5idr3","doc:\/\/GLib\/documentation\/GLib\/SourceFuncsRef\/init(_:)-891i5","doc:\/\/GLib\/documentation\/GLib\/SourceFuncsRef\/init(_:)-937im","doc:\/\/GLib\/documentation\/GLib\/SourceFuncsRef\/init(_:)-9qm49","doc:\/\/GLib\/documentation\/GLib\/SourceFuncsRef\/init(cPointer:)","doc:\/\/GLib\/documentation\/GLib\/SourceFuncsRef\/init(constPointer:)","doc:\/\/GLib\/documentation\/GLib\/SourceFuncsRef\/init(gconstpointer:)","doc:\/\/GLib\/documentation\/GLib\/SourceFuncsRef\/init(gpointer:)","doc:\/\/GLib\/documentation\/GLib\/SourceFuncsRef\/init(mutating:)","doc:\/\/GLib\/documentation\/GLib\/SourceFuncsRef\/init(opaquePointer:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/GLib\/documentation\/GLib\/SourceFuncsRef\/ptr"]},{"title":"Default Implementations","identifiers":["doc:\/\/GLib\/documentation\/GLib\/SourceFuncsRef\/PointerWrapper-Implementations","doc:\/\/GLib\/documentation\/GLib\/SourceFuncsRef\/SourceFuncsProtocol-Implementations"],"generated":true}],"references":{"doc://GLib/documentation/GLib/SourceFuncsRef/init(constPointer:)":{"role":"symbol","title":"init(constPointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"constPointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Unsafe typed initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceFuncsProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceFuncsRef\/init(constPointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/sourcefuncsref\/init(constpointer:)"},"doc://GLib/documentation/GLib/SourceFuncsRef/init(gconstpointer:)":{"role":"symbol","title":"init(gconstpointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"externalParam","text":"gconstpointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gconstpointer","preciseIdentifier":"c:@T@gconstpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional, non-mutable "},{"type":"codeVoice","code":"gconstpointer"}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceFuncsRef\/init(gconstpointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/sourcefuncsref\/init(gconstpointer:)"},"doc://GLib/documentation/GLib/SourceFuncsRef/init(_:)-1il83":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GSourceFuncs"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional, non-mutable pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceFuncsRef\/init(_:)-1il83","kind":"symbol","type":"topic","url":"\/documentation\/glib\/sourcefuncsref\/init(_:)-1il83"},"doc://GLib/documentation/GLib/PointerWrapper":{"role":"symbol","title":"PointerWrapper","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"PointerWrapper"}],"abstract":[{"type":"text","text":"Protocol for GLib types that wrap pointers."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/PointerWrapper","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PointerWrapper"}],"url":"\/documentation\/glib\/pointerwrapper"},"doc://GLib/documentation/GLib/SourceFuncsRef/init(_:)-937im":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GSourceFuncs"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceFuncsRef\/init(_:)-937im","kind":"symbol","type":"topic","url":"\/documentation\/glib\/sourcefuncsref\/init(_:)-937im"},"doc://GLib/documentation/GLib/SourceFuncsRef/init(_:)-9qm49":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GSourceFuncs"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from a constant pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceFuncsRef\/init(_:)-9qm49","kind":"symbol","type":"topic","url":"\/documentation\/glib\/sourcefuncsref\/init(_:)-9qm49"},"doc://GLib/documentation/GLib/SourceFuncsRef/init(gpointer:)":{"role":"symbol","title":"init(gpointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"externalParam","text":"gpointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional "},{"type":"codeVoice","code":"gpointer"}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceFuncsRef\/init(gpointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/sourcefuncsref\/init(gpointer:)"},"doc://GLib/documentation/GLib":{"role":"collection","title":"GLib","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib","kind":"symbol","type":"topic","url":"\/documentation\/glib"},"doc://GLib/documentation/GLib/SourceFuncsRef/init(_:)-5idr3":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GSourceFuncs"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceFuncsRef\/init(_:)-5idr3","kind":"symbol","type":"topic","url":"\/documentation\/glib\/sourcefuncsref\/init(_:)-5idr3"},"doc://GLib/documentation/GLib/SourceFuncsRef/PointerWrapper-Implementations":{"role":"collectionGroup","title":"PointerWrapper Implementations","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceFuncsRef\/PointerWrapper-Implementations","kind":"article","type":"topic","url":"\/documentation\/glib\/sourcefuncsref\/pointerwrapper-implementations"},"doc://GLib/documentation/GLib/SourceFuncs":{"role":"symbol","title":"SourceFuncs","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"SourceFuncs"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"GSourceFuncs"},{"type":"text","text":" struct contains a table of"},{"type":"text","text":" "},{"type":"text","text":"functions used to handle event sources in a generic manner."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceFuncs","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SourceFuncs"}],"url":"\/documentation\/glib\/sourcefuncs"},"doc://GLib/documentation/GLib/SourceFuncsRef/ptr":{"role":"symbol","title":"ptr","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"ptr"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutableRawPointer","preciseIdentifier":"s:Sv"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Untyped pointer to the underlying "},{"type":"codeVoice","code":"GSourceFuncs"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"For type-safe access, use the generated, typed pointer "},{"type":"codeVoice","code":"SourceFuncsProtocol\/_ptr"},{"type":"text","text":" property instead."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceFuncsRef\/ptr","kind":"symbol","type":"topic","url":"\/documentation\/glib\/sourcefuncsref\/ptr"},"doc://GLib/documentation/GLib/SourceFuncsRef":{"role":"symbol","title":"SourceFuncsRef","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SourceFuncsRef"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"GSourceFuncs"},{"type":"text","text":" struct contains a table of"},{"type":"text","text":" "},{"type":"text","text":"functions used to handle event sources in a generic manner."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceFuncsRef","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SourceFuncsRef"}],"url":"\/documentation\/glib\/sourcefuncsref"},"doc://GLib/documentation/GLib/SourceFuncsRef/SourceFuncsProtocol-Implementations":{"role":"collectionGroup","title":"SourceFuncsProtocol Implementations","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceFuncsRef\/SourceFuncsProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/glib\/sourcefuncsref\/sourcefuncsprotocol-implementations"},"doc://GLib/documentation/GLib/SourceFuncsRef/init(cPointer:)":{"role":"symbol","title":"init(cPointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"cPointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Unsafe typed initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceFuncsProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceFuncsRef\/init(cPointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/sourcefuncsref\/init(cpointer:)"},"doc://GLib/documentation/GLib/SourceFuncsRef/init(_:)-891i5":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Reference intialiser for a related type that implements "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceFuncsProtocol"}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceFuncsRef\/init(_:)-891i5","kind":"symbol","type":"topic","url":"\/documentation\/glib\/sourcefuncsref\/init(_:)-891i5"},"doc://GLib/documentation/GLib/SourceFuncsRef/init(mutating:)":{"role":"symbol","title":"init(mutating:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"mutating"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeRawPointer","preciseIdentifier":"s:SV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceFuncsProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceFuncsRef\/init(mutating:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/sourcefuncsref\/init(mutating:)"},"doc://GLib/documentation/GLib/SourceFuncsProtocol":{"role":"symbol","title":"SourceFuncsProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SourceFuncsProtocol"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"GSourceFuncs"},{"type":"text","text":" struct contains a table of"},{"type":"text","text":" "},{"type":"text","text":"functions used to handle event sources in a generic manner."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceFuncsProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SourceFuncsProtocol"}],"url":"\/documentation\/glib\/sourcefuncsprotocol"},"doc://GLib/documentation/GLib/SourceFuncsRef/init(opaquePointer:)":{"role":"symbol","title":"init(opaquePointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"opaquePointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"OpaquePointer","preciseIdentifier":"s:s13OpaquePointerV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceFuncsProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceFuncsRef\/init(opaquePointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/sourcefuncsref\/init(opaquepointer:)"}}}