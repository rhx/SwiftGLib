{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"setenv"},{"kind":"text","text":"("},{"kind":"externalParam","text":"variable"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"overwrite"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Note that on some systems, when variables are overwritten, the memory"},{"type":"text","text":" "},{"type":"text","text":"used for the previous variables and its value isn’t reclaimed."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You should be mindful of the fact that environment variable handling"},{"type":"text","text":" "},{"type":"text","text":"in UNIX is not thread-safe, and your program may crash if one thread"},{"type":"text","text":" "},{"type":"text","text":"calls "},{"type":"codeVoice","code":"g_setenv()"},{"type":"text","text":" while another thread is calling "},{"type":"codeVoice","code":"getenv()"},{"type":"text","text":". (And note"},{"type":"text","text":" "},{"type":"text","text":"that many functions, such as "},{"type":"codeVoice","code":"gettext()"},{"type":"text","text":", call "},{"type":"codeVoice","code":"getenv()"},{"type":"text","text":" internally.)"},{"type":"text","text":" "},{"type":"text","text":"This function is only safe to use at the very start of your program,"},{"type":"text","text":" "},{"type":"text","text":"before creating any other threads (or creating objects that create"},{"type":"text","text":" "},{"type":"text","text":"worker threads of their own)."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you need to set up the environment for a child process, you can"},{"type":"text","text":" "},{"type":"text","text":"use "},{"type":"codeVoice","code":"g_get_environ()"},{"type":"text","text":" to get an environment array, modify that with"},{"type":"text","text":" "},{"type":"codeVoice","code":"g_environ_setenv()"},{"type":"text","text":" and "},{"type":"codeVoice","code":"g_environ_unsetenv()"},{"type":"text","text":", and then pass that"},{"type":"text","text":" "},{"type":"text","text":"array directly to "},{"type":"codeVoice","code":"execvpe()"},{"type":"text","text":", "},{"type":"codeVoice","code":"g_spawn_async()"},{"type":"text","text":", or the like."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/glib\/setenv(variable:value:overwrite:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/GLib\/documentation\/GLib\/setenv(variable:value:overwrite:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Sets an environment variable. On UNIX, both the variable’s name and"},{"type":"text","text":" "},{"type":"text","text":"value can be arbitrary byte strings, except that the variable’s name"},{"type":"text","text":" "},{"type":"text","text":"cannot contain ‘=’. On Windows, they should be in UTF-8."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"setenv"},{"kind":"text","text":"("},{"kind":"externalParam","text":"variable"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"overwrite"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"title":"setenv(variable:value:overwrite:)","roleHeading":"Function","role":"symbol","symbolKind":"func","externalID":"s:4GLib6setenv8variable5value9overwriteSbSPys4Int8VGSg_AISbtF","modules":[{"name":"GLib"}]},"hierarchy":{"paths":[["doc:\/\/GLib\/documentation\/GLib"]]},"references":{"doc://GLib/documentation/GLib":{"role":"collection","title":"GLib","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib","kind":"symbol","type":"topic","url":"\/documentation\/glib"},"doc://GLib/documentation/GLib/setenv(variable:value:overwrite:)":{"role":"symbol","title":"setenv(variable:value:overwrite:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"setenv"},{"kind":"text","text":"("},{"kind":"externalParam","text":"variable"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"overwrite"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Sets an environment variable. On UNIX, both the variable’s name and"},{"type":"text","text":" "},{"type":"text","text":"value can be arbitrary byte strings, except that the variable’s name"},{"type":"text","text":" "},{"type":"text","text":"cannot contain ‘=’. On Windows, they should be in UTF-8."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/setenv(variable:value:overwrite:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/setenv(variable:value:overwrite:)"}}}