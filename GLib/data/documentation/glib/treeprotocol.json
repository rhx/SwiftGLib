{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"TreeProtocol"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/GLib\/documentation\/GLib\/PointerWrapper","preciseIdentifier":"s:4GLib14PointerWrapperP","text":"PointerWrapper"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/TreeProtocol"},{"type":"text","text":" protocol exposes the methods and properties of an underlying "},{"type":"codeVoice","code":"GTree"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"The default implementation of these can be found in the protocol extension below."},{"type":"text","text":" "},{"type":"text","text":"For a concrete class that implements these methods and properties, see "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Tree"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Alternatively, use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/TreeRef"},{"type":"text","text":" as a lighweight, "},{"type":"codeVoice","code":"unowned"},{"type":"text","text":" reference if you already have an instance you just want to use."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/glib\/treeprotocol"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/GLib\/documentation\/GLib\/PointerWrapper"],"kind":"relationships","title":"Inherits From","type":"inheritsFrom"},{"identifiers":["doc:\/\/GLib\/documentation\/GLib\/Tree","doc:\/\/GLib\/documentation\/GLib\/TreeRef"],"kind":"relationships","title":"Conforming Types","type":"conformingTypes"}],"identifier":{"url":"doc:\/\/GLib\/documentation\/GLib\/TreeProtocol","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"The GTree struct is an opaque data structure representing a"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"..\/Protocols\/TreeProtocol.html"},{"type":"text","text":". It should be"},{"type":"text","text":" "},{"type":"text","text":"accessed only by using the following functions."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"TreeProtocol"}],"title":"TreeProtocol","roleHeading":"Protocol","role":"symbol","symbolKind":"protocol","externalID":"s:4GLib12TreeProtocolP","modules":[{"name":"GLib"}],"navigatorTitle":[{"kind":"identifier","text":"TreeProtocol"}]},"hierarchy":{"paths":[["doc:\/\/GLib\/documentation\/GLib"]]},"topicSections":[{"title":"Instance Properties","identifiers":["doc:\/\/GLib\/documentation\/GLib\/TreeProtocol\/tree_ptr-8bl6m"]},{"title":"Instance Methods","identifiers":["doc:\/\/GLib\/documentation\/GLib\/TreeProtocol\/destroy()","doc:\/\/GLib\/documentation\/GLib\/TreeProtocol\/foreach(func:userData:)","doc:\/\/GLib\/documentation\/GLib\/TreeProtocol\/foreachNode(func:userData:)","doc:\/\/GLib\/documentation\/GLib\/TreeProtocol\/height()","doc:\/\/GLib\/documentation\/GLib\/TreeProtocol\/insert(key:value:)","doc:\/\/GLib\/documentation\/GLib\/TreeProtocol\/insertNode(key:value:)","doc:\/\/GLib\/documentation\/GLib\/TreeProtocol\/lookup(key:)","doc:\/\/GLib\/documentation\/GLib\/TreeProtocol\/lookupExtended(lookupKey:origKey:value:)","doc:\/\/GLib\/documentation\/GLib\/TreeProtocol\/lookupNode(key:)","doc:\/\/GLib\/documentation\/GLib\/TreeProtocol\/lowerBound(key:)","doc:\/\/GLib\/documentation\/GLib\/TreeProtocol\/nnodes()","doc:\/\/GLib\/documentation\/GLib\/TreeProtocol\/nodeFirst()","doc:\/\/GLib\/documentation\/GLib\/TreeProtocol\/nodeLast()","doc:\/\/GLib\/documentation\/GLib\/TreeProtocol\/ref()","doc:\/\/GLib\/documentation\/GLib\/TreeProtocol\/remove(key:)","doc:\/\/GLib\/documentation\/GLib\/TreeProtocol\/removeAll()","doc:\/\/GLib\/documentation\/GLib\/TreeProtocol\/replace(key:value:)","doc:\/\/GLib\/documentation\/GLib\/TreeProtocol\/replaceNode(key:value:)","doc:\/\/GLib\/documentation\/GLib\/TreeProtocol\/search(searchFunc:userData:)","doc:\/\/GLib\/documentation\/GLib\/TreeProtocol\/searchNode(searchFunc:userData:)","doc:\/\/GLib\/documentation\/GLib\/TreeProtocol\/steal(key:)","doc:\/\/GLib\/documentation\/GLib\/TreeProtocol\/traverse(traverseFunc:traverseType:userData:)","doc:\/\/GLib\/documentation\/GLib\/TreeProtocol\/unref()","doc:\/\/GLib\/documentation\/GLib\/TreeProtocol\/upperBound(key:)"]}],"references":{"doc://GLib/documentation/GLib/TreeProtocol/removeAll()":{"role":"symbol","title":"removeAll()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"removeAll"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Removes all nodes from a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Tree"},{"type":"text","text":" and destroys their keys and values,"},{"type":"text","text":" "},{"type":"text","text":"then resets the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Tree"},{"type":"text","text":"â€™s root to "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/TreeProtocol\/removeAll()","kind":"symbol","type":"topic","url":"\/documentation\/glib\/treeprotocol\/removeall()"},"doc://GLib/documentation/GLib/TreeProtocol/foreach(func:userData:)":{"role":"symbol","title":"foreach(func:userData:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"foreach"},{"kind":"text","text":"("},{"kind":"externalParam","text":"func"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GTraverseFunc","preciseIdentifier":"c:@T@GTraverseFunc"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"userData"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Calls the given function for each of the key\/value pairs in the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Tree"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"The function is passed the key and value of each pair, and the given"},{"type":"text","text":" "},{"type":"codeVoice","code":"data"},{"type":"text","text":" parameter. The tree is traversed in sorted order."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/TreeProtocol\/foreach(func:userData:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/treeprotocol\/foreach(func:userdata:)"},"doc://GLib/documentation/GLib/TreeProtocol":{"role":"symbol","title":"TreeProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"TreeProtocol"}],"abstract":[{"type":"text","text":"The GTree struct is an opaque data structure representing a"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"..\/Protocols\/TreeProtocol.html"},{"type":"text","text":". It should be"},{"type":"text","text":" "},{"type":"text","text":"accessed only by using the following functions."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/TreeProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TreeProtocol"}],"url":"\/documentation\/glib\/treeprotocol"},"doc://GLib/documentation/GLib/TreeProtocol/foreachNode(func:userData:)":{"role":"symbol","title":"foreachNode(func:userData:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"foreachNode"},{"kind":"text","text":"("},{"kind":"externalParam","text":"func"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GTraverseNodeFunc","preciseIdentifier":"c:@T@GTraverseNodeFunc"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"userData"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Calls the given function for each of the nodes in the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Tree"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"The function is passed the pointer to the particular node, and the given"},{"type":"text","text":" "},{"type":"codeVoice","code":"data"},{"type":"text","text":" parameter. The tree traversal happens in-order."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/TreeProtocol\/foreachNode(func:userData:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/treeprotocol\/foreachnode(func:userdata:)"},"doc://GLib/documentation/GLib/TreeProtocol/lowerBound(key:)":{"role":"symbol","title":"lowerBound(key:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"lowerBound"},{"kind":"text","text":"("},{"kind":"externalParam","text":"key"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gconstpointer","preciseIdentifier":"c:@T@gconstpointer"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"TreeNodeRef","preciseIdentifier":"s:4GLib11TreeNodeRefV"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Gets the lower bound node corresponding to the given key,"},{"type":"text","text":" "},{"type":"text","text":"or "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" if the tree is empty or all the nodes in the tree"},{"type":"text","text":" "},{"type":"text","text":"have keys that are strictly lower than the searched key."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/TreeProtocol\/lowerBound(key:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/treeprotocol\/lowerbound(key:)"},"doc://GLib/documentation/GLib/TreeProtocol/traverse(traverseFunc:traverseType:userData:)":{"role":"symbol","title":"traverse(traverseFunc:traverseType:userData:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"traverse"},{"kind":"text","text":"("},{"kind":"externalParam","text":"traverseFunc"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GTraverseFunc","preciseIdentifier":"c:@T@GTraverseFunc"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"traverseType"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GTraverseType","preciseIdentifier":"c:@EA@GTraverseType"},{"kind":"text","text":", "},{"kind":"externalParam","text":"userData"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Calls the given function for each node in the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Tree"},{"type":"text","text":"."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/TreeProtocol\/traverse(traverseFunc:traverseType:userData:)","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/glib\/treeprotocol\/traverse(traversefunc:traversetype:userdata:)"},"doc://GLib/documentation/GLib/TreeProtocol/lookupExtended(lookupKey:origKey:value:)":{"role":"symbol","title":"lookupExtended(lookupKey:origKey:value:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"lookupExtended"},{"kind":"text","text":"("},{"kind":"externalParam","text":"lookupKey"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gconstpointer","preciseIdentifier":"c:@T@gconstpointer"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"origKey"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?>?, "},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?>?) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Looks up a key in the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Tree"},{"type":"text","text":", returning the original key and the"},{"type":"text","text":" "},{"type":"text","text":"associated value. This is useful if you need to free the memory"},{"type":"text","text":" "},{"type":"text","text":"allocated for the original key, for example before calling"},{"type":"text","text":" "},{"type":"codeVoice","code":"g_tree_remove()"},{"type":"text","text":"."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/TreeProtocol\/lookupExtended(lookupKey:origKey:value:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/treeprotocol\/lookupextended(lookupkey:origkey:value:)"},"doc://GLib/documentation/GLib/TreeRef":{"role":"symbol","title":"TreeRef","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TreeRef"}],"abstract":[{"type":"text","text":"The GTree struct is an opaque data structure representing a"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"..\/Protocols\/TreeProtocol.html"},{"type":"text","text":". It should be"},{"type":"text","text":" "},{"type":"text","text":"accessed only by using the following functions."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/TreeRef","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TreeRef"}],"url":"\/documentation\/glib\/treeref"},"doc://GLib/documentation/GLib/TreeProtocol/insert(key:value:)":{"role":"symbol","title":"insert(key:value:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"insert"},{"kind":"text","text":"("},{"kind":"externalParam","text":"key"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Inserts a key\/value pair into a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Tree"},{"type":"text","text":"."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/TreeProtocol\/insert(key:value:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/treeprotocol\/insert(key:value:)"},"doc://GLib/documentation/GLib/TreeProtocol/search(searchFunc:userData:)":{"role":"symbol","title":"search(searchFunc:userData:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"search"},{"kind":"text","text":"("},{"kind":"externalParam","text":"searchFunc"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GCompareFunc","preciseIdentifier":"c:@T@GCompareFunc"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"userData"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gconstpointer","preciseIdentifier":"c:@T@gconstpointer"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Searches a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Tree"},{"type":"text","text":" using "},{"type":"codeVoice","code":"searchFunc"},{"type":"text","text":"."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/TreeProtocol\/search(searchFunc:userData:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/treeprotocol\/search(searchfunc:userdata:)"},"doc://GLib/documentation/GLib/Tree":{"role":"symbol","title":"Tree","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Tree"}],"abstract":[{"type":"text","text":"The GTree struct is an opaque data structure representing a"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"..\/Protocols\/TreeProtocol.html"},{"type":"text","text":". It should be"},{"type":"text","text":" "},{"type":"text","text":"accessed only by using the following functions."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/Tree","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Tree"}],"url":"\/documentation\/glib\/tree"},"doc://GLib/documentation/GLib/TreeProtocol/nodeFirst()":{"role":"symbol","title":"nodeFirst()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"nodeFirst"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"TreeNodeRef","preciseIdentifier":"s:4GLib11TreeNodeRefV"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Returns the first in-order node of the tree, or "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" "},{"type":"text","text":"for an empty tree."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/TreeProtocol\/nodeFirst()","kind":"symbol","type":"topic","url":"\/documentation\/glib\/treeprotocol\/nodefirst()"},"doc://GLib/documentation/GLib/TreeProtocol/insertNode(key:value:)":{"role":"symbol","title":"insertNode(key:value:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"insertNode"},{"kind":"text","text":"("},{"kind":"externalParam","text":"key"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"TreeNodeRef","preciseIdentifier":"s:4GLib11TreeNodeRefV"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Inserts a key\/value pair into a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Tree"},{"type":"text","text":"."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/TreeProtocol\/insertNode(key:value:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/treeprotocol\/insertnode(key:value:)"},"doc://GLib/documentation/GLib/TreeProtocol/destroy()":{"role":"symbol","title":"destroy()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"destroy"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Removes all keys and values from the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Tree"},{"type":"text","text":" and decreases its"},{"type":"text","text":" "},{"type":"text","text":"reference count by one. If keys and\/or values are dynamically"},{"type":"text","text":" "},{"type":"text","text":"allocated, you should either free them first or create the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Tree"},{"type":"text","text":" "},{"type":"text","text":"using "},{"type":"codeVoice","code":"g_tree_new_full()"},{"type":"text","text":". In the latter case the destroy functions"},{"type":"text","text":" "},{"type":"text","text":"you supplied will be called on all keys and values before destroying"},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Tree"},{"type":"text","text":"."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/TreeProtocol\/destroy()","kind":"symbol","type":"topic","url":"\/documentation\/glib\/treeprotocol\/destroy()"},"doc://GLib/documentation/GLib/TreeProtocol/remove(key:)":{"role":"symbol","title":"remove(key:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"remove"},{"kind":"text","text":"("},{"kind":"externalParam","text":"key"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gconstpointer","preciseIdentifier":"c:@T@gconstpointer"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Removes a key\/value pair from a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Tree"},{"type":"text","text":"."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/TreeProtocol\/remove(key:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/treeprotocol\/remove(key:)"},"doc://GLib/documentation/GLib/TreeProtocol/height()":{"role":"symbol","title":"height()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"height"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"abstract":[{"type":"text","text":"Gets the height of a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Tree"},{"type":"text","text":"."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/TreeProtocol\/height()","kind":"symbol","type":"topic","url":"\/documentation\/glib\/treeprotocol\/height()"},"doc://GLib/documentation/GLib/PointerWrapper":{"role":"symbol","title":"PointerWrapper","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"PointerWrapper"}],"abstract":[{"type":"text","text":"Protocol for GLib types that wrap pointers."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/PointerWrapper","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PointerWrapper"}],"url":"\/documentation\/glib\/pointerwrapper"},"doc://GLib/documentation/GLib/TreeProtocol/nodeLast()":{"role":"symbol","title":"nodeLast()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"nodeLast"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"TreeNodeRef","preciseIdentifier":"s:4GLib11TreeNodeRefV"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Returns the last in-order node of the tree, or "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" "},{"type":"text","text":"for an empty tree."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/TreeProtocol\/nodeLast()","kind":"symbol","type":"topic","url":"\/documentation\/glib\/treeprotocol\/nodelast()"},"doc://GLib/documentation/GLib":{"role":"collection","title":"GLib","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib","kind":"symbol","type":"topic","url":"\/documentation\/glib"},"../Protocols/TreeProtocol.html":{"title":"balanced binary tree","titleInlineContent":[{"type":"text","text":"balanced binary tree"}],"type":"link","identifier":"..\/Protocols\/TreeProtocol.html","url":"..\/Protocols\/TreeProtocol.html"},"doc://GLib/documentation/GLib/TreeProtocol/lookupNode(key:)":{"role":"symbol","title":"lookupNode(key:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"lookupNode"},{"kind":"text","text":"("},{"kind":"externalParam","text":"key"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gconstpointer","preciseIdentifier":"c:@T@gconstpointer"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"TreeNodeRef","preciseIdentifier":"s:4GLib11TreeNodeRefV"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Gets the tree node corresponding to the given key. Since a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Tree"},{"type":"text","text":" is"},{"type":"text","text":" "},{"type":"text","text":"automatically balanced as key\/value pairs are added, key lookup"},{"type":"text","text":" "},{"type":"text","text":"is "},{"type":"codeVoice","code":"O(log n)"},{"type":"text","text":" (where n is the number of key\/value pairs in the tree)."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/TreeProtocol\/lookupNode(key:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/treeprotocol\/lookupnode(key:)"},"doc://GLib/documentation/GLib/TreeProtocol/steal(key:)":{"role":"symbol","title":"steal(key:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"steal"},{"kind":"text","text":"("},{"kind":"externalParam","text":"key"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gconstpointer","preciseIdentifier":"c:@T@gconstpointer"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Removes a key and its associated value from a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Tree"},{"type":"text","text":" without calling"},{"type":"text","text":" "},{"type":"text","text":"the key and value destroy functions."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/TreeProtocol\/steal(key:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/treeprotocol\/steal(key:)"},"doc://GLib/documentation/GLib/TreeProtocol/lookup(key:)":{"role":"symbol","title":"lookup(key:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"lookup"},{"kind":"text","text":"("},{"kind":"externalParam","text":"key"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gconstpointer","preciseIdentifier":"c:@T@gconstpointer"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Gets the value corresponding to the given key. Since a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Tree"},{"type":"text","text":" is"},{"type":"text","text":" "},{"type":"text","text":"automatically balanced as key\/value pairs are added, key lookup"},{"type":"text","text":" "},{"type":"text","text":"is "},{"type":"codeVoice","code":"O(log n)"},{"type":"text","text":" (where n is the number of key\/value pairs in the tree)."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/TreeProtocol\/lookup(key:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/treeprotocol\/lookup(key:)"},"doc://GLib/documentation/GLib/TreeProtocol/nnodes()":{"role":"symbol","title":"nnodes()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"nnodes"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"abstract":[{"type":"text","text":"Gets the number of nodes in a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Tree"},{"type":"text","text":"."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/TreeProtocol\/nnodes()","kind":"symbol","type":"topic","url":"\/documentation\/glib\/treeprotocol\/nnodes()"},"doc://GLib/documentation/GLib/TreeProtocol/upperBound(key:)":{"role":"symbol","title":"upperBound(key:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"upperBound"},{"kind":"text","text":"("},{"kind":"externalParam","text":"key"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gconstpointer","preciseIdentifier":"c:@T@gconstpointer"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"TreeNodeRef","preciseIdentifier":"s:4GLib11TreeNodeRefV"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Gets the upper bound node corresponding to the given key,"},{"type":"text","text":" "},{"type":"text","text":"or "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" if the tree is empty or all the nodes in the tree"},{"type":"text","text":" "},{"type":"text","text":"have keys that are lower than or equal to the searched key."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/TreeProtocol\/upperBound(key:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/treeprotocol\/upperbound(key:)"},"doc://GLib/documentation/GLib/TreeProtocol/searchNode(searchFunc:userData:)":{"role":"symbol","title":"searchNode(searchFunc:userData:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"searchNode"},{"kind":"text","text":"("},{"kind":"externalParam","text":"searchFunc"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GCompareFunc","preciseIdentifier":"c:@T@GCompareFunc"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"userData"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gconstpointer","preciseIdentifier":"c:@T@gconstpointer"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"TreeNodeRef","preciseIdentifier":"s:4GLib11TreeNodeRefV"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Searches a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Tree"},{"type":"text","text":" using "},{"type":"codeVoice","code":"searchFunc"},{"type":"text","text":"."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/TreeProtocol\/searchNode(searchFunc:userData:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/treeprotocol\/searchnode(searchfunc:userdata:)"},"doc://GLib/documentation/GLib/TreeProtocol/tree_ptr-8bl6m":{"defaultImplementations":1,"role":"symbol","title":"tree_ptr","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"tree_ptr"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GTree"},{"kind":"text","text":">!"}],"abstract":[{"type":"text","text":"Typed pointer to the underlying "},{"type":"codeVoice","code":"GTree"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/TreeProtocol\/tree_ptr-8bl6m","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/glib\/treeprotocol\/tree_ptr-8bl6m"},"doc://GLib/documentation/GLib/TreeProtocol/replace(key:value:)":{"role":"symbol","title":"replace(key:value:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"replace"},{"kind":"text","text":"("},{"kind":"externalParam","text":"key"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Inserts a new key and value into a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Tree"},{"type":"text","text":" as "},{"type":"codeVoice","code":"g_tree_replace_node()"},{"type":"text","text":" does,"},{"type":"text","text":" "},{"type":"text","text":"only this function does not return the inserted or set node."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/TreeProtocol\/replace(key:value:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/treeprotocol\/replace(key:value:)"},"doc://GLib/documentation/GLib/TreeProtocol/unref()":{"role":"symbol","title":"unref()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unref"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Decrements the reference count of "},{"type":"codeVoice","code":"tree"},{"type":"text","text":" by one."},{"type":"text","text":" "},{"type":"text","text":"If the reference count drops to 0, all keys and values will"},{"type":"text","text":" "},{"type":"text","text":"be destroyed (if destroy functions were specified) and all"},{"type":"text","text":" "},{"type":"text","text":"memory allocated by "},{"type":"codeVoice","code":"tree"},{"type":"text","text":" will be released."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/TreeProtocol\/unref()","kind":"symbol","type":"topic","url":"\/documentation\/glib\/treeprotocol\/unref()"},"doc://GLib/documentation/GLib/TreeProtocol/ref()":{"role":"symbol","title":"ref()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"ref"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"TreeRef","preciseIdentifier":"s:4GLib7TreeRefV"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Increments the reference count of "},{"type":"codeVoice","code":"tree"},{"type":"text","text":" by one."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/TreeProtocol\/ref()","kind":"symbol","type":"topic","url":"\/documentation\/glib\/treeprotocol\/ref()"},"doc://GLib/documentation/GLib/TreeProtocol/replaceNode(key:value:)":{"role":"symbol","title":"replaceNode(key:value:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"replaceNode"},{"kind":"text","text":"("},{"kind":"externalParam","text":"key"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"TreeNodeRef","preciseIdentifier":"s:4GLib11TreeNodeRefV"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Inserts a new key and value into a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Tree"},{"type":"text","text":" similar to "},{"type":"codeVoice","code":"g_tree_insert_node()"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"The difference is that if the key already exists in the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Tree"},{"type":"text","text":", it gets"},{"type":"text","text":" "},{"type":"text","text":"replaced by the new key. If you supplied a "},{"type":"codeVoice","code":"value_destroy_func"},{"type":"text","text":" when"},{"type":"text","text":" "},{"type":"text","text":"creating the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Tree"},{"type":"text","text":", the old value is freed using that function. If you"},{"type":"text","text":" "},{"type":"text","text":"supplied a "},{"type":"codeVoice","code":"key_destroy_func"},{"type":"text","text":" when creating the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Tree"},{"type":"text","text":", the old key is"},{"type":"text","text":" "},{"type":"text","text":"freed using that function."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/TreeProtocol\/replaceNode(key:value:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/treeprotocol\/replacenode(key:value:)"}}}