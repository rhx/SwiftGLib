{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"steal"},{"kind":"text","text":"("},{"kind":"externalParam","text":"len"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gsize","preciseIdentifier":"c:@T@gsize"},{"kind":"text","text":">! = nil) -> "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?>?"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Note that if the array is "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" terminated this may still return"},{"type":"text","text":" "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" if the length of the array was zero and pdata was not yet"},{"type":"text","text":" "},{"type":"text","text":"allocated."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Even if set, the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/DestroyNotify"},{"type":"text","text":" function will never be called"},{"type":"text","text":" "},{"type":"text","text":"on the current contents of the array and the caller is"},{"type":"text","text":" "},{"type":"text","text":"responsible for freeing the array elements."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"An example of use:"},{"type":"text","text":" "},{"type":"text","text":"(C Language Example):"}]},{"type":"codeListing","syntax":"C","code":["g_autoptr(GPtrArray) chunk_buffer = g_ptr_array_new_with_free_func (g_bytes_unref);","","\/\/ Some part of your application appends a number of chunks to the pointer array.","g_ptr_array_add (chunk_buffer, g_bytes_new_static (\"hello\", 5));","g_ptr_array_add (chunk_buffer, g_bytes_new_static (\"world\", 5));","","…","","\/\/ Periodically, the chunks need to be sent as an array-and-length to some","\/\/ other part of the program.","GBytes **chunks;","gsize n_chunks;","","chunks = g_ptr_array_steal (chunk_buffer, &n_chunks);","for (gsize i = 0; i < n_chunks; i++)","  {","    \/\/ Do something with each chunk here, and then free them, since","    \/\/ g_ptr_array_steal() transfers ownership of all the elements and the","    \/\/ array to the caller.","    …","","    g_bytes_unref (chunks[i]);","  }","","g_free (chunks);","","\/\/ After calling g_ptr_array_steal(), the pointer array can be reused for the","\/\/ next set of chunks.","g_assert (chunk_buffer->len == 0);"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/glib\/ptrarrayprotocol\/steal(len:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/GLib\/documentation\/GLib\/PtrArrayProtocol\/steal(len:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Frees the data in the array and resets the size to zero, while"},{"type":"text","text":" "},{"type":"text","text":"the underlying array is preserved for use elsewhere and returned"},{"type":"text","text":" "},{"type":"text","text":"to the caller."}],"kind":"symbol","metadata":{"role":"symbol","title":"steal(len:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"steal"},{"kind":"text","text":"("},{"kind":"externalParam","text":"len"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gsize","preciseIdentifier":"c:@T@gsize"},{"kind":"text","text":">!) -> "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?>?"}],"symbolKind":"method","externalID":"s:4GLib16PtrArrayProtocolPAAE5steal3lenSpySvSgGSgSpySuGSg_tF","extendedModule":"GLib","modules":[{"name":"GLib"}]},"hierarchy":{"paths":[["doc:\/\/GLib\/documentation\/GLib","doc:\/\/GLib\/documentation\/GLib\/PtrArrayProtocol"]]},"references":{"doc://GLib/documentation/GLib":{"role":"collection","title":"GLib","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib","kind":"symbol","type":"topic","url":"\/documentation\/glib"},"doc://GLib/documentation/GLib/PtrArrayProtocol":{"role":"symbol","title":"PtrArrayProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"PtrArrayProtocol"}],"abstract":[{"type":"text","text":"Contains the public fields of a pointer array."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/PtrArrayProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PtrArrayProtocol"}],"url":"\/documentation\/glib\/ptrarrayprotocol"},"doc://GLib/documentation/GLib/PtrArrayProtocol/steal(len:)":{"role":"symbol","title":"steal(len:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"steal"},{"kind":"text","text":"("},{"kind":"externalParam","text":"len"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gsize","preciseIdentifier":"c:@T@gsize"},{"kind":"text","text":">!) -> "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?>?"}],"abstract":[{"type":"text","text":"Frees the data in the array and resets the size to zero, while"},{"type":"text","text":" "},{"type":"text","text":"the underlying array is preserved for use elsewhere and returned"},{"type":"text","text":" "},{"type":"text","text":"to the caller."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/PtrArrayProtocol\/steal(len:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/ptrarrayprotocol\/steal(len:)"},"doc://GLib/documentation/GLib/DestroyNotify":{"role":"symbol","title":"DestroyNotify","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"DestroyNotify"}],"abstract":[{"type":"text","text":"Specifies the type of function which is called when a data element"},{"type":"text","text":" "},{"type":"text","text":"is destroyed. It is passed the pointer to the data element and"},{"type":"text","text":" "},{"type":"text","text":"should free any memory and resources allocated for it."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/DestroyNotify","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DestroyNotify"}],"url":"\/documentation\/glib\/destroynotify"}}}