{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unlock"},{"kind":"text","text":"()"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Calling "},{"type":"codeVoice","code":"g_mutex_unlock()"},{"type":"text","text":" on a mutex that is not locked by the"},{"type":"text","text":" "},{"type":"text","text":"current thread leads to undefined behaviour."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/glib\/mutex\/unlock()"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/GLib\/documentation\/GLib\/Mutex\/unlock()","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Unlocks "},{"type":"codeVoice","code":"mutex"},{"type":"text","text":". If another thread is blocked in a "},{"type":"codeVoice","code":"g_mutex_lock()"},{"type":"text","text":" "},{"type":"text","text":"call for "},{"type":"codeVoice","code":"mutex"},{"type":"text","text":", it will become unblocked and can lock "},{"type":"codeVoice","code":"mutex"},{"type":"text","text":" itself."}],"kind":"symbol","metadata":{"role":"symbol","title":"unlock()","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unlock"},{"kind":"text","text":"()"}],"symbolKind":"method","externalID":"s:4GLib13MutexProtocolPAAE6unlockyyF::SYNTHESIZED::s:4GLib5MutexC","extendedModule":"GLib","modules":[{"name":"GLib"}]},"hierarchy":{"paths":[["doc:\/\/GLib\/documentation\/GLib","doc:\/\/GLib\/documentation\/GLib\/Mutex","doc:\/\/GLib\/documentation\/GLib\/Mutex\/MutexProtocol-Implementations"]]},"references":{"doc://GLib/documentation/GLib/Mutex/unlock()":{"role":"symbol","title":"unlock()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unlock"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Unlocks "},{"type":"codeVoice","code":"mutex"},{"type":"text","text":". If another thread is blocked in a "},{"type":"codeVoice","code":"g_mutex_lock()"},{"type":"text","text":" "},{"type":"text","text":"call for "},{"type":"codeVoice","code":"mutex"},{"type":"text","text":", it will become unblocked and can lock "},{"type":"codeVoice","code":"mutex"},{"type":"text","text":" itself."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/Mutex\/unlock()","kind":"symbol","type":"topic","url":"\/documentation\/glib\/mutex\/unlock()"},"doc://GLib/documentation/GLib/Mutex":{"role":"symbol","title":"Mutex","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Mutex"}],"abstract":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Mutex"},{"type":"text","text":" struct is an opaque data structure to represent a mutex"},{"type":"text","text":" "},{"type":"text","text":"(mutual exclusion). It can be used to protect data against shared"},{"type":"text","text":" "},{"type":"text","text":"access."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/Mutex","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Mutex"}],"url":"\/documentation\/glib\/mutex"},"doc://GLib/documentation/GLib":{"role":"collection","title":"GLib","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib","kind":"symbol","type":"topic","url":"\/documentation\/glib"},"doc://GLib/documentation/GLib/Mutex/MutexProtocol-Implementations":{"role":"collectionGroup","title":"MutexProtocol Implementations","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib\/Mutex\/MutexProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/glib\/mutex\/mutexprotocol-implementations"}}}