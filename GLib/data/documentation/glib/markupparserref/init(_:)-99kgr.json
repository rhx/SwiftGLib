{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"!("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"maybePointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GMarkupParser"},{"kind":"text","text":">?)"}],"languages":["swift"],"platforms":["macOS"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/glib\/markupparserref\/init(_:)-99kgr"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/GLib\/documentation\/GLib\/MarkupParserRef\/init(_:)-99kgr","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Conditional initialiser from an optional, non-mutable pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"kind":"symbol","metadata":{"role":"symbol","title":"init(_:)","roleHeading":"Initializer","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GMarkupParser"},{"kind":"text","text":">?)"}],"symbolKind":"init","externalID":"s:4GLib15MarkupParserRefVyACSgSPySo08_GMarkupC0VGSgcfc","extendedModule":"GLib","modules":[{"name":"GLib"}]},"hierarchy":{"paths":[["doc:\/\/GLib\/documentation\/GLib","doc:\/\/GLib\/documentation\/GLib\/MarkupParserRef"]]},"references":{"doc://GLib/documentation/GLib":{"role":"collection","title":"GLib","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib","kind":"symbol","type":"topic","url":"\/documentation\/glib"},"doc://GLib/documentation/GLib/MarkupParserRef":{"role":"symbol","title":"MarkupParserRef","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MarkupParserRef"}],"abstract":[{"type":"text","text":"Any of the fields in "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/MarkupParser"},{"type":"text","text":" can be "},{"type":"codeVoice","code":"nil"},{"type":"text","text":", in which case they"},{"type":"text","text":" "},{"type":"text","text":"will be ignored. Except for the "},{"type":"codeVoice","code":"error"},{"type":"text","text":" function, any of these callbacks"},{"type":"text","text":" "},{"type":"text","text":"can set an error; in particular the "},{"type":"codeVoice","code":"unknownElement"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"codeVoice","code":"unknownAttribute"},{"type":"text","text":", and "},{"type":"codeVoice","code":"invalidContent"},{"type":"text","text":" "},{"type":"text","text":"errors are intended to be set from these callbacks. If you set an error"},{"type":"text","text":" "},{"type":"text","text":"from a callback, "},{"type":"codeVoice","code":"g_markup_parse_context_parse()"},{"type":"text","text":" will report that error"},{"type":"text","text":" "},{"type":"text","text":"back to its caller."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/MarkupParserRef","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MarkupParserRef"}],"url":"\/documentation\/glib\/markupparserref"},"doc://GLib/documentation/GLib/MarkupParser":{"role":"symbol","title":"MarkupParser","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MarkupParser"}],"abstract":[{"type":"text","text":"Any of the fields in "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/MarkupParser"},{"type":"text","text":" can be "},{"type":"codeVoice","code":"nil"},{"type":"text","text":", in which case they"},{"type":"text","text":" "},{"type":"text","text":"will be ignored. Except for the "},{"type":"codeVoice","code":"error"},{"type":"text","text":" function, any of these callbacks"},{"type":"text","text":" "},{"type":"text","text":"can set an error; in particular the "},{"type":"codeVoice","code":"unknownElement"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"codeVoice","code":"unknownAttribute"},{"type":"text","text":", and "},{"type":"codeVoice","code":"invalidContent"},{"type":"text","text":" "},{"type":"text","text":"errors are intended to be set from these callbacks. If you set an error"},{"type":"text","text":" "},{"type":"text","text":"from a callback, "},{"type":"codeVoice","code":"g_markup_parse_context_parse()"},{"type":"text","text":" will report that error"},{"type":"text","text":" "},{"type":"text","text":"back to its caller."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/MarkupParser","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MarkupParser"}],"url":"\/documentation\/glib\/markupparser"},"doc://GLib/documentation/GLib/MarkupParserRef/init(_:)-99kgr":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GMarkupParser"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional, non-mutable pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/MarkupParserRef\/init(_:)-99kgr","kind":"symbol","type":"topic","url":"\/documentation\/glib\/markupparserref\/init(_:)-99kgr"}}}