{"variants":[{"paths":["\/documentation\/glib\/markupparserref\/pointerwrapper-implementations"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"identifier":{"url":"doc:\/\/GLib\/documentation\/GLib\/MarkupParserRef\/PointerWrapper-Implementations","interfaceLanguage":"swift"},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/GLib\/documentation\/GLib\/MarkupParserRef\/init(raw:)"],"generated":true}],"kind":"article","metadata":{"modules":[{"name":"GLib"}],"role":"collectionGroup","title":"PointerWrapper Implementations"},"hierarchy":{"paths":[["doc:\/\/GLib\/documentation\/GLib","doc:\/\/GLib\/documentation\/GLib\/MarkupParserRef"]]},"references":{"doc://GLib/documentation/GLib/MarkupParserRef":{"role":"symbol","title":"MarkupParserRef","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MarkupParserRef"}],"abstract":[{"type":"text","text":"Any of the fields in "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/MarkupParser"},{"type":"text","text":" can be "},{"type":"codeVoice","code":"nil"},{"type":"text","text":", in which case they"},{"type":"text","text":" "},{"type":"text","text":"will be ignored. Except for the "},{"type":"codeVoice","code":"error"},{"type":"text","text":" function, any of these callbacks"},{"type":"text","text":" "},{"type":"text","text":"can set an error; in particular the "},{"type":"codeVoice","code":"unknownElement"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"codeVoice","code":"unknownAttribute"},{"type":"text","text":", and "},{"type":"codeVoice","code":"invalidContent"},{"type":"text","text":" "},{"type":"text","text":"errors are intended to be set from these callbacks. If you set an error"},{"type":"text","text":" "},{"type":"text","text":"from a callback, "},{"type":"codeVoice","code":"g_markup_parse_context_parse()"},{"type":"text","text":" will report that error"},{"type":"text","text":" "},{"type":"text","text":"back to its caller."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/MarkupParserRef","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MarkupParserRef"}],"url":"\/documentation\/glib\/markupparserref"},"doc://GLib/documentation/GLib/MarkupParser":{"role":"symbol","title":"MarkupParser","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MarkupParser"}],"abstract":[{"type":"text","text":"Any of the fields in "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/MarkupParser"},{"type":"text","text":" can be "},{"type":"codeVoice","code":"nil"},{"type":"text","text":", in which case they"},{"type":"text","text":" "},{"type":"text","text":"will be ignored. Except for the "},{"type":"codeVoice","code":"error"},{"type":"text","text":" function, any of these callbacks"},{"type":"text","text":" "},{"type":"text","text":"can set an error; in particular the "},{"type":"codeVoice","code":"unknownElement"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"codeVoice","code":"unknownAttribute"},{"type":"text","text":", and "},{"type":"codeVoice","code":"invalidContent"},{"type":"text","text":" "},{"type":"text","text":"errors are intended to be set from these callbacks. If you set an error"},{"type":"text","text":" "},{"type":"text","text":"from a callback, "},{"type":"codeVoice","code":"g_markup_parse_context_parse()"},{"type":"text","text":" will report that error"},{"type":"text","text":" "},{"type":"text","text":"back to its caller."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/MarkupParser","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MarkupParser"}],"url":"\/documentation\/glib\/markupparser"},"doc://GLib/documentation/GLib":{"role":"collection","title":"GLib","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib","kind":"symbol","type":"topic","url":"\/documentation\/glib"},"doc://GLib/documentation/GLib/MarkupParserProtocol":{"role":"symbol","title":"MarkupParserProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MarkupParserProtocol"}],"abstract":[{"type":"text","text":"Any of the fields in "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/MarkupParser"},{"type":"text","text":" can be "},{"type":"codeVoice","code":"nil"},{"type":"text","text":", in which case they"},{"type":"text","text":" "},{"type":"text","text":"will be ignored. Except for the "},{"type":"codeVoice","code":"error"},{"type":"text","text":" function, any of these callbacks"},{"type":"text","text":" "},{"type":"text","text":"can set an error; in particular the "},{"type":"codeVoice","code":"unknownElement"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"codeVoice","code":"unknownAttribute"},{"type":"text","text":", and "},{"type":"codeVoice","code":"invalidContent"},{"type":"text","text":" "},{"type":"text","text":"errors are intended to be set from these callbacks. If you set an error"},{"type":"text","text":" "},{"type":"text","text":"from a callback, "},{"type":"codeVoice","code":"g_markup_parse_context_parse()"},{"type":"text","text":" will report that error"},{"type":"text","text":" "},{"type":"text","text":"back to its caller."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/MarkupParserProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MarkupParserProtocol"}],"url":"\/documentation\/glib\/markupparserprotocol"},"doc://GLib/documentation/GLib/MarkupParserRef/init(raw:)":{"role":"symbol","title":"init(raw:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"raw"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutableRawPointer","preciseIdentifier":"s:Sv"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/MarkupParserProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/MarkupParserRef\/init(raw:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/markupparserref\/init(raw:)"}}}