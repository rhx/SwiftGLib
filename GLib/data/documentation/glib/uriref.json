{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"URIRef"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Since "},{"type":"codeVoice","code":"GUri"},{"type":"text","text":" only represents absolute URIs, all "},{"type":"codeVoice","code":"GUri"},{"type":"text","text":"s will have a"},{"type":"text","text":" "},{"type":"text","text":"URI scheme, so [method"},{"type":"codeVoice","code":"GLib.URI.get_scheme"},{"type":"text","text":"] will always return a non-"},{"type":"codeVoice","code":"NULL"},{"type":"text","text":" "},{"type":"text","text":"answer. Likewise, by definition, all URIs have a path component, so"},{"type":"text","text":" "},{"type":"text","text":"[method"},{"type":"codeVoice","code":"GLib.URI.get_path"},{"type":"text","text":"] will always return a non-"},{"type":"codeVoice","code":"NULL"},{"type":"text","text":" string (which may"},{"type":"text","text":" "},{"type":"text","text":"be empty)."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If the URI string has an"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"https:\/\/tools.ietf.org\/html\/rfc3986#section-3"},{"type":"text","text":" (that"},{"type":"text","text":" "},{"type":"text","text":"is, if the scheme is followed by "},{"type":"codeVoice","code":":\/\/"},{"type":"text","text":" rather than just "},{"type":"codeVoice","code":":"},{"type":"text","text":"), then the"},{"type":"text","text":" "},{"type":"codeVoice","code":"GUri"},{"type":"text","text":" will contain a hostname, and possibly a port and ‘userinfo’."},{"type":"text","text":" "},{"type":"text","text":"Additionally, depending on how the "},{"type":"codeVoice","code":"GUri"},{"type":"text","text":" was constructed\/parsed (for example,"},{"type":"text","text":" "},{"type":"text","text":"using the "},{"type":"codeVoice","code":"G_URI_FLAGS_HAS_PASSWORD"},{"type":"text","text":" and "},{"type":"codeVoice","code":"G_URI_FLAGS_HAS_AUTH_PARAMS"},{"type":"text","text":" flags),"},{"type":"text","text":" "},{"type":"text","text":"the userinfo may be split out into a username, password, and"},{"type":"text","text":" "},{"type":"text","text":"additional authorization-related parameters."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Normally, the components of a "},{"type":"codeVoice","code":"GUri"},{"type":"text","text":" will have all "},{"type":"codeVoice","code":"-encoded characters decoded. However, if you construct\/parse a `GUri` with `G_URI_FLAGS_ENCODED`, then the "},{"type":"text","text":"-encoding will be preserved instead in"},{"type":"text","text":" "},{"type":"text","text":"the userinfo, path, and query fields (and in the host field if also"},{"type":"text","text":" "},{"type":"text","text":"created with "},{"type":"codeVoice","code":"G_URI_FLAGS_NON_DNS"},{"type":"text","text":"). In particular, this is necessary if"},{"type":"text","text":" "},{"type":"text","text":"the URI may contain binary data or non-UTF-8 text, or if decoding"},{"type":"text","text":" "},{"type":"text","text":"the components might change the interpretation of the URI."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example, with the encoded flag:"}]},{"type":"codeListing","syntax":"c","code":["`g_autoptr(GUri)` uri = g_uri_parse (\"http:\/\/host\/path?query=http`3A``2F``2Fhost``2Fpath``3Fparam``3Dvalue`\", G_URI_FLAGS_ENCODED, &err);","g_assert_cmpstr (g_uri_get_query (uri), ==, \"query=http`3A``2F``2Fhost``2Fpath``3Fparam``3Dvalue`\");"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"While the default ````-decoding behaviour would give:"}]},{"type":"codeListing","syntax":"c","code":["`g_autoptr(GUri)` uri = g_uri_parse (\"http:\/\/host\/path?query=http`3A``2F``2Fhost``2Fpath``3Fparam``3Dvalue`\", G_URI_FLAGS_NONE, &err);","g_assert_cmpstr (g_uri_get_query (uri), ==, \"query=http:\/\/host\/path?param=value\");"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"During decoding, if an invalid UTF-8 string is encountered, parsing will fail"},{"type":"text","text":" "},{"type":"text","text":"with an error indicating the bad string location:"}]},{"type":"codeListing","syntax":"c","code":["`g_autoptr(GUri)` uri = g_uri_parse (\"http:\/\/host\/path?query=http`3A``2F``2Fhost``2Fpath``3Fbad``3D``00alue`\", G_URI_FLAGS_NONE, &err);","g_assert_error (err, G_URI_ERROR, G_URI_ERROR_BAD_QUERY);"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You should pass "},{"type":"codeVoice","code":"G_URI_FLAGS_ENCODED"},{"type":"text","text":" or "},{"type":"codeVoice","code":"G_URI_FLAGS_ENCODED_QUERY"},{"type":"text","text":" if you"},{"type":"text","text":" "},{"type":"text","text":"need to handle that case manually. In particular, if the query string"},{"type":"text","text":" "},{"type":"text","text":"contains "},{"type":"codeVoice","code":"="},{"type":"text","text":" characters that are ````-encoded, you should let"},{"type":"text","text":" "},{"type":"text","text":"[func"},{"type":"codeVoice","code":"GLib.URI.parse_params"},{"type":"text","text":"] do the decoding once of the query."}]},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"GUri"},{"type":"text","text":" is immutable once constructed, and can safely be accessed from"},{"type":"text","text":" "},{"type":"text","text":"multiple threads. Its reference counting is atomic."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Note that the scope of "},{"type":"codeVoice","code":"GUri"},{"type":"text","text":" is to help manipulate URIs in various applications,"},{"type":"text","text":" "},{"type":"text","text":"following "},{"type":"reference","isActive":true,"identifier":"https:\/\/tools.ietf.org\/html\/rfc3986"},{"type":"text","text":". In particular,"},{"type":"text","text":" "},{"type":"text","text":"it doesn’t intend to cover web browser needs, and doesn’t implement the"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"https:\/\/url.spec.whatwg.org\/"},{"type":"text","text":" standard. No APIs are provided to"},{"type":"text","text":" "},{"type":"text","text":"help prevent"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"https:\/\/en.wikipedia.org\/wiki\/IDN_homograph_attack"},{"type":"text","text":", so"},{"type":"text","text":" "},{"type":"codeVoice","code":"GUri"},{"type":"text","text":" is not suitable for formatting URIs for display to the user for making"},{"type":"text","text":" "},{"type":"text","text":"security-sensitive decisions."}]},{"anchor":"Relative-and-absolute-URIs","level":2,"type":"heading","text":"Relative and absolute URIs"},{"type":"paragraph","inlineContent":[{"type":"text","text":"As defined in "},{"type":"reference","isActive":true,"identifier":"https:\/\/tools.ietf.org\/html\/rfc3986#section-4"},{"type":"text","text":", the"},{"type":"text","text":" "},{"type":"text","text":"hierarchical nature of URIs means that they can either be ‘relative"},{"type":"text","text":" "},{"type":"text","text":"references’ (sometimes referred to as ‘relative URIs’) or ‘URIs’ (for"},{"type":"text","text":" "},{"type":"text","text":"clarity, ‘URIs’ are referred to in this documentation as"},{"type":"text","text":" "},{"type":"text","text":"‘absolute URIs’ — although"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"https:\/\/tools.ietf.org\/html\/rfc3986#section-4.3"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"fragment identifiers are always allowed)."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Relative references have one or more components of the URI missing. In"},{"type":"text","text":" "},{"type":"text","text":"particular, they have no scheme. Any other component, such as hostname,"},{"type":"text","text":" "},{"type":"text","text":"query, etc. may be missing, apart from a path, which has to be specified (but"},{"type":"text","text":" "},{"type":"text","text":"may be empty). The path may be relative, starting with "},{"type":"codeVoice","code":".\/"},{"type":"text","text":" rather than "},{"type":"codeVoice","code":"\/"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example, a valid relative reference is "},{"type":"codeVoice","code":".\/path?query"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"codeVoice","code":"\/?query"},{"type":"text","text":"fragment`` or "},{"type":"codeVoice","code":"\/\/example.com"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Absolute URIs have a scheme specified. Any other components of the URI which"},{"type":"text","text":" "},{"type":"text","text":"are missing are specified as explicitly unset in the URI, rather than being"},{"type":"text","text":" "},{"type":"text","text":"resolved relative to a base URI using [method"},{"type":"codeVoice","code":"GLib.URI.parse_relative"},{"type":"text","text":"]."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example, a valid absolute URI is "},{"type":"codeVoice","code":"file:\/\/\/home\/bob"},{"type":"text","text":" or"},{"type":"text","text":" "},{"type":"codeVoice","code":"https:\/\/search.com?query=string"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"A "},{"type":"codeVoice","code":"GUri"},{"type":"text","text":" instance is always an absolute URI. A string may be an absolute URI"},{"type":"text","text":" "},{"type":"text","text":"or a relative reference; see the documentation for individual functions as to"},{"type":"text","text":" "},{"type":"text","text":"what forms they accept."}]},{"anchor":"Parsing-URIs","level":2,"type":"heading","text":"Parsing URIs"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The most minimalist APIs for parsing URIs are [func"},{"type":"codeVoice","code":"GLib.URI.split"},{"type":"text","text":"] and"},{"type":"text","text":" "},{"type":"text","text":"[func"},{"type":"codeVoice","code":"GLib.URI.split_with_user"},{"type":"text","text":"]. These split a URI into its component"},{"type":"text","text":" "},{"type":"text","text":"parts, and return the parts; the difference between the two is that"},{"type":"text","text":" "},{"type":"text","text":"[func"},{"type":"codeVoice","code":"GLib.URI.split"},{"type":"text","text":"] treats the ‘userinfo’ component of the URI as a"},{"type":"text","text":" "},{"type":"text","text":"single element, while [func"},{"type":"codeVoice","code":"GLib.URI.split_with_user"},{"type":"text","text":"] can (depending on the"},{"type":"text","text":" "},{"type":"text","text":"[flags"},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/URIFlags"},{"type":"text","text":"] you pass) treat it as containing a username, password,"},{"type":"text","text":" "},{"type":"text","text":"and authentication parameters. Alternatively, [func"},{"type":"codeVoice","code":"GLib.URI.split_network"},{"type":"text","text":"]"},{"type":"text","text":" "},{"type":"text","text":"can be used when you are only interested in the components that are"},{"type":"text","text":" "},{"type":"text","text":"needed to initiate a network connection to the service (scheme,"},{"type":"text","text":" "},{"type":"text","text":"host, and port)."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"[func"},{"type":"codeVoice","code":"GLib.URI.parse"},{"type":"text","text":"] is similar to [func"},{"type":"codeVoice","code":"GLib.URI.split"},{"type":"text","text":"], but instead of"},{"type":"text","text":" "},{"type":"text","text":"returning individual strings, it returns a "},{"type":"codeVoice","code":"GUri"},{"type":"text","text":" structure (and it requires"},{"type":"text","text":" "},{"type":"text","text":"that the URI be an absolute URI)."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"[func"},{"type":"codeVoice","code":"GLib.URI.resolve_relative"},{"type":"text","text":"] and [method"},{"type":"codeVoice","code":"GLib.URI.parse_relative"},{"type":"text","text":"] allow"},{"type":"text","text":" "},{"type":"text","text":"you to resolve a relative URI relative to a base URI."},{"type":"text","text":" "},{"type":"text","text":"[func"},{"type":"codeVoice","code":"GLib.URI.resolve_relative"},{"type":"text","text":"] takes two strings and returns a string,"},{"type":"text","text":" "},{"type":"text","text":"and [method"},{"type":"codeVoice","code":"GLib.URI.parse_relative"},{"type":"text","text":"] takes a "},{"type":"codeVoice","code":"GUri"},{"type":"text","text":" and a string and returns a"},{"type":"text","text":" "},{"type":"codeVoice","code":"GUri"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"All of the parsing functions take a [flags"},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/URIFlags"},{"type":"text","text":"] argument describing"},{"type":"text","text":" "},{"type":"text","text":"exactly how to parse the URI; see the documentation for that type"},{"type":"text","text":" "},{"type":"text","text":"for more details on the specific flags that you can pass. If you"},{"type":"text","text":" "},{"type":"text","text":"need to choose different flags based on the type of URI, you can"},{"type":"text","text":" "},{"type":"text","text":"use [func"},{"type":"codeVoice","code":"GLib.URI.peek_scheme"},{"type":"text","text":"] on the URI string to check the scheme"},{"type":"text","text":" "},{"type":"text","text":"first, and use that to decide what flags to parse it with."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example, you might want to use "},{"type":"codeVoice","code":"G_URI_PARAMS_WWW_FORM"},{"type":"text","text":" when parsing the"},{"type":"text","text":" "},{"type":"text","text":"params for a web URI, so compare the result of [func"},{"type":"codeVoice","code":"GLib.URI.peek_scheme"},{"type":"text","text":"]"},{"type":"text","text":" "},{"type":"text","text":"against "},{"type":"codeVoice","code":"http"},{"type":"text","text":" and "},{"type":"codeVoice","code":"https"},{"type":"text","text":"."}]},{"anchor":"Building-URIs","level":2,"type":"heading","text":"Building URIs"},{"type":"paragraph","inlineContent":[{"type":"text","text":"[func"},{"type":"codeVoice","code":"GLib.URI.join"},{"type":"text","text":"] and [func"},{"type":"codeVoice","code":"GLib.URI.join_with_user"},{"type":"text","text":"] can be used to construct"},{"type":"text","text":" "},{"type":"text","text":"valid URI strings from a set of component strings. They are the"},{"type":"text","text":" "},{"type":"text","text":"inverse of [func"},{"type":"codeVoice","code":"GLib.URI.split"},{"type":"text","text":"] and [func"},{"type":"codeVoice","code":"GLib.URI.split_with_user"},{"type":"text","text":"]."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Similarly, [func"},{"type":"codeVoice","code":"GLib.URI.build"},{"type":"text","text":"] and [func"},{"type":"codeVoice","code":"GLib.URI.build_with_user"},{"type":"text","text":"] can be"},{"type":"text","text":" "},{"type":"text","text":"used to construct a "},{"type":"codeVoice","code":"GUri"},{"type":"text","text":" from a set of component strings."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"As with the parsing functions, the building functions take a"},{"type":"text","text":" "},{"type":"text","text":"[flags"},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/URIFlags"},{"type":"text","text":"] argument. In particular, it is important to keep in mind"},{"type":"text","text":" "},{"type":"text","text":"whether the URI components you are using are already ````-encoded. If so,"},{"type":"text","text":" "},{"type":"text","text":"you must pass the "},{"type":"codeVoice","code":"G_URI_FLAGS_ENCODED"},{"type":"text","text":" flag."}]},{"anchor":"file-URIs","level":2,"type":"heading","text":"`file:\/\/` URIs"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Note that Windows and Unix both define special rules for parsing"},{"type":"text","text":" "},{"type":"codeVoice","code":"file:\/\/"},{"type":"text","text":" URIs (involving non-UTF-8 character sets on Unix, and the"},{"type":"text","text":" "},{"type":"text","text":"interpretation of path separators on Windows). "},{"type":"codeVoice","code":"GUri"},{"type":"text","text":" does not"},{"type":"text","text":" "},{"type":"text","text":"implement these rules. Use [func"},{"type":"codeVoice","code":"GLib.filename_from_uri"},{"type":"text","text":"] and"},{"type":"text","text":" "},{"type":"text","text":"[func"},{"type":"codeVoice","code":"GLib.filename_to_uri"},{"type":"text","text":"] if you want to properly convert between"},{"type":"text","text":" "},{"type":"codeVoice","code":"file:\/\/"},{"type":"text","text":" URIs and local filenames."}]},{"anchor":"URI-Equality","level":2,"type":"heading","text":"URI Equality"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Note that there is no "},{"type":"codeVoice","code":"g_uri_equal ()"},{"type":"text","text":" function, because comparing"},{"type":"text","text":" "},{"type":"text","text":"URIs usefully requires scheme-specific knowledge that "},{"type":"codeVoice","code":"GUri"},{"type":"text","text":" does"},{"type":"text","text":" "},{"type":"text","text":"not have. "},{"type":"codeVoice","code":"GUri"},{"type":"text","text":" can help with normalization if you use the various"},{"type":"text","text":" "},{"type":"text","text":"encoded [flags"},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/URIFlags"},{"type":"text","text":"] as well as "},{"type":"codeVoice","code":"G_URI_FLAGS_SCHEME_NORMALIZE"},{"type":"text","text":" "},{"type":"text","text":"however it is not comprehensive."},{"type":"text","text":" "},{"type":"text","text":"For example, "},{"type":"codeVoice","code":"data:,foo"},{"type":"text","text":" and "},{"type":"codeVoice","code":"data:;base64,Zm9v"},{"type":"text","text":" resolve to the same"},{"type":"text","text":" "},{"type":"text","text":"thing according to the "},{"type":"codeVoice","code":"data:"},{"type":"text","text":" URI specification which GLib does not"},{"type":"text","text":" "},{"type":"text","text":"handle."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/URIRef"},{"type":"text","text":" type acts as a lightweight Swift reference to an underlying "},{"type":"codeVoice","code":"GUri"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"It exposes methods that can operate on this data type through "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/URIProtocol"},{"type":"text","text":" conformance."},{"type":"text","text":" "},{"type":"text","text":"Use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/URIRef"},{"type":"text","text":" only as an "},{"type":"codeVoice","code":"unowned"},{"type":"text","text":" reference to an existing "},{"type":"codeVoice","code":"GUri"},{"type":"text","text":" instance."}]},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/URI"},{"type":"text","text":" (instead of "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/URIRef"},{"type":"text","text":") if you want to use Automatic Reference Counting for memory management of the underlying "},{"type":"codeVoice","code":"GUri"},{"type":"text","text":" instance."}]}],"type":"aside","name":"Note"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/glib\/uriref"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/GLib\/documentation\/GLib\/PointerWrapper","doc:\/\/GLib\/documentation\/GLib\/URIProtocol"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/GLib\/documentation\/GLib\/URIRef","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"GUri"},{"type":"text","text":" type and related functions can be used to parse URIs into"},{"type":"text","text":" "},{"type":"text","text":"their components, and build valid URIs from individual components."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"URIRef"}],"title":"URIRef","roleHeading":"Structure","role":"symbol","symbolKind":"struct","externalID":"s:4GLib6URIRefV","modules":[{"name":"GLib"}],"navigatorTitle":[{"kind":"identifier","text":"URIRef"}]},"hierarchy":{"paths":[["doc:\/\/GLib\/documentation\/GLib"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/GLib\/documentation\/GLib\/URIRef\/init(_:)-1m0g3","doc:\/\/GLib\/documentation\/GLib\/URIRef\/init(_:)-2ctpq","doc:\/\/GLib\/documentation\/GLib\/URIRef\/init(_:)-4kx37","doc:\/\/GLib\/documentation\/GLib\/URIRef\/init(_:)-5ugyq","doc:\/\/GLib\/documentation\/GLib\/URIRef\/init(_:)-86fph","doc:\/\/GLib\/documentation\/GLib\/URIRef\/init(cPointer:)","doc:\/\/GLib\/documentation\/GLib\/URIRef\/init(constPointer:)","doc:\/\/GLib\/documentation\/GLib\/URIRef\/init(gconstpointer:)","doc:\/\/GLib\/documentation\/GLib\/URIRef\/init(gpointer:)","doc:\/\/GLib\/documentation\/GLib\/URIRef\/init(mutating:)","doc:\/\/GLib\/documentation\/GLib\/URIRef\/init(opaquePointer:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/GLib\/documentation\/GLib\/URIRef\/ptr"]},{"title":"Type Methods","identifiers":["doc:\/\/GLib\/documentation\/GLib\/URIRef\/build(flags:scheme:userinfo:host:port:path:query:fragment:)","doc:\/\/GLib\/documentation\/GLib\/URIRef\/buildWith(user:scheme:user:password:authParams:host:port:path:query:fragment:)","doc:\/\/GLib\/documentation\/GLib\/URIRef\/parse(uriString:flags:)"]},{"title":"Default Implementations","identifiers":["doc:\/\/GLib\/documentation\/GLib\/URIRef\/PointerWrapper-Implementations","doc:\/\/GLib\/documentation\/GLib\/URIRef\/URIProtocol-Implementations"],"generated":true}],"references":{"doc://GLib/documentation/GLib/URIFlags":{"role":"symbol","title":"URIFlags","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"URIFlags"}],"abstract":[{"type":"text","text":"Flags that describe a URI."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/URIFlags","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"URIFlags"}],"url":"\/documentation\/glib\/uriflags"},"doc://GLib/documentation/GLib/URIRef/buildWith(user:scheme:user:password:authParams:host:port:path:query:fragment:)":{"role":"symbol","title":"buildWith(user:scheme:user:password:authParams:host:port:path:query:fragment:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"buildWith"},{"kind":"text","text":"("},{"kind":"externalParam","text":"user"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"URIFlags","preciseIdentifier":"s:4GLib8URIFlagsV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"scheme"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"user"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">?, "},{"kind":"externalParam","text":"password"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">?, "},{"kind":"externalParam","text":"authParams"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">?, "},{"kind":"externalParam","text":"host"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">?, "},{"kind":"externalParam","text":"port"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"path"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"query"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">?, "},{"kind":"externalParam","text":"fragment"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">?) -> "},{"kind":"typeIdentifier","text":"URIRef","preciseIdentifier":"s:4GLib6URIRefV"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Creates a new "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/URI"},{"type":"text","text":" from the given components according to "},{"type":"codeVoice","code":"flags"},{"type":"text","text":" "},{"type":"text","text":"("},{"type":"codeVoice","code":"hasPassword"},{"type":"text","text":" is added unconditionally). The "},{"type":"codeVoice","code":"flags"},{"type":"text","text":" must be"},{"type":"text","text":" "},{"type":"text","text":"coherent with the passed values, in particular use ````-encoded values with"},{"type":"text","text":" "},{"type":"codeVoice","code":"encoded"},{"type":"text","text":"."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/URIRef\/buildWith(user:scheme:user:password:authParams:host:port:path:query:fragment:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/uriref\/buildwith(user:scheme:user:password:authparams:host:port:path:query:fragment:)"},"doc://GLib/documentation/GLib/URIRef/init(constPointer:)":{"role":"symbol","title":"init(constPointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"constPointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Unsafe typed initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/URIProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/URIRef\/init(constPointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/uriref\/init(constpointer:)"},"doc://GLib/documentation/GLib/URIRef/init(mutating:)":{"role":"symbol","title":"init(mutating:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"mutating"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeRawPointer","preciseIdentifier":"s:SV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/URIProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/URIRef\/init(mutating:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/uriref\/init(mutating:)"},"https://tools.ietf.org/html/rfc3986#section-3":{"title":"‘authority’ component","titleInlineContent":[{"type":"text","text":"‘authority’ component"}],"type":"link","identifier":"https:\/\/tools.ietf.org\/html\/rfc3986#section-3","url":"https:\/\/tools.ietf.org\/html\/rfc3986#section-3"},"https://tools.ietf.org/html/rfc3986#section-4":{"title":"RFC 3986","titleInlineContent":[{"type":"text","text":"RFC 3986"}],"type":"link","identifier":"https:\/\/tools.ietf.org\/html\/rfc3986#section-4","url":"https:\/\/tools.ietf.org\/html\/rfc3986#section-4"},"https://en.wikipedia.org/wiki/IDN_homograph_attack":{"title":"homograph attacks","titleInlineContent":[{"type":"text","text":"homograph attacks"}],"type":"link","identifier":"https:\/\/en.wikipedia.org\/wiki\/IDN_homograph_attack","url":"https:\/\/en.wikipedia.org\/wiki\/IDN_homograph_attack"},"doc://GLib/documentation/GLib/URIRef/init(cPointer:)":{"role":"symbol","title":"init(cPointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"cPointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Unsafe typed initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/URIProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/URIRef\/init(cPointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/uriref\/init(cpointer:)"},"doc://GLib/documentation/GLib/URIRef/init(gconstpointer:)":{"role":"symbol","title":"init(gconstpointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"externalParam","text":"gconstpointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gconstpointer","preciseIdentifier":"c:@T@gconstpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional, non-mutable "},{"type":"codeVoice","code":"gconstpointer"}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/URIRef\/init(gconstpointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/uriref\/init(gconstpointer:)"},"doc://GLib/documentation/GLib/URIProtocol":{"role":"symbol","title":"URIProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"URIProtocol"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"GUri"},{"type":"text","text":" type and related functions can be used to parse URIs into"},{"type":"text","text":" "},{"type":"text","text":"their components, and build valid URIs from individual components."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/URIProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"URIProtocol"}],"url":"\/documentation\/glib\/uriprotocol"},"doc://GLib/documentation/GLib/URI":{"role":"symbol","title":"URI","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"URI"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"GUri"},{"type":"text","text":" type and related functions can be used to parse URIs into"},{"type":"text","text":" "},{"type":"text","text":"their components, and build valid URIs from individual components."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/URI","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"URI"}],"url":"\/documentation\/glib\/uri"},"doc://GLib/documentation/GLib/URIRef/parse(uriString:flags:)":{"role":"symbol","title":"parse(uriString:flags:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"kind":"text","text":"("},{"kind":"externalParam","text":"uriString"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"flags"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"URIFlags","preciseIdentifier":"s:4GLib8URIFlagsV"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"URIRef","preciseIdentifier":"s:4GLib6URIRefV"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Parses "},{"type":"codeVoice","code":"uriString"},{"type":"text","text":" according to "},{"type":"codeVoice","code":"flags"},{"type":"text","text":". If the result is not a"},{"type":"text","text":" "},{"type":"text","text":"valid "},{"type":"reference","isActive":true,"identifier":"#relative-and-absolute-uris"},{"type":"text","text":", it will be discarded, and an"},{"type":"text","text":" "},{"type":"text","text":"error returned."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/URIRef\/parse(uriString:flags:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/uriref\/parse(uristring:flags:)"},"doc://GLib/documentation/GLib/URIRef":{"role":"symbol","title":"URIRef","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"URIRef"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"GUri"},{"type":"text","text":" type and related functions can be used to parse URIs into"},{"type":"text","text":" "},{"type":"text","text":"their components, and build valid URIs from individual components."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/URIRef","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"URIRef"}],"url":"\/documentation\/glib\/uriref"},"doc://GLib/documentation/GLib/URIRef/init(_:)-5ugyq":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Reference intialiser for a related type that implements "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/URIProtocol"}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/URIRef\/init(_:)-5ugyq","kind":"symbol","type":"topic","url":"\/documentation\/glib\/uriref\/init(_:)-5ugyq"},"doc://GLib/documentation/GLib/URIRef/PointerWrapper-Implementations":{"role":"collectionGroup","title":"PointerWrapper Implementations","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib\/URIRef\/PointerWrapper-Implementations","kind":"article","type":"topic","url":"\/documentation\/glib\/uriref\/pointerwrapper-implementations"},"https://tools.ietf.org/html/rfc3986#section-4.3":{"title":"in contrast to RFC 3986","titleInlineContent":[{"type":"text","text":"in contrast to RFC 3986"}],"type":"link","identifier":"https:\/\/tools.ietf.org\/html\/rfc3986#section-4.3","url":"https:\/\/tools.ietf.org\/html\/rfc3986#section-4.3"},"doc://GLib/documentation/GLib/URIRef/init(_:)-1m0g3":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GUri"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from a constant pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/URIRef\/init(_:)-1m0g3","kind":"symbol","type":"topic","url":"\/documentation\/glib\/uriref\/init(_:)-1m0g3"},"doc://GLib/documentation/GLib/URIRef/ptr":{"role":"symbol","title":"ptr","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"ptr"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutableRawPointer","preciseIdentifier":"s:Sv"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Untyped pointer to the underlying "},{"type":"codeVoice","code":"GUri"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"For type-safe access, use the generated, typed pointer "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/URIProtocol\/uri_ptr-kjx7"},{"type":"text","text":" property instead."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/URIRef\/ptr","kind":"symbol","type":"topic","url":"\/documentation\/glib\/uriref\/ptr"},"doc://GLib/documentation/GLib/URIRef/build(flags:scheme:userinfo:host:port:path:query:fragment:)":{"role":"symbol","title":"build(flags:scheme:userinfo:host:port:path:query:fragment:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"build"},{"kind":"text","text":"("},{"kind":"externalParam","text":"flags"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"URIFlags","preciseIdentifier":"s:4GLib8URIFlagsV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"scheme"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"userinfo"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">?, "},{"kind":"externalParam","text":"host"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">?, "},{"kind":"externalParam","text":"port"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"path"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"query"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">?, "},{"kind":"externalParam","text":"fragment"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">?) -> "},{"kind":"typeIdentifier","text":"URIRef","preciseIdentifier":"s:4GLib6URIRefV"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Creates a new "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/URI"},{"type":"text","text":" from the given components according to "},{"type":"codeVoice","code":"flags"},{"type":"text","text":"."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/URIRef\/build(flags:scheme:userinfo:host:port:path:query:fragment:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/uriref\/build(flags:scheme:userinfo:host:port:path:query:fragment:)"},"doc://GLib/documentation/GLib/URIProtocol/uri_ptr-kjx7":{"defaultImplementations":1,"role":"symbol","title":"uri_ptr","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"uri_ptr"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GUri"},{"kind":"text","text":">!"}],"abstract":[{"type":"text","text":"Typed pointer to the underlying "},{"type":"codeVoice","code":"GUri"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/URIProtocol\/uri_ptr-kjx7","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/glib\/uriprotocol\/uri_ptr-kjx7"},"doc://GLib/documentation/GLib/URIRef/URIProtocol-Implementations":{"role":"collectionGroup","title":"URIProtocol Implementations","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib\/URIRef\/URIProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/glib\/uriref\/uriprotocol-implementations"},"doc://GLib/documentation/GLib/URIRef/init(gpointer:)":{"role":"symbol","title":"init(gpointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"externalParam","text":"gpointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional "},{"type":"codeVoice","code":"gpointer"}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/URIRef\/init(gpointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/uriref\/init(gpointer:)"},"doc://GLib/documentation/GLib/PointerWrapper":{"role":"symbol","title":"PointerWrapper","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"PointerWrapper"}],"abstract":[{"type":"text","text":"Protocol for GLib types that wrap pointers."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/PointerWrapper","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PointerWrapper"}],"url":"\/documentation\/glib\/pointerwrapper"},"doc://GLib/documentation/GLib/URIRef/init(_:)-86fph":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GUri"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/URIRef\/init(_:)-86fph","kind":"symbol","type":"topic","url":"\/documentation\/glib\/uriref\/init(_:)-86fph"},"doc://GLib/documentation/GLib/URIRef/init(opaquePointer:)":{"role":"symbol","title":"init(opaquePointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"opaquePointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"OpaquePointer","preciseIdentifier":"s:s13OpaquePointerV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/URIProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/URIRef\/init(opaquePointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/uriref\/init(opaquepointer:)"},"doc://GLib/documentation/GLib/URIRef/init(_:)-4kx37":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GUri"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional, non-mutable pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/URIRef\/init(_:)-4kx37","kind":"symbol","type":"topic","url":"\/documentation\/glib\/uriref\/init(_:)-4kx37"},"doc://GLib/documentation/GLib":{"role":"collection","title":"GLib","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib","kind":"symbol","type":"topic","url":"\/documentation\/glib"},"https://tools.ietf.org/html/rfc3986":{"title":"RFC 3986","titleInlineContent":[{"type":"text","text":"RFC 3986"}],"type":"link","identifier":"https:\/\/tools.ietf.org\/html\/rfc3986","url":"https:\/\/tools.ietf.org\/html\/rfc3986"},"doc://GLib/documentation/GLib/URIRef/init(_:)-2ctpq":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GUri"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/URIRef\/init(_:)-2ctpq","kind":"symbol","type":"topic","url":"\/documentation\/glib\/uriref\/init(_:)-2ctpq"},"#relative-and-absolute-uris":{"title":"absolute URI","titleInlineContent":[{"type":"text","text":"absolute URI"}],"type":"link","identifier":"#relative-and-absolute-uris","url":"#relative-and-absolute-uris"},"https://url.spec.whatwg.org/":{"title":"WHATWG URL","titleInlineContent":[{"type":"text","text":"WHATWG URL"}],"type":"link","identifier":"https:\/\/url.spec.whatwg.org\/","url":"https:\/\/url.spec.whatwg.org\/"}}}