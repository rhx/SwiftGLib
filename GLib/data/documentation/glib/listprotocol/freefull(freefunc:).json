{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"freeFull"},{"kind":"text","text":"("},{"kind":"externalParam","text":"freeFunc"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GDestroyNotify","preciseIdentifier":"c:@T@GDestroyNotify"},{"kind":"text","text":"?)"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"freeFunc"},{"type":"text","text":" must not modify the list (eg, by removing the freed"},{"type":"text","text":" "},{"type":"text","text":"element from it)."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"It can be combined with "},{"type":"codeVoice","code":"g_steal_pointer()"},{"type":"text","text":" to ensure the list head pointer"},{"type":"text","text":" "},{"type":"text","text":"is not left dangling ­— this also has the nice property that the head pointer"},{"type":"text","text":" "},{"type":"text","text":"is cleared before any of the list elements are freed, to prevent double frees"},{"type":"text","text":" "},{"type":"text","text":"from "},{"type":"codeVoice","code":"freeFunc"},{"type":"text","text":" "},{"type":"text","text":"(C Language Example):"}]},{"type":"codeListing","syntax":"C","code":["GList *list_of_owned_things = …;  \/<!-- -->* (transfer full) (element-type GObject) *<!-- -->\/","g_list_free_full (g_steal_pointer (&list_of_owned_things), g_object_unref);"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/glib\/listprotocol\/freefull(freefunc:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/GLib\/documentation\/GLib\/ListProtocol\/freeFull(freeFunc:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Convenience method, which frees all the memory used by a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/List"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"and calls "},{"type":"codeVoice","code":"freeFunc"},{"type":"text","text":" on every element’s data."}],"kind":"symbol","metadata":{"role":"symbol","title":"freeFull(freeFunc:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"freeFull"},{"kind":"text","text":"("},{"kind":"externalParam","text":"freeFunc"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GDestroyNotify","preciseIdentifier":"c:@T@GDestroyNotify"},{"kind":"text","text":"?)"}],"symbolKind":"method","externalID":"s:4GLib12ListProtocolPAAE8freeFull0D4FuncyySvSgXCSg_tF","extendedModule":"GLib","modules":[{"name":"GLib"}]},"hierarchy":{"paths":[["doc:\/\/GLib\/documentation\/GLib","doc:\/\/GLib\/documentation\/GLib\/ListProtocol"]]},"references":{"doc://GLib/documentation/GLib/ListProtocol/freeFull(freeFunc:)":{"role":"symbol","title":"freeFull(freeFunc:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"freeFull"},{"kind":"text","text":"("},{"kind":"externalParam","text":"freeFunc"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GDestroyNotify","preciseIdentifier":"c:@T@GDestroyNotify"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Convenience method, which frees all the memory used by a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/List"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"and calls "},{"type":"codeVoice","code":"freeFunc"},{"type":"text","text":" on every element’s data."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/ListProtocol\/freeFull(freeFunc:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/listprotocol\/freefull(freefunc:)"},"doc://GLib/documentation/GLib":{"role":"collection","title":"GLib","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib","kind":"symbol","type":"topic","url":"\/documentation\/glib"},"doc://GLib/documentation/GLib/List":{"role":"symbol","title":"List","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"List"}],"abstract":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/List"},{"type":"text","text":" struct is used for each element in a doubly-linked list."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/List","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"List"}],"url":"\/documentation\/glib\/list"},"doc://GLib/documentation/GLib/ListProtocol":{"role":"symbol","title":"ListProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ListProtocol"}],"abstract":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/List"},{"type":"text","text":" struct is used for each element in a doubly-linked list."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/ListProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ListProtocol"}],"url":"\/documentation\/glib\/listprotocol"}}}