{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"asciiStrtoull"},{"kind":"text","text":"("},{"kind":"externalParam","text":"nptr"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"endptr"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">?>! = nil, "},{"kind":"externalParam","text":"base"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"guint64","preciseIdentifier":"c:@T@guint64"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This function behaves like the standard "},{"type":"codeVoice","code":"strtoull()"},{"type":"text","text":" function"},{"type":"text","text":" "},{"type":"text","text":"does in the C locale. It does this without actually"},{"type":"text","text":" "},{"type":"text","text":"changing the current locale, since that would not be"},{"type":"text","text":" "},{"type":"text","text":"thread-safe."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Note that input with a leading minus sign ("},{"type":"codeVoice","code":"-"},{"type":"text","text":") is accepted, and will return"},{"type":"text","text":" "},{"type":"text","text":"the negation of the parsed number, unless that would overflow a "},{"type":"codeVoice","code":"guint64"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Critically, this means you cannot assume that a short fixed length input will"},{"type":"text","text":" "},{"type":"text","text":"result in a low return value, as the input could have a leading "},{"type":"codeVoice","code":"-"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This function is typically used when reading configuration"},{"type":"text","text":" "},{"type":"text","text":"files or other non-user input that should be locale independent."},{"type":"text","text":" "},{"type":"text","text":"To handle input from the user you should normally use the"},{"type":"text","text":" "},{"type":"text","text":"locale-sensitive system "},{"type":"codeVoice","code":"strtoull()"},{"type":"text","text":" function."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If the correct value would cause overflow, [const"},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/maxuint64-9k7jw"},{"type":"text","text":"]"},{"type":"text","text":" "},{"type":"text","text":"is returned, and "},{"type":"codeVoice","code":"ERANGE"},{"type":"text","text":" is stored in "},{"type":"codeVoice","code":"errno"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"If the base is outside the valid range, zero is returned, and"},{"type":"text","text":" "},{"type":"codeVoice","code":"EINVAL"},{"type":"text","text":" is stored in "},{"type":"codeVoice","code":"errno"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"If the string conversion fails, zero is returned, and "},{"type":"codeVoice","code":"endptr"},{"type":"text","text":" returns"},{"type":"text","text":" "},{"type":"codeVoice","code":"nptr"},{"type":"text","text":" (if "},{"type":"codeVoice","code":"endptr"},{"type":"text","text":" is non-"},{"type":"codeVoice","code":"NULL"},{"type":"text","text":")."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/glib\/asciistrtoull(nptr:endptr:base:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/GLib\/documentation\/GLib\/asciiStrtoull(nptr:endptr:base:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Converts a string to a "},{"type":"codeVoice","code":"guint64"},{"type":"text","text":" value."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"asciiStrtoull"},{"kind":"text","text":"("},{"kind":"externalParam","text":"nptr"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"endptr"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">?>!, "},{"kind":"externalParam","text":"base"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"guint64","preciseIdentifier":"c:@T@guint64"}],"title":"asciiStrtoull(nptr:endptr:base:)","roleHeading":"Function","role":"symbol","symbolKind":"func","externalID":"s:4GLib13asciiStrtoull4nptr6endptr4bases6UInt64VSPys4Int8VGSg_SpySpyAIGSgGSgSitF","modules":[{"name":"GLib"}]},"hierarchy":{"paths":[["doc:\/\/GLib\/documentation\/GLib"]]},"references":{"doc://GLib/documentation/GLib/asciiStrtoull(nptr:endptr:base:)":{"role":"symbol","title":"asciiStrtoull(nptr:endptr:base:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"asciiStrtoull"},{"kind":"text","text":"("},{"kind":"externalParam","text":"nptr"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"endptr"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">?>!, "},{"kind":"externalParam","text":"base"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"guint64","preciseIdentifier":"c:@T@guint64"}],"abstract":[{"type":"text","text":"Converts a string to a "},{"type":"codeVoice","code":"guint64"},{"type":"text","text":" value."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/asciiStrtoull(nptr:endptr:base:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/asciistrtoull(nptr:endptr:base:)"},"doc://GLib/documentation/GLib":{"role":"collection","title":"GLib","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib","kind":"symbol","type":"topic","url":"\/documentation\/glib"},"doc://GLib/documentation/GLib/maxuint64-9k7jw":{"role":"symbol","title":"maxuint64","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"maxuint64"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib\/maxuint64-9k7jw","kind":"symbol","type":"topic","url":"\/documentation\/glib\/maxuint64-9k7jw"}}}