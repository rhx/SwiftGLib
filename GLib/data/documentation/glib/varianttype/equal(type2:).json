{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"equal"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"VariantTypeT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"type2"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"VariantTypeT"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"VariantTypeT"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/GLib\/documentation\/GLib\/VariantTypeProtocol","preciseIdentifier":"s:4GLib19VariantTypeProtocolP","text":"VariantTypeProtocol"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Only returns "},{"type":"codeVoice","code":"true"},{"type":"text","text":" if the types are exactly equal.  Even if one type"},{"type":"text","text":" "},{"type":"text","text":"is an indefinite type and the other is a subtype of it, "},{"type":"codeVoice","code":"false"},{"type":"text","text":" will"},{"type":"text","text":" "},{"type":"text","text":"be returned if they are not exactly equal.  If you want to check for"},{"type":"text","text":" "},{"type":"text","text":"subtypes, use "},{"type":"codeVoice","code":"g_variant_type_is_subtype_of()"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The argument types of "},{"type":"codeVoice","code":"type1"},{"type":"text","text":" and "},{"type":"codeVoice","code":"type2"},{"type":"text","text":" are only "},{"type":"codeVoice","code":"gconstpointer"},{"type":"text","text":" to"},{"type":"text","text":" "},{"type":"text","text":"allow use with "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTable"},{"type":"text","text":" without function pointer casting.  For"},{"type":"text","text":" "},{"type":"text","text":"both arguments, a valid "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/VariantType"},{"type":"text","text":" must be provided."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/glib\/varianttype\/equal(type2:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/GLib\/documentation\/GLib\/VariantType\/equal(type2:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Compares "},{"type":"codeVoice","code":"type1"},{"type":"text","text":" and "},{"type":"codeVoice","code":"type2"},{"type":"text","text":" for equality."}],"kind":"symbol","metadata":{"role":"symbol","title":"equal(type2:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"equal"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"VariantTypeT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"type2"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"VariantTypeT"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"symbolKind":"method","externalID":"s:4GLib19VariantTypeProtocolPAAE5equal5type2Sbqd___tAaBRd__lF::SYNTHESIZED::s:4GLib11VariantTypeC","extendedModule":"GLib","modules":[{"name":"GLib"}]},"hierarchy":{"paths":[["doc:\/\/GLib\/documentation\/GLib","doc:\/\/GLib\/documentation\/GLib\/VariantType","doc:\/\/GLib\/documentation\/GLib\/VariantType\/VariantTypeProtocol-Implementations"]]},"references":{"doc://GLib/documentation/GLib/VariantType":{"role":"symbol","title":"VariantType","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"VariantType"}],"abstract":[{"type":"text","text":"A type in the [type"},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Variant"},{"type":"text","text":"] type system."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/VariantType","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"VariantType"}],"url":"\/documentation\/glib\/varianttype"},"doc://GLib/documentation/GLib/Variant":{"role":"symbol","title":"Variant","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Variant"}],"abstract":[{"type":"codeVoice","code":"GVariant"},{"type":"text","text":" is a variant datatype; it can contain one or more values"},{"type":"text","text":" "},{"type":"text","text":"along with information about the type of the values."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/Variant","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Variant"}],"url":"\/documentation\/glib\/variant"},"doc://GLib/documentation/GLib/HashTable":{"role":"symbol","title":"HashTable","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HashTable"}],"abstract":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTable"},{"type":"text","text":" struct is an opaque data structure to represent a"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"..\/Protocols\/HashTableProtocol.html"},{"type":"text","text":". It should only be accessed via the"},{"type":"text","text":" "},{"type":"text","text":"following functions."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTable","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HashTable"}],"url":"\/documentation\/glib\/hashtable"},"doc://GLib/documentation/GLib/VariantType/equal(type2:)":{"role":"symbol","title":"equal(type2:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"equal"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"VariantTypeT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"type2"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"VariantTypeT"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Compares "},{"type":"codeVoice","code":"type1"},{"type":"text","text":" and "},{"type":"codeVoice","code":"type2"},{"type":"text","text":" for equality."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/VariantType\/equal(type2:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/varianttype\/equal(type2:)"},"doc://GLib/documentation/GLib":{"role":"collection","title":"GLib","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib","kind":"symbol","type":"topic","url":"\/documentation\/glib"},"../Protocols/HashTableProtocol.html":{"title":"Hash Table","titleInlineContent":[{"type":"text","text":"Hash Table"}],"type":"link","identifier":"..\/Protocols\/HashTableProtocol.html","url":"..\/Protocols\/HashTableProtocol.html"},"doc://GLib/documentation/GLib/VariantType/VariantTypeProtocol-Implementations":{"role":"collectionGroup","title":"VariantTypeProtocol Implementations","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib\/VariantType\/VariantTypeProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/glib\/varianttype\/varianttypeprotocol-implementations"},"doc://GLib/documentation/GLib/VariantTypeProtocol":{"role":"symbol","title":"VariantTypeProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"VariantTypeProtocol"}],"abstract":[{"type":"text","text":"A type in the [type"},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Variant"},{"type":"text","text":"] type system."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/VariantTypeProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"VariantTypeProtocol"}],"url":"\/documentation\/glib\/varianttypeprotocol"}}}