{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"expandReferences"},{"kind":"text","text":"("},{"kind":"externalParam","text":"stringToExpand"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">!) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"!"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"stringToExpand"},{"type":"text","text":" must be UTF-8 encoded even if "},{"type":"codeVoice","code":"raw"},{"type":"text","text":" was"},{"type":"text","text":" "},{"type":"text","text":"passed to "},{"type":"codeVoice","code":"g_regex_new()"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The backreferences are extracted from the string passed to the match"},{"type":"text","text":" "},{"type":"text","text":"function, so you cannot call this function after freeing the string."}]},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"matchInfo"},{"type":"text","text":" may be "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" in which case "},{"type":"codeVoice","code":"stringToExpand"},{"type":"text","text":" must not"},{"type":"text","text":" "},{"type":"text","text":"contain references. For instance “foo\\n” does not refer to an actual"},{"type":"text","text":" "},{"type":"text","text":"pattern and ‘\\n’ merely will be replaced with \\n character,"},{"type":"text","text":" "},{"type":"text","text":"while to expand “\\0” (whole match) one needs the result of a match."},{"type":"text","text":" "},{"type":"text","text":"Use "},{"type":"codeVoice","code":"g_regex_check_replacement()"},{"type":"text","text":" to find out whether "},{"type":"codeVoice","code":"stringToExpand"},{"type":"text","text":" "},{"type":"text","text":"contains references."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/glib\/matchinfoprotocol\/expandreferences(stringtoexpand:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/GLib\/documentation\/GLib\/MatchInfoProtocol\/expandReferences(stringToExpand:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Returns a new string containing the text in "},{"type":"codeVoice","code":"stringToExpand"},{"type":"text","text":" with"},{"type":"text","text":" "},{"type":"text","text":"references and escape sequences expanded. References refer to the last"},{"type":"text","text":" "},{"type":"text","text":"match done with "},{"type":"codeVoice","code":"string"},{"type":"text","text":" against "},{"type":"codeVoice","code":"regex"},{"type":"text","text":" and have the same syntax used by"},{"type":"text","text":" "},{"type":"codeVoice","code":"g_regex_replace()"},{"type":"text","text":"."}],"kind":"symbol","metadata":{"role":"symbol","title":"expandReferences(stringToExpand:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"expandReferences"},{"kind":"text","text":"("},{"kind":"externalParam","text":"stringToExpand"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">!) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"!"}],"symbolKind":"method","externalID":"s:4GLib17MatchInfoProtocolPAAE16expandReferences14stringToExpandSSSgSPys4Int8VGSg_tKF","extendedModule":"GLib","modules":[{"name":"GLib"}]},"hierarchy":{"paths":[["doc:\/\/GLib\/documentation\/GLib","doc:\/\/GLib\/documentation\/GLib\/MatchInfoProtocol"]]},"references":{"doc://GLib/documentation/GLib":{"role":"collection","title":"GLib","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib","kind":"symbol","type":"topic","url":"\/documentation\/glib"},"doc://GLib/documentation/GLib/MatchInfoProtocol/expandReferences(stringToExpand:)":{"role":"symbol","title":"expandReferences(stringToExpand:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"expandReferences"},{"kind":"text","text":"("},{"kind":"externalParam","text":"stringToExpand"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">!) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Returns a new string containing the text in "},{"type":"codeVoice","code":"stringToExpand"},{"type":"text","text":" with"},{"type":"text","text":" "},{"type":"text","text":"references and escape sequences expanded. References refer to the last"},{"type":"text","text":" "},{"type":"text","text":"match done with "},{"type":"codeVoice","code":"string"},{"type":"text","text":" against "},{"type":"codeVoice","code":"regex"},{"type":"text","text":" and have the same syntax used by"},{"type":"text","text":" "},{"type":"codeVoice","code":"g_regex_replace()"},{"type":"text","text":"."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/MatchInfoProtocol\/expandReferences(stringToExpand:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/matchinfoprotocol\/expandreferences(stringtoexpand:)"},"doc://GLib/documentation/GLib/MatchInfoProtocol":{"role":"symbol","title":"MatchInfoProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MatchInfoProtocol"}],"abstract":[{"type":"text","text":"A GMatchInfo is an opaque struct used to return information about"},{"type":"text","text":" "},{"type":"text","text":"matches."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/MatchInfoProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MatchInfoProtocol"}],"url":"\/documentation\/glib\/matchinfoprotocol"}}}