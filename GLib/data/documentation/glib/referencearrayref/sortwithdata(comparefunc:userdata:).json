{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"sortWithData"},{"kind":"text","text":"("},{"kind":"externalParam","text":"compareFunc"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GCompareDataFunc","preciseIdentifier":"c:@T@GCompareDataFunc"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"userData"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"? = nil)"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Note that the comparison function for "},{"type":"codeVoice","code":"g_ptr_array_sort_with_data()"},{"type":"text","text":" "},{"type":"text","text":"doesnâ€™t take the pointers from the array as arguments, it takes"},{"type":"text","text":" "},{"type":"text","text":"pointers to the pointers in the array."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Use "},{"type":"codeVoice","code":"g_ptr_array_sort_values_with_data()"},{"type":"text","text":" if you want to use normal"},{"type":"text","text":" "},{"type":"codeVoice","code":"GCompareDataFuncs"},{"type":"text","text":", otherwise here is a full example of use:"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"(C Language Example):"}]},{"type":"codeListing","syntax":"C","code":["typedef enum { SORT_NAME, SORT_SIZE } SortMode;","","typedef struct","{","  gchar *name;","  gint size;","} FileListEntry;","","static gint","sort_filelist (gconstpointer a, gconstpointer b, gpointer user_data)","{","  gint order;","  const SortMode sort_mode = GPOINTER_TO_INT (user_data);","  const FileListEntry *entry1 = *((FileListEntry **) a);","  const FileListEntry *entry2 = *((FileListEntry **) b);","","  switch (sort_mode)","    {","    case SORT_NAME:","      order = g_ascii_strcasecmp (entry1->name, entry2->name);","      break;","    case SORT_SIZE:","      order = entry1->size - entry2->size;","      break;","    default:","      order = 0;","      break;","    }","  return order;","}","","...","g_autoptr (GPtrArray) file_list = NULL;","SortMode sort_mode;","","\/\/ initialize file_list array and load with many FileListEntry entries","...","\/\/ now sort it with","sort_mode = SORT_NAME;","g_ptr_array_sort_with_data (file_list,","                            sort_filelist,","                            GINT_TO_POINTER (sort_mode));"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This is guaranteed to be a stable sort since version 2.32."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/glib\/referencearrayref\/sortwithdata(comparefunc:userdata:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/GLib\/documentation\/GLib\/ReferenceArrayRef\/sortWithData(compareFunc:userData:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Like "},{"type":"codeVoice","code":"g_ptr_array_sort()"},{"type":"text","text":", but the comparison function has an extra"},{"type":"text","text":" "},{"type":"text","text":"user data argument."}],"kind":"symbol","metadata":{"role":"symbol","title":"sortWithData(compareFunc:userData:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"sortWithData"},{"kind":"text","text":"("},{"kind":"externalParam","text":"compareFunc"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GCompareDataFunc","preciseIdentifier":"c:@T@GCompareDataFunc"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"userData"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?)"}],"symbolKind":"method","externalID":"s:4GLib16PtrArrayProtocolPAAE12sortWithData11compareFunc04userG0ys5Int32VSVSg_AISvSgtXCSg_AJtF::SYNTHESIZED::s:4GLib17ReferenceArrayRefV","extendedModule":"GLib","modules":[{"name":"GLib"}]},"hierarchy":{"paths":[["doc:\/\/GLib\/documentation\/GLib","doc:\/\/GLib\/documentation\/GLib\/ReferenceArrayRef","doc:\/\/GLib\/documentation\/GLib\/ReferenceArrayRef\/PtrArrayProtocol-Implementations"]]},"references":{"doc://GLib/documentation/GLib/ReferenceArrayRef/PtrArrayProtocol-Implementations":{"role":"collectionGroup","title":"PtrArrayProtocol Implementations","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib\/ReferenceArrayRef\/PtrArrayProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/glib\/referencearrayref\/ptrarrayprotocol-implementations"},"doc://GLib/documentation/GLib/ReferenceArrayRef":{"role":"symbol","title":"ReferenceArrayRef","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ReferenceArrayRef"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"ReferenceArrayRef"},{"type":"text","text":" struct acts as a lightweight, typed wrapper around "},{"type":"codeVoice","code":"GList"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"with the associated "},{"type":"codeVoice","code":"Element"},{"type":"text","text":" representing the type of"},{"type":"text","text":" "},{"type":"text","text":"the elements stored in the list."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/ReferenceArrayRef","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ReferenceArrayRef"}],"url":"\/documentation\/glib\/referencearrayref"},"doc://GLib/documentation/GLib":{"role":"collection","title":"GLib","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib","kind":"symbol","type":"topic","url":"\/documentation\/glib"},"doc://GLib/documentation/GLib/ReferenceArrayRef/sortWithData(compareFunc:userData:)":{"role":"symbol","title":"sortWithData(compareFunc:userData:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"sortWithData"},{"kind":"text","text":"("},{"kind":"externalParam","text":"compareFunc"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GCompareDataFunc","preciseIdentifier":"c:@T@GCompareDataFunc"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"userData"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Like "},{"type":"codeVoice","code":"g_ptr_array_sort()"},{"type":"text","text":", but the comparison function has an extra"},{"type":"text","text":" "},{"type":"text","text":"user data argument."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/ReferenceArrayRef\/sortWithData(compareFunc:userData:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/referencearrayref\/sortwithdata(comparefunc:userdata:)"}}}