{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"timedWait"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"MutexT"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"TimeValT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"mutex"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"MutexT"},{"kind":"text","text":", "},{"kind":"externalParam","text":"absTime"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TimeValT"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"MutexT"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/GLib\/documentation\/GLib\/MutexProtocol","preciseIdentifier":"s:4GLib13MutexProtocolP","text":"MutexProtocol"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"TimeValT"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/GLib\/documentation\/GLib\/TimeValProtocol","preciseIdentifier":"s:4GLib15TimeValProtocolP","text":"TimeValProtocol"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If "},{"type":"codeVoice","code":"absTime"},{"type":"text","text":" is "},{"type":"codeVoice","code":"nil"},{"type":"text","text":", "},{"type":"codeVoice","code":"g_cond_timed_wait()"},{"type":"text","text":" acts like "},{"type":"codeVoice","code":"g_cond_wait()"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This function can be used even if "},{"type":"codeVoice","code":"g_thread_init()"},{"type":"text","text":" has not yet been"},{"type":"text","text":" "},{"type":"text","text":"called, and, in that case, will immediately return "},{"type":"codeVoice","code":"true"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To easily calculate "},{"type":"codeVoice","code":"absTime"},{"type":"text","text":" a combination of "},{"type":"codeVoice","code":"g_get_real_time()"},{"type":"text","text":" "},{"type":"text","text":"and "},{"type":"codeVoice","code":"g_time_val_add()"},{"type":"text","text":" can be used."}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"timed_wait is deprecated:"}]},{"type":"text","text":" "},{"type":"text","text":"Use g_cond_wait_until() instead."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/glib\/cond\/timedwait(mutex:abstime:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/GLib\/documentation\/GLib\/Cond\/timedWait(mutex:absTime:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Waits until this thread is woken up on "},{"type":"codeVoice","code":"cond"},{"type":"text","text":", but not longer than"},{"type":"text","text":" "},{"type":"text","text":"until the time specified by "},{"type":"codeVoice","code":"absTime"},{"type":"text","text":". The "},{"type":"codeVoice","code":"mutex"},{"type":"text","text":" is unlocked before"},{"type":"text","text":" "},{"type":"text","text":"falling asleep and locked again before resuming."}],"kind":"symbol","metadata":{"modules":[{"name":"GLib"}],"role":"symbol","title":"timedWait(mutex:absTime:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"timedWait"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"MutexT"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"TimeValT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"mutex"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"MutexT"},{"kind":"text","text":", "},{"kind":"externalParam","text":"absTime"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TimeValT"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"symbolKind":"method","externalID":"s:4GLib12CondProtocolPAAE9timedWait5mutex7absTimeSbqd___qd_0_tAA05MutexC0Rd__AA0h3ValC0Rd_0_r0_lF::SYNTHESIZED::s:4GLib4CondC","extendedModule":"GLib","platforms":[]},"hierarchy":{"paths":[["doc:\/\/GLib\/documentation\/GLib","doc:\/\/GLib\/documentation\/GLib\/Cond","doc:\/\/GLib\/documentation\/GLib\/Cond\/CondProtocol-Implementations"]]},"references":{"doc://GLib/documentation/GLib/MutexProtocol":{"role":"symbol","title":"MutexProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MutexProtocol"}],"abstract":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Mutex"},{"type":"text","text":" struct is an opaque data structure to represent a mutex"},{"type":"text","text":" "},{"type":"text","text":"(mutual exclusion). It can be used to protect data against shared"},{"type":"text","text":" "},{"type":"text","text":"access."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/MutexProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MutexProtocol"}],"url":"\/documentation\/glib\/mutexprotocol"},"doc://GLib/documentation/GLib/Mutex":{"role":"symbol","title":"Mutex","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Mutex"}],"abstract":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Mutex"},{"type":"text","text":" struct is an opaque data structure to represent a mutex"},{"type":"text","text":" "},{"type":"text","text":"(mutual exclusion). It can be used to protect data against shared"},{"type":"text","text":" "},{"type":"text","text":"access."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/Mutex","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Mutex"}],"url":"\/documentation\/glib\/mutex"},"doc://GLib/documentation/GLib/Cond/CondProtocol-Implementations":{"role":"collectionGroup","title":"CondProtocol Implementations","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib\/Cond\/CondProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/glib\/cond\/condprotocol-implementations"},"doc://GLib/documentation/GLib":{"role":"collection","title":"GLib","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib","kind":"symbol","type":"topic","url":"\/documentation\/glib"},"doc://GLib/documentation/GLib/Cond":{"role":"symbol","title":"Cond","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Cond"}],"abstract":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Cond"},{"type":"text","text":" struct is an opaque data structure that represents a"},{"type":"text","text":" "},{"type":"text","text":"condition. Threads can block on a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Cond"},{"type":"text","text":" if they find a certain"},{"type":"text","text":" "},{"type":"text","text":"condition to be false. If other threads change the state of this"},{"type":"text","text":" "},{"type":"text","text":"condition they signal the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Cond"},{"type":"text","text":", and that causes the waiting"},{"type":"text","text":" "},{"type":"text","text":"threads to be woken up."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/Cond","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Cond"}],"url":"\/documentation\/glib\/cond"},"doc://GLib/documentation/GLib/Cond/timedWait(mutex:absTime:)":{"role":"symbol","title":"timedWait(mutex:absTime:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"timedWait"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"MutexT"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"TimeValT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"mutex"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"MutexT"},{"kind":"text","text":", "},{"kind":"externalParam","text":"absTime"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TimeValT"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Waits until this thread is woken up on "},{"type":"codeVoice","code":"cond"},{"type":"text","text":", but not longer than"},{"type":"text","text":" "},{"type":"text","text":"until the time specified by "},{"type":"codeVoice","code":"absTime"},{"type":"text","text":". The "},{"type":"codeVoice","code":"mutex"},{"type":"text","text":" is unlocked before"},{"type":"text","text":" "},{"type":"text","text":"falling asleep and locked again before resuming."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/Cond\/timedWait(mutex:absTime:)","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/glib\/cond\/timedwait(mutex:abstime:)"},"doc://GLib/documentation/GLib/TimeValProtocol":{"role":"symbol","title":"TimeValProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"TimeValProtocol"}],"abstract":[{"type":"text","text":"Represents a precise time, with seconds and microseconds."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/TimeValProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TimeValProtocol"}],"url":"\/documentation\/glib\/timevalprotocol"}}}