{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"convertWithFallback"},{"kind":"text","text":"("},{"kind":"externalParam","text":"str"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"len"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gssize","preciseIdentifier":"c:@T@gssize"},{"kind":"text","text":", "},{"kind":"externalParam","text":"toCodeset"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"from"},{"kind":"text","text":" "},{"kind":"internalParam","text":"codeset"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"fallback"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"bytesRead"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gsize","preciseIdentifier":"c:@T@gsize"},{"kind":"text","text":">! = nil, "},{"kind":"externalParam","text":"bytesWritten"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gsize","preciseIdentifier":"c:@T@gsize"},{"kind":"text","text":">! = nil) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"!"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Note that you should use "},{"type":"codeVoice","code":"g_iconv()"},{"type":"text","text":" for streaming conversions."},{"type":"text","text":" "},{"type":"text","text":"Despite the fact that "},{"type":"codeVoice","code":"bytesRead"},{"type":"text","text":" can return information about partial"},{"type":"text","text":" "},{"type":"text","text":"characters, the g_convert_… functions are not generally suitable"},{"type":"text","text":" "},{"type":"text","text":"for streaming. If the underlying converter maintains internal state,"},{"type":"text","text":" "},{"type":"text","text":"then this won’t be preserved across successive calls to "},{"type":"codeVoice","code":"g_convert()"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"codeVoice","code":"g_convert_with_iconv()"},{"type":"text","text":" or "},{"type":"codeVoice","code":"g_convert_with_fallback()"},{"type":"text","text":". (An example of"},{"type":"text","text":" "},{"type":"text","text":"this is the GNU C converter for CP1255 which does not emit a base"},{"type":"text","text":" "},{"type":"text","text":"character until it knows that the next character is not a mark that"},{"type":"text","text":" "},{"type":"text","text":"could combine with the base character.)"}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/glib\/convertwithfallback(str:len:tocodeset:from:fallback:bytesread:byteswritten:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/GLib\/documentation\/GLib\/convertWithFallback(str:len:toCodeset:from:fallback:bytesRead:bytesWritten:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Converts a string from one character set to another, possibly"},{"type":"text","text":" "},{"type":"text","text":"including fallback sequences for characters not representable"},{"type":"text","text":" "},{"type":"text","text":"in the output. Note that it is not guaranteed that the specification"},{"type":"text","text":" "},{"type":"text","text":"for the fallback sequences in "},{"type":"codeVoice","code":"fallback"},{"type":"text","text":" will be honored. Some"},{"type":"text","text":" "},{"type":"text","text":"systems may do an approximate conversion from "},{"type":"codeVoice","code":"fromCodeset"},{"type":"text","text":" "},{"type":"text","text":"to "},{"type":"codeVoice","code":"toCodeset"},{"type":"text","text":" in their "},{"type":"codeVoice","code":"iconv()"},{"type":"text","text":" functions,"},{"type":"text","text":" "},{"type":"text","text":"in which case GLib will simply return that approximate conversion."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"convertWithFallback"},{"kind":"text","text":"("},{"kind":"externalParam","text":"str"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"len"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gssize","preciseIdentifier":"c:@T@gssize"},{"kind":"text","text":", "},{"kind":"externalParam","text":"toCodeset"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"fallback"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"bytesRead"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gsize","preciseIdentifier":"c:@T@gsize"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"bytesWritten"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gsize","preciseIdentifier":"c:@T@gsize"},{"kind":"text","text":">!) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"!"}],"title":"convertWithFallback(str:len:toCodeset:from:fallback:bytesRead:bytesWritten:)","roleHeading":"Function","role":"symbol","symbolKind":"func","externalID":"s:4GLib19convertWithFallback3str3len9toCodeset4from8fallback9bytesRead0K7WrittenSSSgSPys4Int8VGSg_SiA3NSpySuGSgAPtKF","modules":[{"name":"GLib"}]},"hierarchy":{"paths":[["doc:\/\/GLib\/documentation\/GLib"]]},"references":{"doc://GLib/documentation/GLib/convertWithFallback(str:len:toCodeset:from:fallback:bytesRead:bytesWritten:)":{"role":"symbol","title":"convertWithFallback(str:len:toCodeset:from:fallback:bytesRead:bytesWritten:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"convertWithFallback"},{"kind":"text","text":"("},{"kind":"externalParam","text":"str"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"len"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gssize","preciseIdentifier":"c:@T@gssize"},{"kind":"text","text":", "},{"kind":"externalParam","text":"toCodeset"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"fallback"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"bytesRead"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gsize","preciseIdentifier":"c:@T@gsize"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"bytesWritten"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gsize","preciseIdentifier":"c:@T@gsize"},{"kind":"text","text":">!) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Converts a string from one character set to another, possibly"},{"type":"text","text":" "},{"type":"text","text":"including fallback sequences for characters not representable"},{"type":"text","text":" "},{"type":"text","text":"in the output. Note that it is not guaranteed that the specification"},{"type":"text","text":" "},{"type":"text","text":"for the fallback sequences in "},{"type":"codeVoice","code":"fallback"},{"type":"text","text":" will be honored. Some"},{"type":"text","text":" "},{"type":"text","text":"systems may do an approximate conversion from "},{"type":"codeVoice","code":"fromCodeset"},{"type":"text","text":" "},{"type":"text","text":"to "},{"type":"codeVoice","code":"toCodeset"},{"type":"text","text":" in their "},{"type":"codeVoice","code":"iconv()"},{"type":"text","text":" functions,"},{"type":"text","text":" "},{"type":"text","text":"in which case GLib will simply return that approximate conversion."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/convertWithFallback(str:len:toCodeset:from:fallback:bytesRead:bytesWritten:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/convertwithfallback(str:len:tocodeset:from:fallback:bytesread:byteswritten:)"},"doc://GLib/documentation/GLib":{"role":"collection","title":"GLib","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib","kind":"symbol","type":"topic","url":"\/documentation\/glib"}}}