{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"CacheProtocol"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/GLib\/documentation\/GLib\/PointerWrapper","preciseIdentifier":"s:4GLib14PointerWrapperP","text":"PointerWrapper"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"GCache"},{"type":"text","text":" uses keys and values. A "},{"type":"codeVoice","code":"GCache"},{"type":"text","text":" key describes the properties"},{"type":"text","text":" "},{"type":"text","text":"of a particular resource. A "},{"type":"codeVoice","code":"GCache"},{"type":"text","text":" value is the actual resource."}]},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"GCache"},{"type":"text","text":" has been marked as deprecated, since this API is rarely"},{"type":"text","text":" "},{"type":"text","text":"used and not very actively maintained."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/CacheProtocol"},{"type":"text","text":" protocol exposes the methods and properties of an underlying "},{"type":"codeVoice","code":"GCache"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"The default implementation of these can be found in the protocol extension below."},{"type":"text","text":" "},{"type":"text","text":"For a concrete class that implements these methods and properties, see "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Cache"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Alternatively, use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/CacheRef"},{"type":"text","text":" as a lighweight, "},{"type":"codeVoice","code":"unowned"},{"type":"text","text":" reference if you already have an instance you just want to use."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/glib\/cacheprotocol"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/GLib\/documentation\/GLib\/PointerWrapper"],"kind":"relationships","title":"Inherits From","type":"inheritsFrom"},{"identifiers":["doc:\/\/GLib\/documentation\/GLib\/Cache","doc:\/\/GLib\/documentation\/GLib\/CacheRef"],"kind":"relationships","title":"Conforming Types","type":"conformingTypes"}],"identifier":{"url":"doc:\/\/GLib\/documentation\/GLib\/CacheProtocol","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"GCache"},{"type":"text","text":" allows sharing of complex data structures, in order to"},{"type":"text","text":" "},{"type":"text","text":"save system resources."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"CacheProtocol"}],"title":"CacheProtocol","roleHeading":"Protocol","role":"symbol","symbolKind":"protocol","externalID":"s:4GLib13CacheProtocolP","modules":[{"name":"GLib"}],"navigatorTitle":[{"kind":"identifier","text":"CacheProtocol"}]},"hierarchy":{"paths":[["doc:\/\/GLib\/documentation\/GLib"]]},"topicSections":[{"title":"Instance Methods","identifiers":["doc:\/\/GLib\/documentation\/GLib\/CacheProtocol\/destroy()","doc:\/\/GLib\/documentation\/GLib\/CacheProtocol\/insert(key:)","doc:\/\/GLib\/documentation\/GLib\/CacheProtocol\/keyForeach(func:userData:)","doc:\/\/GLib\/documentation\/GLib\/CacheProtocol\/remove(value:)","doc:\/\/GLib\/documentation\/GLib\/CacheProtocol\/valueForeach(func:userData:)"]}],"references":{"doc://GLib/documentation/GLib/CacheProtocol/insert(key:)":{"role":"symbol","title":"insert(key:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"insert"},{"kind":"text","text":"("},{"kind":"externalParam","text":"key"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Gets the value corresponding to the given key, creating it if"},{"type":"text","text":" "},{"type":"text","text":"necessary. It first checks if the value already exists in the"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Cache"},{"type":"text","text":", by using the "},{"type":"codeVoice","code":"key_equal_func"},{"type":"text","text":" function passed to"},{"type":"text","text":" "},{"type":"codeVoice","code":"g_cache_new()"},{"type":"text","text":". If it does already exist it is returned, and its"},{"type":"text","text":" "},{"type":"text","text":"reference count is increased by one. If the value does not currently"},{"type":"text","text":" "},{"type":"text","text":"exist, if is created by calling the "},{"type":"codeVoice","code":"value_new_func"},{"type":"text","text":". The key is"},{"type":"text","text":" "},{"type":"text","text":"duplicated by calling "},{"type":"codeVoice","code":"key_dup_func"},{"type":"text","text":" and the duplicated key and value"},{"type":"text","text":" "},{"type":"text","text":"are inserted into the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Cache"},{"type":"text","text":"."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/CacheProtocol\/insert(key:)","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/glib\/cacheprotocol\/insert(key:)"},"doc://GLib/documentation/GLib/CacheProtocol/destroy()":{"role":"symbol","title":"destroy()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"destroy"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Frees the memory allocated for the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Cache"},{"type":"text","text":"."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/CacheProtocol\/destroy()","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/glib\/cacheprotocol\/destroy()"},"doc://GLib/documentation/GLib/CacheProtocol":{"role":"symbol","title":"CacheProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"CacheProtocol"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"GCache"},{"type":"text","text":" allows sharing of complex data structures, in order to"},{"type":"text","text":" "},{"type":"text","text":"save system resources."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/CacheProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CacheProtocol"}],"url":"\/documentation\/glib\/cacheprotocol"},"doc://GLib/documentation/GLib/Cache":{"role":"symbol","title":"Cache","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Cache"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"GCache"},{"type":"text","text":" allows sharing of complex data structures, in order to"},{"type":"text","text":" "},{"type":"text","text":"save system resources."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/Cache","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Cache"}],"url":"\/documentation\/glib\/cache"},"doc://GLib/documentation/GLib/CacheProtocol/remove(value:)":{"role":"symbol","title":"remove(value:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"remove"},{"kind":"text","text":"("},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gconstpointer","preciseIdentifier":"c:@T@gconstpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Decreases the reference count of the given value. If it drops to 0"},{"type":"text","text":" "},{"type":"text","text":"then the value and its corresponding key are destroyed, using the"},{"type":"text","text":" "},{"type":"codeVoice","code":"value_destroy_func"},{"type":"text","text":" and "},{"type":"codeVoice","code":"key_destroy_func"},{"type":"text","text":" passed to "},{"type":"codeVoice","code":"g_cache_new()"},{"type":"text","text":"."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/CacheProtocol\/remove(value:)","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/glib\/cacheprotocol\/remove(value:)"},"doc://GLib/documentation/GLib":{"role":"collection","title":"GLib","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib","kind":"symbol","type":"topic","url":"\/documentation\/glib"},"doc://GLib/documentation/GLib/CacheProtocol/valueForeach(func:userData:)":{"role":"symbol","title":"valueForeach(func:userData:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"valueForeach"},{"kind":"text","text":"("},{"kind":"externalParam","text":"func"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GHFunc","preciseIdentifier":"c:@T@GHFunc"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"userData"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Calls the given function for each of the values in the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Cache"},{"type":"text","text":"."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/CacheProtocol\/valueForeach(func:userData:)","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/glib\/cacheprotocol\/valueforeach(func:userdata:)"},"doc://GLib/documentation/GLib/PointerWrapper":{"role":"symbol","title":"PointerWrapper","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"PointerWrapper"}],"abstract":[{"type":"text","text":"Protocol for GLib types that wrap pointers."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/PointerWrapper","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PointerWrapper"}],"url":"\/documentation\/glib\/pointerwrapper"},"doc://GLib/documentation/GLib/CacheRef":{"role":"symbol","title":"CacheRef","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CacheRef"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"GCache"},{"type":"text","text":" allows sharing of complex data structures, in order to"},{"type":"text","text":" "},{"type":"text","text":"save system resources."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/CacheRef","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CacheRef"}],"url":"\/documentation\/glib\/cacheref"},"doc://GLib/documentation/GLib/CacheProtocol/keyForeach(func:userData:)":{"role":"symbol","title":"keyForeach(func:userData:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"keyForeach"},{"kind":"text","text":"("},{"kind":"externalParam","text":"func"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GHFunc","preciseIdentifier":"c:@T@GHFunc"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"userData"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Calls the given function for each of the keys in the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Cache"},{"type":"text","text":"."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/CacheProtocol\/keyForeach(func:userData:)","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/glib\/cacheprotocol\/keyforeach(func:userdata:)"}}}