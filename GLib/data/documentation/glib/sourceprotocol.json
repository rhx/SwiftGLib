{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SourceProtocol"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/GLib\/documentation\/GLib\/PointerWrapper","preciseIdentifier":"s:4GLib14PointerWrapperP","text":"PointerWrapper"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceProtocol"},{"type":"text","text":" protocol exposes the methods and properties of an underlying "},{"type":"codeVoice","code":"GSource"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"The default implementation of these can be found in the protocol extension below."},{"type":"text","text":" "},{"type":"text","text":"For a concrete class that implements these methods and properties, see "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Source"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Alternatively, use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceRef"},{"type":"text","text":" as a lighweight, "},{"type":"codeVoice","code":"unowned"},{"type":"text","text":" reference if you already have an instance you just want to use."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/glib\/sourceprotocol"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/GLib\/documentation\/GLib\/PointerWrapper"],"kind":"relationships","title":"Inherits From","type":"inheritsFrom"},{"identifiers":["doc:\/\/GLib\/documentation\/GLib\/Source","doc:\/\/GLib\/documentation\/GLib\/SourceRef"],"kind":"relationships","title":"Conforming Types","type":"conformingTypes"}],"identifier":{"url":"doc:\/\/GLib\/documentation\/GLib\/SourceProtocol","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"GSource"},{"type":"text","text":" struct is an opaque data type"},{"type":"text","text":" "},{"type":"text","text":"representing an event source."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SourceProtocol"}],"title":"SourceProtocol","roleHeading":"Protocol","role":"symbol","symbolKind":"protocol","externalID":"s:4GLib14SourceProtocolP","modules":[{"name":"GLib"}],"navigatorTitle":[{"kind":"identifier","text":"SourceProtocol"}]},"hierarchy":{"paths":[["doc:\/\/GLib\/documentation\/GLib"]]},"topicSections":[{"title":"Instance Properties","identifiers":["doc:\/\/GLib\/documentation\/GLib\/SourceProtocol\/canRecurse","doc:\/\/GLib\/documentation\/GLib\/SourceProtocol\/context","doc:\/\/GLib\/documentation\/GLib\/SourceProtocol\/id","doc:\/\/GLib\/documentation\/GLib\/SourceProtocol\/isDestroyed","doc:\/\/GLib\/documentation\/GLib\/SourceProtocol\/name","doc:\/\/GLib\/documentation\/GLib\/SourceProtocol\/priority","doc:\/\/GLib\/documentation\/GLib\/SourceProtocol\/readyTime","doc:\/\/GLib\/documentation\/GLib\/SourceProtocol\/source_ptr-5yy6y","doc:\/\/GLib\/documentation\/GLib\/SourceProtocol\/time"]},{"title":"Instance Methods","identifiers":["doc:\/\/GLib\/documentation\/GLib\/SourceProtocol\/add(childSource:)","doc:\/\/GLib\/documentation\/GLib\/SourceProtocol\/addPoll(fd:)","doc:\/\/GLib\/documentation\/GLib\/SourceProtocol\/addUnix(fd:events:)","doc:\/\/GLib\/documentation\/GLib\/SourceProtocol\/attach(context:)-2g6ha","doc:\/\/GLib\/documentation\/GLib\/SourceProtocol\/attach(context:)-wpxn","doc:\/\/GLib\/documentation\/GLib\/SourceProtocol\/destroy()","doc:\/\/GLib\/documentation\/GLib\/SourceProtocol\/getCanRecurse()","doc:\/\/GLib\/documentation\/GLib\/SourceProtocol\/getContext()","doc:\/\/GLib\/documentation\/GLib\/SourceProtocol\/getCurrentTime(timeval:)","doc:\/\/GLib\/documentation\/GLib\/SourceProtocol\/getID()","doc:\/\/GLib\/documentation\/GLib\/SourceProtocol\/getName()","doc:\/\/GLib\/documentation\/GLib\/SourceProtocol\/getPriority()","doc:\/\/GLib\/documentation\/GLib\/SourceProtocol\/getReadyTime()","doc:\/\/GLib\/documentation\/GLib\/SourceProtocol\/getTime()","doc:\/\/GLib\/documentation\/GLib\/SourceProtocol\/modifyUnixFd(tag:newEvents:)","doc:\/\/GLib\/documentation\/GLib\/SourceProtocol\/queryUnixFd(tag:)","doc:\/\/GLib\/documentation\/GLib\/SourceProtocol\/ref()","doc:\/\/GLib\/documentation\/GLib\/SourceProtocol\/remove(childSource:)","doc:\/\/GLib\/documentation\/GLib\/SourceProtocol\/removePoll(fd:)","doc:\/\/GLib\/documentation\/GLib\/SourceProtocol\/removeUnixFd(tag:)","doc:\/\/GLib\/documentation\/GLib\/SourceProtocol\/set(canRecurse:)","doc:\/\/GLib\/documentation\/GLib\/SourceProtocol\/set(funcs:)","doc:\/\/GLib\/documentation\/GLib\/SourceProtocol\/set(name:)","doc:\/\/GLib\/documentation\/GLib\/SourceProtocol\/set(priority:)","doc:\/\/GLib\/documentation\/GLib\/SourceProtocol\/set(readyTime:)","doc:\/\/GLib\/documentation\/GLib\/SourceProtocol\/setCallback(func:data:notify:)","doc:\/\/GLib\/documentation\/GLib\/SourceProtocol\/setCallbackIndirect(callbackData:callbackFuncs:)","doc:\/\/GLib\/documentation\/GLib\/SourceProtocol\/setDisposeFunction(dispose:)","doc:\/\/GLib\/documentation\/GLib\/SourceProtocol\/setStatic(name:)","doc:\/\/GLib\/documentation\/GLib\/SourceProtocol\/unref()"]}],"references":{"doc://GLib/documentation/GLib/SourceRef":{"role":"symbol","title":"SourceRef","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SourceRef"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"GSource"},{"type":"text","text":" struct is an opaque data type"},{"type":"text","text":" "},{"type":"text","text":"representing an event source."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceRef","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SourceRef"}],"url":"\/documentation\/glib\/sourceref"},"doc://GLib/documentation/GLib/SourceProtocol/destroy()":{"role":"symbol","title":"destroy()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"destroy"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Removes a source from its [struct"},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/MainContext"},{"type":"text","text":"], if any, and mark it as"},{"type":"text","text":" "},{"type":"text","text":"destroyed.  The source cannot be subsequently added to another"},{"type":"text","text":" "},{"type":"text","text":"context. It is safe to call this on sources which have already been"},{"type":"text","text":" "},{"type":"text","text":"removed from their context."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceProtocol\/destroy()","kind":"symbol","type":"topic","url":"\/documentation\/glib\/sourceprotocol\/destroy()"},"doc://GLib/documentation/GLib/SourceProtocol/queryUnixFd(tag:)":{"role":"symbol","title":"queryUnixFd(tag:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"queryUnixFd"},{"kind":"text","text":"("},{"kind":"externalParam","text":"tag"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"!) -> "},{"kind":"typeIdentifier","text":"IOCondition","preciseIdentifier":"s:4GLib11IOConditionV"}],"abstract":[{"type":"text","text":"Queries the events reported for the fd corresponding to "},{"type":"codeVoice","code":"tag"},{"type":"text","text":" on"},{"type":"text","text":" "},{"type":"codeVoice","code":"source"},{"type":"text","text":" during the last poll."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceProtocol\/queryUnixFd(tag:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/sourceprotocol\/queryunixfd(tag:)"},"doc://GLib/documentation/GLib/SourceProtocol/set(canRecurse:)":{"role":"symbol","title":"set(canRecurse:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"set"},{"kind":"text","text":"("},{"kind":"externalParam","text":"canRecurse"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Sets whether a source can be called recursively. If "},{"type":"codeVoice","code":"canRecurse"},{"type":"text","text":" is"},{"type":"text","text":" "},{"type":"codeVoice","code":"true"},{"type":"text","text":", then while the source is being dispatched then this source"},{"type":"text","text":" "},{"type":"text","text":"will be processed normally. Otherwise, all processing of this"},{"type":"text","text":" "},{"type":"text","text":"source is blocked until the dispatch function returns."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceProtocol\/set(canRecurse:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/sourceprotocol\/set(canrecurse:)"},"doc://GLib/documentation/GLib/SourceProtocol/removePoll(fd:)":{"role":"symbol","title":"removePoll(fd:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"removePoll"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"PollFDT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"fd"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"PollFDT"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Removes a file descriptor from the set of file descriptors polled for"},{"type":"text","text":" "},{"type":"text","text":"this source."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceProtocol\/removePoll(fd:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/sourceprotocol\/removepoll(fd:)"},"doc://GLib/documentation/GLib/MainContext":{"role":"symbol","title":"MainContext","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MainContext"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"GMainContext"},{"type":"text","text":" struct is an opaque data"},{"type":"text","text":" "},{"type":"text","text":"type representing a set of sources to be handled in a main loop."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/MainContext","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MainContext"}],"url":"\/documentation\/glib\/maincontext"},"doc://GLib/documentation/GLib/SourceProtocol/isDestroyed":{"role":"symbol","title":"isDestroyed","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"isDestroyed"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Returns whether "},{"type":"codeVoice","code":"source"},{"type":"text","text":" has been destroyed."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceProtocol\/isDestroyed","kind":"symbol","type":"topic","url":"\/documentation\/glib\/sourceprotocol\/isdestroyed"},"doc://GLib/documentation/GLib/SourceProtocol/remove(childSource:)":{"role":"symbol","title":"remove(childSource:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"remove"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"SourceT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"childSource"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SourceT"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Detaches "},{"type":"codeVoice","code":"childSource"},{"type":"text","text":" from "},{"type":"codeVoice","code":"source"},{"type":"text","text":" and destroys it."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceProtocol\/remove(childSource:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/sourceprotocol\/remove(childsource:)"},"doc://GLib/documentation/GLib/SourceProtocol/modifyUnixFd(tag:newEvents:)":{"role":"symbol","title":"modifyUnixFd(tag:newEvents:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"modifyUnixFd"},{"kind":"text","text":"("},{"kind":"externalParam","text":"tag"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"!, "},{"kind":"externalParam","text":"newEvents"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"IOCondition","preciseIdentifier":"s:4GLib11IOConditionV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Updates the event mask to watch for the fd identified by "},{"type":"codeVoice","code":"tag"},{"type":"text","text":"."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceProtocol\/modifyUnixFd(tag:newEvents:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/sourceprotocol\/modifyunixfd(tag:newevents:)"},"doc://GLib/documentation/GLib/SourceProtocol/add(childSource:)":{"role":"symbol","title":"add(childSource:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"add"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"SourceT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"childSource"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SourceT"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Adds "},{"type":"codeVoice","code":"childSource"},{"type":"text","text":" to "},{"type":"codeVoice","code":"source"},{"type":"text","text":" as a “polled” source; when "},{"type":"codeVoice","code":"source"},{"type":"text","text":" is"},{"type":"text","text":" "},{"type":"text","text":"added to a [struct"},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/MainContext"},{"type":"text","text":"], "},{"type":"codeVoice","code":"childSource"},{"type":"text","text":" will be automatically"},{"type":"text","text":" "},{"type":"text","text":"added with the same priority, when "},{"type":"codeVoice","code":"childSource"},{"type":"text","text":" is triggered, it will"},{"type":"text","text":" "},{"type":"text","text":"cause "},{"type":"codeVoice","code":"source"},{"type":"text","text":" to dispatch (in addition to calling its own"},{"type":"text","text":" "},{"type":"text","text":"callback), and when "},{"type":"codeVoice","code":"source"},{"type":"text","text":" is destroyed, it will destroy"},{"type":"text","text":" "},{"type":"codeVoice","code":"childSource"},{"type":"text","text":" as well. ("},{"type":"codeVoice","code":"source"},{"type":"text","text":" will also still be dispatched if"},{"type":"text","text":" "},{"type":"text","text":"its own prepare\/check functions indicate that it is ready.)"}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceProtocol\/add(childSource:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/sourceprotocol\/add(childsource:)"},"doc://GLib/documentation/GLib/SourceProtocol/set(readyTime:)":{"role":"symbol","title":"set(readyTime:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"set"},{"kind":"text","text":"("},{"kind":"externalParam","text":"readyTime"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gint64","preciseIdentifier":"c:@T@gint64"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Sets a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Source"},{"type":"text","text":" to be dispatched when the given monotonic time is"},{"type":"text","text":" "},{"type":"text","text":"reached (or passed).  If the monotonic time is in the past (as it"},{"type":"text","text":" "},{"type":"text","text":"always will be if "},{"type":"codeVoice","code":"readyTime"},{"type":"text","text":" is 0) then the source will be"},{"type":"text","text":" "},{"type":"text","text":"dispatched immediately."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceProtocol\/set(readyTime:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/sourceprotocol\/set(readytime:)"},"doc://GLib/documentation/GLib/SourceProtocol/removeUnixFd(tag:)":{"role":"symbol","title":"removeUnixFd(tag:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"removeUnixFd"},{"kind":"text","text":"("},{"kind":"externalParam","text":"tag"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"!)"}],"abstract":[{"type":"text","text":"Reverses the effect of a previous call to [method"},{"type":"codeVoice","code":"GLib.Source.add_unix_fd"},{"type":"text","text":"]."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceProtocol\/removeUnixFd(tag:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/sourceprotocol\/removeunixfd(tag:)"},"doc://GLib/documentation/GLib/Source":{"role":"symbol","title":"Source","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Source"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"GSource"},{"type":"text","text":" struct is an opaque data type"},{"type":"text","text":" "},{"type":"text","text":"representing an event source."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/Source","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Source"}],"url":"\/documentation\/glib\/source"},"doc://GLib/documentation/GLib/SourceProtocol/getTime()":{"role":"symbol","title":"getTime()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getTime"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"gint64","preciseIdentifier":"c:@T@gint64"}],"abstract":[{"type":"text","text":"Gets the time to be used when checking this source. The advantage of"},{"type":"text","text":" "},{"type":"text","text":"calling this function over calling [func"},{"type":"codeVoice","code":"GLib.get_monotonic_time"},{"type":"text","text":"] directly is"},{"type":"text","text":" "},{"type":"text","text":"that when checking multiple sources, GLib can cache a single value"},{"type":"text","text":" "},{"type":"text","text":"instead of having to repeatedly get the system monotonic time."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceProtocol\/getTime()","kind":"symbol","type":"topic","url":"\/documentation\/glib\/sourceprotocol\/gettime()"},"doc://GLib/documentation/GLib/SourceProtocol/set(funcs:)":{"role":"symbol","title":"set(funcs:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"set"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"SourceFuncsT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"funcs"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SourceFuncsT"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Sets the source functions (can be used to override"},{"type":"text","text":" "},{"type":"text","text":"default implementations) of an unattached source."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceProtocol\/set(funcs:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/sourceprotocol\/set(funcs:)"},"doc://GLib/documentation/GLib/SourceProtocol/getName()":{"role":"symbol","title":"getName()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getName"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Gets a name for the source, used in debugging and profiling.  The"},{"type":"text","text":" "},{"type":"text","text":"name may be "},{"type":"codeVoice","code":"NULL"},{"type":"text","text":" if it has never been set with [method"},{"type":"codeVoice","code":"GLib.Source.set_name"},{"type":"text","text":"]."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceProtocol\/getName()","kind":"symbol","type":"topic","url":"\/documentation\/glib\/sourceprotocol\/getname()"},"doc://GLib/documentation/GLib/SourceProtocol/context":{"role":"symbol","title":"context","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"MainContextRef","preciseIdentifier":"s:4GLib14MainContextRefV"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Gets the [struct"},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/MainContext"},{"type":"text","text":"] with which the source is associated."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceProtocol\/context","kind":"symbol","type":"topic","url":"\/documentation\/glib\/sourceprotocol\/context"},"doc://GLib/documentation/GLib/SourceProtocol/getCanRecurse()":{"role":"symbol","title":"getCanRecurse()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getCanRecurse"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Checks whether a source is allowed to be called recursively."},{"type":"text","text":" "},{"type":"text","text":"see [method"},{"type":"codeVoice","code":"GLib.Source.set_can_recurse"},{"type":"text","text":"]."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceProtocol\/getCanRecurse()","kind":"symbol","type":"topic","url":"\/documentation\/glib\/sourceprotocol\/getcanrecurse()"},"doc://GLib/documentation/GLib/SourceProtocol/getID()":{"role":"symbol","title":"getID()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getID"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"abstract":[{"type":"text","text":"Returns the numeric ID for a particular source. The ID of a source"},{"type":"text","text":" "},{"type":"text","text":"is a positive integer which is unique within a particular main loop"},{"type":"text","text":" "},{"type":"text","text":"context. The reverse mapping from ID to source is done by"},{"type":"text","text":" "},{"type":"text","text":"[method"},{"type":"codeVoice","code":"GLib.MainContext.find_source_by_id"},{"type":"text","text":"]."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceProtocol\/getID()","kind":"symbol","type":"topic","url":"\/documentation\/glib\/sourceprotocol\/getid()"},"doc://GLib/documentation/GLib/SourceProtocol/addUnix(fd:events:)":{"role":"symbol","title":"addUnix(fd:events:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"addUnix"},{"kind":"text","text":"("},{"kind":"externalParam","text":"fd"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"events"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"IOCondition","preciseIdentifier":"s:4GLib11IOConditionV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Monitors "},{"type":"codeVoice","code":"fd"},{"type":"text","text":" for the IO events in "},{"type":"codeVoice","code":"events"},{"type":"text","text":"."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceProtocol\/addUnix(fd:events:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/sourceprotocol\/addunix(fd:events:)"},"doc://GLib/documentation/GLib/SourceProtocol":{"role":"symbol","title":"SourceProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SourceProtocol"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"GSource"},{"type":"text","text":" struct is an opaque data type"},{"type":"text","text":" "},{"type":"text","text":"representing an event source."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SourceProtocol"}],"url":"\/documentation\/glib\/sourceprotocol"},"doc://GLib/documentation/GLib/SourceProtocol/readyTime":{"role":"symbol","title":"readyTime","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"readyTime"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gint64","preciseIdentifier":"c:@T@gint64"}],"abstract":[{"type":"text","text":"Gets the “ready time” of "},{"type":"codeVoice","code":"source"},{"type":"text","text":", as set by"},{"type":"text","text":" "},{"type":"text","text":"[method"},{"type":"codeVoice","code":"GLib.Source.set_ready_time"},{"type":"text","text":"]."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceProtocol\/readyTime","kind":"symbol","type":"topic","url":"\/documentation\/glib\/sourceprotocol\/readytime"},"doc://GLib/documentation/GLib/SourceProtocol/setStatic(name:)":{"role":"symbol","title":"setStatic(name:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"setStatic"},{"kind":"text","text":"("},{"kind":"externalParam","text":"name"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"CChar","preciseIdentifier":"s:s5CChara"},{"kind":"text","text":">!)"}],"abstract":[{"type":"text","text":"A variant of [method"},{"type":"codeVoice","code":"GLib.Source.set_name"},{"type":"text","text":"] that does not"},{"type":"text","text":" "},{"type":"text","text":"duplicate the "},{"type":"codeVoice","code":"name"},{"type":"text","text":", and can only be used with"},{"type":"text","text":" "},{"type":"text","text":"string literals."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceProtocol\/setStatic(name:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/sourceprotocol\/setstatic(name:)"},"doc://GLib/documentation/GLib/SourceProtocol/canRecurse":{"role":"symbol","title":"canRecurse","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"canRecurse"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Checks whether a source is allowed to be called recursively."},{"type":"text","text":" "},{"type":"text","text":"see [method"},{"type":"codeVoice","code":"GLib.Source.set_can_recurse"},{"type":"text","text":"]."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceProtocol\/canRecurse","kind":"symbol","type":"topic","url":"\/documentation\/glib\/sourceprotocol\/canrecurse"},"doc://GLib/documentation/GLib/SourceProtocol/getPriority()":{"role":"symbol","title":"getPriority()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getPriority"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"abstract":[{"type":"text","text":"Gets the priority of a source."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceProtocol\/getPriority()","kind":"symbol","type":"topic","url":"\/documentation\/glib\/sourceprotocol\/getpriority()"},"doc://GLib/documentation/GLib/PollFD":{"role":"symbol","title":"PollFD","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"PollFD"}],"abstract":[{"type":"text","text":"Represents a file descriptor, which events to poll for, and which events"},{"type":"text","text":" "},{"type":"text","text":"occurred."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/PollFD","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PollFD"}],"url":"\/documentation\/glib\/pollfd"},"doc://GLib/documentation/GLib/SourceProtocol/addPoll(fd:)":{"role":"symbol","title":"addPoll(fd:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"addPoll"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"PollFDT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"fd"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"PollFDT"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Adds a file descriptor to the set of file descriptors polled for"},{"type":"text","text":" "},{"type":"text","text":"this source. This is usually combined with [ctor"},{"type":"codeVoice","code":"GLib.Source.new"},{"type":"text","text":"] to add an"},{"type":"text","text":" "},{"type":"text","text":"event source. The event source’s check function will typically test"},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"codeVoice","code":"revents"},{"type":"text","text":" field in the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/PollFD"},{"type":"text","text":" struct and return "},{"type":"codeVoice","code":"true"},{"type":"text","text":" if events need"},{"type":"text","text":" "},{"type":"text","text":"to be processed."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceProtocol\/addPoll(fd:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/sourceprotocol\/addpoll(fd:)"},"doc://GLib/documentation/GLib/SourceProtocol/setCallback(func:data:notify:)":{"role":"symbol","title":"setCallback(func:data:notify:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"setCallback"},{"kind":"text","text":"("},{"kind":"externalParam","text":"func"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GSourceFunc","preciseIdentifier":"c:@T@GSourceFunc"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"data"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"notify"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GDestroyNotify","preciseIdentifier":"c:@T@GDestroyNotify"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Sets the callback function for a source. The callback for a source is"},{"type":"text","text":" "},{"type":"text","text":"called from the source’s dispatch function."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceProtocol\/setCallback(func:data:notify:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/sourceprotocol\/setcallback(func:data:notify:)"},"doc://GLib/documentation/GLib/SourceProtocol/name":{"role":"symbol","title":"name","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"name"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Gets a name for the source, used in debugging and profiling.  The"},{"type":"text","text":" "},{"type":"text","text":"name may be "},{"type":"codeVoice","code":"NULL"},{"type":"text","text":" if it has never been set with [method"},{"type":"codeVoice","code":"GLib.Source.set_name"},{"type":"text","text":"]."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceProtocol\/name","kind":"symbol","type":"topic","url":"\/documentation\/glib\/sourceprotocol\/name"},"doc://GLib/documentation/GLib/SourceProtocol/attach(context:)-2g6ha":{"role":"symbol","title":"attach(context:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"attach"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"MainContextT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"MainContextT"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"abstract":[{"type":"text","text":"Adds a [struct"},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Source"},{"type":"text","text":"] to a "},{"type":"codeVoice","code":"context"},{"type":"text","text":" so that it will be executed within"},{"type":"text","text":" "},{"type":"text","text":"that context. Remove it by calling [method"},{"type":"codeVoice","code":"GLib.Source.destroy"},{"type":"text","text":"]."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceProtocol\/attach(context:)-2g6ha","kind":"symbol","type":"topic","url":"\/documentation\/glib\/sourceprotocol\/attach(context:)-2g6ha"},"doc://GLib/documentation/GLib/SourceProtocol/getContext()":{"role":"symbol","title":"getContext()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getContext"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"MainContextRef","preciseIdentifier":"s:4GLib14MainContextRefV"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Gets the [struct"},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/MainContext"},{"type":"text","text":"] with which the source is associated."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceProtocol\/getContext()","kind":"symbol","type":"topic","url":"\/documentation\/glib\/sourceprotocol\/getcontext()"},"doc://GLib/documentation/GLib/SourceProtocol/time":{"role":"symbol","title":"time","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"time"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gint64","preciseIdentifier":"c:@T@gint64"}],"abstract":[{"type":"text","text":"Gets the time to be used when checking this source. The advantage of"},{"type":"text","text":" "},{"type":"text","text":"calling this function over calling [func"},{"type":"codeVoice","code":"GLib.get_monotonic_time"},{"type":"text","text":"] directly is"},{"type":"text","text":" "},{"type":"text","text":"that when checking multiple sources, GLib can cache a single value"},{"type":"text","text":" "},{"type":"text","text":"instead of having to repeatedly get the system monotonic time."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceProtocol\/time","kind":"symbol","type":"topic","url":"\/documentation\/glib\/sourceprotocol\/time"},"doc://GLib/documentation/GLib/SourceProtocol/source_ptr-5yy6y":{"defaultImplementations":1,"role":"symbol","title":"source_ptr","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"source_ptr"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GSource"},{"kind":"text","text":">!"}],"abstract":[{"type":"text","text":"Typed pointer to the underlying "},{"type":"codeVoice","code":"GSource"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceProtocol\/source_ptr-5yy6y","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/glib\/sourceprotocol\/source_ptr-5yy6y"},"doc://GLib/documentation/GLib/SourceProtocol/getCurrentTime(timeval:)":{"role":"symbol","title":"getCurrentTime(timeval:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getCurrentTime"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"TimeValT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"timeval"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TimeValT"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"This function ignores "},{"type":"codeVoice","code":"source"},{"type":"text","text":" and is otherwise the same as"},{"type":"text","text":" "},{"type":"text","text":"[func"},{"type":"codeVoice","code":"GLib.get_current_time"},{"type":"text","text":"]."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceProtocol\/getCurrentTime(timeval:)","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/glib\/sourceprotocol\/getcurrenttime(timeval:)"},"doc://GLib/documentation/GLib/SourceProtocol/ref()":{"role":"symbol","title":"ref()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"ref"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"SourceRef","preciseIdentifier":"s:4GLib9SourceRefV"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Increases the reference count on a source by one."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceProtocol\/ref()","kind":"symbol","type":"topic","url":"\/documentation\/glib\/sourceprotocol\/ref()"},"doc://GLib/documentation/GLib/SourceProtocol/priority":{"role":"symbol","title":"priority","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"priority"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"abstract":[{"type":"text","text":"Gets the priority of a source."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceProtocol\/priority","kind":"symbol","type":"topic","url":"\/documentation\/glib\/sourceprotocol\/priority"},"doc://GLib/documentation/GLib/SourceProtocol/id":{"role":"symbol","title":"id","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"abstract":[{"type":"text","text":"Returns the numeric ID for a particular source. The ID of a source"},{"type":"text","text":" "},{"type":"text","text":"is a positive integer which is unique within a particular main loop"},{"type":"text","text":" "},{"type":"text","text":"context. The reverse mapping from ID to source is done by"},{"type":"text","text":" "},{"type":"text","text":"[method"},{"type":"codeVoice","code":"GLib.MainContext.find_source_by_id"},{"type":"text","text":"]."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceProtocol\/id","kind":"symbol","type":"topic","url":"\/documentation\/glib\/sourceprotocol\/id"},"doc://GLib/documentation/GLib":{"role":"collection","title":"GLib","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib","kind":"symbol","type":"topic","url":"\/documentation\/glib"},"doc://GLib/documentation/GLib/SourceProtocol/setDisposeFunction(dispose:)":{"role":"symbol","title":"setDisposeFunction(dispose:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"setDisposeFunction"},{"kind":"text","text":"("},{"kind":"externalParam","text":"dispose"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GSourceDisposeFunc","preciseIdentifier":"c:@T@GSourceDisposeFunc"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Set "},{"type":"codeVoice","code":"dispose"},{"type":"text","text":" as dispose function on "},{"type":"codeVoice","code":"source"},{"type":"text","text":". "},{"type":"codeVoice","code":"dispose"},{"type":"text","text":" will be called once"},{"type":"text","text":" "},{"type":"text","text":"the reference count of "},{"type":"codeVoice","code":"source"},{"type":"text","text":" reaches 0 but before any of the state of the"},{"type":"text","text":" "},{"type":"text","text":"source is freed, especially before the finalize function is called."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceProtocol\/setDisposeFunction(dispose:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/sourceprotocol\/setdisposefunction(dispose:)"},"doc://GLib/documentation/GLib/SourceProtocol/unref()":{"role":"symbol","title":"unref()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unref"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Decreases the reference count of a source by one. If the"},{"type":"text","text":" "},{"type":"text","text":"resulting reference count is zero the source and associated"},{"type":"text","text":" "},{"type":"text","text":"memory will be destroyed."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceProtocol\/unref()","kind":"symbol","type":"topic","url":"\/documentation\/glib\/sourceprotocol\/unref()"},"doc://GLib/documentation/GLib/SourceProtocol/set(priority:)":{"role":"symbol","title":"set(priority:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"set"},{"kind":"text","text":"("},{"kind":"externalParam","text":"priority"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Sets the priority of a source. While the main loop is being run, a"},{"type":"text","text":" "},{"type":"text","text":"source will be dispatched if it is ready to be dispatched and no"},{"type":"text","text":" "},{"type":"text","text":"sources at a higher (numerically smaller) priority are ready to be"},{"type":"text","text":" "},{"type":"text","text":"dispatched."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceProtocol\/set(priority:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/sourceprotocol\/set(priority:)"},"doc://GLib/documentation/GLib/SourceProtocol/set(name:)":{"role":"symbol","title":"set(name:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"set"},{"kind":"text","text":"("},{"kind":"externalParam","text":"name"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"CChar","preciseIdentifier":"s:s5CChara"},{"kind":"text","text":">!)"}],"abstract":[{"type":"text","text":"Sets a name for the source, used in debugging and profiling."},{"type":"text","text":" "},{"type":"text","text":"The name defaults to "},{"type":"codeVoice","code":"NULL"},{"type":"text","text":"."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceProtocol\/set(name:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/sourceprotocol\/set(name:)"},"doc://GLib/documentation/GLib/SourceProtocol/setCallbackIndirect(callbackData:callbackFuncs:)":{"role":"symbol","title":"setCallbackIndirect(callbackData:callbackFuncs:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"setCallbackIndirect"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"SourceCallbackFuncsT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"callbackData"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"callbackFuncs"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SourceCallbackFuncsT"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Sets the callback function storing the data as a refcounted callback"},{"type":"text","text":" "},{"type":"text","text":"“object”. This is used internally. Note that calling"},{"type":"text","text":" "},{"type":"text","text":"[method"},{"type":"codeVoice","code":"GLib.Source.set_callback_indirect"},{"type":"text","text":"] assumes"},{"type":"text","text":" "},{"type":"text","text":"an initial reference count on "},{"type":"codeVoice","code":"callbackData"},{"type":"text","text":", and thus"},{"type":"text","text":" "},{"type":"codeVoice","code":"callback_funcs-"},{"type":"text","text":">unref will eventually be called once more"},{"type":"text","text":" "},{"type":"text","text":"than "},{"type":"codeVoice","code":"callback_funcs-"},{"type":"text","text":">ref."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceProtocol\/setCallbackIndirect(callbackData:callbackFuncs:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/sourceprotocol\/setcallbackindirect(callbackdata:callbackfuncs:)"},"doc://GLib/documentation/GLib/SourceProtocol/attach(context:)-wpxn":{"role":"symbol","title":"attach(context:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"attach"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"MainContextRef","preciseIdentifier":"s:4GLib14MainContextRefV"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"abstract":[{"type":"text","text":"Adds a [struct"},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Source"},{"type":"text","text":"] to a "},{"type":"codeVoice","code":"context"},{"type":"text","text":" so that it will be executed within"},{"type":"text","text":" "},{"type":"text","text":"that context. Remove it by calling [method"},{"type":"codeVoice","code":"GLib.Source.destroy"},{"type":"text","text":"]."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceProtocol\/attach(context:)-wpxn","kind":"symbol","type":"topic","url":"\/documentation\/glib\/sourceprotocol\/attach(context:)-wpxn"},"doc://GLib/documentation/GLib/PointerWrapper":{"role":"symbol","title":"PointerWrapper","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"PointerWrapper"}],"abstract":[{"type":"text","text":"Protocol for GLib types that wrap pointers."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/PointerWrapper","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PointerWrapper"}],"url":"\/documentation\/glib\/pointerwrapper"},"doc://GLib/documentation/GLib/SourceProtocol/getReadyTime()":{"role":"symbol","title":"getReadyTime()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getReadyTime"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"gint64","preciseIdentifier":"c:@T@gint64"}],"abstract":[{"type":"text","text":"Gets the “ready time” of "},{"type":"codeVoice","code":"source"},{"type":"text","text":", as set by"},{"type":"text","text":" "},{"type":"text","text":"[method"},{"type":"codeVoice","code":"GLib.Source.set_ready_time"},{"type":"text","text":"]."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/SourceProtocol\/getReadyTime()","kind":"symbol","type":"topic","url":"\/documentation\/glib\/sourceprotocol\/getreadytime()"}}}