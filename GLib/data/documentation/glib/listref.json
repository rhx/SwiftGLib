{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ListRef"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/ListRef"},{"type":"text","text":" type acts as a lightweight Swift reference to an underlying "},{"type":"codeVoice","code":"GList"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"It exposes methods that can operate on this data type through "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/ListProtocol"},{"type":"text","text":" conformance."},{"type":"text","text":" "},{"type":"text","text":"Use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/ListRef"},{"type":"text","text":" only as an "},{"type":"codeVoice","code":"unowned"},{"type":"text","text":" reference to an existing "},{"type":"codeVoice","code":"GList"},{"type":"text","text":" instance."}]},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/List"},{"type":"text","text":" (instead of "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/ListRef"},{"type":"text","text":") if you want to use Automatic Reference Counting for memory management of the underlying "},{"type":"codeVoice","code":"GList"},{"type":"text","text":" instance."}]}],"type":"aside","name":"Note"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/glib\/listref"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/GLib\/documentation\/GLib\/ListProtocol","doc:\/\/GLib\/documentation\/GLib\/PointerWrapper"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/GLib\/documentation\/GLib\/ListRef","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/List"},{"type":"text","text":" struct is used for each element in a doubly-linked list."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ListRef"}],"title":"ListRef","roleHeading":"Structure","role":"symbol","symbolKind":"struct","externalID":"s:4GLib7ListRefV","modules":[{"name":"GLib"}],"navigatorTitle":[{"kind":"identifier","text":"ListRef"}]},"hierarchy":{"paths":[["doc:\/\/GLib\/documentation\/GLib"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/GLib\/documentation\/GLib\/ListRef\/init(_:)-3xzbm","doc:\/\/GLib\/documentation\/GLib\/ListRef\/init(_:)-4sjmb","doc:\/\/GLib\/documentation\/GLib\/ListRef\/init(_:)-714ke","doc:\/\/GLib\/documentation\/GLib\/ListRef\/init(_:)-8ec5b","doc:\/\/GLib\/documentation\/GLib\/ListRef\/init(_:)-wuym","doc:\/\/GLib\/documentation\/GLib\/ListRef\/init(cPointer:)","doc:\/\/GLib\/documentation\/GLib\/ListRef\/init(constPointer:)","doc:\/\/GLib\/documentation\/GLib\/ListRef\/init(gconstpointer:)","doc:\/\/GLib\/documentation\/GLib\/ListRef\/init(gpointer:)","doc:\/\/GLib\/documentation\/GLib\/ListRef\/init(mutating:)","doc:\/\/GLib\/documentation\/GLib\/ListRef\/init(opaquePointer:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/GLib\/documentation\/GLib\/ListRef\/ptr"]},{"title":"Type Methods","identifiers":["doc:\/\/GLib\/documentation\/GLib\/ListRef\/alloc()"]},{"title":"Default Implementations","identifiers":["doc:\/\/GLib\/documentation\/GLib\/ListRef\/ListProtocol-Implementations","doc:\/\/GLib\/documentation\/GLib\/ListRef\/PointerWrapper-Implementations"],"generated":true}],"references":{"doc://GLib/documentation/GLib/ListRef/init(_:)-wuym":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Reference intialiser for a related type that implements "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/ListProtocol"}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/ListRef\/init(_:)-wuym","kind":"symbol","type":"topic","url":"\/documentation\/glib\/listref\/init(_:)-wuym"},"doc://GLib/documentation/GLib/ListRef/init(gconstpointer:)":{"role":"symbol","title":"init(gconstpointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"externalParam","text":"gconstpointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gconstpointer","preciseIdentifier":"c:@T@gconstpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional, non-mutable "},{"type":"codeVoice","code":"gconstpointer"}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/ListRef\/init(gconstpointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/listref\/init(gconstpointer:)"},"doc://GLib/documentation/GLib":{"role":"collection","title":"GLib","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib","kind":"symbol","type":"topic","url":"\/documentation\/glib"},"doc://GLib/documentation/GLib/ListRef/init(gpointer:)":{"role":"symbol","title":"init(gpointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"externalParam","text":"gpointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional "},{"type":"codeVoice","code":"gpointer"}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/ListRef\/init(gpointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/listref\/init(gpointer:)"},"doc://GLib/documentation/GLib/ListRef/ListProtocol-Implementations":{"role":"collectionGroup","title":"ListProtocol Implementations","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib\/ListRef\/ListProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/glib\/listref\/listprotocol-implementations"},"doc://GLib/documentation/GLib/ListRef/init(cPointer:)":{"role":"symbol","title":"init(cPointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"cPointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Unsafe typed initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/ListProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/ListRef\/init(cPointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/listref\/init(cpointer:)"},"doc://GLib/documentation/GLib/ListRef/ptr":{"role":"symbol","title":"ptr","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"ptr"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutableRawPointer","preciseIdentifier":"s:Sv"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Untyped pointer to the underlying "},{"type":"codeVoice","code":"GList"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"For type-safe access, use the generated, typed pointer "},{"type":"codeVoice","code":"ListProtocol\/_ptr"},{"type":"text","text":" property instead."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/ListRef\/ptr","kind":"symbol","type":"topic","url":"\/documentation\/glib\/listref\/ptr"},"doc://GLib/documentation/GLib/ListRef/init(constPointer:)":{"role":"symbol","title":"init(constPointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"constPointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Unsafe typed initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/ListProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/ListRef\/init(constPointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/listref\/init(constpointer:)"},"doc://GLib/documentation/GLib/ListRef/init(_:)-8ec5b":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GList"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional, non-mutable pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/ListRef\/init(_:)-8ec5b","kind":"symbol","type":"topic","url":"\/documentation\/glib\/listref\/init(_:)-8ec5b"},"doc://GLib/documentation/GLib/ListRef/init(_:)-3xzbm":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GList"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from a constant pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/ListRef\/init(_:)-3xzbm","kind":"symbol","type":"topic","url":"\/documentation\/glib\/listref\/init(_:)-3xzbm"},"doc://GLib/documentation/GLib/ListRef/init(_:)-4sjmb":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GList"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/ListRef\/init(_:)-4sjmb","kind":"symbol","type":"topic","url":"\/documentation\/glib\/listref\/init(_:)-4sjmb"},"doc://GLib/documentation/GLib/ListRef":{"role":"symbol","title":"ListRef","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ListRef"}],"abstract":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/List"},{"type":"text","text":" struct is used for each element in a doubly-linked list."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/ListRef","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ListRef"}],"url":"\/documentation\/glib\/listref"},"doc://GLib/documentation/GLib/ListRef/init(_:)-714ke":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GList"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/ListRef\/init(_:)-714ke","kind":"symbol","type":"topic","url":"\/documentation\/glib\/listref\/init(_:)-714ke"},"doc://GLib/documentation/GLib/ListProtocol":{"role":"symbol","title":"ListProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ListProtocol"}],"abstract":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/List"},{"type":"text","text":" struct is used for each element in a doubly-linked list."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/ListProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ListProtocol"}],"url":"\/documentation\/glib\/listprotocol"},"doc://GLib/documentation/GLib/ListRef/init(mutating:)":{"role":"symbol","title":"init(mutating:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"mutating"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeRawPointer","preciseIdentifier":"s:SV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/ListProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/ListRef\/init(mutating:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/listref\/init(mutating:)"},"doc://GLib/documentation/GLib/List":{"role":"symbol","title":"List","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"List"}],"abstract":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/List"},{"type":"text","text":" struct is used for each element in a doubly-linked list."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/List","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"List"}],"url":"\/documentation\/glib\/list"},"doc://GLib/documentation/GLib/ListRef/PointerWrapper-Implementations":{"role":"collectionGroup","title":"PointerWrapper Implementations","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib\/ListRef\/PointerWrapper-Implementations","kind":"article","type":"topic","url":"\/documentation\/glib\/listref\/pointerwrapper-implementations"},"doc://GLib/documentation/GLib/PointerWrapper":{"role":"symbol","title":"PointerWrapper","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"PointerWrapper"}],"abstract":[{"type":"text","text":"Protocol for GLib types that wrap pointers."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/PointerWrapper","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PointerWrapper"}],"url":"\/documentation\/glib\/pointerwrapper"},"doc://GLib/documentation/GLib/ListRef/alloc()":{"role":"symbol","title":"alloc()","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"alloc"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"ListRef","preciseIdentifier":"s:4GLib7ListRefV"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Allocates space for one "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/List"},{"type":"text","text":" element. It is called by"},{"type":"text","text":" "},{"type":"codeVoice","code":"g_list_append()"},{"type":"text","text":", "},{"type":"codeVoice","code":"g_list_prepend()"},{"type":"text","text":", "},{"type":"codeVoice","code":"g_list_insert()"},{"type":"text","text":" and"},{"type":"text","text":" "},{"type":"codeVoice","code":"g_list_insert_sorted()"},{"type":"text","text":" and so is rarely used on its own."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/ListRef\/alloc()","kind":"symbol","type":"topic","url":"\/documentation\/glib\/listref\/alloc()"},"doc://GLib/documentation/GLib/ListRef/init(opaquePointer:)":{"role":"symbol","title":"init(opaquePointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"opaquePointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"OpaquePointer","preciseIdentifier":"s:s13OpaquePointerV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/ListProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/ListRef\/init(opaquePointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/listref\/init(opaquepointer:)"}}}