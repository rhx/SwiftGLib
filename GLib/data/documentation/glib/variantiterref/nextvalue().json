{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"nextValue"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/GLib\/documentation\/GLib\/VariantRef","preciseIdentifier":"s:4GLib10VariantRefV","text":"VariantRef"},{"kind":"text","text":"!"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Use "},{"type":"codeVoice","code":"g_variant_unref()"},{"type":"text","text":" to drop your reference on the return value when"},{"type":"text","text":" "},{"type":"text","text":"you no longer need it."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Here is an example for iterating with "},{"type":"codeVoice","code":"g_variant_iter_next_value()"},{"type":"text","text":":"},{"type":"text","text":" "},{"type":"text","text":"(C Language Example):"}]},{"type":"codeListing","syntax":"C","code":["  \/\/ recursively iterate a container","  void","  iterate_container_recursive (GVariant *container)","  {","    GVariantIter iter;","    GVariant *child;","","    g_variant_iter_init (&iter, container);","    while ((child = g_variant_iter_next_value (&iter)))","      {","        g_print (\"type '%s'\\n\", g_variant_get_type_string (child));","","        if (g_variant_is_container (child))","          iterate_container_recursive (child);","","        g_variant_unref (child);","      }","  }"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/glib\/variantiterref\/nextvalue()"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/GLib\/documentation\/GLib\/VariantIterRef\/nextValue()","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Gets the next item in the container.  If no more items remain then"},{"type":"text","text":" "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" is returned."}],"kind":"symbol","metadata":{"role":"symbol","title":"nextValue()","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"nextValue"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"VariantRef","preciseIdentifier":"s:4GLib10VariantRefV"},{"kind":"text","text":"!"}],"symbolKind":"method","externalID":"s:4GLib19VariantIterProtocolPAAE9nextValueAA0B3RefVSgyF::SYNTHESIZED::s:4GLib14VariantIterRefV","extendedModule":"GLib","modules":[{"name":"GLib"}]},"hierarchy":{"paths":[["doc:\/\/GLib\/documentation\/GLib","doc:\/\/GLib\/documentation\/GLib\/VariantIterRef","doc:\/\/GLib\/documentation\/GLib\/VariantIterRef\/VariantIterProtocol-Implementations"]]},"references":{"doc://GLib/documentation/GLib/VariantIterRef/VariantIterProtocol-Implementations":{"role":"collectionGroup","title":"VariantIterProtocol Implementations","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib\/VariantIterRef\/VariantIterProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/glib\/variantiterref\/variantiterprotocol-implementations"},"doc://GLib/documentation/GLib/VariantIterRef":{"role":"symbol","title":"VariantIterRef","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"VariantIterRef"}],"abstract":[{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/VariantIter"},{"type":"text","text":" is an opaque data structure and can only be accessed"},{"type":"text","text":" "},{"type":"text","text":"using the following functions."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/VariantIterRef","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"VariantIterRef"}],"url":"\/documentation\/glib\/variantiterref"},"doc://GLib/documentation/GLib/VariantIter":{"role":"symbol","title":"VariantIter","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"VariantIter"}],"abstract":[{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/VariantIter"},{"type":"text","text":" is an opaque data structure and can only be accessed"},{"type":"text","text":" "},{"type":"text","text":"using the following functions."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/VariantIter","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"VariantIter"}],"url":"\/documentation\/glib\/variantiter"},"doc://GLib/documentation/GLib":{"role":"collection","title":"GLib","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib","kind":"symbol","type":"topic","url":"\/documentation\/glib"},"doc://GLib/documentation/GLib/VariantRef":{"role":"symbol","title":"VariantRef","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"VariantRef"}],"abstract":[{"type":"codeVoice","code":"GVariant"},{"type":"text","text":" is a variant datatype; it can contain one or more values"},{"type":"text","text":" "},{"type":"text","text":"along with information about the type of the values."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/VariantRef","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"VariantRef"}],"url":"\/documentation\/glib\/variantref"},"doc://GLib/documentation/GLib/VariantIterRef/nextValue()":{"role":"symbol","title":"nextValue()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"nextValue"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"VariantRef","preciseIdentifier":"s:4GLib10VariantRefV"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Gets the next item in the container.  If no more items remain then"},{"type":"text","text":" "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" is returned."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/VariantIterRef\/nextValue()","kind":"symbol","type":"topic","url":"\/documentation\/glib\/variantiterref\/nextvalue()"}}}