{"variants":[{"paths":["\/documentation\/glib\/hashtableref\/hashtableprotocol-implementations"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"identifier":{"url":"doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/HashTableProtocol-Implementations","interfaceLanguage":"swift"},"topicSections":[{"title":"Instance Properties","identifiers":["doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/hash_table_ptr","doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/keys","doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/keysAsPtrArray","doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/values","doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/valuesAsPtrArray"],"generated":true},{"title":"Instance Methods","identifiers":["doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/add(key:)","doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/contains(key:)","doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/destroy()","doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/find(predicate:userData:)","doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/foreach(func:userData:)","doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/foreachRemove(func:userData:)","doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/foreachSteal(func:userData:)","doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/getKeys()","doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/getKeysAsArray(length:)","doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/getKeysAsPtrArray()","doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/getValues()","doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/getValuesAsPtrArray()","doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/hashTableAdd(key:)","doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/hashTableContains(key:)","doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/hashTableDestroy()","doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/hashTableFind(predicate:userData:)","doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/hashTableForeach(func:userData:)","doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/hashTableForeachRemove(func:userData:)","doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/hashTableForeachSteal(func:userData:)","doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/hashTableGetKeysAsPtrArray()","doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/hashTableGetValuesAsPtrArray()","doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/hashTableInsert(key:value:)","doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/hashTableLookup(key:)","doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/hashTableLookupExtended(lookupKey:origKey:value:)","doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/hashTableNewSimilar()","doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/hashTableRef()","doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/hashTableRemove(key:)","doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/hashTableRemoveAll()","doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/hashTableReplace(key:value:)","doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/hashTableSize()","doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/hashTableSteal(key:)","doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/hashTableStealAll()","doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/hashTableStealAllKeys()","doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/hashTableStealAllValues()","doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/hashTableStealExtended(lookupKey:stolenKey:stolenValue:)","doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/hashTableUnref()","doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/insert(key:value:)","doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/lookup(key:)","doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/lookupExtended(lookupKey:origKey:value:)","doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/newSimilar()","doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/ref()","doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/remove(key:)","doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/removeAll()","doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/replace(key:value:)","doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/size()","doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/steal(key:)","doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/stealAll()","doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/stealAllKeys()","doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/stealAllValues()","doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/stealExtended(lookupKey:stolenKey:stolenValue:)","doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/unref()"],"generated":true}],"kind":"article","metadata":{"modules":[{"name":"GLib"}],"role":"collectionGroup","title":"HashTableProtocol Implementations"},"hierarchy":{"paths":[["doc:\/\/GLib\/documentation\/GLib","doc:\/\/GLib\/documentation\/GLib\/HashTableRef"]]},"references":{"doc://GLib/documentation/GLib/HashTableRef/hash_table_ptr":{"role":"symbol","title":"hash_table_ptr","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"hash_table_ptr"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GHashTable"},{"kind":"text","text":">!"}],"abstract":[{"type":"text","text":"Return the stored, untyped pointer as a typed pointer to the "},{"type":"codeVoice","code":"GHashTable"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/hash_table_ptr","kind":"symbol","type":"topic","url":"\/documentation\/glib\/hashtableref\/hash_table_ptr"},"doc://GLib/documentation/GLib/HashTableRef/getKeys()":{"role":"symbol","title":"getKeys()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getKeys"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"ReferenceListRef","preciseIdentifier":"s:4GLib16ReferenceListRefV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":">!"}],"abstract":[{"type":"text","text":"Retrieves every key inside "},{"type":"codeVoice","code":"hashTable"},{"type":"text","text":". The returned data is valid"},{"type":"text","text":" "},{"type":"text","text":"until changes to the hash release those keys."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/getKeys()","kind":"symbol","type":"topic","url":"\/documentation\/glib\/hashtableref\/getkeys()"},"doc://GLib/documentation/GLib/HashTableRef/hashTableForeach(func:userData:)":{"role":"symbol","title":"hashTableForeach(func:userData:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"hashTableForeach"},{"kind":"text","text":"("},{"kind":"externalParam","text":"func"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GHFunc","preciseIdentifier":"c:@T@GHFunc"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"userData"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Calls the given function for each of the key\/value pairs in the"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTable"},{"type":"text","text":".  The function is passed the key and value of each"},{"type":"text","text":" "},{"type":"text","text":"pair, and the given "},{"type":"codeVoice","code":"userData"},{"type":"text","text":" parameter.  The hash table may not"},{"type":"text","text":" "},{"type":"text","text":"be modified while iterating over it (you canâ€™t add\/remove"},{"type":"text","text":" "},{"type":"text","text":"items). To remove all items matching a predicate, use"},{"type":"text","text":" "},{"type":"codeVoice","code":"g_hash_table_foreach_remove()"},{"type":"text","text":"."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/hashTableForeach(func:userData:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/hashtableref\/hashtableforeach(func:userdata:)"},"doc://GLib/documentation/GLib/HashTableRef/hashTableSteal(key:)":{"role":"symbol","title":"hashTableSteal(key:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"hashTableSteal"},{"kind":"text","text":"("},{"kind":"externalParam","text":"key"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gconstpointer","preciseIdentifier":"c:@T@gconstpointer"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Removes a key and its associated value from a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTable"},{"type":"text","text":" without"},{"type":"text","text":" "},{"type":"text","text":"calling the key and value destroy functions."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/hashTableSteal(key:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/hashtableref\/hashtablesteal(key:)"},"doc://GLib/documentation/GLib/HashTableRef/hashTableGetValuesAsPtrArray()":{"role":"symbol","title":"hashTableGetValuesAsPtrArray()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"hashTableGetValuesAsPtrArray"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"ReferenceArrayRef","preciseIdentifier":"s:4GLib17ReferenceArrayRefV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":">!"}],"abstract":[{"type":"text","text":"Retrieves every value inside "},{"type":"codeVoice","code":"hashTable"},{"type":"text","text":", as a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/PtrArray"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"The returned data is valid until changes to the hash release those values."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/hashTableGetValuesAsPtrArray()","kind":"symbol","type":"topic","url":"\/documentation\/glib\/hashtableref\/hashtablegetvaluesasptrarray()"},"doc://GLib/documentation/GLib/HashTableRef/stealAllValues()":{"role":"symbol","title":"stealAllValues()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"stealAllValues"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"ReferenceArrayRef","preciseIdentifier":"s:4GLib17ReferenceArrayRefV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":">!"}],"abstract":[{"type":"text","text":"Removes all keys and their associated values from a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTable"},{"type":"text","text":" "},{"type":"text","text":"without calling the value destroy functions, returning the values"},{"type":"text","text":" "},{"type":"text","text":"as a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/PtrArray"},{"type":"text","text":" with the free func set to the "},{"type":"codeVoice","code":"hashTable"},{"type":"text","text":" value"},{"type":"text","text":" "},{"type":"text","text":"destroy function."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/stealAllValues()","kind":"symbol","type":"topic","url":"\/documentation\/glib\/hashtableref\/stealallvalues()"},"doc://GLib/documentation/GLib/HashTableRef/hashTableStealAll()":{"role":"symbol","title":"hashTableStealAll()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"hashTableStealAll"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Removes all keys and their associated values from a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTable"},{"type":"text","text":" "},{"type":"text","text":"without calling the key and value destroy functions."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/hashTableStealAll()","kind":"symbol","type":"topic","url":"\/documentation\/glib\/hashtableref\/hashtablestealall()"},"doc://GLib/documentation/GLib/HashTableRef/hashTableSize()":{"role":"symbol","title":"hashTableSize()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"hashTableSize"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"abstract":[{"type":"text","text":"Returns the number of elements contained in the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTable"},{"type":"text","text":"."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/hashTableSize()","kind":"symbol","type":"topic","url":"\/documentation\/glib\/hashtableref\/hashtablesize()"},"doc://GLib/documentation/GLib/HashTableRef/insert(key:value:)":{"role":"symbol","title":"insert(key:value:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"insert"},{"kind":"text","text":"("},{"kind":"externalParam","text":"key"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Inserts a new key and value into a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTable"},{"type":"text","text":"."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/insert(key:value:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/hashtableref\/insert(key:value:)"},"doc://GLib/documentation/GLib/HashTableRef/hashTableInsert(key:value:)":{"role":"symbol","title":"hashTableInsert(key:value:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"hashTableInsert"},{"kind":"text","text":"("},{"kind":"externalParam","text":"key"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Inserts a new key and value into a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTable"},{"type":"text","text":"."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/hashTableInsert(key:value:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/hashtableref\/hashtableinsert(key:value:)"},"doc://GLib/documentation/GLib/HashTableRef/hashTableAdd(key:)":{"role":"symbol","title":"hashTableAdd(key:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"hashTableAdd"},{"kind":"text","text":"("},{"kind":"externalParam","text":"key"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"This is a convenience function for using a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTable"},{"type":"text","text":" as a set.  It"},{"type":"text","text":" "},{"type":"text","text":"is equivalent to calling "},{"type":"codeVoice","code":"g_hash_table_replace()"},{"type":"text","text":" with "},{"type":"codeVoice","code":"key"},{"type":"text","text":" as both the"},{"type":"text","text":" "},{"type":"text","text":"key and the value."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/hashTableAdd(key:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/hashtableref\/hashtableadd(key:)"},"doc://GLib/documentation/GLib/HashTableRef/hashTableStealAllValues()":{"role":"symbol","title":"hashTableStealAllValues()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"hashTableStealAllValues"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"ReferenceArrayRef","preciseIdentifier":"s:4GLib17ReferenceArrayRefV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":">!"}],"abstract":[{"type":"text","text":"Removes all keys and their associated values from a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTable"},{"type":"text","text":" "},{"type":"text","text":"without calling the value destroy functions, returning the values"},{"type":"text","text":" "},{"type":"text","text":"as a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/PtrArray"},{"type":"text","text":" with the free func set to the "},{"type":"codeVoice","code":"hashTable"},{"type":"text","text":" value"},{"type":"text","text":" "},{"type":"text","text":"destroy function."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/hashTableStealAllValues()","kind":"symbol","type":"topic","url":"\/documentation\/glib\/hashtableref\/hashtablestealallvalues()"},"doc://GLib/documentation/GLib/HashTableRef/find(predicate:userData:)":{"role":"symbol","title":"find(predicate:userData:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"find"},{"kind":"text","text":"("},{"kind":"externalParam","text":"predicate"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GHRFunc","preciseIdentifier":"c:@T@GHRFunc"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"userData"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Calls the given function for key\/value pairs in the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTable"},{"type":"text","text":" "},{"type":"text","text":"until "},{"type":"codeVoice","code":"predicate"},{"type":"text","text":" returns "},{"type":"codeVoice","code":"true"},{"type":"text","text":". The function is passed the key"},{"type":"text","text":" "},{"type":"text","text":"and value of each pair, and the given "},{"type":"codeVoice","code":"userData"},{"type":"text","text":" parameter. The"},{"type":"text","text":" "},{"type":"text","text":"hash table may not be modified while iterating over it (you canâ€™t"},{"type":"text","text":" "},{"type":"text","text":"add\/remove items)."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/find(predicate:userData:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/hashtableref\/find(predicate:userdata:)"},"doc://GLib/documentation/GLib/HashTableRef/valuesAsPtrArray":{"role":"symbol","title":"valuesAsPtrArray","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"valuesAsPtrArray"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ReferenceArrayRef","preciseIdentifier":"s:4GLib17ReferenceArrayRefV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":">!"}],"abstract":[{"type":"text","text":"Retrieves every value inside "},{"type":"codeVoice","code":"hashTable"},{"type":"text","text":", as a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/PtrArray"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"The returned data is valid until changes to the hash release those values."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/valuesAsPtrArray","kind":"symbol","type":"topic","url":"\/documentation\/glib\/hashtableref\/valuesasptrarray"},"doc://GLib/documentation/GLib/HashTableRef/getValuesAsPtrArray()":{"role":"symbol","title":"getValuesAsPtrArray()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getValuesAsPtrArray"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"ReferenceArrayRef","preciseIdentifier":"s:4GLib17ReferenceArrayRefV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":">!"}],"abstract":[{"type":"text","text":"Retrieves every value inside "},{"type":"codeVoice","code":"hashTable"},{"type":"text","text":", as a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/PtrArray"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"The returned data is valid until changes to the hash release those values."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/getValuesAsPtrArray()","kind":"symbol","type":"topic","url":"\/documentation\/glib\/hashtableref\/getvaluesasptrarray()"},"doc://GLib/documentation/GLib/HashTableRef/hashTableStealAllKeys()":{"role":"symbol","title":"hashTableStealAllKeys()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"hashTableStealAllKeys"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"ReferenceArrayRef","preciseIdentifier":"s:4GLib17ReferenceArrayRefV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":">!"}],"abstract":[{"type":"text","text":"Removes all keys and their associated values from a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTable"},{"type":"text","text":" "},{"type":"text","text":"without calling the key destroy functions, returning the keys"},{"type":"text","text":" "},{"type":"text","text":"as a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/PtrArray"},{"type":"text","text":" with the free func set to the "},{"type":"codeVoice","code":"hashTable"},{"type":"text","text":" key"},{"type":"text","text":" "},{"type":"text","text":"destroy function."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/hashTableStealAllKeys()","kind":"symbol","type":"topic","url":"\/documentation\/glib\/hashtableref\/hashtablestealallkeys()"},"doc://GLib/documentation/GLib/HashTableRef/hashTableLookup(key:)":{"role":"symbol","title":"hashTableLookup(key:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"hashTableLookup"},{"kind":"text","text":"("},{"kind":"externalParam","text":"key"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gconstpointer","preciseIdentifier":"c:@T@gconstpointer"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Looks up a key in a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTable"},{"type":"text","text":". Note that this function cannot"},{"type":"text","text":" "},{"type":"text","text":"distinguish between a key that is not present and one which is present"},{"type":"text","text":" "},{"type":"text","text":"and has the value "},{"type":"codeVoice","code":"nil"},{"type":"text","text":". If you need this distinction, use"},{"type":"text","text":" "},{"type":"codeVoice","code":"g_hash_table_lookup_extended()"},{"type":"text","text":"."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/hashTableLookup(key:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/hashtableref\/hashtablelookup(key:)"},"doc://GLib/documentation/GLib/HashTableRef/replace(key:value:)":{"role":"symbol","title":"replace(key:value:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"replace"},{"kind":"text","text":"("},{"kind":"externalParam","text":"key"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Inserts a new key and value into a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTable"},{"type":"text","text":" similar to"},{"type":"text","text":" "},{"type":"codeVoice","code":"g_hash_table_insert()"},{"type":"text","text":". The difference is that if the key"},{"type":"text","text":" "},{"type":"text","text":"already exists in the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTable"},{"type":"text","text":", it gets replaced by the"},{"type":"text","text":" "},{"type":"text","text":"new key. If you supplied a "},{"type":"codeVoice","code":"value_destroy_func"},{"type":"text","text":" when creating"},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTable"},{"type":"text","text":", the old value is freed using that function."},{"type":"text","text":" "},{"type":"text","text":"If you supplied a "},{"type":"codeVoice","code":"key_destroy_func"},{"type":"text","text":" when creating the"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTable"},{"type":"text","text":", the old key is freed using that function."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/replace(key:value:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/hashtableref\/replace(key:value:)"},"doc://GLib/documentation/GLib/HashTableRef/hashTableLookupExtended(lookupKey:origKey:value:)":{"role":"symbol","title":"hashTableLookupExtended(lookupKey:origKey:value:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"hashTableLookupExtended"},{"kind":"text","text":"("},{"kind":"externalParam","text":"lookupKey"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gconstpointer","preciseIdentifier":"c:@T@gconstpointer"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"origKey"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?>?, "},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?>?) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Looks up a key in the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTable"},{"type":"text","text":", returning the original key and the"},{"type":"text","text":" "},{"type":"text","text":"associated value and a "},{"type":"codeVoice","code":"gboolean"},{"type":"text","text":" which is "},{"type":"codeVoice","code":"true"},{"type":"text","text":" if the key was found. This"},{"type":"text","text":" "},{"type":"text","text":"is useful if you need to free the memory allocated for the original key,"},{"type":"text","text":" "},{"type":"text","text":"for example before calling "},{"type":"codeVoice","code":"g_hash_table_remove()"},{"type":"text","text":"."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/hashTableLookupExtended(lookupKey:origKey:value:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/hashtableref\/hashtablelookupextended(lookupkey:origkey:value:)"},"doc://GLib/documentation/GLib/HashTableRef/hashTableGetKeysAsPtrArray()":{"role":"symbol","title":"hashTableGetKeysAsPtrArray()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"hashTableGetKeysAsPtrArray"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"ReferenceArrayRef","preciseIdentifier":"s:4GLib17ReferenceArrayRefV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":">!"}],"abstract":[{"type":"text","text":"Retrieves every key inside "},{"type":"codeVoice","code":"hashTable"},{"type":"text","text":", as a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/PtrArray"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"The returned data is valid until changes to the hash release those keys."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/hashTableGetKeysAsPtrArray()","kind":"symbol","type":"topic","url":"\/documentation\/glib\/hashtableref\/hashtablegetkeysasptrarray()"},"doc://GLib/documentation/GLib/HashTableRef/getValues()":{"role":"symbol","title":"getValues()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getValues"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"ReferenceListRef","preciseIdentifier":"s:4GLib16ReferenceListRefV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":">!"}],"abstract":[{"type":"text","text":"Retrieves every value inside "},{"type":"codeVoice","code":"hashTable"},{"type":"text","text":". The returned data"},{"type":"text","text":" "},{"type":"text","text":"is valid until "},{"type":"codeVoice","code":"hashTable"},{"type":"text","text":" is modified."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/getValues()","kind":"symbol","type":"topic","url":"\/documentation\/glib\/hashtableref\/getvalues()"},"doc://GLib/documentation/GLib/HashTableRef/contains(key:)":{"role":"symbol","title":"contains(key:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"contains"},{"kind":"text","text":"("},{"kind":"externalParam","text":"key"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gconstpointer","preciseIdentifier":"c:@T@gconstpointer"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Checks if "},{"type":"codeVoice","code":"key"},{"type":"text","text":" is in "},{"type":"codeVoice","code":"hashTable"},{"type":"text","text":"."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/contains(key:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/hashtableref\/contains(key:)"},"doc://GLib/documentation/GLib/HashTableRef/ref()":{"role":"symbol","title":"ref()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"ref"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"HashTableRef","preciseIdentifier":"s:4GLib12HashTableRefV"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Atomically increments the reference count of "},{"type":"codeVoice","code":"hashTable"},{"type":"text","text":" by one."},{"type":"text","text":" "},{"type":"text","text":"This function is MT-safe and may be called from any thread."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/ref()","kind":"symbol","type":"topic","url":"\/documentation\/glib\/hashtableref\/ref()"},"doc://GLib/documentation/GLib/HashTableRef/hashTableStealExtended(lookupKey:stolenKey:stolenValue:)":{"role":"symbol","title":"hashTableStealExtended(lookupKey:stolenKey:stolenValue:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"hashTableStealExtended"},{"kind":"text","text":"("},{"kind":"externalParam","text":"lookupKey"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gconstpointer","preciseIdentifier":"c:@T@gconstpointer"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"stolenKey"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?>?, "},{"kind":"externalParam","text":"stolenValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?>?) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Looks up a key in the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTable"},{"type":"text","text":", stealing the original key and the"},{"type":"text","text":" "},{"type":"text","text":"associated value and returning "},{"type":"codeVoice","code":"true"},{"type":"text","text":" if the key was found. If the key was"},{"type":"text","text":" "},{"type":"text","text":"not found, "},{"type":"codeVoice","code":"false"},{"type":"text","text":" is returned."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/hashTableStealExtended(lookupKey:stolenKey:stolenValue:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/hashtableref\/hashtablestealextended(lookupkey:stolenkey:stolenvalue:)"},"doc://GLib/documentation/GLib/HashTableRef/newSimilar()":{"role":"symbol","title":"newSimilar()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"newSimilar"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"HashTableRef","preciseIdentifier":"s:4GLib12HashTableRefV"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Creates a new "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTable"},{"type":"text","text":" like "},{"type":"codeVoice","code":"g_hash_table_new_full()"},{"type":"text","text":" with a reference"},{"type":"text","text":" "},{"type":"text","text":"count of 1."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/newSimilar()","kind":"symbol","type":"topic","url":"\/documentation\/glib\/hashtableref\/newsimilar()"},"doc://GLib/documentation/GLib/HashTableRef/values":{"role":"symbol","title":"values","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"values"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ReferenceListRef","preciseIdentifier":"s:4GLib16ReferenceListRefV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":">!"}],"abstract":[{"type":"text","text":"Retrieves every value inside "},{"type":"codeVoice","code":"hashTable"},{"type":"text","text":". The returned data"},{"type":"text","text":" "},{"type":"text","text":"is valid until "},{"type":"codeVoice","code":"hashTable"},{"type":"text","text":" is modified."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/values","kind":"symbol","type":"topic","url":"\/documentation\/glib\/hashtableref\/values"},"doc://GLib/documentation/GLib/HashTableRef/remove(key:)":{"role":"symbol","title":"remove(key:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"remove"},{"kind":"text","text":"("},{"kind":"externalParam","text":"key"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gconstpointer","preciseIdentifier":"c:@T@gconstpointer"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Removes a key and its associated value from a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTable"},{"type":"text","text":"."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/remove(key:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/hashtableref\/remove(key:)"},"doc://GLib/documentation/GLib":{"role":"collection","title":"GLib","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib","kind":"symbol","type":"topic","url":"\/documentation\/glib"},"doc://GLib/documentation/GLib/HashTableRef/size()":{"role":"symbol","title":"size()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"size"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"abstract":[{"type":"text","text":"Returns the number of elements contained in the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTable"},{"type":"text","text":"."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/size()","kind":"symbol","type":"topic","url":"\/documentation\/glib\/hashtableref\/size()"},"doc://GLib/documentation/GLib/HashTableRef":{"role":"symbol","title":"HashTableRef","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HashTableRef"}],"abstract":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTable"},{"type":"text","text":" struct is an opaque data structure to represent a"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"..\/Protocols\/HashTableProtocol.html"},{"type":"text","text":". It should only be accessed via the"},{"type":"text","text":" "},{"type":"text","text":"following functions."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTableRef","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HashTableRef"}],"url":"\/documentation\/glib\/hashtableref"},"doc://GLib/documentation/GLib/HashTableRef/steal(key:)":{"role":"symbol","title":"steal(key:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"steal"},{"kind":"text","text":"("},{"kind":"externalParam","text":"key"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gconstpointer","preciseIdentifier":"c:@T@gconstpointer"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Removes a key and its associated value from a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTable"},{"type":"text","text":" without"},{"type":"text","text":" "},{"type":"text","text":"calling the key and value destroy functions."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/steal(key:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/hashtableref\/steal(key:)"},"doc://GLib/documentation/GLib/HashTable":{"role":"symbol","title":"HashTable","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HashTable"}],"abstract":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTable"},{"type":"text","text":" struct is an opaque data structure to represent a"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"..\/Protocols\/HashTableProtocol.html"},{"type":"text","text":". It should only be accessed via the"},{"type":"text","text":" "},{"type":"text","text":"following functions."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTable","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HashTable"}],"url":"\/documentation\/glib\/hashtable"},"doc://GLib/documentation/GLib/HashTableRef/hashTableRemove(key:)":{"role":"symbol","title":"hashTableRemove(key:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"hashTableRemove"},{"kind":"text","text":"("},{"kind":"externalParam","text":"key"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gconstpointer","preciseIdentifier":"c:@T@gconstpointer"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Removes a key and its associated value from a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTable"},{"type":"text","text":"."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/hashTableRemove(key:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/hashtableref\/hashtableremove(key:)"},"doc://GLib/documentation/GLib/HashTableRef/hashTableNewSimilar()":{"role":"symbol","title":"hashTableNewSimilar()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"hashTableNewSimilar"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"HashTableRef","preciseIdentifier":"s:4GLib12HashTableRefV"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Creates a new "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTable"},{"type":"text","text":" like "},{"type":"codeVoice","code":"g_hash_table_new_full()"},{"type":"text","text":" with a reference"},{"type":"text","text":" "},{"type":"text","text":"count of 1."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/hashTableNewSimilar()","kind":"symbol","type":"topic","url":"\/documentation\/glib\/hashtableref\/hashtablenewsimilar()"},"doc://GLib/documentation/GLib/HashTableRef/hashTableForeachRemove(func:userData:)":{"role":"symbol","title":"hashTableForeachRemove(func:userData:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"hashTableForeachRemove"},{"kind":"text","text":"("},{"kind":"externalParam","text":"func"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GHRFunc","preciseIdentifier":"c:@T@GHRFunc"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"userData"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"abstract":[{"type":"text","text":"Calls the given function for each key\/value pair in the"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTable"},{"type":"text","text":". If the function returns "},{"type":"codeVoice","code":"true"},{"type":"text","text":", then the key\/value"},{"type":"text","text":" "},{"type":"text","text":"pair is removed from the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTable"},{"type":"text","text":". If you supplied key or"},{"type":"text","text":" "},{"type":"text","text":"value destroy functions when creating the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTable"},{"type":"text","text":", they are"},{"type":"text","text":" "},{"type":"text","text":"used to free the memory allocated for the removed keys and values."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/hashTableForeachRemove(func:userData:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/hashtableref\/hashtableforeachremove(func:userdata:)"},"doc://GLib/documentation/GLib/HashTableRef/foreachSteal(func:userData:)":{"role":"symbol","title":"foreachSteal(func:userData:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"foreachSteal"},{"kind":"text","text":"("},{"kind":"externalParam","text":"func"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GHRFunc","preciseIdentifier":"c:@T@GHRFunc"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"userData"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"abstract":[{"type":"text","text":"Calls the given function for each key\/value pair in the"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTable"},{"type":"text","text":". If the function returns "},{"type":"codeVoice","code":"true"},{"type":"text","text":", then the key\/value"},{"type":"text","text":" "},{"type":"text","text":"pair is removed from the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTable"},{"type":"text","text":", but no key or value"},{"type":"text","text":" "},{"type":"text","text":"destroy functions are called."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/foreachSteal(func:userData:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/hashtableref\/foreachsteal(func:userdata:)"},"doc://GLib/documentation/GLib/HashTableRef/keys":{"role":"symbol","title":"keys","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"keys"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ReferenceListRef","preciseIdentifier":"s:4GLib16ReferenceListRefV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":">!"}],"abstract":[{"type":"text","text":"Retrieves every key inside "},{"type":"codeVoice","code":"hashTable"},{"type":"text","text":". The returned data is valid"},{"type":"text","text":" "},{"type":"text","text":"until changes to the hash release those keys."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/keys","kind":"symbol","type":"topic","url":"\/documentation\/glib\/hashtableref\/keys"},"doc://GLib/documentation/GLib/PtrArray":{"role":"symbol","title":"PtrArray","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"PtrArray"}],"abstract":[{"type":"text","text":"Contains the public fields of a pointer array."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/PtrArray","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PtrArray"}],"url":"\/documentation\/glib\/ptrarray"},"doc://GLib/documentation/GLib/HashTableRef/hashTableForeachSteal(func:userData:)":{"role":"symbol","title":"hashTableForeachSteal(func:userData:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"hashTableForeachSteal"},{"kind":"text","text":"("},{"kind":"externalParam","text":"func"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GHRFunc","preciseIdentifier":"c:@T@GHRFunc"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"userData"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"abstract":[{"type":"text","text":"Calls the given function for each key\/value pair in the"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTable"},{"type":"text","text":". If the function returns "},{"type":"codeVoice","code":"true"},{"type":"text","text":", then the key\/value"},{"type":"text","text":" "},{"type":"text","text":"pair is removed from the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTable"},{"type":"text","text":", but no key or value"},{"type":"text","text":" "},{"type":"text","text":"destroy functions are called."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/hashTableForeachSteal(func:userData:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/hashtableref\/hashtableforeachsteal(func:userdata:)"},"doc://GLib/documentation/GLib/HashTableRef/stealExtended(lookupKey:stolenKey:stolenValue:)":{"role":"symbol","title":"stealExtended(lookupKey:stolenKey:stolenValue:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"stealExtended"},{"kind":"text","text":"("},{"kind":"externalParam","text":"lookupKey"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gconstpointer","preciseIdentifier":"c:@T@gconstpointer"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"stolenKey"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?>?, "},{"kind":"externalParam","text":"stolenValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?>?) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Looks up a key in the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTable"},{"type":"text","text":", stealing the original key and the"},{"type":"text","text":" "},{"type":"text","text":"associated value and returning "},{"type":"codeVoice","code":"true"},{"type":"text","text":" if the key was found. If the key was"},{"type":"text","text":" "},{"type":"text","text":"not found, "},{"type":"codeVoice","code":"false"},{"type":"text","text":" is returned."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/stealExtended(lookupKey:stolenKey:stolenValue:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/hashtableref\/stealextended(lookupkey:stolenkey:stolenvalue:)"},"doc://GLib/documentation/GLib/HashTableRef/getKeysAsPtrArray()":{"role":"symbol","title":"getKeysAsPtrArray()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getKeysAsPtrArray"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"ReferenceArrayRef","preciseIdentifier":"s:4GLib17ReferenceArrayRefV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":">!"}],"abstract":[{"type":"text","text":"Retrieves every key inside "},{"type":"codeVoice","code":"hashTable"},{"type":"text","text":", as a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/PtrArray"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"The returned data is valid until changes to the hash release those keys."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/getKeysAsPtrArray()","kind":"symbol","type":"topic","url":"\/documentation\/glib\/hashtableref\/getkeysasptrarray()"},"doc://GLib/documentation/GLib/HashTableRef/lookup(key:)":{"role":"symbol","title":"lookup(key:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"lookup"},{"kind":"text","text":"("},{"kind":"externalParam","text":"key"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gconstpointer","preciseIdentifier":"c:@T@gconstpointer"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Looks up a key in a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTable"},{"type":"text","text":". Note that this function cannot"},{"type":"text","text":" "},{"type":"text","text":"distinguish between a key that is not present and one which is present"},{"type":"text","text":" "},{"type":"text","text":"and has the value "},{"type":"codeVoice","code":"nil"},{"type":"text","text":". If you need this distinction, use"},{"type":"text","text":" "},{"type":"codeVoice","code":"g_hash_table_lookup_extended()"},{"type":"text","text":"."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/lookup(key:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/hashtableref\/lookup(key:)"},"doc://GLib/documentation/GLib/HashTableRef/stealAllKeys()":{"role":"symbol","title":"stealAllKeys()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"stealAllKeys"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"ReferenceArrayRef","preciseIdentifier":"s:4GLib17ReferenceArrayRefV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":">!"}],"abstract":[{"type":"text","text":"Removes all keys and their associated values from a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTable"},{"type":"text","text":" "},{"type":"text","text":"without calling the key destroy functions, returning the keys"},{"type":"text","text":" "},{"type":"text","text":"as a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/PtrArray"},{"type":"text","text":" with the free func set to the "},{"type":"codeVoice","code":"hashTable"},{"type":"text","text":" key"},{"type":"text","text":" "},{"type":"text","text":"destroy function."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/stealAllKeys()","kind":"symbol","type":"topic","url":"\/documentation\/glib\/hashtableref\/stealallkeys()"},"doc://GLib/documentation/GLib/HashTableRef/foreach(func:userData:)":{"role":"symbol","title":"foreach(func:userData:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"foreach"},{"kind":"text","text":"("},{"kind":"externalParam","text":"func"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GHFunc","preciseIdentifier":"c:@T@GHFunc"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"userData"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Calls the given function for each of the key\/value pairs in the"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTable"},{"type":"text","text":".  The function is passed the key and value of each"},{"type":"text","text":" "},{"type":"text","text":"pair, and the given "},{"type":"codeVoice","code":"userData"},{"type":"text","text":" parameter.  The hash table may not"},{"type":"text","text":" "},{"type":"text","text":"be modified while iterating over it (you canâ€™t add\/remove"},{"type":"text","text":" "},{"type":"text","text":"items). To remove all items matching a predicate, use"},{"type":"text","text":" "},{"type":"codeVoice","code":"g_hash_table_foreach_remove()"},{"type":"text","text":"."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/foreach(func:userData:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/hashtableref\/foreach(func:userdata:)"},"doc://GLib/documentation/GLib/HashTableRef/hashTableFind(predicate:userData:)":{"role":"symbol","title":"hashTableFind(predicate:userData:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"hashTableFind"},{"kind":"text","text":"("},{"kind":"externalParam","text":"predicate"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GHRFunc","preciseIdentifier":"c:@T@GHRFunc"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"userData"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Calls the given function for key\/value pairs in the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTable"},{"type":"text","text":" "},{"type":"text","text":"until "},{"type":"codeVoice","code":"predicate"},{"type":"text","text":" returns "},{"type":"codeVoice","code":"true"},{"type":"text","text":". The function is passed the key"},{"type":"text","text":" "},{"type":"text","text":"and value of each pair, and the given "},{"type":"codeVoice","code":"userData"},{"type":"text","text":" parameter. The"},{"type":"text","text":" "},{"type":"text","text":"hash table may not be modified while iterating over it (you canâ€™t"},{"type":"text","text":" "},{"type":"text","text":"add\/remove items)."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/hashTableFind(predicate:userData:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/hashtableref\/hashtablefind(predicate:userdata:)"},"doc://GLib/documentation/GLib/HashTableRef/getKeysAsArray(length:)":{"role":"symbol","title":"getKeysAsArray(length:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getKeysAsArray"},{"kind":"text","text":"("},{"kind":"externalParam","text":"length"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"guint","preciseIdentifier":"c:@T@guint"},{"kind":"text","text":">!) -> "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?>!"}],"abstract":[{"type":"text","text":"Retrieves every key inside "},{"type":"codeVoice","code":"hashTable"},{"type":"text","text":", as an array."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/getKeysAsArray(length:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/hashtableref\/getkeysasarray(length:)"},"doc://GLib/documentation/GLib/HashTableRef/hashTableRef()":{"role":"symbol","title":"hashTableRef()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"hashTableRef"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"HashTableRef","preciseIdentifier":"s:4GLib12HashTableRefV"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Atomically increments the reference count of "},{"type":"codeVoice","code":"hashTable"},{"type":"text","text":" by one."},{"type":"text","text":" "},{"type":"text","text":"This function is MT-safe and may be called from any thread."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/hashTableRef()","kind":"symbol","type":"topic","url":"\/documentation\/glib\/hashtableref\/hashtableref()"},"doc://GLib/documentation/GLib/HashTableRef/hashTableContains(key:)":{"role":"symbol","title":"hashTableContains(key:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"hashTableContains"},{"kind":"text","text":"("},{"kind":"externalParam","text":"key"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gconstpointer","preciseIdentifier":"c:@T@gconstpointer"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Checks if "},{"type":"codeVoice","code":"key"},{"type":"text","text":" is in "},{"type":"codeVoice","code":"hashTable"},{"type":"text","text":"."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/hashTableContains(key:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/hashtableref\/hashtablecontains(key:)"},"doc://GLib/documentation/GLib/HashTableRef/add(key:)":{"role":"symbol","title":"add(key:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"add"},{"kind":"text","text":"("},{"kind":"externalParam","text":"key"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"This is a convenience function for using a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTable"},{"type":"text","text":" as a set.  It"},{"type":"text","text":" "},{"type":"text","text":"is equivalent to calling "},{"type":"codeVoice","code":"g_hash_table_replace()"},{"type":"text","text":" with "},{"type":"codeVoice","code":"key"},{"type":"text","text":" as both the"},{"type":"text","text":" "},{"type":"text","text":"key and the value."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/add(key:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/hashtableref\/add(key:)"},"doc://GLib/documentation/GLib/HashTableRef/hashTableReplace(key:value:)":{"role":"symbol","title":"hashTableReplace(key:value:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"hashTableReplace"},{"kind":"text","text":"("},{"kind":"externalParam","text":"key"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Inserts a new key and value into a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTable"},{"type":"text","text":" similar to"},{"type":"text","text":" "},{"type":"codeVoice","code":"g_hash_table_insert()"},{"type":"text","text":". The difference is that if the key"},{"type":"text","text":" "},{"type":"text","text":"already exists in the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTable"},{"type":"text","text":", it gets replaced by the"},{"type":"text","text":" "},{"type":"text","text":"new key. If you supplied a "},{"type":"codeVoice","code":"value_destroy_func"},{"type":"text","text":" when creating"},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTable"},{"type":"text","text":", the old value is freed using that function."},{"type":"text","text":" "},{"type":"text","text":"If you supplied a "},{"type":"codeVoice","code":"key_destroy_func"},{"type":"text","text":" when creating the"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTable"},{"type":"text","text":", the old key is freed using that function."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/hashTableReplace(key:value:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/hashtableref\/hashtablereplace(key:value:)"},"doc://GLib/documentation/GLib/HashTableRef/hashTableDestroy()":{"role":"symbol","title":"hashTableDestroy()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"hashTableDestroy"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Destroys all keys and values in the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTable"},{"type":"text","text":" and decrements its"},{"type":"text","text":" "},{"type":"text","text":"reference count by 1. If keys and\/or values are dynamically allocated,"},{"type":"text","text":" "},{"type":"text","text":"you should either free them first or create the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTable"},{"type":"text","text":" with destroy"},{"type":"text","text":" "},{"type":"text","text":"notifiers using "},{"type":"codeVoice","code":"g_hash_table_new_full()"},{"type":"text","text":". In the latter case the destroy"},{"type":"text","text":" "},{"type":"text","text":"functions you supplied will be called on all keys and values during the"},{"type":"text","text":" "},{"type":"text","text":"destruction phase."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/hashTableDestroy()","kind":"symbol","type":"topic","url":"\/documentation\/glib\/hashtableref\/hashtabledestroy()"},"doc://GLib/documentation/GLib/HashTableRef/hashTableUnref()":{"role":"symbol","title":"hashTableUnref()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"hashTableUnref"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Atomically decrements the reference count of "},{"type":"codeVoice","code":"hashTable"},{"type":"text","text":" by one."},{"type":"text","text":" "},{"type":"text","text":"If the reference count drops to 0, all keys and values will be"},{"type":"text","text":" "},{"type":"text","text":"destroyed, and all memory allocated by the hash table is released."},{"type":"text","text":" "},{"type":"text","text":"This function is MT-safe and may be called from any thread."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/hashTableUnref()","kind":"symbol","type":"topic","url":"\/documentation\/glib\/hashtableref\/hashtableunref()"},"doc://GLib/documentation/GLib/HashTableRef/removeAll()":{"role":"symbol","title":"removeAll()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"removeAll"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Removes all keys and their associated values from a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTable"},{"type":"text","text":"."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/removeAll()","kind":"symbol","type":"topic","url":"\/documentation\/glib\/hashtableref\/removeall()"},"doc://GLib/documentation/GLib/HashTableRef/hashTableRemoveAll()":{"role":"symbol","title":"hashTableRemoveAll()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"hashTableRemoveAll"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Removes all keys and their associated values from a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTable"},{"type":"text","text":"."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/hashTableRemoveAll()","kind":"symbol","type":"topic","url":"\/documentation\/glib\/hashtableref\/hashtableremoveall()"},"doc://GLib/documentation/GLib/HashTableRef/stealAll()":{"role":"symbol","title":"stealAll()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"stealAll"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Removes all keys and their associated values from a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTable"},{"type":"text","text":" "},{"type":"text","text":"without calling the key and value destroy functions."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/stealAll()","kind":"symbol","type":"topic","url":"\/documentation\/glib\/hashtableref\/stealall()"},"doc://GLib/documentation/GLib/HashTableRef/destroy()":{"role":"symbol","title":"destroy()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"destroy"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Destroys all keys and values in the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTable"},{"type":"text","text":" and decrements its"},{"type":"text","text":" "},{"type":"text","text":"reference count by 1. If keys and\/or values are dynamically allocated,"},{"type":"text","text":" "},{"type":"text","text":"you should either free them first or create the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTable"},{"type":"text","text":" with destroy"},{"type":"text","text":" "},{"type":"text","text":"notifiers using "},{"type":"codeVoice","code":"g_hash_table_new_full()"},{"type":"text","text":". In the latter case the destroy"},{"type":"text","text":" "},{"type":"text","text":"functions you supplied will be called on all keys and values during the"},{"type":"text","text":" "},{"type":"text","text":"destruction phase."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/destroy()","kind":"symbol","type":"topic","url":"\/documentation\/glib\/hashtableref\/destroy()"},"doc://GLib/documentation/GLib/HashTableRef/lookupExtended(lookupKey:origKey:value:)":{"role":"symbol","title":"lookupExtended(lookupKey:origKey:value:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"lookupExtended"},{"kind":"text","text":"("},{"kind":"externalParam","text":"lookupKey"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gconstpointer","preciseIdentifier":"c:@T@gconstpointer"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"origKey"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?>?, "},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?>?) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Looks up a key in the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTable"},{"type":"text","text":", returning the original key and the"},{"type":"text","text":" "},{"type":"text","text":"associated value and a "},{"type":"codeVoice","code":"gboolean"},{"type":"text","text":" which is "},{"type":"codeVoice","code":"true"},{"type":"text","text":" if the key was found. This"},{"type":"text","text":" "},{"type":"text","text":"is useful if you need to free the memory allocated for the original key,"},{"type":"text","text":" "},{"type":"text","text":"for example before calling "},{"type":"codeVoice","code":"g_hash_table_remove()"},{"type":"text","text":"."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/lookupExtended(lookupKey:origKey:value:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/hashtableref\/lookupextended(lookupkey:origkey:value:)"},"doc://GLib/documentation/GLib/HashTableRef/keysAsPtrArray":{"role":"symbol","title":"keysAsPtrArray","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"keysAsPtrArray"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ReferenceArrayRef","preciseIdentifier":"s:4GLib17ReferenceArrayRefV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":">!"}],"abstract":[{"type":"text","text":"Retrieves every key inside "},{"type":"codeVoice","code":"hashTable"},{"type":"text","text":", as a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/PtrArray"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"The returned data is valid until changes to the hash release those keys."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/keysAsPtrArray","kind":"symbol","type":"topic","url":"\/documentation\/glib\/hashtableref\/keysasptrarray"},"doc://GLib/documentation/GLib/HashTableRef/unref()":{"role":"symbol","title":"unref()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unref"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Atomically decrements the reference count of "},{"type":"codeVoice","code":"hashTable"},{"type":"text","text":" by one."},{"type":"text","text":" "},{"type":"text","text":"If the reference count drops to 0, all keys and values will be"},{"type":"text","text":" "},{"type":"text","text":"destroyed, and all memory allocated by the hash table is released."},{"type":"text","text":" "},{"type":"text","text":"This function is MT-safe and may be called from any thread."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/unref()","kind":"symbol","type":"topic","url":"\/documentation\/glib\/hashtableref\/unref()"},"../Protocols/HashTableProtocol.html":{"title":"Hash Table","titleInlineContent":[{"type":"text","text":"Hash Table"}],"type":"link","identifier":"..\/Protocols\/HashTableProtocol.html","url":"..\/Protocols\/HashTableProtocol.html"},"doc://GLib/documentation/GLib/HashTableRef/foreachRemove(func:userData:)":{"role":"symbol","title":"foreachRemove(func:userData:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"foreachRemove"},{"kind":"text","text":"("},{"kind":"externalParam","text":"func"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"GHRFunc","preciseIdentifier":"c:@T@GHRFunc"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"userData"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"abstract":[{"type":"text","text":"Calls the given function for each key\/value pair in the"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTable"},{"type":"text","text":". If the function returns "},{"type":"codeVoice","code":"true"},{"type":"text","text":", then the key\/value"},{"type":"text","text":" "},{"type":"text","text":"pair is removed from the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTable"},{"type":"text","text":". If you supplied key or"},{"type":"text","text":" "},{"type":"text","text":"value destroy functions when creating the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTable"},{"type":"text","text":", they are"},{"type":"text","text":" "},{"type":"text","text":"used to free the memory allocated for the removed keys and values."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/HashTableRef\/foreachRemove(func:userData:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/hashtableref\/foreachremove(func:userdata:)"}}}