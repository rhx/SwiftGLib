{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"wait"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"CondT"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"MutexT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"cond"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CondT"},{"kind":"text","text":", "},{"kind":"externalParam","text":"mutex"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"MutexT"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"CondT"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/GLib\/documentation\/GLib\/CondProtocol","preciseIdentifier":"s:4GLib12CondProtocolP","text":"CondProtocol"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"MutexT"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/GLib\/documentation\/GLib\/MutexProtocol","preciseIdentifier":"s:4GLib13MutexProtocolP","text":"MutexProtocol"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"wait is deprecated:"}]},{"type":"text","text":" "},{"type":"text","text":"Use [method@GLib.MainContext.is_owner] and separate"},{"type":"text","text":" "},{"type":"text","text":"locking instead."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/glib\/maincontext\/wait(cond:mutex:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/GLib\/documentation\/GLib\/MainContext\/wait(cond:mutex:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Tries to become the owner of the specified context,"},{"type":"text","text":" "},{"type":"text","text":"as with [method"},{"type":"codeVoice","code":"GLib.MainContext.acquire"},{"type":"text","text":"]. But if another thread"},{"type":"text","text":" "},{"type":"text","text":"is the owner, atomically drop "},{"type":"codeVoice","code":"mutex"},{"type":"text","text":" and wait on "},{"type":"codeVoice","code":"cond"},{"type":"text","text":" until"},{"type":"text","text":" "},{"type":"text","text":"that owner releases ownership or until "},{"type":"codeVoice","code":"cond"},{"type":"text","text":" is signaled, then"},{"type":"text","text":" "},{"type":"text","text":"try again (once) to become the owner."}],"kind":"symbol","metadata":{"modules":[{"name":"GLib"}],"role":"symbol","title":"wait(cond:mutex:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"wait"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"CondT"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"MutexT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"cond"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CondT"},{"kind":"text","text":", "},{"kind":"externalParam","text":"mutex"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"MutexT"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"symbolKind":"method","externalID":"s:4GLib19MainContextProtocolPAAE4wait4cond5mutexSbqd___qd_0_tAA04CondD0Rd__AA05MutexD0Rd_0_r0_lF::SYNTHESIZED::s:4GLib11MainContextC","extendedModule":"GLib","platforms":[]},"hierarchy":{"paths":[["doc:\/\/GLib\/documentation\/GLib","doc:\/\/GLib\/documentation\/GLib\/MainContext","doc:\/\/GLib\/documentation\/GLib\/MainContext\/MainContextProtocol-Implementations"]]},"references":{"doc://GLib/documentation/GLib/MutexProtocol":{"role":"symbol","title":"MutexProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MutexProtocol"}],"abstract":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Mutex"},{"type":"text","text":" struct is an opaque data structure to represent a mutex"},{"type":"text","text":" "},{"type":"text","text":"(mutual exclusion). It can be used to protect data against shared"},{"type":"text","text":" "},{"type":"text","text":"access."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/MutexProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MutexProtocol"}],"url":"\/documentation\/glib\/mutexprotocol"},"doc://GLib/documentation/GLib/MainContext/wait(cond:mutex:)":{"role":"symbol","title":"wait(cond:mutex:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"wait"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"CondT"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"MutexT"},{"kind":"text","text":">("},{"kind":"externalParam","text":"cond"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CondT"},{"kind":"text","text":", "},{"kind":"externalParam","text":"mutex"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"MutexT"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Tries to become the owner of the specified context,"},{"type":"text","text":" "},{"type":"text","text":"as with [method"},{"type":"codeVoice","code":"GLib.MainContext.acquire"},{"type":"text","text":"]. But if another thread"},{"type":"text","text":" "},{"type":"text","text":"is the owner, atomically drop "},{"type":"codeVoice","code":"mutex"},{"type":"text","text":" and wait on "},{"type":"codeVoice","code":"cond"},{"type":"text","text":" until"},{"type":"text","text":" "},{"type":"text","text":"that owner releases ownership or until "},{"type":"codeVoice","code":"cond"},{"type":"text","text":" is signaled, then"},{"type":"text","text":" "},{"type":"text","text":"try again (once) to become the owner."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/MainContext\/wait(cond:mutex:)","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/glib\/maincontext\/wait(cond:mutex:)"},"doc://GLib/documentation/GLib/MainContext/MainContextProtocol-Implementations":{"role":"collectionGroup","title":"MainContextProtocol Implementations","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib\/MainContext\/MainContextProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/glib\/maincontext\/maincontextprotocol-implementations"},"doc://GLib/documentation/GLib":{"role":"collection","title":"GLib","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib","kind":"symbol","type":"topic","url":"\/documentation\/glib"},"doc://GLib/documentation/GLib/CondProtocol":{"role":"symbol","title":"CondProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"CondProtocol"}],"abstract":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Cond"},{"type":"text","text":" struct is an opaque data structure that represents a"},{"type":"text","text":" "},{"type":"text","text":"condition. Threads can block on a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Cond"},{"type":"text","text":" if they find a certain"},{"type":"text","text":" "},{"type":"text","text":"condition to be false. If other threads change the state of this"},{"type":"text","text":" "},{"type":"text","text":"condition they signal the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Cond"},{"type":"text","text":", and that causes the waiting"},{"type":"text","text":" "},{"type":"text","text":"threads to be woken up."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/CondProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CondProtocol"}],"url":"\/documentation\/glib\/condprotocol"},"doc://GLib/documentation/GLib/Mutex":{"role":"symbol","title":"Mutex","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Mutex"}],"abstract":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Mutex"},{"type":"text","text":" struct is an opaque data structure to represent a mutex"},{"type":"text","text":" "},{"type":"text","text":"(mutual exclusion). It can be used to protect data against shared"},{"type":"text","text":" "},{"type":"text","text":"access."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/Mutex","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Mutex"}],"url":"\/documentation\/glib\/mutex"},"doc://GLib/documentation/GLib/Cond":{"role":"symbol","title":"Cond","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Cond"}],"abstract":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Cond"},{"type":"text","text":" struct is an opaque data structure that represents a"},{"type":"text","text":" "},{"type":"text","text":"condition. Threads can block on a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Cond"},{"type":"text","text":" if they find a certain"},{"type":"text","text":" "},{"type":"text","text":"condition to be false. If other threads change the state of this"},{"type":"text","text":" "},{"type":"text","text":"condition they signal the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/Cond"},{"type":"text","text":", and that causes the waiting"},{"type":"text","text":" "},{"type":"text","text":"threads to be woken up."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/Cond","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Cond"}],"url":"\/documentation\/glib\/cond"},"doc://GLib/documentation/GLib/MainContext":{"role":"symbol","title":"MainContext","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MainContext"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"GMainContext"},{"type":"text","text":" struct is an opaque data"},{"type":"text","text":" "},{"type":"text","text":"type representing a set of sources to be handled in a main loop."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/MainContext","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MainContext"}],"url":"\/documentation\/glib\/maincontext"}}}