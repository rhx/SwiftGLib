{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"wakeup"},{"kind":"text","text":"()"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This API is useful for low-level control over [struct"},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/MainContext"},{"type":"text","text":"]; for"},{"type":"text","text":" "},{"type":"text","text":"example, integrating it with main loop implementations such as"},{"type":"text","text":" "},{"type":"text","text":"[struct"},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/MainLoop"},{"type":"text","text":"]."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Another related use for this function is when implementing a main"},{"type":"text","text":" "},{"type":"text","text":"loop with a termination condition, computed from multiple threads:"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"(C Language Example):"}]},{"type":"codeListing","syntax":"C","code":["  #define NUM_TASKS 10","  static gint tasks_remaining = NUM_TASKS;  \/\/ (atomic)","  ..."," ","  while (g_atomic_int_get (&tasks_remaining) != 0)","    g_main_context_iteration (NULL, TRUE);"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Then in a thread:"},{"type":"text","text":" "},{"type":"text","text":"(C Language Example):"}]},{"type":"codeListing","syntax":"C","code":["  perform_work();","","  if (g_atomic_int_dec_and_test (&tasks_remaining))","    g_main_context_wakeup (NULL);"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/glib\/maincontextprotocol\/wakeup()"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/GLib\/documentation\/GLib\/MainContextProtocol\/wakeup()","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"If "},{"type":"codeVoice","code":"context"},{"type":"text","text":" is currently blocking in [method"},{"type":"codeVoice","code":"GLib.MainContext.iteration"},{"type":"text","text":"]"},{"type":"text","text":" "},{"type":"text","text":"waiting for a source to become ready, cause it to stop blocking"},{"type":"text","text":" "},{"type":"text","text":"and return.  Otherwise, cause the next invocation of"},{"type":"text","text":" "},{"type":"text","text":"[method"},{"type":"codeVoice","code":"GLib.MainContext.iteration"},{"type":"text","text":"] to return without blocking."}],"kind":"symbol","metadata":{"role":"symbol","title":"wakeup()","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"wakeup"},{"kind":"text","text":"()"}],"symbolKind":"method","externalID":"s:4GLib19MainContextProtocolPAAE6wakeupyyF","extendedModule":"GLib","modules":[{"name":"GLib"}]},"hierarchy":{"paths":[["doc:\/\/GLib\/documentation\/GLib","doc:\/\/GLib\/documentation\/GLib\/MainContextProtocol"]]},"references":{"doc://GLib/documentation/GLib/MainContextProtocol":{"role":"symbol","title":"MainContextProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MainContextProtocol"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"GMainContext"},{"type":"text","text":" struct is an opaque data"},{"type":"text","text":" "},{"type":"text","text":"type representing a set of sources to be handled in a main loop."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/MainContextProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MainContextProtocol"}],"url":"\/documentation\/glib\/maincontextprotocol"},"doc://GLib/documentation/GLib/MainLoop":{"role":"symbol","title":"MainLoop","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MainLoop"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"GMainLoop"},{"type":"text","text":" struct is an opaque data type"},{"type":"text","text":" "},{"type":"text","text":"representing the main event loop of a GLib or GTK application."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/MainLoop","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MainLoop"}],"url":"\/documentation\/glib\/mainloop"},"doc://GLib/documentation/GLib":{"role":"collection","title":"GLib","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib","kind":"symbol","type":"topic","url":"\/documentation\/glib"},"doc://GLib/documentation/GLib/MainContext":{"role":"symbol","title":"MainContext","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MainContext"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"GMainContext"},{"type":"text","text":" struct is an opaque data"},{"type":"text","text":" "},{"type":"text","text":"type representing a set of sources to be handled in a main loop."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/MainContext","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MainContext"}],"url":"\/documentation\/glib\/maincontext"},"doc://GLib/documentation/GLib/MainContextProtocol/wakeup()":{"role":"symbol","title":"wakeup()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"wakeup"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"If "},{"type":"codeVoice","code":"context"},{"type":"text","text":" is currently blocking in [method"},{"type":"codeVoice","code":"GLib.MainContext.iteration"},{"type":"text","text":"]"},{"type":"text","text":" "},{"type":"text","text":"waiting for a source to become ready, cause it to stop blocking"},{"type":"text","text":" "},{"type":"text","text":"and return.  Otherwise, cause the next invocation of"},{"type":"text","text":" "},{"type":"text","text":"[method"},{"type":"codeVoice","code":"GLib.MainContext.iteration"},{"type":"text","text":"] to return without blocking."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/MainContextProtocol\/wakeup()","kind":"symbol","type":"topic","url":"\/documentation\/glib\/maincontextprotocol\/wakeup()"}}}