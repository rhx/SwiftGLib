{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getRegion"},{"kind":"text","text":"("},{"kind":"externalParam","text":"elementSize"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"offset"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"nElements"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"gconstpointer","preciseIdentifier":"c:@T@gconstpointer"},{"kind":"text","text":"?"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The region starts at "},{"type":"codeVoice","code":"offset"},{"type":"text","text":" many bytes from the start of the data"},{"type":"text","text":" "},{"type":"text","text":"and contains "},{"type":"codeVoice","code":"nElements"},{"type":"text","text":" many elements of "},{"type":"codeVoice","code":"elementSize"},{"type":"text","text":" size."}]},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"nElements"},{"type":"text","text":" may be zero, but "},{"type":"codeVoice","code":"elementSize"},{"type":"text","text":" must always be non-zero."},{"type":"text","text":" "},{"type":"text","text":"IDeally, "},{"type":"codeVoice","code":"elementSize"},{"type":"text","text":" is a static constant (eg: sizeof a struct)."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This function does careful bounds checking (including checking for"},{"type":"text","text":" "},{"type":"text","text":"arithmetic overflows) and returns a non-"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" pointer if the"},{"type":"text","text":" "},{"type":"text","text":"specified region lies entirely within the "},{"type":"codeVoice","code":"bytes"},{"type":"text","text":". If the region is"},{"type":"text","text":" "},{"type":"text","text":"in some way out of range, or if an overflow has occurred, then "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" "},{"type":"text","text":"is returned."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Note: it is possible to have a valid zero-size region. In this case,"},{"type":"text","text":" "},{"type":"text","text":"the returned pointer will be equal to the base pointer of the data of"},{"type":"text","text":" "},{"type":"codeVoice","code":"bytes"},{"type":"text","text":", plus "},{"type":"codeVoice","code":"offset"},{"type":"text","text":".  This will be non-"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" except for the case"},{"type":"text","text":" "},{"type":"text","text":"where "},{"type":"codeVoice","code":"bytes"},{"type":"text","text":" itself was a zero-sized region.  Since it is unlikely"},{"type":"text","text":" "},{"type":"text","text":"that you will be using this function to check for a zero-sized region"},{"type":"text","text":" "},{"type":"text","text":"in a zero-sized "},{"type":"codeVoice","code":"bytes"},{"type":"text","text":", "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" effectively always means “error”."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/glib\/bytesprotocol\/getregion(elementsize:offset:nelements:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/GLib\/documentation\/GLib\/BytesProtocol\/getRegion(elementSize:offset:nElements:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Gets a pointer to a region in "},{"type":"codeVoice","code":"bytes"},{"type":"text","text":"."}],"kind":"symbol","metadata":{"role":"symbol","title":"getRegion(elementSize:offset:nElements:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getRegion"},{"kind":"text","text":"("},{"kind":"externalParam","text":"elementSize"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"offset"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"nElements"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"gconstpointer","preciseIdentifier":"c:@T@gconstpointer"},{"kind":"text","text":"?"}],"symbolKind":"method","externalID":"s:4GLib13BytesProtocolPAAE9getRegion11elementSize6offset9nElementsSVSgSi_S2itF","extendedModule":"GLib","modules":[{"name":"GLib"}]},"hierarchy":{"paths":[["doc:\/\/GLib\/documentation\/GLib","doc:\/\/GLib\/documentation\/GLib\/BytesProtocol"]]},"references":{"doc://GLib/documentation/GLib/BytesProtocol/getRegion(elementSize:offset:nElements:)":{"role":"symbol","title":"getRegion(elementSize:offset:nElements:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getRegion"},{"kind":"text","text":"("},{"kind":"externalParam","text":"elementSize"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"offset"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"nElements"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"gconstpointer","preciseIdentifier":"c:@T@gconstpointer"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Gets a pointer to a region in "},{"type":"codeVoice","code":"bytes"},{"type":"text","text":"."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/BytesProtocol\/getRegion(elementSize:offset:nElements:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/bytesprotocol\/getregion(elementsize:offset:nelements:)"},"doc://GLib/documentation/GLib":{"role":"collection","title":"GLib","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib","kind":"symbol","type":"topic","url":"\/documentation\/glib"},"doc://GLib/documentation/GLib/BytesProtocol":{"role":"symbol","title":"BytesProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"BytesProtocol"}],"abstract":[{"type":"text","text":"A simple refcounted data type representing an immutable sequence of zero or"},{"type":"text","text":" "},{"type":"text","text":"more bytes from an unspecified origin."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/BytesProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"BytesProtocol"}],"url":"\/documentation\/glib\/bytesprotocol"}}}