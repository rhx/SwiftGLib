{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PatternSpecRef"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The [func"},{"type":"codeVoice","code":"GLib.pattern_match_simple"},{"type":"text","text":"] and [method"},{"type":"codeVoice","code":"GLib.PatternSpec.match"},{"type":"text","text":"] functions"},{"type":"text","text":" "},{"type":"text","text":"match a string against a pattern containing "},{"type":"codeVoice","code":"*"},{"type":"text","text":" and "},{"type":"codeVoice","code":"?"},{"type":"text","text":" wildcards with similar"},{"type":"text","text":" "},{"type":"text","text":"semantics as the standard "},{"type":"codeVoice","code":"glob()"},{"type":"text","text":" function: "},{"type":"codeVoice","code":"*"},{"type":"text","text":" matches an arbitrary,"},{"type":"text","text":" "},{"type":"text","text":"possibly empty, string, "},{"type":"codeVoice","code":"?"},{"type":"text","text":" matches an arbitrary character."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Note that in contrast to "},{"type":"reference","isActive":true,"identifier":"man:glob(3)"},{"type":"text","text":", the "},{"type":"codeVoice","code":"\/"},{"type":"text","text":" character can be"},{"type":"text","text":" "},{"type":"text","text":"matched by the wildcards, there are no "},{"type":"codeVoice","code":"[…]"},{"type":"text","text":" character ranges and "},{"type":"codeVoice","code":"*"},{"type":"text","text":" and "},{"type":"codeVoice","code":"?"},{"type":"text","text":" "},{"type":"text","text":"can not be escaped to include them literally in a pattern."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"When multiple strings must be matched against the same pattern, it is better"},{"type":"text","text":" "},{"type":"text","text":"to compile the pattern to a [struct"},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/PatternSpec"},{"type":"text","text":"] using"},{"type":"text","text":" "},{"type":"text","text":"[ctor"},{"type":"codeVoice","code":"GLib.PatternSpec.new"},{"type":"text","text":"] and use [method"},{"type":"codeVoice","code":"GLib.PatternSpec.match_string"},{"type":"text","text":"]"},{"type":"text","text":" "},{"type":"text","text":"instead of [func"},{"type":"codeVoice","code":"GLib.pattern_match_simple"},{"type":"text","text":"]. This avoids the overhead of repeated"},{"type":"text","text":" "},{"type":"text","text":"pattern compilation."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/PatternSpecRef"},{"type":"text","text":" type acts as a lightweight Swift reference to an underlying "},{"type":"codeVoice","code":"GPatternSpec"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"It exposes methods that can operate on this data type through "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/PatternSpecProtocol"},{"type":"text","text":" conformance."},{"type":"text","text":" "},{"type":"text","text":"Use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/PatternSpecRef"},{"type":"text","text":" only as an "},{"type":"codeVoice","code":"unowned"},{"type":"text","text":" reference to an existing "},{"type":"codeVoice","code":"GPatternSpec"},{"type":"text","text":" instance."}]},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/PatternSpec"},{"type":"text","text":" (instead of "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/PatternSpecRef"},{"type":"text","text":") if you want to use Automatic Reference Counting for memory management of the underlying "},{"type":"codeVoice","code":"GPatternSpec"},{"type":"text","text":" instance."}]}],"type":"aside","name":"Note"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/glib\/patternspecref"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/GLib\/documentation\/GLib\/PatternSpecProtocol","doc:\/\/GLib\/documentation\/GLib\/PointerWrapper"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/GLib\/documentation\/GLib\/PatternSpecRef","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"GPatternSpec"},{"type":"text","text":" struct is the ‘compiled’ form of a glob-style pattern."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PatternSpecRef"}],"title":"PatternSpecRef","roleHeading":"Structure","role":"symbol","symbolKind":"struct","externalID":"s:4GLib14PatternSpecRefV","modules":[{"name":"GLib"}],"navigatorTitle":[{"kind":"identifier","text":"PatternSpecRef"}]},"hierarchy":{"paths":[["doc:\/\/GLib\/documentation\/GLib"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/GLib\/documentation\/GLib\/PatternSpecRef\/init(_:)-23j0e","doc:\/\/GLib\/documentation\/GLib\/PatternSpecRef\/init(_:)-2nucr","doc:\/\/GLib\/documentation\/GLib\/PatternSpecRef\/init(_:)-94hcj","doc:\/\/GLib\/documentation\/GLib\/PatternSpecRef\/init(_:)-94moh","doc:\/\/GLib\/documentation\/GLib\/PatternSpecRef\/init(_:)-9kb79","doc:\/\/GLib\/documentation\/GLib\/PatternSpecRef\/init(cPointer:)","doc:\/\/GLib\/documentation\/GLib\/PatternSpecRef\/init(constPointer:)","doc:\/\/GLib\/documentation\/GLib\/PatternSpecRef\/init(gconstpointer:)","doc:\/\/GLib\/documentation\/GLib\/PatternSpecRef\/init(gpointer:)","doc:\/\/GLib\/documentation\/GLib\/PatternSpecRef\/init(mutating:)","doc:\/\/GLib\/documentation\/GLib\/PatternSpecRef\/init(opaquePointer:)","doc:\/\/GLib\/documentation\/GLib\/PatternSpecRef\/init(pattern:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/GLib\/documentation\/GLib\/PatternSpecRef\/ptr"]},{"title":"Default Implementations","identifiers":["doc:\/\/GLib\/documentation\/GLib\/PatternSpecRef\/PatternSpecProtocol-Implementations","doc:\/\/GLib\/documentation\/GLib\/PatternSpecRef\/PointerWrapper-Implementations"],"generated":true}],"references":{"doc://GLib/documentation/GLib/PatternSpecRef/init(constPointer:)":{"role":"symbol","title":"init(constPointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"constPointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Unsafe typed initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/PatternSpecProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/PatternSpecRef\/init(constPointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/patternspecref\/init(constpointer:)"},"doc://GLib/documentation/GLib":{"role":"collection","title":"GLib","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib","kind":"symbol","type":"topic","url":"\/documentation\/glib"},"doc://GLib/documentation/GLib/PatternSpecRef/ptr":{"role":"symbol","title":"ptr","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"ptr"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutableRawPointer","preciseIdentifier":"s:Sv"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Untyped pointer to the underlying "},{"type":"codeVoice","code":"GPatternSpec"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"For type-safe access, use the generated, typed pointer "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/PatternSpecProtocol\/pattern_spec_ptr-sxvi"},{"type":"text","text":" property instead."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/PatternSpecRef\/ptr","kind":"symbol","type":"topic","url":"\/documentation\/glib\/patternspecref\/ptr"},"man:glob(3)":{"title":"glob()","titleInlineContent":[{"type":"codeVoice","code":"glob()"}],"type":"link","identifier":"man:glob(3)","url":"man:glob(3)"},"doc://GLib/documentation/GLib/PatternSpecRef/PatternSpecProtocol-Implementations":{"role":"collectionGroup","title":"PatternSpecProtocol Implementations","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib\/PatternSpecRef\/PatternSpecProtocol-Implementations","kind":"article","type":"topic","url":"\/documentation\/glib\/patternspecref\/patternspecprotocol-implementations"},"doc://GLib/documentation/GLib/PatternSpecProtocol":{"role":"symbol","title":"PatternSpecProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"PatternSpecProtocol"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"GPatternSpec"},{"type":"text","text":" struct is the ‘compiled’ form of a glob-style pattern."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/PatternSpecProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PatternSpecProtocol"}],"url":"\/documentation\/glib\/patternspecprotocol"},"doc://GLib/documentation/GLib/PatternSpecRef/init(_:)-23j0e":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GPatternSpec"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/PatternSpecRef\/init(_:)-23j0e","kind":"symbol","type":"topic","url":"\/documentation\/glib\/patternspecref\/init(_:)-23j0e"},"doc://GLib/documentation/GLib/PatternSpecRef/init(mutating:)":{"role":"symbol","title":"init(mutating:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"mutating"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeRawPointer","preciseIdentifier":"s:SV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/PatternSpecProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/PatternSpecRef\/init(mutating:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/patternspecref\/init(mutating:)"},"doc://GLib/documentation/GLib/PatternSpecRef/init(cPointer:)":{"role":"symbol","title":"init(cPointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"cPointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Unsafe typed initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/PatternSpecProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/PatternSpecRef\/init(cPointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/patternspecref\/init(cpointer:)"},"doc://GLib/documentation/GLib/PatternSpecRef/init(_:)-94moh":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GPatternSpec"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from a constant pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/PatternSpecRef\/init(_:)-94moh","kind":"symbol","type":"topic","url":"\/documentation\/glib\/patternspecref\/init(_:)-94moh"},"doc://GLib/documentation/GLib/PatternSpecRef/init(gconstpointer:)":{"role":"symbol","title":"init(gconstpointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"externalParam","text":"gconstpointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gconstpointer","preciseIdentifier":"c:@T@gconstpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional, non-mutable "},{"type":"codeVoice","code":"gconstpointer"}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/PatternSpecRef\/init(gconstpointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/patternspecref\/init(gconstpointer:)"},"doc://GLib/documentation/GLib/PatternSpecRef/PointerWrapper-Implementations":{"role":"collectionGroup","title":"PointerWrapper Implementations","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib\/PatternSpecRef\/PointerWrapper-Implementations","kind":"article","type":"topic","url":"\/documentation\/glib\/patternspecref\/pointerwrapper-implementations"},"doc://GLib/documentation/GLib/PatternSpecRef/init(gpointer:)":{"role":"symbol","title":"init(gpointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"externalParam","text":"gpointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"gpointer","preciseIdentifier":"c:@T@gpointer"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional "},{"type":"codeVoice","code":"gpointer"}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/PatternSpecRef\/init(gpointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/patternspecref\/init(gpointer:)"},"doc://GLib/documentation/GLib/PatternSpecRef/init(opaquePointer:)":{"role":"symbol","title":"init(opaquePointer:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"opaquePointer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"OpaquePointer","preciseIdentifier":"s:s13OpaquePointerV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Unsafe untyped initialiser."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Do not use unless you know the underlying data type the pointer points to conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/PatternSpecProtocol"},{"type":"text","text":"."}]}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/PatternSpecRef\/init(opaquePointer:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/patternspecref\/init(opaquepointer:)"},"doc://GLib/documentation/GLib/PatternSpecRef/init(_:)-2nucr":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GPatternSpec"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Designated initialiser from the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/PatternSpecRef\/init(_:)-2nucr","kind":"symbol","type":"topic","url":"\/documentation\/glib\/patternspecref\/init(_:)-2nucr"},"doc://GLib/documentation/GLib/PatternSpecProtocol/pattern_spec_ptr-sxvi":{"defaultImplementations":1,"role":"symbol","title":"pattern_spec_ptr","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"pattern_spec_ptr"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GPatternSpec"},{"kind":"text","text":">!"}],"abstract":[{"type":"text","text":"Typed pointer to the underlying "},{"type":"codeVoice","code":"GPatternSpec"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/PatternSpecProtocol\/pattern_spec_ptr-sxvi","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/glib\/patternspecprotocol\/pattern_spec_ptr-sxvi"},"doc://GLib/documentation/GLib/PointerWrapper":{"role":"symbol","title":"PointerWrapper","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"PointerWrapper"}],"abstract":[{"type":"text","text":"Protocol for GLib types that wrap pointers."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/PointerWrapper","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PointerWrapper"}],"url":"\/documentation\/glib\/pointerwrapper"},"doc://GLib/documentation/GLib/PatternSpecRef":{"role":"symbol","title":"PatternSpecRef","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PatternSpecRef"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"GPatternSpec"},{"type":"text","text":" struct is the ‘compiled’ form of a glob-style pattern."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/PatternSpecRef","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PatternSpecRef"}],"url":"\/documentation\/glib\/patternspecref"},"doc://GLib/documentation/GLib/PatternSpec":{"role":"symbol","title":"PatternSpec","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"PatternSpec"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"GPatternSpec"},{"type":"text","text":" struct is the ‘compiled’ form of a glob-style pattern."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/PatternSpec","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PatternSpec"}],"url":"\/documentation\/glib\/patternspec"},"doc://GLib/documentation/GLib/PatternSpecRef/init(pattern:)":{"role":"symbol","title":"init(pattern:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"pattern"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">!)"}],"abstract":[{"type":"text","text":"Compiles a pattern to a [type"},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/PatternSpec"},{"type":"text","text":"]."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/PatternSpecRef\/init(pattern:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/patternspecref\/init(pattern:)"},"doc://GLib/documentation/GLib/PatternSpecRef/init(_:)-9kb79":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"!("},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"GPatternSpec"},{"kind":"text","text":">?)"}],"abstract":[{"type":"text","text":"Conditional initialiser from an optional, non-mutable pointer to the underlying "},{"type":"codeVoice","code":"C"},{"type":"text","text":" data type"}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/PatternSpecRef\/init(_:)-9kb79","kind":"symbol","type":"topic","url":"\/documentation\/glib\/patternspecref\/init(_:)-9kb79"},"doc://GLib/documentation/GLib/PatternSpecRef/init(_:)-94hcj":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Reference intialiser for a related type that implements "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GLib\/documentation\/GLib\/PatternSpecProtocol"}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/PatternSpecRef\/init(_:)-94hcj","kind":"symbol","type":"topic","url":"\/documentation\/glib\/patternspecref\/init(_:)-94hcj"}}}