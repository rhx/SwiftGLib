{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"canonicalize"},{"kind":"text","text":"("},{"kind":"externalParam","text":"filename"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"relativeTo"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">? = nil) -> "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"!"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Symlinks are not followed, and the returned path is guaranteed to be absolute."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If "},{"type":"codeVoice","code":"filename"},{"type":"text","text":" is an absolute path, "},{"type":"codeVoice","code":"relativeTo"},{"type":"text","text":" is ignored. Otherwise,"},{"type":"text","text":" "},{"type":"codeVoice","code":"relativeTo"},{"type":"text","text":" will be prepended to "},{"type":"codeVoice","code":"filename"},{"type":"text","text":" to make it absolute. "},{"type":"codeVoice","code":"relativeTo"},{"type":"text","text":" "},{"type":"text","text":"must be an absolute path, or "},{"type":"codeVoice","code":"nil"},{"type":"text","text":". If "},{"type":"codeVoice","code":"relativeTo"},{"type":"text","text":" is "},{"type":"codeVoice","code":"nil"},{"type":"text","text":", it’ll fallback"},{"type":"text","text":" "},{"type":"text","text":"to "},{"type":"codeVoice","code":"g_get_current_dir()"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This function never fails, and will canonicalize file paths even if they don’t"},{"type":"text","text":" "},{"type":"text","text":"exist."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"No file system I\/O is done."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/glib\/canonicalize(filename:relativeto:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/GLib\/documentation\/GLib\/canonicalize(filename:relativeTo:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Gets the canonical file name from "},{"type":"codeVoice","code":"filename"},{"type":"text","text":". All triple slashes are turned into"},{"type":"text","text":" "},{"type":"text","text":"single slashes, and all "},{"type":"codeVoice","code":".."},{"type":"text","text":" and "},{"type":"codeVoice","code":"."},{"type":"text","text":"s resolved against "},{"type":"codeVoice","code":"relativeTo"},{"type":"text","text":"."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"canonicalize"},{"kind":"text","text":"("},{"kind":"externalParam","text":"filename"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"relativeTo"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">?) -> "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"!"}],"title":"canonicalize(filename:relativeTo:)","roleHeading":"Function","role":"symbol","symbolKind":"func","externalID":"s:4GLib12canonicalize8filename10relativeToSSSgSPys4Int8VGSg_AItF","modules":[{"name":"GLib"}]},"hierarchy":{"paths":[["doc:\/\/GLib\/documentation\/GLib"]]},"references":{"doc://GLib/documentation/GLib/canonicalize(filename:relativeTo:)":{"role":"symbol","title":"canonicalize(filename:relativeTo:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"canonicalize"},{"kind":"text","text":"("},{"kind":"externalParam","text":"filename"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">!, "},{"kind":"externalParam","text":"relativeTo"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafePointer","preciseIdentifier":"s:SP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"gchar","preciseIdentifier":"c:@T@gchar"},{"kind":"text","text":">?) -> "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"!"}],"abstract":[{"type":"text","text":"Gets the canonical file name from "},{"type":"codeVoice","code":"filename"},{"type":"text","text":". All triple slashes are turned into"},{"type":"text","text":" "},{"type":"text","text":"single slashes, and all "},{"type":"codeVoice","code":".."},{"type":"text","text":" and "},{"type":"codeVoice","code":"."},{"type":"text","text":"s resolved against "},{"type":"codeVoice","code":"relativeTo"},{"type":"text","text":"."}],"identifier":"doc:\/\/GLib\/documentation\/GLib\/canonicalize(filename:relativeTo:)","kind":"symbol","type":"topic","url":"\/documentation\/glib\/canonicalize(filename:relativeto:)"},"doc://GLib/documentation/GLib":{"role":"collection","title":"GLib","abstract":[],"identifier":"doc:\/\/GLib\/documentation\/GLib","kind":"symbol","type":"topic","url":"\/documentation\/glib"}}}